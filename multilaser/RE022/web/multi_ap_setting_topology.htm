<html>
<! Copyright (c) Realtek Semiconductor Corp., 2003. All Rights Reserved. ->
<head>
<meta http-equiv="Content-Type" content="text/html">
<% getIndex("no-cache"); %>
<title>EasyMesh Interface Setup </title>
<% language=javascript %>
<script type="text/javascript" src="util_gw.js"> </script>
<script src="./jtopo-0.4.8-min.js" type="text/javascript" ></script>
<SCRIPT language=Javascript src="<% getInfo("lang");%>"></SCRIPT>
<% getInfo("include_css"); %>
<SCRIPT>
var wlan_num =<% getIndex("show_wlan_num"); %> ;

var wlan1Disabled = 0, wlan2Disabled = 0;
var role=<% getIndex("multi_ap_controller"); %> ;


function showDetailOnClick(count) {
	openWindow('/multi_ap_popup_device_details.htm?count='+count, 'showDeviceDetail', 700, 500);
}

var device_counter = 0;

CanvasRenderingContext2D.prototype.wrapText = function(str,x,y){
    var textArray = str.split('\n');
    if(textArray==undefined||textArray==null)return false;

    var rowCnt = textArray.length;
    var i = 0,imax = rowCnt,maxLength = 0;maxText = textArray[0];
    for(;i<imax;i++){
        var nowText = textArray[i],textLength = nowText.length;
        if(textLength >=maxLength){
            maxLength = textLength;
            maxText = nowText;
        }
    }
    var maxWidth = this.measureText(maxText).width;
    var lineHeight = this.measureText("元").width+4;
    x-= lineHeight*2;
    for(var j= 0;j<textArray.length;j++){
        var words = textArray[j];
        this.fillText(words,-(maxWidth/2),y-textArray.length*lineHeight/100);
        y+= lineHeight;
    }
};

function changeMac(mac_address){
    var mac=''
    var length=mac_address.length
    for(var i=0;i<length;i++){
        if(i!=0&&i%2==0){
            mac+='-'
        }
        mac+=mac_address[i]
    }
    return mac
}

function drawChild(scene,child,parentNode){
    for(let i=0; i<child.length; i++){
        device_counter++

        var node= addNode(scene,child[i].device_name+'\n'+changeMac(child[i].mac_address)+'\n'+child[i].ip_addr,device_counter,scene.width * Math.random(),scene.height * Math.random(),160,188)

        scene.add(node);
        addLink(scene, parentNode,node);
        drawChild(scene,child[i].child_devices,node)
    }
}

function addNode(scene,text,num,left,top,width,height){
    var node = new JTopo.Node(text);
    node.font = '12px 微软雅黑';
    node.fontColor = '0,0,0';
    node.setSize(100, 100);
    node.setLocation(left,top);
    node.dragable=false;
    node.setImage('./router.png')
    node.paintText = function(a){
        a.beginPath(),
            a.font = this.font,
            a.wrapText(this.text,this.height/2,this.height/1.5);
        a.closePath()
    };
    node.click(function(){showDetailOnClick(num);})
    node.mouseover(function(){
        node.image.alarm=null;
        node.alarm=topology_go_to_detail;
        node.alarmColor = '168,202,236';
        node.alarmAlpha = 0.7;
    })
    node.mouseout(function(){node.alarm=null;})
    node.layout = {type: 'tree',direction: 'right', width:width, height: height};
    return node;
}

function addLink(scene, nodeA, nodeZ){
    var link = new JTopo.FlexionalLink(nodeA, nodeZ);
    link.direction = 'horizontal'
    link.strokeColor = '17,17,17';
    link.lineWidth = 1;
    scene.add(link);
    return link;
}

function drawCanvas(object_json) {
    var canvas = document.getElementById('canvas');
    var stage = new JTopo.Stage(canvas);
    var scene = new JTopo.Scene(stage);
    scene.backgroundColor = '248,248,248';
    scene.alpha = 1;
    device_counter++
    var rootNode= addNode(scene,object_json.device_name+'\n'+changeMac(object_json.mac_address)+'\n'+object_json.ip_addr,device_counter,120,270,320,188)
    scene.add(rootNode);
    drawChild(scene, object_json.child_devices,rootNode)
    JTopo.layout.layoutNode(scene, rootNode, true);
}

function loadInfo()
{

	var string_json = '<% getInfo("topology_json_string"); %>';
	var object_json = JSON.parse(string_json);
	drawCanvas(object_json);

	document.getElementById("refreshButton").value = easymesh_refresh
	// document.getElementById("detail-button").value = easyMesh_topology_detail

	setInterval(function(){ location.reload(true); }, 10000);
}


function resetClick()
{
	location.reload(true);
}



function saveChanges()
{
	// var dot11kvDisabled = <% getIndex("is_dot11kv_disabled"); %>;
	// if (dot11kvDisabled && (!document.getElementById("role_disabled").checked)) {
	// 	if(!confirm("11k or/and 11v are not enabled in some interface(s), click OK to enable and continue")){
	// 		return false;
	// 	}
	// 	document.getElementById("needEnable11kv").value = "1";
	// }

	// var securitySettingWrong = <% getIndex("is_security_setting_wrong"); %>;
	// if (securitySettingWrong && (role == 1)) {
	// 	alert("Something wrong with your security settings.\nPlease be aware that EasyMesh only supports WPA2 with PSK.\nPlease ensure security type is WPA2 and password is not null.");
	// 	return false;
	// }

	// if (<% getIndex("needPopupBackhaul"); %> && (role == 1)) {
	// 	if(!confirm("Alert: VAP1 for Wlan1 and/or Wlan2 will be auto-managed. \nClick OK to continue.")){
	// 		return false;
	// 	}
	// }

    return true;
}


</SCRIPT>
</head>

<body onload="loadInfo();">
<blockquote>
<h2><script>dw(easyMesh_topology_header)</script></h2>

<form action=/boafrm/formMultiAP method=POST name="MultiAP">
<table border=0 width="500" cellspacing=4 cellpadding=0>
  <tr><font size=2>
    <script>dw(easyMesh_topology_explan)</script>
  </tr>
  <tr><hr size=1 noshade align=top></tr>

  <!-- <tr>
	<td width="100%" colspan=2><font size=2><b>
	 <input type="checkbox" name="" value="ON" ONCLICK="">&nbsp;&nbsp;Disable EasyMesh</b>
	</td>
	</tr> -->

  	<tr>
		<td width="100%" colspan=2><font size=2><b><script>dw(easyMesh_topology_title)</script>:</b></td>
	</tr>

  </table>


<div id="syntaxplugin" class="syntaxplugin" style="border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; ">
    <canvas id="canvas" width="800" height="670">您的浏览器不支持 HTML5 canvas 标签。</canvas>
</div>



<br>
	<input type="button" value="Refresh" id="refreshButton" onclick="location.reload(true);">
 </form>
</blockquote>
</body>

</html>
