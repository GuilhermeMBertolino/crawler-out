<html>
<! Copyright (c) Realtek Semiconductor Corp., 2003. All Rights Reserved. ->
<head>
<meta http-equiv="Content-Type" content="text/html" charset="utf-8">
<% getIndex("no-cache"); %>
<title>局域网接口设置  </title>
<% language=javascript %>
<script type="text/javascript" src="util_gw.js"> </script>
<SCRIPT language=Javascript src="<% getInfo("lang");%>"></SCRIPT>
<% getInfo("include_css"); %>
<SCRIPT>
parent.hideWaitDiv()
var wlan_num =<% getIndex("show_wlan_num"); %> ;
var initialDhcp;
function checkMode()
{
	var opmode=<% getIndex("wlanMode"); %> ;

	if( opmode > 3 )
		disableTextField(document.tcpip.stp);
}

function dhcpChange(index)
{
	//var check_staticdhcp = document.tcpip.static_dhcp;
	var dF = document.tcpip;
	document.tcpip.dhcp.value = index
  if ( index == 0 || index == 1) {
	  disableTextField(document.tcpip.dhcpRangeStart);
   	  disableTextField(document.tcpip.dhcpRangeEnd);
   	  enableTextField(document.tcpip.lan_gateway);
	  disableButton( document.tcpip.dhcpClientTbl );
   	  disableTextField(document.tcpip.domainName);
	  disableTextField(document.tcpip.dhcpLeaseTime);
   	   //check_staticdhcp.disabled = true;
   	   disableButton(dF.elements["staticdhcpTbl"]);		  	  
  }
  else {
   	  enableTextField(document.tcpip.dhcpRangeStart);
   	  enableTextField(document.tcpip.dhcpRangeEnd);
   	  disableTextField(document.tcpip.lan_gateway);
	  enableButton( document.tcpip.dhcpClientTbl );
   	  enableTextField(document.tcpip.domainName);
	  enableTextField(document.tcpip.dhcpLeaseTime);
   	  //check_staticdhcp.disabled = false;	  
   	  enableButton(dF.elements["staticdhcpTbl"]); 	  
  }
  if ( index == 1 ) {
 	  disableTextField(document.tcpip.lan_ip);
	  disableTextField(document.tcpip.lan_mask);
	  disableTextField(document.tcpip.lan_gateway);
  }
  else {
 	  enableTextField(document.tcpip.lan_ip);
	  enableTextField(document.tcpip.lan_mask);
   	  enableTextField(document.tcpip.lan_gateway);
  }
}

function resetClick()
{
	location=location; 
}


function checkClientRange(start,end)
{
  start_d = getDigit(start,4);
  start_d += getDigit(start,3)*256;
  start_d += getDigit(start,2)*256;
  start_d += getDigit(start,1)*256;

  end_d = getDigit(end,4);
  end_d += getDigit(end,3)*256;
  end_d += getDigit(end,2)*256;
  end_d += getDigit(end,1)*256;

  if ( start_d < end_d )
	return true;

  return false;
}


function isStaticIpInDHCPIpRange()//if static ip in DHCP ip range, return true; else, return false.
{
	var DHCPRangeStartIp=document.tcpip.dhcpRangeStart.value;
	var DHCPRangeEndIp=document.tcpip.dhcpRangeEnd.value;

	//var isStaticDHCPOn= <% getInfo("static_dhcp_onoff"); %>;
	//if(isStaticDHCPOn)
	//{
		var staticDHCPEntryNum= <% getInfo("static_dhcp_entry_num"); %>;
		if(staticDHCPEntryNum == 0)
		{
			return true;
		}
		else //staticDHCPEntryNum > 0
		{
			for(var i=1; i<=staticDHCPEntryNum; i++)
			{
				var x=document.getElementById('staticIpTable').rows[i].cells;
				var staticIpString=x[0].innerHTML;                  //<font size="2">192.168.1.180</font>
				var subStaticIpString1=staticIpString.substring(13);//192.168.1.180</font>
				var endpoint=subStaticIpString1.indexOf("<");
				var subStaticIpString2=subStaticIpString1.substring(0,endpoint);//192.168.1.180
				for(i=1; i<=4; i++)
				{
					if((getDigit(subStaticIpString2,i)<getDigit(DHCPRangeStartIp,i)) || (getDigit(subStaticIpString2,i) > getDigit(DHCPRangeEndIp,i)))
					{
						return false;
					}
				}
			}
			return true;
		}
	//}
	//else
	//{
	//	return true;
	//}
}


function saveChanges()
{

  /*if ( checkIpAddr(document.tcpip.lan_ip, 'Invalid IP address value! ') == false )
	    return false;
   */
	
  if (isReservedIpAddress(document.tcpip.lan_ip.value) == true)
  {
		alert(tcpip_reservedip_alert);
		return false;
  }
  
  if (checkIPMask(document.tcpip.lan_mask) == false)
  	return false ;
  
  if(checkHostIPValid(document.tcpip.lan_ip,document.tcpip.lan_mask,tcpip_check_ip_msg)== false) 
	return false;

  if ( document.tcpip.dhcp.selectedIndex == 2) {

	/*if ( checkIpAddr(document.tcpip.dhcpRangeStart, 'Invalid DHCP client start address! ') == false )
	    return false;
	*/

	if(checkHostIPValid(document.tcpip.dhcpRangeStart,document.tcpip.lan_mask,tcpip_lan_start_ip)== false) 
		return false;

	if ( !checkSubnet(document.tcpip.lan_ip.value,document.tcpip.lan_mask.value,document.tcpip.dhcpRangeStart.value)) {
		alert(tcpip_lan_start_ip + tcpip_lan_ip_alert);
		document.tcpip.dhcpRangeStart.value = document.tcpip.dhcpRangeStart.defaultValue;
		document.tcpip.dhcpRangeStart.focus();
		return false;
	}

	/*
  	if ( checkIpAddr(document.tcpip.dhcpRangeEnd, 'Invalid DHCP client End address! ') == false )
	    return false;
	*/
	if(checkHostIPValid(document.tcpip.dhcpRangeEnd,document.tcpip.lan_mask,tcpip_lan_end_ip)== false) 
			return false;

	if ( !checkSubnet(document.tcpip.lan_ip.value,document.tcpip.lan_mask.value,document.tcpip.dhcpRangeEnd.value)) {
		alert(tcpip_lan_end_ip + tcpip_lan_ip_alert);
		document.tcpip.dhcpRangeEnd.value = document.tcpip.dhcpRangeEnd.defaultValue;
		document.tcpip.dhcpRangeEnd.focus();
		return false;
	}
        if ( !checkClientRange(document.tcpip.dhcpRangeStart.value,document.tcpip.dhcpRangeEnd.value) ) {
		alert(tcpip_lan_invalid_rang);
		document.tcpip.dhcpRangeStart.focus();
		return false;
        }
   }
   if ( document.tcpip.dhcp.selectedIndex != 1) {
	document.tcpip.lan_gateway.value = document.tcpip.lan_ip.value
	if (document.tcpip.lan_gateway.value!="0.0.0.0") {
		if ( checkIpAddr(document.tcpip.lan_gateway, tcpip_lan_end_ip) == false )
	    		return false;
	    	if ( !checkSubnet(document.tcpip.lan_ip.value,document.tcpip.lan_mask.value,document.tcpip.lan_gateway.value)) {
				alert(tcpip_lan_invalid_gw_ip); alert(tcpip_lan_ip_alert);
				document.tcpip.lan_gateway.value = document.tcpip.lan_gateway.defaultValue;
				document.tcpip.lan_gateway.focus();
				return false;
      		}
	}
  }

   var str = document.tcpip.lan_macAddr.value;
   if(str.length ==0){
		document.tcpip.lan_macAddr.value = "000000000000";
   } else {
		// if (!checkMacAddr(document.tcpip.lan_macAddr)) {
		// 	return false
		// }
   }
  
  if(!checkFieldDigitRange(document.tcpip.dhcpLeaseTime,1,10080,tcpip_lan_invalid_dhcp_lease_time))
  	return false;  

  var str = document.tcpip.domainName.value;
  if(str.length == 0){
  	document.tcpip.domainName.value = "Realtek";
  }

  if(str.length > 63){
  	alert(tcpip_lan_invalid_domain_name);
	document.tcpip.domainName.focus();
	return false;
  }

//   for(var i=0; i<str.length; i++){
//   	if( (str.charAt(i) >= '0' && str.charAt(i) <= '9') ||
// 			(str.charAt(i) >= 'a' && str.charAt(i) <= 'z') ||
// 			(str.charAt(i) >= 'A' && str.charAt(i) <= 'Z') ||
// 			str.charAt(i) == '-')
// 			continue;
// 	alert(tcpip_l2tp_server_domain_name);
// 	document.tcpip.domainName.focus();
// 	return false;
//   }

//   if((str.charAt(0) >='0' && str.charAt(0) <= '9') ||
//   	str.charAt(0)	== '-' || 
//   	str.charAt(str.length - 1) == '-'){
//   	alert(tcpip_l2tp_server_domain_name2);
// 	document.tcpip.domainName.focus();
// 	return false;		
//   }
	/*
	if(isStaticIpInDHCPIpRange() == false)
	{
		alert("DHCP Client Range can't cover Static DHCP List.");
		document.tcpip.dhcpRangeStart.focus();
		return false;		
	}*/
  document.tcpip.lan_macAddr.value = document.tcpip.lan_macAddr.value.replace(/:/g, "").replace(/-/g, "");
  parent.showWaitDiv()
  return true;
}


function dhcpTblClick(url) {
	if ( document.tcpip.dhcp.selectedIndex == 2) {
		openWindow(url, 'DHCPTbl',600, 400 );
	}
}
function staticdhcpChange(index)
{
	var dF = document.tcpip;
	 if ( index == 1 && dF.dhcp.selectedIndex==2 )
		enableButton(dF.elements["staticdhcpTbl"]);
	else
		disableButton(dF.elements["staticdhcpTbl"]);	
}
function staticdhcpTblClick(url) {
	if ( document.tcpip.dhcp.selectedIndex == 2) {
		//openWindow(url, 'StaticDHCPTbl',820, 500 );
		document.location.href = url;
	}
}

function changeDhcpIpPool() {
	var lanip = document.tcpip.lan_ip.value
	var lanmask = document.tcpip.lan_mask.value
	if (!lancheckIp(lanip)) return false
	if (!checkIpMask(lanip,lanmask)) return false
	if (!lanCheckMask(lanmask)) return false
	var preIP = calcIPPrefix(lanip, lanmask)
	var startIp = document.tcpip.dhcpRangeStart.value
	var endIp = document.tcpip.dhcpRangeEnd.value
	if (ipRegex.test(startIp) && ipRegex.test(endIp)) {
		document.tcpip.dhcpRangeStart.value = preIP + "." + startIp.split(".")[3]
		document.tcpip.dhcpRangeEnd.value = preIP + "." + endIp.split(".")[3]
	} else {
		document.tcpip.dhcpRangeStart.value = preIP + ".100"
		document.tcpip.dhcpRangeEnd.value = preIP + ".200"
	}
}

</SCRIPT>
</head>

<body onload="checkMode();changeDhcpIpPool()">
<blockquote>
<h2><script>dw(tcpip_lan_header)</script></h2>

<form action=/boafrm/formTcpipSetup method=POST name="tcpip">
<table border=0 width="500" cellspacing=4 cellpadding=0>
  <tr><font size=2>
    <script>dw(tcpip_lan_explain)</script>
  </tr>
  <tr><hr size=1 noshade align=top></tr>

  <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_lan_ip)</script></b></td>
      <td width="70%"><input type="text" name="lan_ip" onblur="changeDhcpIpPool()" size="15" maxlength="15" value=<% getInfo("ip-rom"); %>></td>
  </tr>

  <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_lan_mask)</script></b></td>
      <td width="70%"><input type="text" name="lan_mask" onblur="changeDhcpIpPool()" size="15" maxlength="15" value="<% getInfo("mask-rom"); %>"></td>
  </tr>

  <tr style="display: none;">
      <td width="30%"><font size=2><b><script>dw(tcpip_lan_default_gateway)</script></b></td>
      <td width="70%"><input type="text" name="lan_gateway" size="15" maxlength="15" value="<% getInfo("gateway-rom"); %>"></td>
  </tr>

  <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_lan_dhcp)</script></b></td>
      <td width="70%" style="display: none;">
		<select size="1" name="dhcp">
			<%  getDHCPModeCombobox(); %>  
		</select>
	   </td>
	   <td>
		<input type="radio" name="dhcp_clone" value="0" onclick="dhcpChange(0)"><script>dw(install_close)</script>&nbsp;&nbsp;
        <input type="radio" name="dhcp_clone" value="2" onclick="dhcpChange(2)"><script>dw(install_open)</script>
	   </td>
  </tr>

  <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_lan_dhcp_rang)</script></b></td>
      <td width="70%"><input type="text" name="dhcpRangeStart" style="width: 100px;" size="12" maxlength="15" value="<% getInfo("dhcpRangeStart"); %>">
      <font face="Arial" size="5">-</font> <input type="text" name="dhcpRangeEnd" style="width: 100px;" size="12" maxlength="15" value="<% getInfo("dhcpRangeEnd"); %>">&nbsp;
        <input type="button" style="display: none;" value="Show Client" name="dhcpClientTbl" onClick="dhcpTblClick('/dhcptbl.htm')" >
        <script>document.tcpip.dhcpClientTbl.value = tcpip_show_client;</script>
      </td>
  </tr>

  <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_lan_dhcp_time)</script></b></td>
      <td width="70%"><input type="text" name="dhcpLeaseTime" size="6" maxlength="5" value="<% getInfo("dhcpLeaseTime"); %>"> <font size=2>(1 ~ 10080 <script>dw(tcpip_minutes)</script>)</td>
  </tr>
<tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_lan_staicdhcp)</script></b></td>
      <td width="70%">
				<input type="button" value="Set Static DHCP" name="staticdhcpTbl" onClick="staticdhcpTblClick('/tcpip_staticdhcp.htm')" >    
				<script>document.tcpip.staticdhcpTbl.value = tcpip_staticdhcp;</script>
      </td>
  </tr>

  <tr style="display: none;">
      <td width="30%"><font size=2><b><script>dw(tcpip_domain)</script></b></td>
      <td width="70%"><input type="text" name="domainName" size="15" maxlength="30" value="<% getInfo("domainName"); %>"></td>
  </tr>

  <tr style="display: none;">
      <td width="30%"><font size=2><b><script>dw(tcpip_802_1d)</script></b></td>
      <td width="70%"><select size="1" name="stp">
      <SCRIPT>
      	if(<% getIndex("stp"); %>)      	
      		document.write("\
				<option value=\"0\" >"+tcpip_802_1d_disabled+"</option>\
				<option value=\"1\" selected>"+tcpip_802_1d_enable+"</option>");
      	else
			document.write("\
				<option value=\"0\" selected>"+tcpip_802_1d_disabled+"</option>\
				<option value=\"1\" >"+tcpip_802_1d_enable+"</option>");
     	  	
   	  		
   	  </SCRIPT>
	    </select>
      </td>
  </tr>
<%getIndex("mfi_wac_interface_start")%>
  <tr>
      <td width="30%"><font size=2><b> <script>dw(tcpip_lan_wac_if)</script> </b></td>
      <td width="70%"><select size="1" name="mfiWacId">
      <SCRIPT>
      	if(<% getIndex("wac_interface"); %>)      	
      		document.write("\
				<option value=\"0\" selected>wlan1</option>\
				<option value=\"1\" >wlan2</option>");
      	else
			document.write("\
				<option value=\"0\" >wlan1</option>\
				<option value=\"1\" selected>wlan2</option>");
     	  	
   	  		
   	  </SCRIPT>
	    </select>
      </td>
  </tr>
<%getIndex("mfi_wac_interface_end")%>
  <tr style="display: none;">
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_clone_mac)</script></b></td>
      <td width="70%"><input type="text" name="lan_macAddr" size="15" value="<% getInfo("bridgeMac"); %>"></td>
  </tr>

  <SCRIPT>
  	initialDhcp = document.tcpip.dhcp.selectedIndex;
	dhcpChange(initialDhcp);
	if (initialDhcp == 0) {
		document.getElementsByName("dhcp_clone")[0].checked = true
		document.getElementsByName("dhcp_clone")[1].checked = false
	} else {
		document.getElementsByName("dhcp_clone")[0].checked = false
		document.getElementsByName("dhcp_clone")[1].checked = true
	}
	//staticdhcpChange(document.tcpip.static_dhcp.selectedIndex)
  </SCRIPT>
  </table>
<br>
	<table style="display:none;" id="staticIpTable" border="0" width=640>
		<% dhcpRsvdIp_List();%>
	</table>
<% getInfo("apply_prompt_comment_start");%>
      <input type="submit" value="Apply Changes" name="save" onClick="return saveChanges()">&nbsp;&nbsp;
      <script>document.tcpip.save.value = tcpip_lan_save;</script>
      <input type="reset" value="Reset" name="reset" onClick="resetClick()">
       <script>document.tcpip.reset.value = tcpip_reset;</script>
<% getInfo("apply_prompt_comment_end");%>
<% getInfo("apply_direct_comment_start");%>
      <input type="submit" class="save_button_class" value="Save" name="save" onClick="return saveChanges()">&nbsp;&nbsp;
            <script>document.tcpip.save.value = tcpip_lan_save;</script>
      <input type="submit" value="Save & Apply" name="save_apply" onClick="return saveChanges()">&nbsp;&nbsp;
            <script>document.tcpip.save_apply.value = tcpip_apply;</script>
      <input type="reset" value="Reset" name="reset" onClick="resetClick()">
      <script>document.tcpip.reset.value = tcpip_reset;</script>
<% getInfo("apply_direct_comment_end");%>
	  
      <input type="hidden" value="/tcpiplan.htm" name="submit-url">
 </form>
</blockquote>
</body>

</html>
