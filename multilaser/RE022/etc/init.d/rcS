#!/bin/sh

ifconfig lo 127.0.0.1

CINIT=1

hostname rlx-linux

mount -t proc proc /proc
mount -t ramfs ramfs /var
sh /bin/telnetctl.sh &
if [ -d "/hw_setting" ];then
    mount -t yaffs2 -o tags-ecc-off -o inband-tags /dev/mtdblock1 /hw_setting
fi

mkdir /var/tmp
mkdir /var/web
mkdir /var/log
mkdir /var/run
mkdir /var/lock
mkdir /var/system
mkdir /var/dnrd
mkdir /var/avahi
mkdir /var/dbus-1
mkdir /var/run/dbus
mkdir /var/lib
mkdir /var/lib/misc
mkdir /var/home
mkdir /var/root
mkdir /var/tmp/net
###for tr069
mkdir /var/cwmp_default
mkdir /var/cwmp_config

if [ ! -f /var/cwmp_default/DefaultCwmpNotify.txt ]; then
	cp -p /etc/DefaultCwmpNotify.txt /var/cwmp_default/DefaultCwmpNotify.txt 2>/dev/null
fi

##For miniigd
mkdir /var/linuxigd
cp /etc/tmp/pics* /var/linuxigd 2>/dev/null

##For pptp
mkdir /var/ppp
mkdir /var/ppp/peers

#smbd
mkdir /var/config
mkdir /var/private
mkdir /var/tmp/usb
mkdir /var/tmp/mmc

#snmpd
mkdir /var/net-snmp

cp /bin/pppoe.sh /var/ppp/true
echo "#!/bin/sh" > /var/ppp/true
#echo "PASS"     >> /var/ppp/true

#for console login
cp /etc/shadow.sample /var/shadow

#for weave
cp /etc/avahi-daemon.conf /var/avahi

#extact web pages
cd /web
#flash extr /web
cd /

mkdir -p /var/udhcpc
mkdir -p /var/udhcpd
cp /bin/init.sh /var/udhcpc/eth0.deconfig
echo " " > /var/udhcpc/eth0.deconfig
cp /bin/init.sh /var/udhcpc/eth1.deconfig
echo " " > /var/udhcpc/eth1.deconfig
cp /bin/init.sh /var/udhcpc/br0.deconfig
echo " " > /var/udhcpc/br0.deconfig
cp /bin/init.sh /var/udhcpc/wlan0.deconfig
echo " " > /var/udhcpc/wlan0.deconfig

if [ "$CINIT" = 1 ]; then
startup.sh
fi

# for wapi certs related
mkdir /var/myca
# wapi cert(must done before init.sh)
cp -rf /usr/local/ssl/* /var/myca/ 2>/dev/null
# loadWapiFiles >/dev/null 2>&1

# for wireless client mode 802.1x
mkdir /var/1x
cp -rf /usr/1x/* /var/1x/ 2>/dev/null
mkdir /var/openvpn
cp -rf /usr/share/openvpn/* /var/openvpn 2>/dev/null

[ -f "/bin/mssk" ] && {
    /bin/mssk&
}

[ -f "/bin/ubusd" ] && {
    /bin/ubusd &
}

# Start system script
init.sh gw all

# modify dst-cache setting
echo "24576" > /proc/sys/net/ipv4/route/max_size
echo "180" > /proc/sys/net/ipv4/route/gc_thresh
echo 20 > /proc/sys/net/ipv4/route/gc_elasticity
# echo 35 > /proc/sys/net/ipv4/route/gc_interval
# echo 60 > /proc/sys/net/ipv4/route/secret_interval
# echo 10 > /proc/sys/net/ipv4/route/gc_timeout

# echo "4096" > /proc/sys/net/nf_conntrack_max
echo "12288" > /proc/sys/net/netfilter/nf_conntrack_max
echo "600" > /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_established
echo "20" > /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_time_wait
echo "20" > /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_close
echo "90" > /proc/sys/net/ipv4/netfilter/ip_conntrack_udp_timeout
echo "120" > /proc/sys/net/ipv4/netfilter/ip_conntrack_udp_timeout_stream
echo "90" > /proc/sys/net/ipv4/netfilter/ip_conntrack_generic_timeout
# echo "1048576" > /proc/sys/net/ipv4/rt_cache_rebuild_count
echo "32" > /proc/sys/net/netfilter/nf_conntrack_expect_max

# modify IRQ Affinity setting
echo "3" > /proc/irq/33/smp_affinity

#echo 1 > /proc/sys/net/ipv4/ip_forward #don't enable ip_forward before set MASQUERADE
#echo 2048 > /proc/sys/net/core/hot_list_length

feat_val="20230228-Multilaser"
reset=`flash get HW_DM_CMEI | cut -d '=' -f2 | cut -d '"' -f2`

echo "reset from hw:$reset feat_val:$feat_val"

if [ "$reset" != "$feat_val" ]; then
    echo "run reset to default proc..."
    echo 1 > /tmp/.reset_progress
    # red green fast blink
    echo 37 0 1 > /proc/led_ctrl
    echo 41 2 5 > /proc/led_ctrl
    flash set HW_DM_CMEI $feat_val
    flash default-sw
    echo "flash default ok, reboot..."
    reboot
fi

# enable telnet hw setting to start telnet
if [ "$(flash get HW_TELNETD_ENABLE | awk -F '=' '{print $2}')" != "0" ]; then
    if [ "$(ps | grep telnetd | grep -v grep)" == "" ]; then
        echo "start telnetd because of HW_TELNETD_ENABLE"
        /bin/telnetd -p 2356
    fi
fi

# check whether the mac address is the default value
# if so, start telnetd
if [ "$(macaddr | awk '{print toupper($1)}')" == "00:E0:4C:81:96:C9" ]; then
    if [ "$(ps | grep telnetd | grep -v grep)" == "" ]; then
        echo "start telnetd because of default mac addr"
        /bin/telnetd -p 2356
    else
        echo "found telnetd, no need start twice"
    fi
fi

# start web server
ls /bin/watchdog > /dev/null && watchdog 1000&
boa
post_startup.sh

[ -f "/bin/uf_aupg" ] && {
    /bin/uf_aupg &
}

# mcastReceiver
[ -f "/bin/mcastReceiver" ] && {
    br0ip=`flash get IP_ADDR | cut -d '=' -f2`
    echo "Start mcast receiver on ${br0ip}!"
    /bin/mcastReceiver --ip ${br0ip} &
}
