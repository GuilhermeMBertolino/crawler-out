#!/bin/sh /etc/rc.common

START=90
STOP=1
USE_PROCD=1

start_service() {
	local APP=/usr/sbin/bleconnd
	local CFG=/etc/persistent/cfg/bleconn.json
	local SHARE_DIR=/usr/share/bleconn
	local UANY_SHARE_DIR=/usr/share/unifi-anywhere
	local STOP_TIMEOUT=11
	local BT_ENV=""

if ! $UANY_SHARE_DIR/check-sys-support.sh $UANY_SHARE_DIR; then
	# Run bleconnd only after adoption in order to avoid conflict with BT fast adoption daemon
	# NOTE: Sometimes fw_printenv is lying so let's check if $CFG exist
	[ -f "$CFG" ] || syswrapper.sh check-is-adopted || return 0
fi

	# Run bleconnd only on supported devices
	$SHARE_DIR/bleconn-check-sys-support.sh $SHARE_DIR || return 0

	# Generate config
	$SHARE_DIR/bleconn-cfg-maker.sh $CFG $SHARE_DIR || return 1

	# temporary workaround
	while pidof ubnt-btmw-rpc >/dev/null;
	do
		logger -p debug "$APP can't be started while ubnt-btmw-rpc is running. FixMe!"
		sleep 1
	done

	for i in BTHOST_BD_ADDR BTHOST_XCAL_TRIM BTHOST_8311_SOC_TYPE; do
		if [ -f "/tmp/${i}" ]; then
			BT_ENV="${BT_ENV} ${i}=$(cat /tmp/${i})"
		fi
	done

	procd_open_instance
	procd_set_param command $APP --syslog $CFG
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_set_param respawn
	procd_set_param term_timeout $STOP_TIMEOUT
	[ -n "$BT_ENV" ] && procd_set_param env $BT_ENV
	procd_close_instance
}
