#!/bin/sh
# vim: ft=sh

. /usr/bin/unifi_util_funcs.sh
. /lib/read_caldata_to_fs.sh
. /lib/wifi/qcawificfg80211.sh

CFG_FILE="/tmp/system.cfg"
LOWPERF_FIELD="radio.lowpfmode"
QCAWIFI_MOD="/lib/wifi/qca-wifi-modules"
RUNNING_QCAWIFI_MOD="/var/run/qca-wifi-modules-load"
SYSID=$(get_config_value /proc/ubnthal/system.info systemid)

reverse() {
	result=''
    for i in $@; do
        result="$i $result"
    done
    echo "$result"
}

insert_module() {
	[ -d /sys/module/$1 ] || {
		if [ -x /usr/sbin/modprobe ]; then
			modprobe $1 $2
		else
			insmod $1 $2
		fi
	}
}

update_ini_file() {
	update_ini_cmd="grep -q $1= /ini/global.ini && sed -i '/$1=/c $1=$2' /ini/global.ini || echo $1=$2 >> /ini/global.ini"
	eval $update_ini_cmd
	sync
}

update_internal_ini() {
	local file="/ini/internal/$1"
	update_ini_cmd="grep -q $2 $file && sed -i '/$2=/c $2=$3' $file || echo \"\$(awk '/.*\\[.*\\].*/ && !s { s = 1; print \"'\$2'='\$3'\"}1' \$file)\" > $file"
	eval $update_ini_cmd
	sync
}

get_lowperf_mode() {
	val=$(get_config_value $CFG_FILE $LOWPERF_FIELD)
	[ "$val" = "enabled" ] && {
		echo 1
	} || {
		echo 0
	}
}

load_cnss2() {
	local cnss2_args=""
	local cnssdaemon_log_file=""
	local cnssd_args=""

	[ -d /sys/module/ipq_cnss2 ] && {
		return
	}
	for arg in $(cat /proc/cmdline); do
		case "$arg" in
			cnss2*)
				arg="$(echo $arg | awk -F '.' '{print$2}')"
				cnss2_args="$cnss2_args $arg"
				;;
		esac
	done

	echo "Loading cnss2 $cnss2_args" > /dev/kmsg
	insert_module ipq_cnss2 "$cnss2_args"

	if [ ! -z "$cnssdaemon_log_file" ];then
		cnssd_args=" -dddd -f $cnssdaemon_log_file"
	else
		cnssd_args=" -s"
	fi

	/usr/bin/cnssdaemon $cnssd_args &
}

load_dependency() {
	[ -f /lib/modules/*/qca-ssdk.ko ] && {
		insert_module qca-ssdk.ko
	}
	[ -f /lib/modules/*/qca-nss-ppe.ko ] && {
		insert_module qca-nss-ppe.ko
	}
	[ -f /lib/modules/*/qca-nss-dp.ko ] && {
		insert_module qca-nss-dp.ko
	}
	[ -f /lib/modules/*/qca-nss-drv.ko ] && {
		insert_module qca-nss-drv.ko
	}
	[ -f /lib/modules/*/cfg80211.ko ] && {
		insert_module cfg80211.ko
	}
	[ -f /lib/modules/*/qca-nss-ppe-vp.ko ] && {
		insert_module qca-nss-ppe-vp.ko
	}
}

miami_config_init() {
	local cfg80211_support=`cat /usr/etc/cfg80211_support`
	local radio_mask=7
	local is_lowperf=$(get_lowperf_mode)

	# Set our qca-wifi ini path
	echo -n /ini > /sys/module/firmware_class/parameters/path

	[ -f /tmp/debug-ini ] || {
		if [ $cfg80211_support = "1" ]; then
			update_ini_file cfg80211_config "1"
		else
			update_ini_file cfg80211_config "0"
		fi
		update_ini_file max_peers "0"
		update_ini_file qwrap_enable "0"
		update_ini_file logger_enable_mask "0"
		update_ini_file nss_wifi_radio_scheme_enable "0"
		update_ini_file enable_eapol_over_nl "0"
		update_ini_file externalacs_enable "0"
		update_ini_file active_max_channel_time_6g "150"
		update_ini_file passive_max_channel_time_6g "300"
		update_internal_ini global_i.ini hw_mode_id "0"
		case "$SYSID" in
			a682|a686)
				update_internal_ini global_i.ini hw_mode_id_soc1 "5"
				radio_mask=7
				;;
			a688|a691|a692)
				update_internal_ini global_i.ini hw_mode_id_soc1 "0"
				radio_mask=3
				;;
			a681)
				update_internal_ini global_i.ini hw_mode_id_soc1 "5"
				update_internal_ini global_i.ini hw_mode_id_soc2 "0"
				radio_mask=15
				;;
			a696)
				update_internal_ini global_i.ini hw_mode_id_soc1 "5"
				update_internal_ini global_i.ini hw_mode_id_soc2 "0"
				update_internal_ini QCN9160_i.ini dp_mon_4chain_ring 1
				update_internal_ini QCN9160_i.ini dp_mon_2chain_ring 0
				update_internal_ini QCN9224_i.ini dp_mon_4chain_ring 1
				update_internal_ini QCN9224_i.ini dp_mon_2chain_ring 0
				radio_mask=15
				;;
			a697)
				update_internal_ini global_i.ini hw_mode_id_soc1 "0"
				update_internal_ini global_i.ini hw_mode_id_soc2 "0"
				update_internal_ini global_i.ini hw_mode_id_soc3 "0"
				update_internal_ini QCN9160_i.ini dp_mon_4chain_ring 1
				update_internal_ini QCN9160_i.ini dp_mon_2chain_ring 0
				update_internal_ini QCN9224_i.ini dp_mon_4chain_ring 1
				update_internal_ini QCN9224_i.ini dp_mon_2chain_ring 0
				radio_mask=15
				;;
		esac

		if [ $is_lowperf = "1" ]; then
			echo powersave > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
			echo powersave > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
			echo powersave > /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor
			echo powersave > /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor
		else
			echo performance > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
			echo performance > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
			echo performance > /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor
			echo performance > /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor
		fi

		update_ini_file probe_wifi_cfg "$radio_mask"
		update_ini_file nss_wifi_olcfg "0"
		update_ini_file dp_rx_hash "1"
		update_ini_file wds_ext "0"
		sync
	}
}

load_wifi_modules() {
	[ -e /tmp/.wifi-config-done ] && {
		echo "qca-wifi already loaded" > /dev/kmsg
		return
	}
	# loading qca-wifi
	echo "loading qca-wifi" > /dev/kmsg
	# loading ipq_cnss2
	load_cnss2
	# loading dependency
	load_dependency
	# config miami wifi init files
	miami_config_init
	#loading qca-wifi modules
	for ko in `cat ${QCAWIFI_MOD}`; do
		case ${ko} in
			qdf) [ -d /sys/module/${ko} ] || { \
					insert_module ${ko} mem_debug_disabled=1
				}
				;;
			umac) [ -d /sys/module/${ko} ] || { \
					insert_module ${ko} enable_pktlog_support=1
				}
				;;
			qca_ol) [ -d /sys/module/${ko} ] || { \
					do_cold_boot_calibration_qcawificfg80211
					insert_module ${ko}
				}
				;;
			*) [ -d /sys/module/${ko} ] || { \
					insert_module ${ko}
				}
				;;
		esac
	done;

	cp ${QCAWIFI_MOD} ${RUNNING_QCAWIFI_MOD}
	[ -e /tmp/.wifi-config-done ] || {
		touch /tmp/.wifi-config-done
		echo "qca-wifi loaded" > /dev/kmsg
	}

	# a696 is unique in that wifi0 is 5GHz, and wifi1 is 2.4G.
	# To better align with other Gen7 APs, we will rename the interfaces
	case "$SYSID" in
		a696)
	                ip link set wifi0 down
	                ip link set wifi1 down
	                ip link set wifi0 name wifix
	                ip link set wifi1 name wifi0
	                ip link set wifix name wifi1
		        ;;
	esac
}

unload_wifi_modules() {
	[ ! -e /tmp/.wifi-config-done -o ! -e ${RUNNING_QCAWIFI_MOD} ] && {
		echo "qca-wif is not loaded" > /dev/kmsg
		return
	}
	[ -e /lib/modules/*/ecm-wifi-plugin.ko ] && {
		[ -d /sys/module/ecm_wifi_plugin ] && rmmod ecm-wifi-plugin
	}
	for ko in $(reverse `cat ${RUNNING_QCAWIFI_MOD}`); do
		[ -d /sys/module/${ko} ] && rmmod ${ko}
	done
	rm -f /tmp/.wifi-config-done
	echo "qca-wifi unloaded" > /dev/kmsg
}

load_modules() {
	cd /etc/modules.d
	for ko in `cat $*` ; do
		if [ -f /etc/module_para.conf ] ; then
			module_para=`cat /etc/module_para.conf | grep -w $ko | sed -e 's/[^ ]* //' \
				| tr "\n" " " | sed 's/[ ]*$//'`
		else
			module_para=""
		fi

		if [ -f /tmp/$ko.ko ] ; then
			insert_module /tmp/$ko.ko $module_para
		else
			insert_module /lib/modules/*/$ko.ko $module_para
		fi
	done;
}

unload_modules() {
	cd /etc/modules.d
	reverse_list=""
	for module in `cat $1`; do
		reverse_list="${module}\n${reverse_list}"
	done
	echo -e ${reverse_list} | sed 's/^[^#]/rmmod &/' | ash 2>&- || :
}

[ ! -e /etc/persistent/no-modules -a -d /etc/modules.d ] || exit 0

what=$1
if [ $# -gt 1 ]; then
	shift
	grp_list=""
	for grp in $*; do
		for f in /etc/modules.d/$grp  /etc/modules.d.sysinit/$grp; do
			[ -f $f ] && grp_list="$grp_list $f"
		done
	done
else
	grp_list="/etc/modules.d/*"
fi

case "$what" in
	load)	for group in $grp_list; do
			load_modules $group
		done
	;;
	# Convert spaces to lines for awk to reverse order of the grp_list
	unload)
		for group in `echo "$grp_list" | tr " " "\n" | awk '{lifo[NR]=$0; lno=NR } END{ for(;lno>-1;lno--){print lifo[lno]; }}'`; do
			unload_modules $group
		done
	;;
	wifi-load)
		[ -f /etc/no-wifi ] && exit 1
		load_wifi_modules
	;;
	wifi-unload)
		unload_wifi_modules
	;;
	wifi-cal)
		do_load_ipq4019_board_bin
	;;
	*)
		echo "Usage: load|unload|wifi-load|wifi-unload|wifi-cal"
		exit 1
	;;
esac
