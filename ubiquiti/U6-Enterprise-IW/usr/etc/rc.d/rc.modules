#!/bin/sh
# vim: ft=sh

. /usr/bin/unifi_util_funcs.sh

CFG_FILE="/tmp/system.cfg"
LOWPERF_FIELD="radio.lowpfmode"
QCAWIFI_MOD="/lib/wifi/qca-wifi-modules"
RUNNING_QCAWIFI_MOD="/var/run/qca-wifi-modules-load"
SYSID=$(get_config_value /proc/ubnthal/system.info systemid)

reverse() {
	result=''
    for i in $@; do
        result="$i $result"
    done
    echo "$result"
}

insert_module() {
	[ -d /sys/module/$1 ] || {
		if [ -x /usr/sbin/modprobe ]; then
			modprobe $1 $2
		else
			insmod $1 $2
		fi
	}
}

# coresight debug framework configuration
config_coresight() {
	echo q6mem > /sys/bus/coresight/devices/coresight-tmc-etr/out_mode
	echo 1 > /sys/bus/coresight/devices/coresight-tmc-etr/curr_sink
	echo 5 > /sys/bus/coresight/devices/coresight-funnel-mm/funnel_ctrl
	echo 7 > /sys/bus/coresight/devices/coresight-funnel-in0/funnel_ctrl
	echo 1 > /sys/bus/coresight/devices/coresight-stm/enable
}

update_ini_file() {
	update_ini_cmd="grep -q $1= /ini/global.ini && sed -i '/$1=/c $1=$2' /ini/global.ini || echo $1=$2 >> /ini/global.ini"
	eval $update_ini_cmd
	sync
}

update_internal_ini() {
	local file="/ini/internal/$1"
	update_ini_cmd="grep -q $2 $file && sed -i '/$2=/c $2=$3' $file || echo \"\$(awk '/.*\\[.*\\].*/ && !s { s = 1; print \"'\$2'='\$3'\"}1' \$file)\" > $file"
	eval $update_ini_cmd
	sync
}

get_lowperf_mode() {
	val=$(get_config_value $CFG_FILE $LOWPERF_FIELD)
	[ "$val" = "enabled" ] && {
		echo 1
	} || {
		echo 0
	}
}

load_cnss2() {
	local cnss2_args=""
	local cnssdaemon_log_file=""
	local cnssd_args=""

	[ -d /sys/module/ipq_cnss2 ] && {
		return
	}
	for arg in $(cat /proc/cmdline); do
		case "$arg" in
			cnss2*)
				arg="$(echo $arg | awk -F '.' '{print$2}')"
				cnss2_args="$cnss2_args $arg"
				;;
		esac
	done

	echo "Loading cnss2 $cnss2_args" > /dev/kmsg
	insert_module ipq_cnss2 "$cnss2_args"

	if [ ! -z "$cnssdaemon_log_file" ];then
		cnssd_args=" -dddd -f $cnssdaemon_log_file"
	else
		cnssd_args=" -s"
	fi

	/usr/bin/cnssdaemon $cnssd_args &
}

load_dependency() {
	[ -f /lib/modules/*/qca-ssdk.ko ] && {
		insert_module qca-ssdk.ko
	}
	[ -f /lib/modules/*/qca-nss-ppe.ko ] && {
		insert_module qca-nss-ppe.ko
	}
	[ -f /lib/modules/*/qca-nss-dp.ko ] && {
		insert_module qca-nss-dp.ko
	}
	[ -f /lib/modules/*/qca-nss-drv.ko ] && {
		insert_module qca-nss-drv.ko
	}
	[ -f /lib/modules/*/cfg80211.ko ] && {
		insert_module cfg80211.ko
	}
	[ -f /lib/modules/*/qca-nss-ppe-vp.ko ] && {
		insert_module qca-nss-ppe-vp.ko
	}
}

maple_config_init() {
	local CLIENTS_PER_RADIO=256
	local full_offload=`cat /usr/etc/qca-full-offload`
	local cfg80211_support=`cat /usr/etc/cfg80211_support`
	local is_lowperf=$(get_lowperf_mode)

	# Set our qca-wifi ini path
	echo -n /ini > /sys/module/firmware_class/parameters/path

	[ -f /tmp/debug-ini ] || {
		if [ $cfg80211_support = "1" ]; then
			update_ini_file cfg80211_config "1"
		else
			update_ini_file cfg80211_config "0"
		fi
		update_ini_file max_peers "0"
		update_ini_file qwrap_enable "0"
		update_ini_file logger_enable_mask "0"
		update_ini_file nss_wifi_radio_scheme_enable "1"
		update_ini_file enable_eapol_over_nl "0"

		if [ $is_lowperf = "1" ]; then
			# Set the NSS to a fixed clock rate (Maple / U6 series only for now)
			echo 0 > /proc/sys/dev/nss/clock/auto_scale
			# Options are: 850000000 and 1000000000
			echo 850000000 > /proc/sys/dev/nss/clock/current_freq
			# Ensure we remain at lowest clock (800 MHz), otherwise 1.3GHz is selected
			echo powersave > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
			echo powersave > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
		else
			echo 0 > /proc/sys/dev/nss/clock/auto_scale
			echo 1000000000 > /proc/sys/dev/nss/clock/current_freq
			echo performance > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
			echo performance > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
		fi
		# Full offload option (set nss_wifi_olcfg to "3(2 wifi chipsets) or 7(3 wifi chipset)"
		# and dp_rx_hash to "0" to enable)
		if [ $full_offload = "1" ]; then
			local radio_mask=3

			case "$SYSID" in
				a654 | a655 | a656)
					# Platforms with three radios
					if [ $is_lowperf = "0" ]; then
						# 6GHz radio is enabled
						radio_mask=7
					fi
				;;
			esac
			update_ini_file probe_wifi_cfg "$radio_mask"
			update_ini_file nss_wifi_olcfg "$radio_mask"
			update_ini_file dp_rx_hash "0"
		else
			update_ini_file nss_wifi_olcfg "0"
			update_ini_file dp_rx_hash "1"
		fi

		# both Maple and Pine radios are hw_mode 0 (/sys/class/net/soc*/hw_modes = "SINGLE:" for mode "0")
		update_internal_ini QCA5018_i.ini hw_mode_id "0"
		update_internal_ini QCN9000_i.ini hw_mode_id "0"

		# update_ini_for_512MP_dp_tx_desc
		update_internal_ini QCA5018_i.ini dp_tx_desc 0x4000
		update_internal_ini QCA5018_i.ini dp_tx_desc_limit_0 4096
		update_internal_ini QCN9000_i.ini dp_tx_desc 0x4000
		update_internal_ini QCN9000_i.ini dp_tx_desc_limit_0 4096

		# config_nss_wifi_radio_pri_map
		update_internal_ini global_i.ini nss_wifi_radio_pri_map 272

		# update_ini_for_512MP_P_build
		update_internal_ini QCN9000_i.ini dp_rxdma_monitor_buf_ring 128
		update_internal_ini QCN9000_i.ini dp_rxdma_monitor_dst_ring 128
		update_internal_ini QCN9000_i.ini dp_rxdma_monitor_desc_ring 4096
		update_internal_ini QCN9000_i.ini dp_rxdma_monitor_status_ring 1024
		update_internal_ini QCN9000_i.ini num_vdevs_pdev0 8
		update_internal_ini QCN9000_i.ini num_vdevs_pdev1 8
		update_internal_ini QCN9000_i.ini num_vdevs_pdev2 8
		update_internal_ini QCN9000_i.ini num_peers_pdev0 "$CLIENTS_PER_RADIO"
		update_internal_ini QCN9000_i.ini num_peers_pdev1 "$CLIENTS_PER_RADIO"
		update_internal_ini QCN9000_i.ini num_peers_pdev2 "$CLIENTS_PER_RADIO"
		update_internal_ini QCN9000_i.ini num_monitor_pdev0 1
		update_internal_ini QCN9000_i.ini num_monitor_pdev1 1
		update_internal_ini QCN9000_i.ini num_monitor_pdev2 1
		update_internal_ini QCN9000_i.ini dp_tx_desc_limit_0 8192
		update_internal_ini QCN9000_i.ini dp_tx_desc_limit_1 8192
		update_internal_ini QCN9000_i.ini dp_tx_desc_limit_2 8192

		update_internal_ini QCA5018_i.ini dp_rxdma_monitor_buf_ring 128
		update_internal_ini QCA5018_i.ini dp_rxdma_monitor_dst_ring 128
		update_internal_ini QCA5018_i.ini dp_rxdma_monitor_desc_ring 4096
		update_internal_ini QCA5018_i.ini dp_rxdma_monitor_status_ring 1024
		update_internal_ini QCA5018_i.ini num_vdevs_pdev0 8
		update_internal_ini QCA5018_i.ini num_vdevs_pdev1 8
		update_internal_ini QCA5018_i.ini num_vdevs_pdev2 8
		update_internal_ini QCA5018_i.ini num_peers_pdev0 "$CLIENTS_PER_RADIO"
		update_internal_ini QCA5018_i.ini num_peers_pdev1 "$CLIENTS_PER_RADIO"
		update_internal_ini QCA5018_i.ini num_peers_pdev2 "$CLIENTS_PER_RADIO"
		update_internal_ini QCA5018_i.ini num_monitor_pdev0 1
		update_internal_ini QCA5018_i.ini num_monitor_pdev1 1
		update_internal_ini QCA5018_i.ini num_monitor_pdev2 1
		update_internal_ini QCA5018_i.ini dp_tx_desc_limit_0 8192
		update_internal_ini QCA5018_i.ini dp_tx_desc_limit_1 8192
		update_internal_ini QCA5018_i.ini dp_tx_desc_limit_2 8192

		# update_ini_for_tx_vdev_id_check
		update_internal_ini QCA5018_i.ini dp_tx_allow_per_pkt_vdev_id_check 0
		update_internal_ini QCN9000_i.ini dp_tx_allow_per_pkt_vdev_id_check 0

		# tweaks from BSP Team firmware
		update_internal_ini QCN9000_i.ini dp_nss_comp_ring_size 0x8000
		update_internal_ini QCA5018_i.ini dp_nss_comp_ring_size 0x8000

		# disable eapol netlink support
		update_ini_file enable_eapol_over_nl 0
		sync
	}
}

load_wifi_modules() {
	[ -e /tmp/.wifi-config-done ] && {
		echo "qca-wifi already loaded" > /dev/kmsg
		return
	}
	# loading qca-wifi
	echo "loading qca-wifi" > /dev/kmsg
	# loading ipq_cnss2
	load_cnss2
	# loading dependency
	load_dependency
	# config miami wifi init files
	maple_config_init
	#loading qca-wifi modules
	for ko in `cat ${QCAWIFI_MOD}`; do
		if [ -f /etc/module_para.conf ] ; then
			module_para=`cat /etc/module_para.conf | grep -w $ko | sed -e 's/[^ ]* //' \
				| tr "\n" " " | sed 's/[ ]*$//'`
		else
			module_para=""
		fi

		if [ ! -d /sys/module/$ko ]; then
			insert_module /lib/modules/*/$ko.ko $module_para
		fi
	done;

	config_coresight

	cp ${QCAWIFI_MOD} ${RUNNING_QCAWIFI_MOD}
	[ -e /tmp/.wifi-config-done ] || {
		# qca-nss-ecm will need this file to load ecm-wifi-plugin.ko
		touch /tmp/.wifi-config-done
		echo "qca-wifi loaded" > /dev/kmsg
	}
}

unload_wifi_modules() {
	[ ! -e /tmp/.wifi-config-done -o ! -e ${RUNNING_QCAWIFI_MOD} ] && {
		echo "qca-wif is not loaded" > /dev/kmsg
		return
	}
	for ko in $(reverse `cat ${RUNNING_QCAWIFI_MOD}`); do
		[ -d /sys/module/${ko} ] && rmmod ${ko}
	done
	rm -f /tmp/.wifi-config-done
	echo "qca-wifi unloaded" > /dev/kmsg
}

load_modules() {
	cd /etc/modules.d
	for ko in `cat $*` ; do
		if [ -f /etc/module_para.conf ] ; then
			module_para=`cat /etc/module_para.conf | grep -w $ko | sed -e 's/[^ ]* //' \
				| tr "\n" " " | sed 's/[ ]*$//'`
		else
			module_para=""
		fi

		if [ -f /tmp/$ko.ko ] ; then
			insert_module /tmp/$ko.ko $module_para
		else
			insert_module /lib/modules/*/$ko.ko $module_para
		fi
	done;
}

unload_modules() {
	cd /etc/modules.d
	reverse_list=""
	for module in `cat $1`; do
		reverse_list="${module}\n${reverse_list}"
	done
	echo -e ${reverse_list} | sed 's/^[^#]/rmmod &/' | ash 2>&- || :
}

[ ! -e /etc/persistent/no-modules -a -d /etc/modules.d ] || exit 0

what=$1
if [ $# -gt 1 ]; then
	shift
	grp_list=""
	for grp in $*; do
		for f in /etc/modules.d/$grp  /etc/modules.d.sysinit/$grp; do
			[ -f $f ] && grp_list="$grp_list $f"
		done
	done
else
	grp_list="/etc/modules.d/*"
fi

case "$what" in
	load)	for group in $grp_list; do
			load_modules $group
		done
	;;
	# Convert spaces to lines for awk to reverse order of the grp_list
	unload)
		for group in `echo "$grp_list" | tr " " "\n" | awk '{lifo[NR]=$0; lno=NR } END{ for(;lno>-1;lno--){print lifo[lno]; }}'`; do
			unload_modules $group
		done
	;;
	wifi-load)
		[ -f /etc/no-wifi ] && exit 1
		load_wifi_modules
	;;
	wifi-unload)
		unload_wifi_modules
	;;
	*)
		echo "Usage: load|unload|wifi-load|wifi-unload"
		exit 1
	;;
esac
