#!/bin/ash

. /usr/bin/unifi_util_funcs.sh
sysid=$(get_config_value /proc/ubnthal/system.info systemid)

case $sysid in
	dca8)
		base_gpios="1 15 20 21"
		base_thresholds="-67 -74 -80 -96"
		;;
	*)
		echo "Unsupported device: $sysid"
		exit 0
		;;
esac

echo $$ > /var/run/ubnt-rssimon.pid

for gpio in $base_gpios; do
	[ ! -e "/sys/class/gpio/gpio$gpio" ] && echo $gpio > /sys/class/gpio/export
	echo "out" > /sys/class/gpio/gpio$gpio/direction
done

while true; do
	# Default signal to lowest threshold
	signal=-96

	bssid=$(wpa_cli status | grep "bssid=" | cut -d= -f2)
	# If associated, get the interface from wpa_cli, and signal from iwconfig
	if [ -n "$bssid" ]; then
		INTERFACE=$(wpa_cli status | grep 'Selected interface' | cut -d ' ' -f 3 | tr -d "'")
		signal=$(iwconfig $INTERFACE | grep 'Signal level' | awk '{print $4}' | cut -d "=" -f 2 | cut -d " " -f 1)
	fi

	# If a parameter was provided, use it as the fake signal level used for debugging
	[ ! -z "$1" ] && signal=$1

	gpios=$base_gpios
	thresholds=$base_thresholds

	for gpio in $gpios; do
		current_threshold=$(echo $thresholds | awk '{print $1}')

		if [ "$signal" -gt "$current_threshold" ]; then
			echo "1" > /sys/class/gpio/gpio$gpio/value
		else
			echo "0" > /sys/class/gpio/gpio$gpio/value
		fi

		thresholds=$(echo $thresholds | awk '{$1=""; print $0}')
	done

	sleep 2
done
