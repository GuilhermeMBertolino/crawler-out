run_plugin() {
	. /etc/sysinit/$1.conf
	case "$2" in
		start)
		plugin_start
		;;
		stop)
		plugin_stop
		;;
		*)
		return -1
		;;
	esac
}

log_msg() {
       	tag=$1
        shift
       	pidof syslogd > /dev/null 2>&1
       	if [ $? -eq 0 ]; then
               	logger -t $tag $*
	else
               	date +"%b %d %X $tag: $*" >> /var/log/messages
	fi
}

log_err() {
	err_no=$?
	if [ $err_no -ne 0 ]; then
        	log_msg $* "[error: $err_no]"
        fi
}

run_plugins() {
	cmd=$1
	shift
	for app in $*; do
		if [ -e /etc/sysinit/${app}.conf ]; then
			start_timeout ${app} ${cmd} &
			timeout_pid=$!
			run_plugin ${app} ${cmd}
			kill $timeout_pid
		else
			echo "Cannot run $cmd for plugin ${app}!"
		fi
	done
}

STARTUP_LIST=/etc/startup.list
UAV_LOG=/tmp/uav.log

rc_start() {
        if ! pidof syslogd >/dev/null; then
            /bin/syslogd -S
        fi

	if [ -f /etc/prestart ]; then
		start_timeout &
		timeout_pid=$!
		. /etc/persistent/rc.prestart
		kill $timeout_pid
	fi
	startuplist=`grep -v '#' ${STARTUP_LIST}`

	run_plugins start $startuplist

	/sbin/sysled -r 1
	/sbin/bgnd -r garp -- /sbin/garp -s 2 &

	if [ -f /etc/poststart ]; then
		. /etc/persistent/rc.poststart
	fi
        log_msg system Start

	if [ -f $UAV_LOG ]; then
		if [ -s $UAV_LOG ]; then
			while read line; do
				log_msg uav $line
			done < $UAV_LOG
		fi
		rm -f $UAV_LOG
	fi

        pkill -f '/bin/syslogd -S'
}

rc_stop() {
        log_msg system Stop
	if [ -f /etc/prestop ]; then
		start_timeout &
		timeout_pid=$!
		. /etc/persistent/rc.prestop
		kill $timeout_pid
	fi

	INITTAB_DEF=/usr/etc/inittab
	INITTAB_CUR=/etc/inittab
	cp -f ${INITTAB_DEF} ${INITTAB_CUR}
	kill -1 1

	origlist=`grep -v '#' ${STARTUP_LIST}`
	startuplist=""
	for a in ${origlist}; do 
		startuplist="$a ${startuplist}"
	done

	run_plugins stop $startuplist

	/sbin/sysled -r 0

	if [ -f /etc/poststop ]; then
		. /etc/persistent/rc.poststop
	fi
}

watchdog_start() {
	if [ -e /dev/watchdog -a -x /bin/watchdog ]; then
		wdog_pid=`pidof watchdog`
		if [ ".${wdog_pid}" == "." ]; then
			nice -n -19 /bin/watchdog -t 1 /dev/watchdog
                else
                        kill -CONT ${wdog_pid}
		fi
	fi
}

watchdog_stop() {
	killall -q -STOP watchdog
}

start_timeout(){
        sleep 60
        echo "timeout $1 $2" > /dev/kmsg
        echo c > /proc/sysrq-trigger
}
