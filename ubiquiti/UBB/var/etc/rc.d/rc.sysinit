#!/bin/sh

. /usr/etc/rc.d/rc.funcs

# reboot in 3 secs after kernel panic
echo "3" > /proc/sys/kernel/panic
# invoke kernel panic on OOM
echo "2" > /proc/sys/vm/panic_on_oom

if [ -f /etc/presysinit ]; then
       	. /etc/persistent/rc.presysinit
fi

mkdir -p /tmp/ath10k
/usr/bin/dd if=/dev/mtdblock3 bs=1c skip=4096 count=12064 of=/tmp/ath10k/pre-cal-ahb-a000000.wifi.bin 2>/dev/null &
/usr/bin/dd if=/dev/mtdblock3 bs=1c skip=20480 count=12064 of=/tmp/ath10k/pre-cal-ahb-a800000.wifi.bin 2>/dev/null &

# create module list, skip ip/eb-tables
if [ -d /etc/modules.d/ ]; then

modules=`cd /etc/modules.d && ls`
modules=`echo $modules | tr " " "\n" | grep -v -E ".*ipt-.*"`
modules=`echo $modules | tr " " "\n" | grep -v -E ".*ebtables.*"`
modules=`echo $modules | tr " " "\n" | grep -v -E ".*ip6tables.*"`

# load modules
. /usr/etc/rc.d/rc.modules load ${modules}

fi

# Pull up GPIO 61 to enable Peraso module
echo 61 > /sys/class/gpio/export
echo out > /sys/class/gpio/gpio61/direction
echo 1 > /sys/class/gpio/gpio61/value
# toggle Peraso reset
echo 39 > /sys/class/gpio/export
echo out > /sys/class/gpio/gpio39/direction
echo 1 > /sys/class/gpio/gpio39/value
echo 0 > /sys/class/gpio/gpio39/value

# upgrade PRS USB module fw
if [ -f /usr/bin/prs_fwup ]; then
/usr/bin/prs_fwup &
prs_pid=$!
prs_timeout=0
while [ $prs_timeout -le 120 ]; do
	kill -0 $prs_pid > /dev/null 2>&1
	if [ $? -ne 0 ]; then
		break
	fi
	echo "Flashing PRS firmware, timeout $prs_timeout (max 120)"
	sleep 1
	prs_timeout=$((prs_timeout + 1))
done
fi

# set hostname
echo UBNT > /proc/sys/kernel/hostname

# set sane defaults for routing tables and conntrack
echo "32768" > /proc/sys/net/ipv4/route/max_size
echo "2048" > /proc/sys/net/ipv4/route/gc_thresh
# end.

# respond to broadcast ping - this is for discovering neighbours IP addresses
echo "0" > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# setup motd
local ver=$(cat /etc/version)
local prd=$(sed -n 's/^board.name=//p' /etc/board.info)
local mac=$(sed -n 's/^board.hwaddr=//p' /etc/board.info)
sed "s/{VERSION}/$ver/; s/{PRODUCT}/$prd/; s/{MAC}/$mac/" /usr/etc/motd > /etc/motd

# set product u-boot env var
/usr/bin/ubntbox product -w

watchdog_start
# setup soft lock up watchdog in kernel
echo 30 >/proc/sys/kernel/watchdog_thresh

if [ -f /etc/postsysinit ]; then
       	. /etc/persistent/rc.postsysinit
fi

dmesg > /tmp/boot.txt
echo 0 > /sys/kernel/debug/persti/boot_cnt
fwupdate.real -p good
