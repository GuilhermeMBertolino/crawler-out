#!/bin/sh

if [ ! -z $GEN3 ]; then
	SEC_IFC=wl0
else
	SEC_IFC=ath1
	SEC_RADIO=wifi1
fi
#For debuging on eth0
[ ! -z $TEST_ON_IFC ] && SEC_IFC=$TEST_ON_IFC

#Check existance of iptables
type iptables >/dev/null 2>&1 && IPTABLES_ENABLED=yes || IPTABLES_ENABLED=no

remove_unms_rules() {
	local rule=`iptables -L FORWARD -nv --line-numbers | grep "ACCEPT.*$SEC_IFC" | sort -r`
	local masq_rule=`iptables -t nat -L POSTROUTING -nv --line-numbers | grep "MASQUERADE.*tcp dpt:" | sort -r`
	local rule_no=`echo "$rule" | cut -f 1 -d " "`
	local masq_rule_no=`echo "$masq_rule" | cut -f 1 -d " "`
	for i in $rule_no; do
		iptables -D FORWARD $i
	done
	for i in $masq_rule_no; do
		iptables -t nat -D POSTROUTING $i
	done
}

remove_captive_apple_from_hosts() {
	sed -i '/captive.apple.com/d' /etc/hosts
}

do_provmode_radio_stop()
{
	remove_captive_apple_from_hosts

	if [ $IPTABLES_ENABLED = yes ]; then
		remove_unms_rules
		iptables -D FORWARD -i $SEC_IFC -j DROP
		iptables -D FORWARD -i $SEC_IFC -j REJECT --reject-with icmp-proto-unreachable
		iptables -D FORWARD -i $SEC_IFC -p tcp -j REJECT --reject-with icmp-host-unreachable
		iptables -D FORWARD -i $SEC_IFC -p udp -j REJECT --reject-with icmp-port-unreachable
		iptables -D FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
        
		local port=`iptables -t nat -L PREROUTING -nv | grep -m1 "tcp dpt:80 redir ports" | cut -f 2 -d "s"`
		[ ! -z ${port} ] && iptables -t nat -D PREROUTING -i $SEC_IFC -p tcp --dport 80 -j REDIRECT --to-port ${port}
	fi

	[ -z $TEST_ON_IFC ] && ifconfig $SEC_IFC down
	[ ! -z $TEST_ON_IFC ] && ifconfig $SEC_IFC 0.0.0.0 && brctl addif br0 $SEC_IFC

	if [ ! -z $GEN3 ]; then
		if [ -f /var/run/prov-hostapd.pid ]; then
			kill `cat /var/run/prov-hostapd.pid`
			rm -f /var/run/prov-hostapd.pid
		fi
		rm -f /etc/prov-hostapd.conf
	else
		if [ -d /sys/devices/virtual/net/$SEC_RADIO ]; then
			ifconfig $SEC_RADIO down
		fi
		if [ -d /sys/devices/virtual/net/$SEC_IFC ]; then
			wlanconfig $SEC_IFC destroy
		fi
	fi

	if [ -f /var/run/prov-dhcpd.pid ]; then
		kill `cat /var/run/prov-dhcpd.pid`
		rm -f /var/run/prov-dhcpd.pid
		rm -f /tmp/prov-leases
	fi

	if [ -f /etc/lighttpd.conf.org ]; then
		mv /etc/lighttpd.conf.org /etc/lighttpd.conf
		rm -f /etc/lighttpd_provmode.conf
		killall -q lighttpd
	fi

	touch /var/run/prov_off

	rm -f $PROV_STATUS

	kill `cat /var/run/provmode.pid`
	rm -f /var/run/provmode.pid
}

do_airview_stop()
{
	ifconfig airview1 down
	wlanconfig airview1 destroy
	killall -q ubntspecd
	rm -f /tmp/airview/data
}

do_dfs_prescan_start()
{
	#
	# check and stop
	#
	if [ -d /proc/sys/net/airview1 ]; then
		do_airview_stop
	elif [ ! -f /var/run/prov_off -a -f /var/run/provmode.pid ]; then
		do_provmode_radio_stop
	fi
	
	#
	# Country
	#
	iwpriv $SEC_RADIO setCountryID 511

	#
	# interface up
	#
	wlanconfig $SEC_IFC create wlandev $SEC_RADIO wlanmode monitor > /dev/null
	iwpriv $SEC_IFC mode $Mode_BW
	iwconfig $SEC_IFC txpower 0
	iwconfig $SEC_IFC freq 5520M
	ifconfig $SEC_IFC up
	sleep 2 # wait for interface up
	DOMAIN=$(radartool dfsdomain |  sed 's/dfs domain : //')
	radarprescan set_dfsdomain $DOMAIN
	radarprescan enable
}

do_dfs_prescan_stop()
{	
	radarprescan disable
	ifconfig $SEC_IFC down
	wlanconfig $SEC_IFC destroy

	[ -z $GEN3 ] && /usr/etc/init.d/plugin start airview
}

do_dfs_prescan_scan()
{
	CCODE_MAINRADIO=$(iwpriv wifi0 getCountryID |  sed 's/wifi0     getCountryID://')
	radarprescan start_scan $CCODE_MAINRADIO $WEATHER
}

main(){
	if [ -n "${1}" ]; then
		CMD="${1}"
		shift
		case "${CMD}" in
		start)
			Mode_BW="11NAHT20"
			do_dfs_prescan_start
			WEATHER="0"
			if [ "${1}" = "weath" ]; then
				WEATHER="1"
			fi
			do_dfs_prescan_scan
			return $?
			;;
		check)
			MainBW=$(iwpriv wifi0 get_chanbw |  sed 's/wifi0     get_chanbw://')
			Mode_BW="11naht40minus"
			freq_com="${1}"
			if [ $MainBW = "20" -o $MainBW = "10" ]; then
				Mode_BW="11NAHT20"
				freq=$freq_com
			else
				freq=$(($freq_com+10))
			fi
			do_dfs_prescan_start
			radarprescan check_freq $freq
			return $?
			;;
		stop)
			do_dfs_prescan_stop
			return $?
			;;
		*)
			echo "Unrecognized command: ${CMD}!"
			;;
		esac
	fi
	return 1
}


main $@
exit $?
