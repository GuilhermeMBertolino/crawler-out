#!/bin/sh

# show			- prints current temperatures
# show boot		- prints stored temperatures
# init			- stores current temperatures

TEMP_DIR="/tmp/temperatures"
SYSTEM_TEMP_FILE="$TEMP_DIR/system"
RADIO_MAIN_TEMP_FILE="$TEMP_DIR/radio_main"
RADIO_BACKUP_TEMP_FILE="$TEMP_DIR/radio_backup"
RADIO_MAIN_CRASH_TEMP_FILE="$TEMP_DIR/radio_main_crash"
RADIO_BACKUP_CRASH_TEMP_FILE="$TEMP_DIR/radio_backup_crash"

KERNEL_CRASH_LOG_FILE="/tmp/boot_reason/kernel_crash"

RADIO_MAIN_ATH_SYSFS_FILE="/sys/devices/platform/soc/a800000.wifi/net/wifi0/thermal/temp"
RADIO_MAIN_PRS_SYSFS_FILE="/sys/devices/platform/soc/8af8800.usb3/8a00000.dwc3/xhci-hcd.0.auto/usb2/2-1/prs_attrs/baseband_temp"

AF60_UBB_HWMON_RAD_T_SYSFS="/sys/class/hwmon/hwmon0/temp1_input"
AF60_UBB_HWMON_SYS_T_SYSFS="/sys/class/hwmon/hwmon0/temp2_input"

airos_get_dev_flavor() {
  grep -Eo '^\w+' /etc/version
}

airos_has_backup_radio() {
	local no_5ghz=$(cat /etc/board.info | sed -n 's/radio\.1\.ignore=//p')
	[ ! "$no_5ghz" == "1" ]
}

gbe_get_60ghz_radio_temp() {
	local temp="$(wigig80211tool wlan0 radio_get_temp | sed -n 's/T_radio: //p')"
	# convert temperature from millidegree Celsius to Celsius
	temp=$((temp / 1000))
	echo $temp
}

gbe_get_5ghz_radio_temp() {
	echo "$(cat /sys/devices/platform/soc/a800000.wifi/net/wifi0/thermal/temp)"
}

talyn_nxp_get_temperature_from_hwmon() {
	local temp_tmp=`cat $1`
	temp=`echo "scale=2; ${temp_tmp} / 1000" | bc -l`
	echo $temp
}

get_system_temp() {
	local temp="N/A"

	if [ $(airos_get_dev_flavor) == "GBE" ]; then
		# GBE has no external I2C thermal sensor.
		# For system temperature on GBE we use 5Ghz radio temperature because
		# processor and 5Ghz radio are almost on the same silicon cristal
		# For GBE-Plus we use 60Ghz radio temp
		if airos_has_backup_radio; then
			temp="$(gbe_get_5ghz_radio_temp)"
		else
			temp="$(gbe_get_60ghz_radio_temp)"
		fi
	elif [ $(airos_get_dev_flavor) == "AF60" ] || [ $(airos_get_dev_flavor) == "UBBXG" ]; then
		temp="$(talyn_nxp_get_temperature_from_hwmon ${AF60_UBB_HWMON_SYS_T_SYSFS})"
	elif [ -c "/dev/i2c-0" ]; then
		temp=$(i2cget -y 0 0x48 0 w 2>/dev/null)
		if [ ! -z "$temp" ]; then
			temp=$((((${temp} >> 12) | ((${temp} & 0xff)<<4))/16))
			if [ "${temp}" -gt 128 ]; then
				temp==$((temp - 256))
			fi
		fi
	fi

	echo "$temp"
}

get_radio_main_temp() {
	local temp="N/A"

	if [ "$(airos_get_dev_flavor)" == "GBE" ]; then
		temp="$(gbe_get_60ghz_radio_temp)"
	elif [ -f "$RADIO_MAIN_PRS_SYSFS_FILE" ]; then
		temp="$(cat "$RADIO_MAIN_PRS_SYSFS_FILE")"
	elif [ -f "$RADIO_MAIN_ATH_SYSFS_FILE" ]; then
		temp="$(cat "$RADIO_MAIN_ATH_SYSFS_FILE")"
	elif [ $(airos_get_dev_flavor) == "AF60" ] || [ $(airos_get_dev_flavor) == "UBBXG" ]; then
		temp="$(talyn_nxp_get_temperature_from_hwmon ${AF60_UBB_HWMON_RAD_T_SYSFS})"
	else
		local temp="$(athdiag --get --address=0x2a454 | grep Value | awk '{print $6}')"
		temp=$((0x7b - ($temp & 0xff) + 50))
	fi

	echo "$temp"
}

get_radio_backup_temp() {
	local temp="N/A"

	if [ "$(airos_get_dev_flavor)" == "GBE" ] && airos_has_backup_radio; then
		temp="$(gbe_get_5ghz_radio_temp)"
	elif [ $(airos_get_dev_flavor) == "AF60" ] && airos_has_backup_radio; then
		local temp="$(athdiag --get --address=0x2a454 | grep Value | awk '{print $6}')"
		temp=$((0x7b - ($temp & 0xff) + 50))
	fi

	echo "$temp"
}

get_radio_main_crash_temp() {
	local temp="N/A"
	local tmp

	if [ -f "$KERNEL_CRASH_LOG_FILE" ]; then
		if [ "$(airos_get_dev_flavor)" == "GBE" ]; then
			tmp=$(dmesg | grep -m 1 -o "T_radio = [[:digit:]]\+" | grep -o '[[:digit:]]\+')
		else
			tmp=$(sed -nr 's/.*Radio temperature: ([0-9]+)C$/\1/p' ${KERNEL_CRASH_LOG_FILE})
		fi
		[ -n "$tmp" ] && temp="$tmp"
	fi

	echo "$temp"
}

get_radio_backup_crash_temp() {
	local temp="N/A"

	if airos_has_backup_radio; then
		if [ "$(airos_get_dev_flavor)" == "GBE" ] || [ "$(airos_get_dev_flavor)" == "AF60" ]; then
			local tmp
			if [ -f "$KERNEL_CRASH_LOG_FILE" ]; then
				tmp=$(sed -nr 's/.*Radio temperature: ([0-9]+)C$/\1/p' ${KERNEL_CRASH_LOG_FILE})
				[ -n "$tmp" ] && temp="$tmp"
			fi
		fi
	fi

	echo "$temp"
}

get_stored_temp() {
	local file="$1"

	if [ -f "$file" ]; then
		cat "$file"
	else
		echo "N/A"
	fi
}

print_temp() {
	local name="$1"
	local temp="$2"

	echo "$name: $temp"
}

if [ "$1" == "show" ]; then
	if [ "$2" == "boot" ]; then
		print_temp "system" "$(get_stored_temp "$SYSTEM_TEMP_FILE")"
		print_temp "radio_main" "$(get_stored_temp "$RADIO_MAIN_TEMP_FILE")"
		print_temp "radio_backup" "$(get_stored_temp "$RADIO_BACKUP_TEMP_FILE")"
		print_temp "radio_main_crash" "$(get_stored_temp "$RADIO_MAIN_CRASH_TEMP_FILE")"
		print_temp "radio_backup_crash" "$(get_stored_temp "$RADIO_BACKUP_CRASH_TEMP_FILE")"

		exit 0
	elif [ "$2" == "radio_main" ]; then
		echo "$(get_radio_main_temp)"

		exit 0
	elif [ "$#" == "1" ]; then
		print_temp "system" "$(get_system_temp)"
		print_temp "radio_main" "$(get_radio_main_temp)"
		print_temp "radio_backup" "$(get_radio_backup_temp)"

		exit 0
	fi
elif [ "$1" == "init" ]; then
	mkdir -p "$TEMP_DIR"

	get_system_temp > "$SYSTEM_TEMP_FILE"
	get_radio_main_temp > "$RADIO_MAIN_TEMP_FILE"
	get_radio_backup_temp > "$RADIO_BACKUP_TEMP_FILE"
	get_radio_main_crash_temp > "$RADIO_MAIN_CRASH_TEMP_FILE"
	get_radio_backup_crash_temp > "$RADIO_BACKUP_CRASH_TEMP_FILE"

	exit 0
else
    echo "Invalid arguments" >&2
    exit 1
fi

