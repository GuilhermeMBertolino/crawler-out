#!/bin/sh

[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

RESOLV_CONF="/etc/resolv.conf"
HOSTS_CONF="/etc/hosts"
[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
[ -n "$subnet" ] && NETMASK="netmask $subnet"

UDHCPC_CONFDIR="/etc/udhcpc"
UDHCPC_CONF="$UDHCPC_CONFDIR/info.$interface"
UDHCPC_FALLBACK_IP="0.0.0.0"
UDHCPC_FALLBACK_NETMASK="0.0.0.0"

udhcpc_write_config()
{
	# store settings to UDHCPC_CONF
	mkdir -p $UDHCPC_CONFDIR
	cat > $UDHCPC_CONF << END
u_interface="$interface"
u_broadcast="$broadcast"
u_subnet="$subnet"
u_ip="$ip"
u_router="$router"
u_dns="$dns"
u_hostname="$hostname"
u_serverid="$serverid"
u_domain="$domain"
u_leasetime=$lease
u_unifi_addr="$unifi_addr"
u_timestamp="`date +%s`"
u_started=`sed 's/\([0-9]*\).*/\1/;' /proc/uptime`
u_pid=$PPID
END
}

udhcpc_compare_config()
{
	if [ ! -f $UDHCPC_CONF ]; then 
		return 1;
	fi

	. $UDHCPC_CONF

	if [ ".$u_interface" != ".$interface" ]; then return 1; fi
	if [ ".$u_broadcast" != ".$broadcast" ]; then return 1; fi
	if [ ".$u_subnet" != ".$subnet" ]; then return 1; fi
	if [ ".$u_ip" != ".$ip" ]; then return 1; fi
	if [ ".$u_router" != ".$router" ]; then return 1; fi
	if [ ".$u_domain" != ".$domain" ]; then return 1; fi
	if [ ".$u_dns" != ".$dns" ]; then return 1; fi

	return 0;
}

udhcpc_remove_config()
{
	rm -f $UDHCPC_CONF
}

configure_ipaddress()
{
	/sbin/ifconfig $interface $ip $BROADCAST $NETMASK
}

udhcpc_source_system_cfg()
{
	CFG_FILE="/tmp/running.cfg"
	if [ ! -f $CFG_FILE ]; then
		CFG_FILE="/tmp/system.cfg"
	fi
	eval `grep dhcpc\. $CFG_FILE | /bin/sed -e :1 -e 's/\(.*\)\.\(.*\)\(=\)/\1_\2\3/;t1' -e 's/\(.*=\)\(.*\)/\1\"\2\"/g'`
}

udhcpc_search_fallback()
{
	for i in 1 2 3 4; do
		devname=`eval echo '$'"dhcpc_${i}_devname"`
		fallback=`eval echo '$'"dhcpc_${i}_fallback"`
		fallback_netmask=`eval echo '$'"dhcpc_${i}_fallback_netmask"`
		if [ ! -z $devname ] && [ "x$devname" = "x$interface" ]; then
			[ ! -z $fallback ] && UDHCPC_FALLBACK_IP=$fallback
			[ ! -z $fallback_netmask ] && UDHCPC_FALLBACK_NETMASK=$fallback_netmask
			return
		fi
	done
}
case "$1" in
	deconfig)
		if [ -e $UDHCPC_CONF ]; then
			# clear IP address from interface
			/sbin/ip addr flush dev $interface
		fi
		udhcpc_remove_config
		rm -f /var/run/ipready.$interface
		;;

	leasefail)
		udhcpc_remove_config
		udhcpc_source_system_cfg
		udhcpc_search_fallback
		/sbin/ifconfig $interface $UDHCPC_FALLBACK_IP netmask $UDHCPC_FALLBACK_NETMASK
		/usr/etc/syswrapper.sh ip-changed $interface $UDHCPC_FALLBACK_IP ip_only
		;;

	bound)
		configure_ipaddress

		udhcpc_write_config
		/usr/etc/syswrapper.sh ip-changed $interface $ip ip_only
		;;

	renew)
		if ! udhcpc_compare_config; then
			configure_ipaddress

			udhcpc_write_config
			/usr/etc/syswrapper.sh ip-changed $interface $ip ip_only
		fi
		;;
esac

exit 0
