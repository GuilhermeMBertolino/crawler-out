#!/bin/sh

CONFIG=/etc/ppp/3g.conf

export CONFIG
. $CONFIG

. /usr/bin/scriptlib

PIDFILE_START="$PIDFILE.start"
PIDFILE_CONNECT="$PIDFILE.connect"
PIDFILE_PPPD="/var/run/ppp-3g.pid"
PIDFILE_PPPD_BAK="/var/run/bak.ppp-3g.pid"

CNT_TYPE=`rdcsman 0x001e000a u16`
VENDORID=`rdcsman 0x801e1400 u16`
PRODUCTID=`rdcsman 0x801e1500 u16`
O3G_BRIDGE=`rdcsman 0x001e2531 u32`

##########################################
WANTYPE=`rdcsman 0x00010003 u32`
BACKUP=`rdcsman 0x001e000d u32`
writeCSIDvalues () {
	if [ -r $PIDFILE_PPPD ]; then
		cp $PIDFILE_PPPD $PIDFILE_PPPD_BAK
		sl_get_ppp_PID_IFname $PIDFILE_PPPD PPP_PID PPP_IF
		[ $? != 0 ] && exit 1 	
	else
		exit 1
	fi	

	if [ -z $PPP_IF ]; then
		exit 1
    	fi
		
	sl_get_IP_NM_GW_in_ifconfig $PPP_IF IF_IP IF_NM IF_GW
	sl_get_DNS_in_resolv_conf IF_DNS1 IF_DNS2
	sl_get_uptime CNTTIME

    	if [ "$IF_IP" = "10.64.64.64" ] ; then
    	#Got a fake IP, interface is disconnect
        	wrcsman "0x801e0200 00 && \
                 	 0x801e0300 00 && \
                 	 0x801e0400 00 && \
                 	 0x80010002 00 && \
                 	 0x80010003 00 && \
                 	 0x80010004 00"
    	#wait for traffic
        	wrcsman "0x801e0700 0x05 && \
                 	 0x80010007 0x05"
	elif [ "$IF_IP" = "" ]; then
    	#Got no IP, interface is disconnect
        	wrcsman "0x801e0200 00 && \
                 	 0x801e0300 00 && \
                 	 0x801e0400 00 && \
                 	 0x80010002 00 && \
                 	 0x80010003 00 && \
                 	 0x80010004 00"
    	#disconnecting
        	wrcsman "0x801e0700 0x03 && \
                 	 0x80010007 0x03"
	else
		if [ $BACKUP -eq 1 ] && [ $WANTYPE -ne 16 ] && [ $WANTYPE -ne 17 ] ; then
			wrcsman "0x801e0100 $CNTTIME && \
				 0x801e0200 {$IF_IP} && \
				 0x801e0300 {$IF_NM} && \
				 0x801e0400 {$IF_GW} && \
				 0x801e0500 {$IF_DNS1} && \
				 0x801e0600 {$IF_DNS2} && \
				 0x801e0700 0x07 && \
				 0x801e1200 0x02 && \
				 0x80010002 {$IF_IP} && \
				 0x80010003 {$IF_NM} && \
				 0x80010004 {$IF_GW} && \
				 0x80010005 {$IF_DNS1} && \
				 0x80010006 {$IF_DNS2} && \
				 0x8001000B \"$PPP_IF && \
				 0x801E2200 \"$PPP_IF && \
				 0x801e1100 0x00"

			if [ $WANTYPE -eq 0 ] || [ $WANTYPE -eq 32 ] ; then
        			IF_WAN=`rdcsman 0x8000f361 str`
        			wrcsman "0x80010300 \"$IF_WAN"
			else
        			if [ $IFNAME == ppp0 ] ; then
               	 			wrcsman "0x80010300 \"ppp1"
        			else
                			wrcsman "0x80010300 \"ppp0"
        			fi
			fi

		else

    		#Got a real IP address
			wrcsman "0x801e0100 $CNTTIME && \
				 0x801e0200 {$IF_IP} && \
				 0x801e0300 {$IF_NM} && \
				 0x801e0400 {$IF_GW} && \
				 0x801e0500 {$IF_DNS1} && \
                 		 0x801e0600 {$IF_DNS2} && \
				 0x801e0700 0x02 && \
				 0x801e2200 \"$PPP_IF && \
				 0x801e1100 0x00 && \
				 0x80010002 {$IF_IP} && \
				 0x80010003 {$IF_NM} && \
				 0x80010004 {$IF_GW} && \
				 0x80010005 {$IF_DNS1} && \
                 		 0x80010006 {$IF_DNS2} && \
                 		 0x8001000b \"$PPP_IF && \
				 0x80010007 0x02"
		fi

        sl_insert_dns_file /etc/resolv.conf $IF_DNS1 $IF_DNS2  

#		if [ "$AUTOFAILOVER_STATUS" -eq "1" ] ; then
#    		if [ "$FAILOVER_WANTYPE" -eq 2 ]; then 
			
#            wrcsman "0x8043000c $CNTTIME && \
#                     0x80430002 {$IF_IP} && \
#                     0x80430003 {$IF_NM} && \
#                     0x80430004 {$IF_GW} && \
#                     0x80430005 {$IF_DNS1} && \
#                     0x80430006 {$IF_DNS2} && \
#                     0x8043000b \"$PPP_IF && \
#                     0x801e0700 0x02"

#				echo "nameserver $IF_DNS1" > /etc/resolv.conf
#            			echo "nameserver $IF_DNS2" >> /etc/resolv.conf
#			fi
#		fi
	fi
}
##########################################


#clear last ppp auth fail tmp file
rm -rf /var/run/ppp_auth_fail

# Check for /var/run/3g.pid.connect
if [ -r "$PIDFILE_CONNECT" ] ; then
    PID=`cat "$PIDFILE_CONNECT"`
    # Check if still running
    kill -0 $PID > /dev/null 2>&1
    if [ $? = 0 ] ; then
		echo "$0: There already seems to be a 3G PPP connection up (PID $PID)" >& 2
        wrcsman "0x801e0700 2"
		exit 0
    fi
    # Delete bogus PIDFILE
    rm -f "$PIDFILE_CONNECT" "$PIDFILE_START"
fi

echo $$ > $PIDFILE_START

3g-connect "$@"> /dev/null 2>&1 &

CONNECT_PID=$!

if [ -e /var/run/multiwan_enable ]; then
	sleep 15
	writeCSIDvalues
fi

# Check 3g bridge pid
if [ $O3G_BRIDGE -eq 1 ] ; then
	
	PID_3GBRIDGE=`ps |grep 3g_bridge |grep br0 |cut -d"S" -f1 |cut -d"r" -f1`
	if [ -n "$PID_3GBRIDGE" ] ; then
#		logger PID_3GBRIDGE="$PID_3GBRIDGE" connect
#		echo $PID_3GBRIDGE > /var/log/3g-bridge.log
		wrcsman "0x80010007 0x2"
		exit 0
	else
#		logger 1 PID_3GBRIDGE="$PID_3GBRIDGE" disconnect
		killall 3g-bridge
		rm -rf /var/run/3g_bridge.pid
	fi

#	PID_3GBRIDGE=`ps |grep 3g_bridge |grep br0 |cut -d"S" -f1 |cut -d"r" -f1`
#	logger PID_3GBRIDGE="$PID_3GBRIDGE" disconnect
	exit 0
fi
#logger 1 ....3GBRIDGE....="$PID_3GBRIDGE" disconnect

if [ "$CONNECT_TIMEOUT" = "" -o "$CONNECT_TIMEOUT" = 0 ] ; then
    exit 0
fi

# Don't monitor connection if dial-on-demand
if [ $CNT_TYPE -eq 0 ] ; then
	sleep 6 #Important! it must be waited for pppd creating the pppx interface	 and ppp-3g.pid
	
	if [ -r $PIDFILE_PPPD ] ; then
		cp $PIDFILE_PPPD $PIDFILE_PPPD_BAK
		sl_get_ppp_PID_IFname $PIDFILE_PPPD PPP_PID PPP_IF
		[ $? != 0 ]&& exit 1 	
	else
		exit 1
	fi	
		
	sl_get_IP_NM_GW_in_ifconfig $PPP_IF IF_IP IF_NM IF_GW
    if [ "$IF_IP" = "10.64.64.64" ] ; then
    #Got a fake IP, interface is disconnect
        wrcsman "0x801e0200 00 && \
                 0x801e0300 00 && \
                 0x801e0400 00 && \
                 0x80010002 00 && \
                 0x80010003 00 && \
                 0x80010004 00 "
    #wait for traffic
        wrcsman "0x801e0700 0x05 && \
                 0x80010007 0x05"
	elif [ "$IF_IP" = "" ] ; then
    #Got no IP, interface is disconnect
        wrcsman "0x801e0200 00 && \
                 0x801e0300 00 && \
                 0x801e0400 00 && \
                 0x80010002 00 && \
                 0x80010003 00 && \
                 0x80010004 00 "
    #disconnecting
        wrcsman "0x801e0700 0x03 && \
                 0x80010007 0x03"
	else
    #Got a real IP address
		wrcsman "0x801e0200 {$IF_IP} && \
				 0x801e0300 {$IF_NM} && \
				 0x801e0400 {$IF_GW} && \
				 0x801e0700 0x02 && \
				 0x80010002 {$IF_IP} && \
				 0x80010003 {$IF_NM} && \
				 0x80010004 {$IF_GW} && \
				 0x80010007 0x02"
		
	fi
    exit 0
fi

# Monitor connection
TIME=0
CONNECT_POLL=1
PROFILE=`rdcsman 0x001e0030 u16`
if [ $PROFILE -eq 2 ] ; then
	CONNECT_TIMEOUT=65
else
#	CONNECT_TIMEOUT=30
	CONNECT_TIMEOUT=40
fi
while [ true ] ; do

	cp $PIDFILE_PPPD $PIDFILE_PPPD_BAK

    3g-status $CONFIG > /dev/null 2>&1
    # Looks like the interface came up

	if [ $? = 0 ] ; then
		echo "$0: Connected!"
		exit 0
    fi

	if [ -f /var/run/ppp_auth_fail ] ; then
		echo "$0: Authentication Fail!"
		wrcsman "0x80010007 0x06 &&\
				0x801e0700 0x06 &&\
				0x801e1100 0x05"
		exit 0
	fi

    CNT_STAT=`rdcsman 0x801e0700 u16`
    if [ $CNT_STAT -eq 3 -o $CNT_STAT -eq 0 ]; then
        echo "3G Status is Disconnecting !!"
        break;
    fi

    sleep $CONNECT_POLL
    TIME=$(($TIME + $CONNECT_POLL))
    if [ $TIME -gt $CONNECT_TIMEOUT ] ; then
	break
    fi
done

echo "TIMED OUT" >& 2

# Clean up PIDFILE(s)
rm -f "$PIDFILE_START"

if [ $VENDORID -eq 6610 ] && [ $PRODUCTID -eq 49 ]; then
	killall cat
    killall zte_test
    sleep 2
    cat /dev/ttyUSB1 &
    zte_test &
fi
exit 1

