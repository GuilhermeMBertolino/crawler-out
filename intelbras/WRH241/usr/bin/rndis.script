#!/bin/sh

# udhcpc script edited by Tim Riker <Tim@Rikers.org>

[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

PIDFILE_CONNECT="/var/run/udhcpc.rndis.pid.connect"
RESOLV_CONF="/etc/resolv.conf"
[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
[ -n "$subnet" ] && NETMASK="netmask $subnet"

. /usr/bin/scriptlib
WANTYPE=`rdcsman 0x00010003 u16`
BACKUP=`rdcsman 0x001e000d u16`

LOADSHARING_ENABLE=`rdcsman 0x004301c0 u32`

udhcpc_write_csman_start()
{
	sl_get_IP_NM_GW_in_ifconfig $interface IF_IP IF_NM IF_GW		

	if [ $BACKUP -eq 1 ] && [ $WANTYPE -ne 16 ] && [ $WANTYPE -ne 21 ] ; then	#failover section
		echo -e "failover\n" > /tmp/rndis_failover
		wrcsman "0x801e0200 {$IF_IP} && \
				 0x801e0300 {$IF_NM} && \
				 0x801e0400 {$IF_GW} && \
				 0x80010002 {$IF_IP} && \
				 0x80010003 {$IF_NM} && \
				 0x80010004 {$IF_GW}"	

		cnt=0
		for i in $dns ; do		
			[ $cnt = 0 ] && wrcsman "0x801e0500 {$i} && 0x80010005 {$i}"
			[ $cnt = 1 ] && wrcsman "0x801e0600 {$i} && 0x80010006 {$i}"
			cnt=$(($cnt+1))		
		done

		sl_get_uptime CNTTIME
		wrcsman "0x801e0100 $CNTTIME"

		wrcsman "0x801e0700 0x07 && \
				 0x8001000B \"$interface && \
				 0x801E2200 \"$interface && \
				 0x801E1200 0x02"	
		wrcsman "0x801E1100 0x0"	#clean error code
	else
		echo -e "$IF_IP\n" > /var/ifip
		#RES=`cat /var/ifip | /bin/awk -F. '{print $1}'`
		RES=`cat /var/ifip | awk -F. '{print $1}'`
		if [ $RES = "169" ] ; then	#RNDIS wan type
		#if [ $IF_IP = "169.254.91.77" ] ; then
			echo -e "ifip\n" > /tmp/rndis_ifip
			wrcsman "0x801e0200 0x00 && \
					 0x801e0300 0x00 && \
					 0x801e0400 0x00 && \
					 0x801e0500 0x00 && \
					 0x801e0600 0x00 && \
					 0x80010002 0x00 && \
					 0x80010003 0x00 && \
					 0x80010004 0x00 && \
					 0x80010005 0x00 && \
					 0x80010006 0x00"

        	CNT_TYPE=`rdcsman 0x001e000a u16`
        	#if CNT_TYPE is on-demand write "wait for traffic" state to csid
        	if [ $CNT_TYPE -eq 0 ] ; then
            	wrcsman "0x801e0700 0x05 && \
                	     0x80010007 0x05"
        	else
           		wrcsman "0x801e0700 0x00 && \
                	     0x80010007 0x00"
        	fi
		else
			echo -e "connect\n" > /tmp/rndis_connect
			wrcsman "0x801e0200 {$IF_IP} && \
					 0x801e0300 {$IF_NM} && \
					 0x80010002 {$IF_IP} && \
					 0x80010003 {$IF_NM}"

			# if in failover status do not set GW
			FAILOVER_STATUS=`rdcsman 0x801E1200 u16`
			if [ $FAILOVER_STATUS -eq 0 ] ; then
				wrcsman "0x801e0400 {$IF_GW} && \
						 0x80010004 {$IF_GW}"	
			fi
		
			cnt=0
			for i in $dns ; do		
				[ $cnt = 0 ] && wrcsman "0x801e0500 {$i} && 0x80010005 {$i}"
				[ $cnt = 1 ] && wrcsman "0x801e0600 {$i} && 0x80010006 {$i}"
				cnt=$(($cnt+1))		
			done

			sl_get_uptime CNTTIME
			wrcsman "0x801e0100 $CNTTIME"
			wrcsman "0x801e0700 0x02 && \
					 0x8001000B \"$interface && \
					 0x80010007 0x02 "	
			wrcsman "0x801e1100 0x0"    #clean error code
		fi
	fi
}

udhcpc_write_csman_stop()
{
	if [ $LOADSHARING_ENABLE -eq 1 ] ; then
		logger -p 8.7 -t "rndis dhcpc" "Load Sharing Don't do rndis.script update flag !\""
		exit 0 
	fi

echo -e "cleancsid\n" > /tmp/rndis_clean
	wrcsman "0x801e0200 0x00 && \
			 0x801e0300 0x00 && \
			 0x801e0400 0x00 && \
			 0x801e0500 0x00 && \
			 0x801e0600 0x00 && \
			 0x801e0700 0x00 && \
			 0x801E0800 0x00 && \
			 0x801E0900 0x00 && \
			 0x801E1200 0x00 && \
			 0x80010002 0x00 && \
			 0x80010003 0x00 && \
			 0x80010004 0x00 && \
			 0x80010005 0x00 && \
			 0x80010006 0x00 && \
			 0x80010007 0x00" 
	rmcsman "0x801e0100"
	CNT_TYPE=`rdcsman 0x001e000a u16`
#if CNT_TYPE is on-demand write "wait for traffic" state to csid
	if [ $CNT_TYPE -eq 1 ] ; then
		wrcsman "0x801e0700 0x03 && \
				0x80010007 0x03"
	fi
	return 0 ;
}



case "$1" in
	deconfig)
		/sbin/ifconfig $interface 0.0.0.0
		udhcpc_write_csman_stop
		;;

	renew|bound)
		/sbin/ifconfig $interface $ip $BROADCAST $NETMASK
		
		# for PPTP or L2TP and having 'deafult' route , Don't add default route  
		WANTYPE=`rdcsman 0x00010003 u32`
		FAILOVER_STATUS=`rdcsman 0x801E1200 u16`
		if [ $WANTYPE -eq 96 -o $WANTYPE -eq 128 ] ; then			
			CFG=`route`
			for s in $CFG
			do			
				if [ $s = "default" ] ; then
					exit 0
				fi	   
			done			
		fi	
		

		if [ -n "$router" ] ; then
			echo "deleting routers"
			while route del default gw 0.0.0.0 dev $interface ; do
				:
			done

			for i in $router ; do
				route add default gw $i dev $interface
			done
		fi

			sl_insert_dns_file $RESOLV_CONF $dns
			
		if [ $LOADSHARING_ENABLE -eq 1 ] ; then
			logger -p 8.7 -t "rndis dhcpc" "Load Sharing Don't do rndis.script update flag !\""
			echo "Load Sharing Don't do rndis.script update flag" > /var/lsing/rndis_dhcp.log
			exit 0 
		fi

			udhcpc_write_csman_start
		;;
	leasefail)
		
	 	/sbin/ifconfig $interface 0.0.0.0
	 	
	 	if [ -f "$PIDFILE_CONNECT" ] ; then
			CONNECT_PID=`cat $PIDFILE_CONNECT`
			kill $CONNECT_PID > /dev/null 2>&1
			rm -f $PIDFILE_CONNECT > /dev/null 2>&1	
		fi	
	 	wrcsman "0x801e0700 0x04"	
		;;	
	*)
		
	 	/sbin/ifconfig $interface 0.0.0.0
		udhcpc_write_csman_stop
		;;
esac

exit 0
