#!/bin/sh

if [ -e /var/run/3g-power_reset ] ; then
    exit 0
fi

UDHCPC="udhcpc"
UDHCPC_PID_FILE="/var/run/udhcpc-cdc-ncm.pid"
PIDFILE_CONNECT="/var/run/udhcpc-cdc-ncm.pid.connect"
DEMAND_FILE="/var/run/udhcpc-cdc-ncm.demand"
UDHCPC_DEFAULT_SCRIPT="/usr/bin/dhcp.script"
LOG="/tmp/cdc-ncm-action.log"
. /usr/bin/scriptlib
ETH="usbnet0"
timeout=5
_3GERR_CODE=`rdcsman 0x801e1100 u16`
CNTTYPE=`rdcsman 0x001e000a u16`
WANTYPE=`rdcsman 0x00010003 u16`
CNTFORCE=`rdcsman 0x8001000e u8`
MTU=`rdcsman 0x001e000b u32`
LOADSHARING_ENABLE=`rdcsman 0x004301c0 u32`
VENDORID=`rdcsman 0x801e1400 u16`
PRODUCTID=`rdcsman 0x801e1500 u16`

if [ $_3GERR_CODE -ne 0 -o $_3GERR_CODE -eq 6 ] ;then
	send_ATcmd /dev/modem 'AT+CPIN?' > $LOG
	AT_RET=`cat $LOG |grep READY`
    if [ -z "$AT_RET" ] ; then
		exit 0
	fi
fi

cdc_ncm_status()
{
	TIME=0
	TIMEOUT=10
	while [ true ] ; do	
		sl_get_IP_NM_GW_in_ifconfig $ETH IF_IP IF_NM IF_GW
		#echo "$0 : IF_IP=$IF_IP IF_NM=$IF_NM IF_GW=$IF_GW"	
		if [ "${IF_IP}x" != "x" -a "${IF_NM}x" != "x" -a "${IF_GW}x" != "x" ] ; then
			return 0
		else
			sleep 1
			TIME=$((TIME+1))
			if [ $TIME -gt $TIMEOUT ] ; then
				return 1
			fi
		fi
	done
}

cdc_ncm_start2()  
{

	# check running the number of times
	RESET_TIME=`rdcsman 0x801e6004 u8`
	if [ $RESET_TIME = 5 ] ; then
		logger -p 8.7 -t "cdc-ncm-action" "3G power RESET ..."
		3g-power-reset &
		wrcsman "0x801e6004 0"
		exit 0
	elif [ $RESET_TIME -lt 5 ] ; then
		RESET_TIME=$(($RESET_TIME+1))
		logger -p 8.7 -t "cdc-ncm-action" "3G power RESET Time $RESET_TIME"
		wrcsman "0x801e6004 {$RESET_TIME}"
	fi

	time=0

	APN=`rdcsman 0x001e0003 str`
	if [ -n "$APN" ]; then
        send_ATcmd /dev/modem 'AT+cgdcont=1,\"IP\",\"$APN\"' > $LOG
	fi

	wrcsman "0x801e1100 0x00" #clean error code
	if [ $MTU -eq 0 ] ; then
		ifconfig $ETH 0.0.0.0 mtu 1500 up
	else
		ifconfig $ETH 0.0.0.0 mtu $MTU up
	fi

	if [ $CNTFORCE -eq 1 ] ; then
		$UDHCPC -n -i $ETH -p $UDHCPC_PID_FILE -s $UDHCPC_DEFAULT_SCRIPT
		wrcsman "0x8001000e 0x00"
	elif [ $CNTTYPE = 0 -a $WANTYPE = 16 ] ; then #3G on demand
		udhcpc-connect-cdc_ncm &
		$UDHCPC -n -i $ETH -p $UDHCPC_PID_FILE -s $UDHCPC_DEFAULT_SCRIPT
	elif [ $CNTTYPE = 2 -a $WANTYPE = 16 ] ; then #3G manually
		udhcpc-connect-cdc_ncm &
		$UDHCPC -n -i $ETH -p $UDHCPC_PID_FILE -s $UDHCPC_DEFAULT_SCRIPT
	else
		$UDHCPC -n -i $ETH -p $UDHCPC_PID_FILE -s $UDHCPC_DEFAULT_SCRIPT
		if [ $LOADSHARING_ENABLE -eq 1 ] ; then
			logger -p 8.7 -t "cdc-ncm-action" "Load Sharing Don't do cdc-ncm-action update flag !"
			exit 0
		fi
	fi

	# check running the number of times
	# if 3G connect then RESET time set 0
	IP=`rdcsman 0x80010002 ipv4`
	if [  -n "$IP"  ] ; then
		wrcsman "0x801e6004 0"
	else
		exit 0
	fi

    logger -p 8.7 -t "cdc-ncm-action" "Start ..."

	return $?
}

cdc_ncm_start()  
{

    if [ $VENDORID -eq 4817 -a $PRODUCTID -eq 7198 ]; then      # Huawei E586
        cdc_ncm_start2
        return $?
    fi
     
	#set prefer type
	PREFER_MODE=`rdcsman 0x001e0015 u16`
	if [ $PREFER_MODE = 0 ];then
        send_ATcmd /dev/modem 'AT+cfun=1' > $LOG
		sleep 3
	elif [ $PREFER_MODE = 1 -o $PREFER_MODE = 3 ];then
        send_ATcmd /dev/modem 'AT+cfun=5' > $LOG
		sleep 3
	elif [  $PREFER_MODE = 2 -o $PREFER_MODE = 4 ];then
        send_ATcmd /dev/modem 'AT+cfun=6' > $LOG
		sleep 3
	fi
	# check running the number of times
	RESET_TIME=`rdcsman 0x801e6004 u8`
	if [ $RESET_TIME = 5 ] ; then
		logger -p 8.7 -t "cdc-ncm-action" "3G power RESET ..."
		3g-power-reset &
		wrcsman "0x801e6004 0"
		exit 0
	elif [ $RESET_TIME -lt 5 ] ; then
		RESET_TIME=$(($RESET_TIME+1))
		logger -p 8.7 -t "cdc-ncm-action" "3G power RESET Time $RESET_TIME"
		wrcsman "0x801e6004 {$RESET_TIME}"
	fi

	time=0
    AT_RET=""
    while [ -z "$AT_RET" ] ; do
		echo 1 > $LOG
        send_ATcmd /dev/modem 'AT*EIAD=0' > $LOG
        AT_RET=`cat $LOG |grep OK`
        time=$(($time+1))
        [ $time -gt $timeout ] && exit 1
    done
	logger -p 8.7 -t "cdc-ncm-action" "AT*EIAD=0 OK!"


	time=0
    AT_RET=""
	while [ -z "$AT_RET" ] ; do
		echo 2 > $LOG
        send_ATcmd /dev/modem 'AT*EIAC=1' > $LOG
        AT_RET=`cat $LOG |grep OK`
        time=$(($time+1))
        [ $time -gt $timeout ] && exit 1
    done
	logger -p 8.7 -t "cdc-ncm-action" "AT*EIAC=1 OK!"

	time=0
	AT_RET=""
	while [ -z "$AT_RET" ] ; do
		echo 3 > $LOG
		send_ATcmd /dev/modem 'AT+CGDCONT=1,"IP","proxy"' > $LOG
		AT_RET=`cat $LOG |grep OK`
		time=$(($time+1))
		[ $time -gt $timeout ] && exit 1
	done
	logger -p 8.7 -t "cdc-ncm-action" "AT+CGDCONT=1,IP,proxy OK!"


	time=0
    AT_RET=""
	APN=`rdcsman 0x001e0003 str`
	if [ -n "$APN" ]; then
        while [ -z "$AT_RET" ] ; do
			echo 4 > $LOG
    		send_ATcmd /dev/modem AT*EIAPSW=1,1,\"$APN\" > $LOG
            AT_RET=`cat $LOG |grep OK`
			time=$(($time+1))
			[ $time -gt $timeout ] && exit 1
        done
	else
        while [ -z "$AT_RET" ] ; do
			echo 4 > $LOG
    		send_ATcmd /dev/modem 'AT*EIAPSW=1,1,"internet"' > $LOG
            AT_RET=`cat $LOG |grep OK`
			time=$(($time+1))
			[ $time -gt $timeout ] && exit 1
        done
	fi
    logger -p 8.7 -t "cdc-ncm-action" "AT*EIAPSW=1,1,APN OK!"


	time=0
    AT_RET=""
    while [ -z "$AT_RET" ] ; do
		echo 5 > $LOG
        send_ATcmd /dev/modem 'AT*ENAP=1,1' > $LOG
        AT_RET=`cat $LOG |grep OK`
		time=$(($time+1))
		[ $time -gt $timeout ] && exit 1
    done
	logger -p 8.7 -t "cdc-ncm-action" "AT*ENAP=1,1 OK!"


	time=0
    AT_RET=""
    while [ -z "$AT_RET" ] ; do
		echo 6 > $LOG
        send_ATcmd /dev/modem 'AT*ENAP?' > $LOG
		if [ $VENDORID -eq 3035 -a $PRODUCTID -eq 6413 ] ||
		   [ $VENDORID -eq 3035 -a $PRODUCTID -eq 6416 ] ||     # Ericsson F5521gw
		   [ $VENDORID -eq 3035 -a $PRODUCTID -eq 6425 ] ; then # Ericsson H5321gw
        	AT_RET=`cat $LOG |grep '1,""'`
		elif [ $VENDORID -eq 1228 -a $PRODUCTID -eq 8991 ] || 		# AzureWave WW-M18
			 [ $VENDORID -eq 5075 -a $PRODUCTID -eq 13158 ] ; then 	# AzureWave WW-M18
        	AT_RET=`cat $LOG |grep '1, 1'`
		fi
		time=$(($time+1))
		if [ $time -gt $timeout ] ; then
			send_ATcmd /dev/modem 'AT*ENAP=0'
            cdc_ncm_stop
			exit 1
		fi
    done
	logger -p 8.7 -t "cdc-ncm-action" "AT*ENAP? OK!"


	wrcsman "0x801e1100 0x00" #clean error code
	if [ $MTU -eq 0 ] ; then
		ifconfig $ETH 0.0.0.0 mtu 1500 up
	else
		ifconfig $ETH 0.0.0.0 mtu $MTU up
	fi

	if [ $CNTFORCE -eq 1 ] ; then
		$UDHCPC -n -i $ETH -p $UDHCPC_PID_FILE -s $UDHCPC_DEFAULT_SCRIPT
		wrcsman "0x8001000e 0x00"
	elif [ $CNTTYPE = 0 -a $WANTYPE = 16 ] ; then #3G on demand
		udhcpc-connect-cdc_ncm &
		$UDHCPC -n -i $ETH -p $UDHCPC_PID_FILE -s $UDHCPC_DEFAULT_SCRIPT
	elif [ $CNTTYPE = 2 -a $WANTYPE = 16 ] ; then #3G manually
		udhcpc-connect-cdc_ncm &
		$UDHCPC -n -i $ETH -p $UDHCPC_PID_FILE -s $UDHCPC_DEFAULT_SCRIPT
	else
		$UDHCPC -n -i $ETH -p $UDHCPC_PID_FILE -s $UDHCPC_DEFAULT_SCRIPT
		if [ $LOADSHARING_ENABLE -eq 1 ] ; then
			logger -p 8.7 -t "cdc-ncm-action" "Load Sharing Don't do cdc-ncm-action update flag !"
			exit 0
		fi
	fi

	# check running the number of times
	# if 3G connect then RESET time set 0
	IP=`rdcsman 0x80010002 ipv4`
	if [  -n "$IP"  ] ; then
		wrcsman "0x801e6004 0"
	else
		exit 0
	fi

    logger -p 8.7 -t "cdc-ncm-action" "Start ..."

	return $?
}


cdc_ncm_stop()
{
	echo -e "stop" > /var/cdc_ncm_stop
	rm -rf /tmp/cdc_ncm_dhcp_up
	[ -f "$DEMAND_FILE" ] && rm -f $DEMAND_FILE

	if [ -f "$PIDFILE_CONNECT" ] ; then
		CONNECT_PID=`cat $PIDFILE_CONNECT`
		kill -9 $CONNECT_PID > /dev/null 2>&1
		rm -f $PIDFILE_CONNECT > /dev/null 2>&1	
	fi

	if [ -f "$UDHCPC_PID_FILE" -a -r "$UDHCPC_PID_FILE" ] ; then 
		UDHCPC_PID=`cat $UDHCPC_PID_FILE`
		rm -f $UDHCPC_PID_FILE
		kill -9 $UDHCPC_PID > /dev/null 2>&1 || exit 1
	fi

	ifconfig $ETH 0.0.0.0
    ifconfig $ETH down
	if [ $LOADSHARING_ENABLE -eq 1 ] ; then
		logger -p 8.7 -t "cdc-ncm-action" "Load Sharing Don't do cdc_ncm-action update flag !"
		exit 0 
	fi
	wrcsman "0x801e0500 0x00 && \
		   	 0x80010007 0x00"
	wrcsman "0x801e0200 0x00 && \
			 0x801e0300 0x00 && \
			 0x801e0400 0x00 && \
			 0x801e0500 0x00 && \
			 0x801e0600 0x00 && \
			 0x801e0700 0x00 && \
			 0x801E0800 0x00 && \
			 0x801E0900 0x00 && \
			 0x801E1200 0x00 && \
			 0x80010002 0x00 && \
			 0x80010003 0x00 && \
			 0x80010004 0x00 && \
			 0x80010005 0x00 && \
			 0x80010006 0x00 && \
			 0x80010007 0x00"
	rmcsman "0x801e0100"

	wrcsman "0x8001000E 0x01"
    
    if [ $VENDORID -eq 4817 -a $PRODUCTID -eq 7198 ]; then      # Huawei E586
        return 0
    fi

	time=0
    AT_RET=""
    while [ -z "$AT_RET" ] ; do
		echo 0 > $LOG
        send_ATcmd /dev/modem 'ATH' > $LOG
        AT_RET=`cat $LOG |grep OK`
        time=$(($time+1))
        [ $time -gt $timeout ] && break
    done
	logger -p 8.7 -t "cdc-ncm-action" "ATH OK!"

	time=0
    AT_RET=""
    while [ -z "$AT_RET" ] ; do
		echo 0 > $LOG
        send_ATcmd /dev/modem2 'AT*ENAP=0' > $LOG
        AT_RET=`cat $LOG |grep OK`
        time=$(($time+1))
        [ $time -gt $timeout ] && break
    done
	logger -p 8.7 -t "cdc-ncm-action" "AT*ENAP=0 OK!"

    logger -p 8.7 -t "cdc-ncm-action" "Stop ..."
	return 0
}

# main ##########################################################

. /usr/bin/scriptlib

case "$1" in

	start)

		cdc_ncm_start
		if [ $? = 1 ] ; then
			cdc_ncm_stop
			ifconfig $ETH down
			exit 1
		fi

		exit 0
		;;
	
	stop)
		cdc_ncm_stop
		;;
	
	release)
		if [ -f "$UDHCPC_PID_FILE" -a -r "$UDHCPC_PID_FILE" ] ; then 
			UDHCPC_PID=`cat $UDHCPC_PID_FILE`
			kill -9 $UDHCPC_PID	
		fi
		wrcsman "0x801e0500 0x00 && \
				0x80010007 0x00"

		exit 0
		;;
	
	renew)
		if [ $CNTTYPE = 0 ] ; then
			cdc_ncm_stop
			cdc_ncm_start
		elif [ -f "$UDHCPC_PID_FILE" -a -r "$UDHCPC_PID_FILE" ] ; then 
			UDHCPC_PID=`cat $UDHCPC_PID_FILE`
			kill -9 $UDHCPC_PID
			cdc_ncm_status	
		else
			$UDHCPC -n -i $ETH -p $UDHCPC_PID_FILE -s $UDHCPC_DEFAULT_SCRIPT 
		fi
		
		exit 0
		;;
		
	*)
		exit 1
		;;
esac

exit 0

