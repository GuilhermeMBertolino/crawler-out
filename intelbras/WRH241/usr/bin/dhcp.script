#!/bin/sh

# udhcpc script edited by Tim Riker <Tim@Rikers.org>

RUNNING="/var/run/default-script-running"

[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

# Make sure only one default script running.
while :
do
    if [ ! -f "$RUNNING" ] ; then
        break
    fi
    echo "exist $RUNNING"
    sleep 1
done
echo 1 > $RUNNING

. /usr/bin/scriptlib

# Check if exist multiwan index
if [ -n $2 ] ; then
    MULTIWAN=$2
else
    MULTIWAN=
fi

if [ -z $MULTIWAN ] ; then
    PIDFILE_CONNECT="/var/run/udhcpc.pid.connect"
else
    TMP1=$MULTIWAN
    TMP1=$((TMP1+1))
    PIDFILE_CONNECT="/var/run/udhcpc$TMP1.pid.connect"
fi

RESOLV_CONF="/etc/resolv.conf"
WANTYPE=`rdcsman 0x00010003 u32`
DNS1_3G=`rdcsman 0x001e0008 ipv4`
DNS2_3G=`rdcsman 0x001e0009 ipv4`

[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
[ -n "$subnet" ] && NETMASK="netmask $subnet"

FAILOVER_STATUS=`rdcsman 0x80430600 u32` #set_fo
FAILOVER_WANTYPE=`rdcsman 0x0043000b u32` #failover wantype
FAILOVER_ENABLE=`rdcsman 0x00430001 u32` #failover enable

AUTOBAK_MODE=`rdcsman 0x801e4000 u32`
AUTOBAK_ENABLE=`rdcsman 0x001e000d u32`
AUTOBAK_STATUS=`rdcsman 0x801E1200 u32`
CNT_STATUS=`rdcsman 0x801E0700 u32`
LOADSHARING_ENABLE=`rdcsman 0x004301c0 u32`

udhcpc_renew_write_csman_start()
{
    sl_get_IP_NM_GW_in_ifconfig $interface IF_IP IF_NM IF_GW        
    sl_get_DNS_in_resolv_conf IF_DNS1 IF_DNS2
    sl_get_uptime CNTTIME

    echo "WAN_IF $WAN_IF interface $interface IF_IP $IF_IP IF_NM $IF_NM IF_GW $IF_GW IF_DNS1 $IF_DNS1 IF_DNS2 $IF_DNS2 CNTTIME $CNTTIME" >> /var/run/testa
    WAN_IF=`rdcsman 0x8000f231 str`
    CSID_IP=`rdcsman 0x80010002 ipv4`
    CSID_NM=`rdcsman 0x80010003 ipv4`
    CSID_GW=`rdcsman 0x80010004 ipv4`
    if [ $IF_IP = "10.64.64.64" ] ; then
        wrcsman "0x80010002 0x00 && \
                 0x80010003 0x00 && \
                 0x80010004 0x00 && \
                 0x80010005 0x00 && \
                 0x80010006 0x00 && \
                 0x801e0200 0x00 && \
                 0x801e0300 0x00 && \
                 0x801e0400 0x00 && \
                 0x801e0500 0x00 && \
                 0x801e0600 0x00 "

        CNT_TYPE=`rdcsman 0x001e000a u16`
        #if CNT_TYPE is on-demand write "wait for traffic" state to csid
        if [ $CNT_TYPE -eq 0 ] ; then
            wrcsman "0x80010007 0x05 && \
                     0x801e0700 0x05 "
        else
            wrcsman "0x80010007 0x00 && \
                     0x801e0700 0x05 "
        fi
    else
        wrcsman "0x801e0400 {$IF_GW} && \
                 0x801e0200 {$IF_IP} && \
                 0x801e0300 {$IF_NM} && \
                 0x801e0500 {$IF_DNS1} && \
                 0x801e0600 {$IF_DNS2} && \
                 0x801e2200 \"$interface && \
                 0x801e0700 0x02"

        if [ $WANTYPE -eq 16 ] ; then
            wrcsman "0x80010002 {$IF_IP} && \
                     0x80010003 {$IF_NM} && \
                     0x80010004 {$IF_GW} && \
                     0x80010005 {$IF_DNS1} && \
                     0x80010006 {$IF_DNS2} && \
                     0x8001000b \"$interface && \
                     0x80010007 0x02"
        fi
    fi
    
    # 3G autobak
    if [ $AUTOBAK_ENABLE -eq 1 -a $AUTOBAK_MODE -eq 1 ] ; then
        wrcsman "0x801e1200 0x02 && \
                 0x801e0700 0x07 && \
                 0x801e2000 {$IF_IP} && \
                 0x801e2100 {$IF_GW} && \
                 0x801e2200 \"$interface && \
                 0x80010300 \"$interface"

        wrcsman "0x8001000c $CNTTIME && \
                 0x80010002 {$IF_IP} && \
                 0x80010003 {$IF_NM} && \
                 0x80010004 {$IF_GW} && \
                 0x80010005 {$IF_DNS1} && \
                 0x80010006 {$IF_DNS2} && \
                 0x8001000b \"$interface"

    fi

    # Failover mode
    if [ "$FAILOVER_ENABLE" == "1" -a $FAILOVER_STATUS -eq 1 ] ; then
        echo "WAN_IF $WAN_IF interface $interface IF_IP $IF_IP IF_NM $IF_NM IF_GW $IF_GW IF_DNS1 $IF_DNS1 IF_DNS2 $IF_DNS2 CNTTIME $CNTTIME" >> /var/run/go_renewf
        if [ "$FAILOVER_WANTYPE" == "2" ] ; then  #when failover wan type is 3G_dhcp
            wrcsman "0x8001000c $CNTTIME && \
                     0x80010002 {$IF_IP} && \
                     0x80010003 {$IF_NM} && \
                     0x80010004 {$IF_GW} && \
                     0x80010005 {$IF_DNS1} && \
                     0x80010006 {$IF_DNS2} && \
                     0x8001000b \"$interface" 

            wrcsman "0x8043000c $CNTTIME && \
                     0x80430002 {$IF_IP} && \
                     0x80430003 {$IF_NM} && \
                     0x80430004 {$IF_GW} && \
                     0x80430005 {$IF_DNS1} && \
                     0x80430006 {$IF_DNS2} && \
                     0x8043000b \"$interface"
        fi
    fi 

    udhcpc_write_dns
    return 0
}

udhcpc_bound_write_csman_start()
{
    sl_get_IP_NM_GW_in_ifconfig $interface IF_IP IF_NM IF_GW        
    sl_get_DNS_in_resolv_conf IF_DNS1 IF_DNS2
    sl_get_uptime CNTTIME

    echo "$interface IF_IP $IF_IP IF_NM $IF_NM IF_GW $IF_GW IF_DNS1 $IF_DNS1 IF_DNS2 $IF_DNS2 CNTTIME $CNTTIME" > /var/run/testb
    if [ $IF_IP = "10.64.64.64" ] ; then
        wrcsman "0x80010002 0x00 && \
                 0x80010003 0x00 && \
                 0x80010004 0x00 && \
                 0x80010005 0x00 && \
                 0x80010006 0x00 && \
                 0x801e0200 0x00 && \
                 0x801e0300 0x00 && \
                 0x801e0400 0x00 && \
                 0x801e0500 0x00 && \
                 0x801e0600 0x00 "

        CNT_TYPE=`rdcsman 0x001e000a u16`
        #if CNT_TYPE is on-demand write "wait for traffic" state to csid
        if [ $CNT_TYPE -eq 0 ] ; then
            wrcsman "0x80010007 0x05 && \
                     0x801e0700 0x05 "
        else
            wrcsman "0x80010007 0x00 && \
                     0x801e0700 0x05 "
        fi
    else
        wrcsman "0x801e1100 0x00"
        wrcsman "0x801e0700 0x02"
        wrcsman "0x801e0400 {$IF_GW} && \
                 0x801e0200 {$IF_IP} && \
                 0x801e0300 {$IF_NM} && \
                 0x801e0500 {$IF_DNS1} && \
                 0x801e0600 {$IF_DNS2} && \
                 0x801e0100 $CNTTIME && \
                 0x801e2200 \"$interface"

        if [ $WANTYPE -eq 16 ] ; then
            wrcsman "0x80010002 {$IF_IP} && \
                     0x80010003 {$IF_NM} && \
                     0x80010004 {$IF_GW} && \
                     0x80010005 {$IF_DNS1} && \
                     0x80010006 {$IF_DNS2} && \
                     0x8001000b \"$interface && \
                     0x80010007 0x02"
        fi
    fi

    # 3G autobak
    echo "$AUTOBAK_ENABLE $AUTOBAK_MODE" >> /var/run/autobak
    if [ $AUTOBAK_ENABLE -eq 1 -a $AUTOBAK_MODE -eq 1 ] ;then
        wrcsman "0x801e1200 0x02 && \
                 0x801e0700 0x07 && \
                 0x801e2000 {$IF_IP} && \
                 0x801e2100 {$IF_GW} && \
                 0x801e2200 \"$interface && \
                 0x80010300 \"$interface"

        wrcsman "0x8001000c $CNTTIME && \
                 0x80010002 {$IF_IP} && \
                 0x80010003 {$IF_NM} && \
                 0x80010004 {$IF_GW} && \
                 0x80010005 {$IF_DNS1} && \
                 0x80010006 {$IF_DNS2} && \
                 0x8001000b \"$interface"
    fi

    # Failover 
    echo "$FAILOVER_ENABLE $FAILOVER_STATUS" >> /var/run/failover
    if [  $FAILOVER_ENABLE -eq 1 -a $FAILOVER_STATUS -eq 1 ] ; then
        echo "$interface IF_IP $IF_IP IF_NM $IF_NM IF_GW $IF_GW IF_DNS1 $IF_DNS1 IF_DNS2 $IF_DNS2 CNTTIME $CNTTIME" >> /var/run/failover

        if [ $FAILOVER_WANTYPE -eq 2 ] ; then    #when failover wan type is 3G_dhcp
            wrcsman "0x8001000c $CNTTIME && \
                     0x80010002 {$IF_IP} && \
                     0x80010003 {$IF_NM} && \
                     0x80010004 {$IF_GW} && \
                     0x80010005 {$IF_DNS1} && \
                     0x80010006 {$IF_DNS2} && \
                     0x8001000b \"$interface" 
         
            wrcsman "0x8043000c $CNTTIME && \
                     0x80430002 {$IF_IP} && \
                     0x80430003 {$IF_NM} && \
                     0x80430004 {$IF_GW} && \
                     0x80430005 {$IF_DNS1} && \
                     0x80430006 {$IF_DNS2} && \
                     0x8043000b \"$interface"
        fi
    fi 

    udhcpc_write_dns
    return 0
}


udhcpc_write_csman_stop()
{
    if [ "$FAILOVER_ENABLE" == "1" ] ; then
        wrcsman "0x8001000c 0x00 && \
                 0x80010002 0x00 && \
                 0x80010003 0x00 && \
                 0x80010004 0x00 && \
                 0x80010005 0x00 && \
                 0x80010006 0x00"
        if [ "$FAILOVER_WANTYPE" == "2" ] ; then    #when failover wan type is dhcp
            echo "okok" >> /var/run/dhcpstop_ok
            wrcsman "0x8043000c 0x00 && \
                     0x80430002 0x00 && \
                     0x80430003 0x00 && \
                     0x80430004 0x00 && \
                     0x80430005 0x00 && \
                     0x80430006 0x00 && \
                     0x80430007 0x00"
        else
            wrcsman "0x80010007 0x03 "
            wrcsman "0x80035007 0x03 "
        fi
        
    fi

    wrcsman "0x801e0200 0x00 && \
             0x801e0300 0x00 && \
             0x801e0400 0x00 && \
             0x801e0500 0x00 && \
             0x801e0600 0x00 && \
             0x801e0700 0x00"
            
    if [ $AUTOBAK_ENABLE -eq 1 -a $AUTOBAK_STATUS -eq 2 -a $CNT_STATUS -eq 7 ] ;then
        wrcsman "0x801e2000 0x00 && \
                0x801e2100 0x00 && \
                0x80010030 0x00 "
    fi
    return 0
}

udhcpc_write_dns()
{
    if [ $DNS1_3G != "0.0.0.0" -o $DNS2_3G != "0.0.0.0" ] ; then
        sl_insert_dns_file $RESOLV_CONF $DNS1_3G $DNS2_3G

        wrcsman "0x801e0500 {$DNS1_3G} && 0x801e0600 {$DNS2_3G}"
        wrcsman "0x80010005 {$DNS1_3G} && 0x80010006 {$DNS2_3G}"
    else
        sl_insert_dns_file $RESOLV_CONF $dns
 
        cnt=0
        for i in $dns ; do
            [ $cnt = 0 ] && wrcsman "0x801e0500 {$i} && 0x80010005 {$i}"
            [ $cnt = 1 ] && wrcsman "0x801e0600 {$i} && 0x80010006 {$i}"
            cnt=$(($cnt+1))
        done   
    fi  
}

case "$1" in
    deconfig)
        /sbin/ifconfig $interface 0.0.0.0
        udhcpc_write_csman_stop
        ;;

    renew)
        /sbin/ifconfig $interface $ip $BROADCAST $NETMASK
        udhcpc_write_dns

        if [ $LOADSHARING_ENABLE -eq 1 ] ; then
            logger -p 8.7 -t "dhcpc" "Load Sharing Don't do dhcp.script update flag !\""
            echo "Load Sharing Don't do dhcp.script update flag" > /var/lsing/3g_dhcp.log
            rm $RUNNING
            exit 0 
        fi

        udhcpc_renew_write_csman_start
        ;;

    bound)
        /sbin/ifconfig $interface $ip $BROADCAST $NETMASK
        udhcpc_write_dns
        
        # for PPTP or L2TP and having 'deafult' route , Don't add default route
        if [ -n "$router" ] ; then
            echo "deleting routers"
            while route del default gw 0.0.0.0 dev $interface ; do
                :
            done
            for i in $router ; do
                route add default gw $i dev $interface
            done
        fi

        if [ $LOADSHARING_ENABLE -eq 1 ] ; then
            logger -p 8.7 -t "dhcpc" "Load Sharing Don't do dhcp.script update flag !\""
            echo "Load Sharing Don't do dhcp.script update flag" > /var/lsing/3g_dhcp.log
            rm -f $RUNNING
            exit 0 
        fi

        udhcpc_bound_write_csman_start
        ;;

    leasefail)        
        /sbin/ifconfig $interface 0.0.0.0
        if [ -f "$PIDFILE_CONNECT" ] ; then
            CONNECT_PID=`cat $PIDFILE_CONNECT`
            kill $CONNECT_PID > /dev/null 2>&1
            rm -f $PIDFILE_CONNECT > /dev/null 2>&1    
        fi    

        if [ -z $MULTIWAN ] ; then
            wrcsman "0x80035007 0x03"
            wrcsman "0x801e0700 0x03 && \
                     0x80010007 0x03"
        else
            wrcsman "0x8003516$MULTIWAN 0x04"    
        fi
        ;;    
    
    *)
        /sbin/ifconfig $interface 0.0.0.0
        udhcpc_write_csman_stop
        ;;
esac

rm $RUNNING

exit 0
