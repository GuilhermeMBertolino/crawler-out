webpackJsonp([2],[function(module,exports,__webpack_require__){module.exports=__webpack_require__(64)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";__webpack_require__(65);var device=angular.module("device",["angular-es6-promise"]);__webpack_require__(211)("device"),__webpack_require__(2)("device"),device.factory("device",["$http",function($http){__webpack_require__(213).set(__webpack_require__(214));var dosSettings=__webpack_require__(231);return{cpe:__webpack_require__(3),funcs:__webpack_require__(5),wan:__webpack_require__(232),multirange:__webpack_require__(237),wifi:__webpack_require__(238),vlan:__webpack_require__(246),ipsec:__webpack_require__(257),statsRouting:__webpack_require__(261),policyRouting:__webpack_require__(265),shorewall:__webpack_require__(266),"interface":__webpack_require__(236),system:__webpack_require__(267),voip:__webpack_require__(268),systemTime:__webpack_require__(269),systemLog:__webpack_require__(273),statsDHCP:__webpack_require__(276),igmpx:__webpack_require__(280),portSettings:__webpack_require__(281),statsClients:__webpack_require__(284),udpxy:__webpack_require__(287),usbInfo:__webpack_require__(288),ddns:__webpack_require__(289),urlfilter:__webpack_require__(293),macfilter:__webpack_require__(296),ipfilter:__webpack_require__(300),vservers:__webpack_require__(309),filebrowser:__webpack_require__(316),dlna:__webpack_require__(317),samba:__webpack_require__(318),ftp:__webpack_require__(319),users:__webpack_require__(320),misc:__webpack_require__(321),raccess:__webpack_require__(322),routing:__webpack_require__(325),statsSessions:__webpack_require__(327),statsNetwork:__webpack_require__(329),statsMulticast:__webpack_require__(331),statsIPsec:__webpack_require__(333),wifiClientMgm:__webpack_require__(336),firmware:__webpack_require__(338),schedule:__webpack_require__(340),dmz:__webpack_require__(345),wifiMacFilter:__webpack_require__(346),torrent:__webpack_require__(347),cpuram:__webpack_require__(348),statsPorts:__webpack_require__(350),tr69:__webpack_require__(352),dynPortMapping:__webpack_require__(354),dns:__webpack_require__(356),usbmodemBasic:__webpack_require__(357),portAllocation:__webpack_require__(358),wifiWdsDsysinit:__webpack_require__(361),xdsl:__webpack_require__(362),xtm:__webpack_require__(363),printserver:__webpack_require__(364),statsDsl:__webpack_require__(365),usbmodem:__webpack_require__(366),snmp:__webpack_require__(367),dosFirewall:__webpack_require__(368),wifiSupermesh:__webpack_require__(369),yandexDns:__webpack_require__(370),etherwan:__webpack_require__(372),dosSettings:dosSettings.dsysinit,safeDns:__webpack_require__(373),bandwidth:__webpack_require__(374),wifiRoaming:__webpack_require__(375),vpnServer:__webpack_require__(377),bgp:__webpack_require__(378),gre:__webpack_require__(379),ifgroups:__webpack_require__(380),adblock:__webpack_require__(384),wifiShaping:__webpack_require__(386),qos_dsysinit:__webpack_require__(387),eogre:__webpack_require__(388),eoip:__webpack_require__(390),ospf:__webpack_require__(391),loadBalancing:__webpack_require__(392),qosHWDsysinit:__webpack_require__(393),chilli:__webpack_require__(394),odu_control:__webpack_require__(397),l2tpv3:__webpack_require__(399),openVPN:__webpack_require__(400),vrrp:__webpack_require__(401),wanReservationDsysinit:__webpack_require__(403),portMirroring:__webpack_require__(405),pki:__webpack_require__(406),twamp:__webpack_require__(407),ipip:__webpack_require__(409)}}])},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4),funcs=(__webpack_require__(212),__webpack_require__(5));module.exports=function(moduleName){angular.module(moduleName).provider("somovd",function(){var providerObj={somovdEndPoint:null,$get:["$http","$q",function($http,$q){function Somovd(config){function post(opt){if(opt.config=opt.config?_.extend(opt.config,config):config,taskLimit>taskCount){var successCb=function(data,status,headers,config){data.result?data=data.error?data.error:data.result:_.isArray(data)&&(data={rq:_.map(data,function(item){return item.error?item.error:item.result})}),opt.cb&&opt.cb(data),opt.defer.resolve(data)},errorCb=function(data,status,headers,config){opt.defer.reject(data)},finallyCb=function(){for(var _len=arguments.length,params=new Array(_len),_key=0;_len>_key;_key++)params[_key]=arguments[_key];taskCount--,_.each(doneHooks,function(hook){hook&&hook.apply(void 0,params)}),taskQueue.length&&post(taskQueue.shift())};taskCount++,$http.post(providerObj.somovdEndPoint,opt.request,opt.config).success(successCb).error(errorCb)["finally"](finallyCb)}else taskQueue.push(opt)}function prepare(opt){opt.defer=$q.defer(),$q.all(_.map(prepareHooks,function(hook){return hook(_.flatten([opt.request]))})).then(function(){post(opt)})["catch"](function(){opt.defer.reject()});var promise=opt.defer.promise;return publish(opt),promise}function jsonrpc(method,params){return{jsonrpc:"2.0",method:method,params:params,id:_.random(1e3)}}function subscribe(method,params,handler){subscribes.push({method:method,params:params,handler:handler})}function publish(opt){function checkSubscribe(subscribe,request){function hasParam(elem,params){return _.every(params,function(value,key){return elem[key]&&(elem[key]==value||_.isObject(value)&&_.isEqual(elem[key],value))})}var method=subscribe.method,params=subscribe.params;_.isArray(request)||(request=[request]);var positions=[];return _.each(request,function(elem,inx){elem.method==method&&hasParam(elem.params,params)&&positions.push(inx)}),positions}_.each(subscribes,function(elem){function success(result){_.each(requestPositions,function(pos){var output=_.has(result,"rq")?result.rq[pos]:result;output.request=_.isArray(opt.request)?opt.request[pos]:opt.request,elem.handler(null,output)})}function error(error){elem.handler(error)}var requestPositions=checkSubscribe(elem,opt.request);requestPositions.length&&opt.defer.promise.then(success,error)})}var taskQueue=[],taskLimit=1,taskCount=0,prepareHooks=[],doneHooks=[],subscribes=[];return{subscribe:subscribe,publish:publish,getInstance:function(config){return Somovd(config)},prepareHook:function(cb){prepareHooks.push(cb)},doneHook:function(cb){doneHooks.push(cb)},read:function(){var args=new funcs.argSchema(arguments);return args.checkin("number id","opt function cb","opt object options")?prepare({request:jsonrpc("read",{id:args.id,options:args.options}),cb:args.cb}):args.checkin("array pack","opt function cb","opt object options")?prepare({request:_.map(args.pack,function(id){return jsonrpc("read",{id:id,options:args.options})}),cb:args.cb}):void 0},write:function(){var args=new funcs.argSchema(arguments);if(args.checkin("number id","object data","opt number pos","opt bool save","opt function cb","opt object options"))return prepare({request:jsonrpc("write",{id:args.id,pos:args.pos,data:args.data,save:_.isUndefined(args.save)||args.save,options:args.options}),config:args.options?Object.assign({},args.options.config):void 0,cb:args.cb});if(args.checkin("array pack","opt bool save","opt function cb","opt object options")){var req=_.map(args.pack,function(item){return jsonrpc("write",{id:item.id,pos:item.pos,data:item.data,options:args.options})});return(_.isUndefined(args.save)||args.save)&&req.push(jsonrpc("cmd",{id:20})),prepare({request:req,config:args.options?Object.assign({},args.options.config):void 0,cb:args.cb})}},remove:function(){var args=new funcs.argSchema(arguments);if(args.checkin("number id","object data","opt number pos","opt bool save","opt function cb"))return prepare({request:jsonrpc("remove",{id:args.id,pos:args.pos,data:args.data,save:!0}),cb:args.cb});if(args.checkin("array pack","opt bool save","opt function cb")){var req=_.map(args.pack,function(item){return jsonrpc("remove",{id:item.id,pos:item.pos,data:item.data})});return req.push(jsonrpc("cmd",{id:20})),prepare({request:req,cb:args.cb})}},multi:function(){var args=new funcs.argSchema(arguments);if(args.checkin("object pack","opt bool save","opt function cb")){var req=[];return _.each(args.pack.remove,function(item){req.push(jsonrpc("remove",{id:item.id,data:item.data,pos:item.pos}))}),_.each(args.pack.write,function(item){req.push(jsonrpc("write",{id:item.id,data:item.data,pos:item.pos}))}),_.each(args.pack.read,function(id){req.push(jsonrpc("read",{id:id}))}),req.push(jsonrpc("cmd",{id:20})),prepare({request:req,cb:args.cb})}},reboot:function(save,cb){return prepare({request:jsonrpc("cmd",{id:save?8:6}),cb:cb,config:{timeout:5e3}})},save:function(cb){return prepare({request:jsonrpc("cmd",{id:20}),cb:cb})},reset:function(cb){return prepare({request:jsonrpc("cmd",{id:10}),cb:cb,config:{timeout:5e3}})},backup:function(cb){return prepare({request:jsonrpc("cmd",{id:12}),cb:cb})},build_backup:function(cb){return prepare({request:jsonrpc("cmd",{id:44}),cb:cb})},cmd:function(id,cb){return prepare({request:jsonrpc("cmd",{id:id}),cb:cb})}}}return Somovd()}]};return providerObj})}},function(module,exports){module.exports=function(){}},function(module,exports){"use strict";var dms=null;module.exports={set:function(actualModule){return dms=actualModule},get:function(){return dms}}},function(module,exports,__webpack_require__){"use strict";module.exports={wifi:__webpack_require__(215),wifiMacFilter:__webpack_require__(222),dns:__webpack_require__(224),wifiWdsDsysinit:__webpack_require__(228),wifiShaping:__webpack_require__(229)}},function(module,exports,__webpack_require__){"use strict";var funcs=__webpack_require__(5),cpe=__webpack_require__(3),cpex=__webpack_require__(32),_=__webpack_require__(4),converter=__webpack_require__(216);module.exports=function(){function getInitData(){return funcs.deepClone(initNativeConfig)}function pull(cb){__pull([paths.wifi,paths.interfaces],cb)}function pullCommon(cb){var configPaths=[paths.wifi+"RegulatoryDomain.",paths.radio,paths.apProfile,paths.interfaces,paths.bridgeIfaces,paths.stationProfile,paths.regDomain,paths.statistics+"*.Channel",paths.statistics+"*.EndPoint.",paths.smProfile];autoconf.BR2_PACKAGE_ANWEB_WIFI_EASYMESH&&configPaths.push(paths.devMode,paths.easyMesh),__pull(configPaths,cb)}function pullClient(cb){var configPaths=[paths.radio,paths.apProfile,paths.stationProfile,paths.interfaces,paths.bridgeIfaces,paths.devMode,paths.statistics+"*.EndPoint.",paths.statistics+"*.Channel"];__pull(configPaths,cb)}function pullAdv(cb){var configPaths=[paths.radio,paths.apProfile,paths.statistics+"*.OperatingChannelBandwidth"];autoconf.BR2_PACKAGE_ANWEB_WIFI_EASYMESH&&configPaths.push(paths.devMode,paths.easyMesh),__pull(configPaths,cb)}function pullWMM(cb){__pull([paths.radio,paths.apProfile],cb)}function pullWDS(cb){__pull([],cb)}function getChannels(band){var radioInst="5GHz"==band?"2":"1",radio=dms.data?_.find(dms.data.Device.WiFi.Radio,function(r){return r.OperatingFrequencyBand==band}):void 0,radioPath=paths.radio+(radio?radio.Inx:radioInst),freqPath=radioPath+".OperatingFrequencyBand",channelsPath={list:radioPath+".PossibleChannels",statistics:paths.statistics+(radio?radio.Inx:radioInst)+".Workload.",groups:paths.statistics+(radio?radio.Inx:radioInst)+".ChannelGroups.",operatingBandwidth:radioPath+".Advanced.OperatingChannelBandwidth",supportedBandwidth:radioPath+".Advanced.PossibleChannelBandwidth"};return cpe.GetParameterValues([freqPath,channelsPath.list,channelsPath.statistics,channelsPath.groups,channelsPath.operatingBandwidth,channelsPath.supportedBandwidth]).then(function(response){var config=funcs.buildTree(response.result.ParameterList),input=converter.cpeToNative.config(config),output={channels:funcs.fetchBranch(input,paths.radio+radioInst+".PossibleChannels."),channelsWorkload:funcs.fetchBranch(input,paths.radio+radioInst+".Workload.")};return Promise.resolve(output)})}function updateScan(rq){var responseData=[];_.each(rq,function(data){responseData=responseData.concat(funcs.splitTree(data))});var config=funcs.buildTree(responseData),wifi=converter.cpeToNative.config(config);dms.scanData||(dms.scanData={});var data=funcs.fetchBranch(wifi,"Device.WiFi.ScanList.");funcs.setValue("Device.WiFi.ScanList",data,dms.scanData)}function push(cb,forward,onlyRegulatoryDomain,needChekEnable){function applyDiffs(diff){if(autoconf.BR2_PACKAGE_ANWEB_DSYSINIT&&diff.Device.WiFi.Radio){var radio=diff.Device.WiFi.Radio;if(radio[1]&&0==radio[1].AutoChannelEnable&&funcs.setValue("Device.WiFi.Radio.1.Channel.",newCpeConfig.Device.WiFi.Radio[1].Channel,diff),radio[2]&&0==radio[2].AutoChannelEnable&&funcs.setValue("Device.WiFi.Radio.2.Channel.",newCpeConfig.Device.WiFi.Radio[2].Channel,diff),needChekEnable){var setEnabled=function(band,enable){var ap=initCpeConfig.Device.WiFi.Radio[band].AccessPoint,keys=_.keys(ap);_.each(keys,function(key){var path="Device.WiFi.Radio."+band+".AccessPoint."+key+".";funcs.setValue(path,{Enable:enable},diff)})};if(radio[1]&&radio[1].AccessPoint)var enable24=radio[1].AccessPoint[1].Enable;if(radio[2]&&radio[2].AccessPoint)var enable5=radio[2].AccessPoint[1].Enable;_.isUndefined(enable24)||setEnabled("1",enable24),_.isUndefined(enable5)||setEnabled("2",enable5)}}return cpe.ApplyDifference(diff)}function successCb(){cb&&cb()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),Promise.reject(error)}function checkLinks(diff){function getRemoveBridges(bridges){var paths=[];return _.each(bridges,function(elem,key){if("-"==key[0]){var id=key.replace("-","");paths.push("Device.Network.Interface.Bridge."+id+".")}}),Promise.resolve(paths)}function getAllPaths(paths){var queue=_.map(paths,function(path){return cpex.checkLinks(path).then(function(result){var reList=/Device\.Firewall\.IPv4\.Zones\./,links=Object.values(result.removableLinks).filter(function(link){return reList.test(link)});return links=_.map(links,function(link){var position=link.match(/([a-zA-Z]+\d*\.)+\d+/g,"")[0];return position}),links.length&&(paths=links.concat(paths)),Promise.resolve()})});return Promise.all(queue).then(function(e){return Promise.resolve(paths)})}function makeLinks(paths){var queue=_.map(paths,function(path){return cpex.checkLinks(path).then(function(result){if(!result.removableLinks)return Promise.resolve(diffs);var tree={};_.map(result.removableLinks,function(link){var num=Number(link.match(/\.\d+\./g,"")[0].replace(/\./g,"")),position=link.match(/([a-zA-Z]+\d*\.)+\d+/g,"")[0];position=position.replace(/\d+$/g,"-"+num),funcs.setValue(position,{},tree)}),diffs=diffs.concat(tree)})});return Promise.all(queue).then(function(e){return Promise.resolve(diffs)})}function addDiffs(){return diffs.push(diff),Promise.resolve(diffs)}var diffs=[];if(!diff.Device.Network||!diff.Device.Network.Interface.Bridge)return diff;var bridges=diff.Device.Network.Interface.Bridge,delBridges=_.filter(bridges,function(e,key){return~key.indexOf("-")});return delBridges.length?Promise.resolve(bridges).then(getRemoveBridges).then(getAllPaths).then(makeLinks).then(addDiffs):diff}function reconnect(changes,nativeData){function disconnect(path){var diff={};return funcs.setValue(path+".Enable",!1,diff),applyDiffs(diff).then(function(){return Promise.resolve(path)})}function connect(path){var diff={};return funcs.setValue(path+".Enable",!0,diff),applyDiffs(diff)}function getIndex(data,index){return data.Device.WiFi.Radio[index].Inx}var split=funcs.splitTree(changes),action=_.find(split,function(elem){return elem.Name.indexOf("Action")&&"reconnect"==elem.Value});if(!action)return Promise.resolve().then(successCb);var paths=action.Name.match(/([a-zA-Z]+\d*\.)+\d+/g,""),index=_.last(paths[0]),path="Device.WiFi.Radio."+getIndex(nativeData,index)+"."+paths[1];return Promise.resolve(path).then(disconnect).then(connect).then(successCb)["catch"](errorCb)}function changeRegDomain(){var changes=funcs.getChanges(initNativeConfig,dms.data),regExp=/Device.WiFi.Radio.\d.RegulatoryDomain/,domain=null;if(_.each(_.keys(changes),function(key){regExp.test(key)&&(domain=changes[key])}),!domain)return Promise.resolve();var regDomain={};funcs.setValue("Device.WiFi.RegulatoryDomain",domain.Value,regDomain);var changes=funcs.splitTree(regDomain);return cpe.SetParameterValues(changes)}function isDeletingAPs(){return Object.values(dms.data.Device.WiFi.Radio).some(function(radio){return Object.keys(radio.AccessPoint).some(function(apKey){return apKey.includes("-")})})}function fetchAp(tree){return tree.Device.WiFi.Radio[editedAP.radioId].AccessPoint[editedAP.apId]}if(onlyRegulatoryDomain)return changeRegDomain().then(successCb)["catch"](errorCb);var changes=status();if(!forward&&(!changes||_.isEmpty(changes)))return Promise.resolve().then(successCb);if(autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MALAYSIA_35692&&(dms.data.HasPostfix=!0,initNativeConfig.HasPostfix=!0),Object.keys(editedAP).length>0&&!isDeletingAPs()){var currentApInit=fetchAp(initNativeConfig),currentAp=fetchAp(dms.data);currentAp._isNew||(currentApInit._isCurrentlyEdited=!0,currentAp._isCurrentlyEdited=!0)}var initCpeConfig=converter.nativeToCpe.config(initNativeConfig),newCpeConfig=converter.nativeToCpe.config(dms.data),diffCpeConfig=funcs.newConfig.makeDiff(initCpeConfig,newCpeConfig,__cpeAttrs);return _.isEmpty(diffCpeConfig)?reconnect(changes,initNativeConfig):Promise.resolve(diffCpeConfig).then(checkLinks).then(applyDiffs).then(successCb)["catch"](errorCb)}function status(){return funcs.buildTree(funcs.configToResponse(funcs.getChanges(initNativeConfig,dms.data)))}function __pull(input,cb){function initPull(response){var config=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList);return autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MALAYSIA_35692&&(config.HasPostfix=!0),dms.data=converter.cpeToNative.config(config,attrs),dms.attrs=converter.cpeToNative.attrs(attrs),dms.data.Device.WiFi.apProfilesList=getApProfilesList(config),initNativeConfig=funcs.deepClone(dms.data),initCpeConfig=funcs.deepClone(config),__cpeAttrs=funcs.deepClone(attrs),cb&&cb(),Promise.resolve()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),Promise.reject(error)}return Promise.all([cpe.GetParameterValues(input,void 0,!0),cpe.GetParameterAttributes(input,void 0,!0)]).then(initPull,errorCb)}function getApProfilesList(nativeConfig){function removeHiddenAp(profile){var prohibitedSsidPart=["not used","EasyMeshBH-"];return!prohibitedSsidPart.some(function(part){return profile.SSID.startsWith(part)})}function getOptionsForSelect(profile){return{name:"".concat(profile.__id," - ").concat(profile.SSID),value:"".concat(paths.apProfile).concat(profile.__id,".")}}function fetch(path){return funcs.newConfig.normalize(funcs.fetchBranch(nativeConfig,path))}var apProfile=funcs.newConfig.instanceObjectToArray(fetch(paths.apProfile)),list=apProfile.filter(removeHiddenAp).map(getOptionsForSelect);return list}function setEditedAP(radioId,apId){function getRadioId(){if(isRadioIndexReal())return radioId;switch(radioId){case"1":return"2";case"2":default:return"1"}}function isRadioIndexReal(){return"1"==initNativeConfig.Device.WiFi.Radio[1].Inx}editedAP.radioId=getRadioId(),editedAP.apId=apId}var paths={wifi:"Device.WiFi.",radio:"Device.WiFi.Radio.",apProfile:"Device.WiFi.APProfile.",stationProfile:"Device.WiFi.StationProfile.",smProfile:"Device.WiFi.SuperMeshProfile.",interfaces:"Device.Network.Interface.WiFi.",statistics:"Device.Statistics.WiFi.Radio.",bridgeIfaces:"Device.Network.Interface.Bridge.",devMode:"Device.DeviceInfo.DeviceMode",regDomain:"View.RegulatoryDomains.",easyMesh:"Device.Services.EasyMesh."},initNativeConfig=null,initCpeConfig=null,__cpeAttrs=null,editedAP={},dms={getInitData:getInitData,attrs:null,data:null,scanData:null,pull:pull,pullCommon:pullCommon,pullClient:pullClient,pullAdv:pullAdv,pullWMM:pullWMM,pullWDS:pullWDS,getChannels:getChannels,updateScan:updateScan,push:push,status:status,setEditedAP:setEditedAP};return dms}()},function(module,exports,__webpack_require__){"use strict";module.exports={cpeToNative:__webpack_require__(217),nativeToCpe:__webpack_require__(220)}},function(module,exports,__webpack_require__){"use strict";var config=__webpack_require__(218),attrs=__webpack_require__(219);module.exports={config:config,attrs:attrs}},function(module,exports,__webpack_require__){"use strict";function getSSID(ssid,config){return config.HasPostfix&&ssid?ssid.replace(/\@unifi$/,""):ssid}function getModeAvailable(config,standats,ap){function getStandardName(standart){switch(standart){case"a":return"802.11 A";case"b":return"802.11 B";case"g":return"802.11 G";case"n":return"802.11 N";case"ac":return"802.11 AC";case"bg":return"802.11 B/G mixed";case"gn":return"802.11 G/N mixed";case"bgn":return"802.11 B/G/N mixed";case"bgnac":return"802.11 B/G/N mixed + 256QAM";case"an":return"802.11 A/N mixed";case"acn":return"802.11 AC/N mixed";case"acan":return"802.11 AC/A/N mixed";case"anac":return"802.11 A/N/AC mixed";case"nac":return"802.11 N/AC mixed";case"bgnax":return"802.11 B/G/N/AX mixed";case"anacax":return"802.11 A/N/AC/AX mixed"}}function getAuthAvail(standart,supportModes){var modes=supportModes;return isGBStandard(standart)||"a"==standart||(modes=_.without(modes,"WEP"),modes=_.without(modes,"SHARED")),_.map(modes,function(mode){return{Id:"SHARED"==mode?"WEP":mode,EncrAvailable:getEncrAvailable(standart,mode),PMFAvailable:"WPA2"==mode||"WPA2PSK"==mode||"WPA3SAE"==mode||"WPA2PSKWPA3SAE"==mode?["NoMgmtFrameProtection","MgmtFrameProtectionRequired","MgmtFrameProtectionOptional"]:void 0}})}function getEncrAvailable(standart,mode){switch(mode){case"OPEN":return isGBStandard(standart)||"a"==standart?["WEP","NONE"]:["NONE"];case"SHARED":case"WEP":return["WEP"];case"WPA":return isGBStandard(standart)||"a"==standart?["TKIP"]:["AES"];case"WPA2":return["AES"];case"WPAPSK":case"WPA1WPA2":case"WPA2PSK":case"WPAPSKWPA2PSK":return isGBStandard(standart)||"a"==standart?["TKIP","AES","TKIP+AES"]:["AES"];case"WPA3SAE":case"WPA2PSKWPA3SAE":return["AES"]}}function isGBStandard(standards){return~"bg".indexOf(standards)}var stands=standats.split(","),profile=getAPProfile(config,ap.Profile);if(!_.isEmpty(profile)){var supportModes=profile.Security.ModesSupported.split(",");return _.map(stands,function(standart){return{Name:getStandardName(standart),AuthAvail:getAuthAvail(standart,supportModes)}})}}function getRadio(radio,band){return radio=funcs.newConfig.normalize(radio),_.each(radio,function(elem,key){elem.Inx=key}),_.find(radio,function(r){return r.OperatingFrequencyBand&&r.OperatingFrequencyBand==band})}function getSupportedStandards(config,input){var supportedStandads=input.SupportedStandards.replace(/\//g,"").split(","),band=input.OperatingFrequencyBand,ep=_.values(input.EndPoint),epProfile=ep[0]?funcs.fetchBranch(config,ep[0].Profile):void 0;if(!ep[0]||!ep[0].Enable||_.isEmpty(ep[0].Profile)||!epProfile)return supportedStandads.join(",");var epEncrType=epProfile.Security.EncryptionType;switch(epEncrType){case"WEP":case"TKIP":supportedStandads=_.filter(supportedStandads,function(e){return"2.4"==band?-1==e.indexOf("n"):-1==e.indexOf("ac")&&-1==e.indexOf("n")})}return supportedStandads.join(",")}function getWpsCheck(ap,apProfile,radio){if(!radio.Enable)return!1;if(!ap.Enable)return!1;if(!apProfile.SSIDAdvertisementEnabled)return!1;var sec=apProfile.Security,wepKey=sec.WEPKeySelected?sec.WEPKey[sec.WEPKeySelected.toString()].Str:void 0,mode=getModeEnabled(sec.ModeEnabled,wepKey),encrType=sec.EncryptionType;switch(mode){case"None":if("WEP"==encrType)return!1;break;case"WPA2-Personal":case"WPA-WPA2-Personal":if(autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_42512&&("AES"==encrType||"TKIP"==encrType||"TKIPAES"==encrType))return!0;if("AES"!=encrType)return!1;break;default:return!1}return!0}function formScanList(lists){function getScanBand(radio){var band;if(radio.SiteSurvey)for(var i in radio.SiteSurvey)if(radio.SiteSurvey[i].OperatingFrequencyBand){band=radio.SiteSurvey[i].OperatingFrequencyBand;break}return band}var radioLists=funcs.newConfig.normalize(lists),scanList={list:{},max_instance:0,push:function(item){return scanList.list[++scanList.max_instance]=item}};for(var key in radioLists){var radio=radioLists[key],band=getScanBand(radio),siteSurvey=funcs.newConfig.normalize(radio.SiteSurvey);for(var inx in siteSurvey)siteSurvey[inx].SSID&&scanList.push(components.scanListItem.build({$scanItem:siteSurvey[inx],$band:band}))}return scanList.list}function getWorkload(workload,groups,supportedWidth,operatedWidth,band){function getBandwidth(channel,groups,supportedWidth,operatedWidth){if(!groups.length)return"Auto"!=operatedWidth?operatedWidth:getCurrentWidth(supportedWidth);for(var width,i=0;i<groups.length;++i){var group=groups[i].Channels,channelGroup=group.split(",");if(_.contains(channelGroup,channel.toString())){width=groups[i].Bandwidth;break}}return width?width:"Auto"!=operatedWidth?operatedWidth:getCurrentWidth(supportedWidth)}function transformGroups(groups){return _.size(groups)?_.map(groups,function(elem){elem=funcs.newConfig.normalize(elem);var channels=_.map(funcs.newConfig.normalize(elem.Channels),function(channel){return channel.Channel});return{Channels:channels.join(","),Bandwidth:elem.Bandwidth}}):[]}function getNeighChannel(channel,groups,band,width){function get24Neigh(channel){var min,max;5>channel?(min=channel,max=channel+4):(min=channel-4,max=channel);for(var result=[],i=min;max>=i;++i)result.push(i.toString());return result.join(",")}if("2.4GHz"==band&&"40MHz"==width)return get24Neigh(channel);if(!groups.length)return channel.toString();for(var neigh,i=0;i<groups.length;++i){var group=groups[i].Channels,channelGroup=group.split(",");if(_.contains(channelGroup,channel.toString())){neigh=group;break}}return neigh?neigh:channel.toString()}function getSpeed(width,supportedWidth,operatedWidth){var currentWidth="Auto"!=operatedWidth?operatedWidth:getCurrentWidth(supportedWidth);return width==currentWidth?"maximum":"20MHz"==width?"40MHz"==currentWidth?"medium":"minimum":"medium"}function getCurrentWidth(supportedWidth){var width=supportedWidth.split(","),current="80+80MHz"!=width[width.length-1]?width[width.length-1]:width[width.length-2];return current}workload=_.values(funcs.newConfig.normalize(workload)),groups=funcs.newConfig.normalize(groups),groups=transformGroups(groups);var result={};if(workload.length){var max=900;_.each(workload,function(elem){var width=getBandwidth(elem.Channel,groups,supportedWidth,operatedWidth);result[elem.Channel]={workload:elem.Workload,width:width,neigh_channel:getNeighChannel(elem.Channel,groups,band,width),speed:getSpeed(width,supportedWidth,operatedWidth),recomended:elem.Recommended},elem.Workload>max&&(max=elem.Workload)}),0!=max&&_.map(result,function(elem,key){result[key].workload=parseInt(100*elem.workload/max)})}return result}function getOperationStandart(standart){var modes={a:"802.11 A",b:"802.11 B",g:"802.11 G",n:"802.11 N",ac:"802.11 AC",bg:"802.11 B/G mixed",gn:"802.11 G/N mixed",bgn:"802.11 B/G/N mixed",bgnac:"802.11 B/G/N mixed + 256QAM",an:"802.11 A/N mixed",acn:"802.11 AC/N mixed",acan:"802.11 AC/A/N mixed",anac:"802.11 A/N/AC mixed",nac:"802.11 N/AC mixed"};return modes[standart.replace(/\//g,"")]}function getExtChannel(extChannel){switch(extChannel){case"None":return"none";case"BelowControlChannel":return"below";case"AboveControlChannel":return"above";default:return"unknown"}}function getScanEncryptionType(encType){return encType?"TKIPAES"==encType?"TKIP+AES":encType:void 0}function getSupportedBandwidth(bandEnum){if(bandEnum){var bandEnum=bandEnum.split(",");bandEnum=_.without(bandEnum,"80+80MHz");var result=_.map(bandEnum,function(elem){if(autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_51438)return elem;switch(elem){case"20MHz":return"20MHz";case"40MHz":return"20/40MHz";case"80MHz":return"20/40/80MHz";case"160MHz":return"20/40/80/160MHz"}});return result.push("Auto"),result.join(",")}}function getProfileId(profile){var profileId=profile?profile.match(/\.\d+\.$/g,""):void 0;return profileId?Number(profileId[0].replace(/\./g,"")):""}function getOperationChannelBandwidth(bandwidth,extChannel,coexistense){if(autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_51438)return bandwidth;switch(bandwidth){case"20MHz":return"20MHz";case"40MHz":return"20/40MHz";case"80MHz":return"20/40/80MHz";case"160MHz":return"20/40/80/160MHz";case"Auto":return"Auto";default:return"20MHz"}}function getAPs(aps){var result=[],aps=funcs.newConfig.normalize(aps);return _.each(aps,function(ap,key){ap.__id=key,result.push(ap)}),result}function getAPProfile(config,APlink){var profile=funcs.fetchBranch(config,APlink);return profile?profile:{}}function getEps(eps){var output=funcs.newConfig.normalize(eps);return _.map(output,function(ep,inst){return ep.__id=inst,ep})}function getDefaultEPSecurity(attrs){if(attrs){var template=attrs["#template"].Security;return{EncryptionType:"",KeyPassphrase:"",ModeEnabled:"NONE",ModesSupported:template.ModesSupported["default"],RADIUS:{Password:template.RADIUS.Password["default"],Username:template.RADIUS.Username["default"]},WEPKey:{1:{Str:template.WEPKey["#template"].Str["default"],Type:template.WEPKey["#template"].Type["default"]},2:{Str:template.WEPKey["#template"].Str["default"],Type:template.WEPKey["#template"].Type["default"]},3:{Str:template.WEPKey["#template"].Str["default"],Type:template.WEPKey["#template"].Type["default"]},4:{Str:template.WEPKey["#template"].Str["default"],Type:template.WEPKey["#template"].Type["default"]}},WEPKeySelected:""}}}function getDefaultEP(attrs){if(attrs){var template=attrs["#template"];return{Enable:!1,SSID:template.SSID["default"],BSSID:template.BSSID["default"],Connect:!1,FlagNew:!0,Security:getDefaultEPSecurity(attrs)}}}function getModesSupported(modesSupported){function hasModes(allModes,modes){return _.isArray(modes)||(modes=[modes]),_.some(modes,function(mode){return _.contains(allModes,mode)})}var result=[],arrSupported=modesSupported.split(",");return hasModes(arrSupported,"OPEN")&&result.push("None"),hasModes(arrSupported,["SHARED","WEP"])&&result.push("WEP"),hasModes(arrSupported,"WPAPSK")&&result.push("WPA-Personal"),hasModes(arrSupported,"WPA2PSK")&&result.push("WPA2-Personal"),hasModes(arrSupported,"WPAPSKWPA2PSK")&&result.push("WPA-WPA2-Personal"),hasModes(arrSupported,"WPA")&&result.push("WPA-Enterprise"),hasModes(arrSupported,"WPA2")&&result.push("WPA2-Enterprise"),hasModes(arrSupported,"WPA1WPA2")&&result.push("WPA-WPA2-Enterprise"),hasModes(arrSupported,"WPA3SAE")&&result.push("WPA3"),hasModes(arrSupported,"WPA2PSKWPA3SAE")&&result.push("WPA2-WPA3"),result.join(",")}function getModeEnabled(mode,WEPKey){if(mode)switch(mode){case"NONE":case"OPEN":return"None";case"WPAPSK":return"WPA-Personal";case"WPA2PSK":return"WPA2-Personal";case"WPAPSKWPA2PSK":return"WPA-WPA2-Personal";case"WPA":return"WPA-Enterprise";case"WPA2":return"WPA2-Enterprise";case"WPA1WPA2":return"WPA-WPA2-Enterprise";case"SHARED":case"WEP":return"WEP";case"WPA3SAE":return"WPA3";case"WPA2PSKWPA3SAE":return"WPA2-WPA3";default:return mode}}function getPossibleChannels(channels){function convertChannelsRange(value){var start=value.split("-")[0],end=value.split("-")[1];return _.range(parseInt(start),parseInt(end)+1,1)}var result=[];if(!channels)return result;var arrChannels=channels.split(";");return _.each(arrChannels,function(value){/-/.test(value)?result=result.concat(convertChannelsRange(value)):parseInt(value)&&result.push(parseInt(value))}),result}function getBGProtection(pr){switch(pr){case"Auto":return"Auto";case"Enable":return"Always On";case"Disable":return"Always Off"}}function getHTGI(htgi){switch(htgi){case 0:return"Auto";case 400:return"Enable";case 800:return"Disable"}}function getTransmitPowerSupported(values){var values=_.without(values,-1);return _.map(values,function(value){return value.toString()}).reverse().join(",")}function getAPMax(limits,band){if("2.4GHz"==band&&autoconf.BR2_PACKAGE_ANWEB_WIFI_AP_LIMIT)return autoconf.BR2_PACKAGE_ANWEB_WIFI_AP_LIMIT;
if("5GHz"==band&&autoconf.BR2_PACKAGE_ANWEB_WIFI_5GHZ_AP_LIMIT)return autoconf.BR2_PACKAGE_ANWEB_WIFI_5GHZ_AP_LIMIT;var apMax=Number(limits.match(/ap,?\w*=\d+/g,"")[0].replace(/ap,?\w*=/g,""));return apMax}function prepareInterfaces(ifaces){var output=_.clone(ifaces);return output}function getBSSID(config,ap){var iface=funcs.fetchBranch(config,ap.Interface);return iface?iface.MACAddress:void 0}function getSMClientInfo(radio,config){var smPoints=funcs.newConfig.normalize(radio.SuperMeshPoint),endPoints=funcs.newConfig.normalize(radio.EndPoint);if(smPoints&&0!==Object.keys(smPoints).length){var smPoint=Object.values(endPoints)[0];if(""===smPoint.Profile)return!1;var smProfile=funcs.fetchBranch(config,smPoint.Profile);if(smProfile&&!smProfile.PreferMaster)return!0}if(endPoints&&0!==Object.keys(endPoints).length){var clientPoint=Object.values(endPoints)[0];if(""===clientPoint.Profile)return!1;var clientProfile=funcs.fetchBranch(config,clientPoint.Profile);if(clientProfile&&clientPoint.Enable)return!0}return!1}function getMultiWPS(apCount,input){var multiwps=input.Advanced?input.Advanced.WPSPerMBSSIDSupported:void 0;return!(!_.isUndefined(multiwps)&&!multiwps)&&apCount>1}function getProtectedFrame(param){switch(param){case"Disabled":return"NoMgmtFrameProtection";case"Required":return"MgmtFrameProtectionRequired";case"Optional":return"MgmtFrameProtectionOptional";default:return}}function getEasyMeshMode(config){var devmode=funcs.fetchBranch(config,"Device.DeviceInfo.DeviceMode"),easymesh=funcs.fetchBranch(config,"Device.Services.EasyMesh.");return devmode&&easymesh?easymesh.Enable?"AccessPoint"==devmode?"Agent":"Controller":"Off":void 0}function getEasyMeshEnable(config){var easymesh=funcs.fetchBranch(config,"Device.Services.EasyMesh.");return easymesh?easymesh.Enable:void 0}function getEasyMeshBackhaul(config){var easymesh=funcs.fetchBranch(config,"Device.Services.EasyMesh.");return easymesh?easymesh.Backhaul:void 0}function getAPMeshType(radio,ap,config){var type,easymesh=funcs.fetchBranch(config,"Device.Services.EasyMesh."),phyIfname=funcs.fetchBranch(radio,"Phy.Ifname"),networkIfname=funcs.fetchBranch(config,"".concat(ap.Interface,".Ifname"));return easymesh&&networkIfname&&phyIfname&&easymesh.Enable&&(32==ap.MultiAPBSSType||phyIfname==networkIfname?type="Basic":64!=ap.MultiAPBSSType&&128!=ap.MultiAPBSSType||(type="Beckhol")),type}var _=__webpack_require__(4),T=__webpack_require__(35).T,funcs=__webpack_require__(5);module.exports=function(config,attrs){var pattern=T({"->":["$config","Device"],$config:":external",$attrs:":external",Device:{"->":!0,WiFi:{"->":["$radio","CountriesList","Radio","RadioNumberOfEntries","Client","ClientNumberOfEntries"],$radio:["$root",function(r){return r.$config.Device.WiFi?r.$config.Device.WiFi.Radio:void 0}],$statistics:["$root",function(r){return funcs.fetchBranch(r.$config,"Device.Statistics.WiFi.Radio.")}],$epAttrs:["$root",function(r){return r.$attrs?r.$attrs.Device.WiFi.StationProfile:void 0}],$radioAttrs:["$root",function(r){return r.$attrs?r.$attrs.Device.WiFi.Radio:void 0}],CountriesList:["$root*",function(r){return components.countries.build({$config:r.$config})}],ScanList:["$root",function(r){return r.$config.Device.Statistics?formScanList(r.$config.Device.Statistics.WiFi.Radio):void 0}],RadioNumberOfEntries:["$radio*",function(r){return _.isUndefined(r)?void 0:r.max_instance}],Radio:{"->":!0,1:["$parent","$root",function(p,r){return components.radio.build({$config:r.$config,$radio:p.$radio,$radioAttrs:p.$radioAttrs,$statistics:p.$statistics,$epAttrs:p.$epAttrs,$band:"2.4GHz"})}],2:["$parent","$root",function(p,r){return components.radio.build({$config:r.$config,$radio:p.$radio,$radioAttrs:p.$radioAttrs,$statistics:p.$statistics,$epAttrs:p.$epAttrs,$band:"5GHz"})}]}},Network:{Interface:{"->":["$interfaces","WiFi"],$interfaces:["$root",function(r){return r.$config.Device.Network?r.$config.Device.Network.Interface:void 0}],Bridge:["$interfaces*",function(ifaces){return funcs.newConfig.normalize(ifaces.Bridge)}],WiFi:["$interfaces*",function(ifaces){return prepareInterfaces(ifaces.WiFi)}]}},DevMode:["$parent",function(p){return p.$config.Device.DeviceInfo?p.$config.Device.DeviceInfo.DeviceMode:void 0}],EasyMeshMode:["$parent",function(p){return getEasyMeshMode(p.$config)}],EasyMeshEnable:["$parent",function(p){return getEasyMeshEnable(p.$config)}],EasyMeshBackhaul:["$parent",function(p){return getEasyMeshBackhaul(p.$config)}]}});return pattern.build({$config:config,$attrs:attrs})};var components={};components.radio=T({"->":["?","$config","$inputStatistics","$advanced","$ap","$ep","AccessPoint","EndPoint","WMM"],$config:":external",$radio:":external",$radioAttrs:":external",$band:":external",$statistics:":external",$epAttrs:":external",$input:["$radio*","$band",function(r,b){return getRadio(r,b)}],$inputStatistics:["$statistics*","$input*",function(s,i){return s?s[i.Inx]:void 0}],$advanced:["$input",function(i){return i.Advanced}],$advancedAttrs:["$radioAttrs*",function(a){return a["#template"].Advanced}],$ap:["$input",function(i){return i.AccessPoint}],$ep:["$input",function(i){return i.EndPoint}],"?":["$input",function(i){return!!i}],Inx:["$input",function(i){return i.Inx}],OperatingFrequencyBand:["$input",function(i){return i.OperatingFrequencyBand}],Enable:["$input",function(i){return i.Enable}],RegulatoryDomain:["$config",function(c){return c.Device.WiFi.RegulatoryDomain}],SupportedStandards:["$config","$input",function(c,i){return i.SupportedStandards?getSupportedStandards(c,i):void 0}],OperatingStandards:["$input",function(i){return i.OperatingStandards?i.OperatingStandards.replace(/\//g,""):void 0}],ShortListSupportedStandards:["$input","SupportedStandards",function(i,ss){return i.SupportedStandards?ss!=i.SupportedStandards.replace(/\//g,""):void 0}],ModeAvailable:["SupportedStandards*","$ap*","$config*",function(st,ap,c){return getModeAvailable(c,st,ap[1])}],CheckStandard:!0,PossibleChannels:["$input",function(i){return getPossibleChannels(i.PossibleChannels)}],AutoChannelSupported:["$input",function(i){return i.AutoChannelSupported}],AutoChannelEnable:["$input",function(i){return i.AutoChannelEnable}],HighChannelEnable:["$input",function(i){return _.has(i,"HighChannelsEnable")?i.HighChannelsEnable:void 0}],HighChannelsAvailable:["$input",function(i){return i.HighChannelsAvailable}],AutoChannelReselect:["$input",function(i){return _.has(i,"AutoChannelRefreshEnable")?i.AutoChannelRefreshEnable:void 0}],AutoChannelReselectPeriod:["$input",function(i){return i.AutoChannelRefreshPeriod}],Channel:["$input","$inputStatistics",function(i,st){return st&&st.Channel?st.Channel:i.Channel}],SMSlaveClientEnable:["$input","$config",function(i,c){return getSMClientInfo(i,c)}],SupportedChannelBandwidth:["$advanced*","$band",function(a,b){return getSupportedBandwidth(a.PossibleChannelBandwidth)}],OperatingChannelBandwidth:["$advanced*",function(a){return getOperationChannelBandwidth(a.OperatingChannelBandwidth,a.ExtensionChannel,a.HTCoexistence)}],CurrentChannelBandwidth:["$inputStatistics*",function(st){return st.OperatingChannelBandwidth}],Workload:["$inputStatistics*","$advanced","$band",function(is,a,b){return getWorkload(is.Workload,is.ChannelGroups,a.PossibleChannelBandwidth,a.OperatingChannelBandwidth,b)}],Coexistence:["$advanced*","$band",function(a,b){return"2.4GHz"==b?a.HTCoexistence:void 0}],ExtensionChannel:["$advanced*","$band",function(a,b){return"2.4GHz"==b?a.ExtensionChannel:void 0}],BeaconPeriod:["$advanced*",function(a){return a.BeaconPeriod}],RTSThreshold:["$advanced*",function(a){return a.RTSThreshold}],FragmentationThreshold:["$advanced*",function(a){return a.FragmentationThreshold}],DTIMPeriod:["$advanced*",function(a){return a.DTIMPeriod}],StationKeepAlive:["$advanced*",function(a){return a.StationKeepAlive}],AdaptivityMode:["$advanced*",function(a){return a.AdaptivityMode}],BGProtection:["$advanced*",function(a){return getBGProtection(a.BGProtection)}],TransmitPowerSupported:["$advancedAttrs*",function(a){return getTransmitPowerSupported(a.TransmitPower["enum"])}],TransmitPower:["$advanced*",function(a){return a.TransmitPower?a.TransmitPower.toString():void 0}],HTGI:["$advanced*",function(a){return getHTGI(a.GuardInterval)}],TxPreamble:["$advanced*",function(a){return a.PreambleType}],Igmpdrop:["$advanced*",function(a){return a.DropMulticast}],SessionTimeoutInterval:["$advanced*",function(a){return a.SessionTimeoutInterval}],TxBeamforming:["$advanced*",function(a){return a.TransmitBeamforming}],TxBeamforminAvailable:["$advanced*",function(a){return a.TransmitBeamformingSupported}],STBC:["$advanced*",function(a){return a.STBC}],STBCAvailable:["$advanced*",function(a){return a.STBCSupported}],OFDMA:["$advanced*",function(a){return a.OFDMA}],TWT:["$advanced*",function(a){return a.TWT}],OFDMAAvailable:["$advanced*",function(a){return a.OFDMASupported}],TWTAvailable:["$advanced*",function(a){return a.TWTSupported}],EnableLowOFDM:["$advanced*",function(a){return a.LowOFDM}],DFS:["$advanced*",function(a){return a.DFSEnable}],DFSAvailable:["$advanced*",function(a){return a.DFSAvailable}],Dot11KEnabled:["$advanced*",function(a){return a.Dot11KEnabled}],Dot11VEnabled:["$advanced*",function(a){return a.Dot11VEnabled}],AccessPointMax:["$input*",function(i){return i.Phy?getAPMax(i.Phy.Combinations[1].Limits,i.OperatingFrequencyBand):void 0}],MultiWPS:["AccessPointNumberOfEntries","$input*",function(a,i){return getMultiWPS(a,i)}],AccessPointNumberOfEntries:["AccessPoint",function(a){return a?_.size(a):void 0}],AccessPointProfileMax:["$config",function(c){return c.Device.WiFi&&c.Device.WiFi.APProfile?c.Device.WiFi.APProfile.max_instance:void 0}],AccessPoint:{"->":["?","$obj","Security","BandSteering"],"?":["$parent",function(p){return!!p.$ap}],$config:["$parent",function(p){return p.$config}],"{$obj}":["$parent",function(p){return getAPs(p.$ap)}],":":["$obj",function(o){return o.__id}],$apProfile:["$root","$obj",function(r,o){return getAPProfile(r.$config,o.Profile)}],$sec:["$apProfile",function(app){return app.Security}],SSID:["$apProfile","$config",function(a,c){return getSSID(a.SSID,c)}],Broadcast:["$obj",function(o){return o.Enable}],GuestAccess:["$apProfile",function(o){return o.GuestAccess}],BSSID:["$root","$obj",function(r,o){return getBSSID(r.$config,o)}],SSIDAdvertisementEnabled:["$apProfile",function(a){return!a.SSIDAdvertisementEnabled}],MaxAssociatedDevices:["$apProfile",function(a){return a.MaxAssociatedDevices}],ClientIsolation:["$apProfile",function(a){return a.IsolationEnable}],AccessPolicy:["$apProfile",function(a){return a.AccessPolicy}],NSG:["$apProfile",function(a){return a.NSG}],Profile:["$obj",function(o){return o.Profile}],ProfileId:["$obj",function(o){return getProfileId(o.Profile)}],BandwidthRestricted:["$apProfile",function(o){return o.BandwidthRestrict}],Interface:["$obj",function(o){return o.Interface}],Security:["$sec",function(sec){return components.security.build({$sec:sec})}],WPS:["$obj","$apProfile","$root",function(o,prof,r){return components.wps.build({$ap:o,$apProfile:prof,$radio:r.$input})}],MultiAPBSSType:["$obj",function(o){return o.MultiAPBSSType}],EasyMeshType:["$root","$obj",function(r,o){return getAPMeshType(r.$input,o,r.$config)}],BandSteering:{"->":!0,"?":["$root",function(){return Boolean(autoconf.BR2_PACKAGE_ANWEB_SUPPORT_BAND_STEERING)}],$bandSteering:["$parent",function(parent){return parent.$apProfile.BandSteering}],Enable:["$bandSteering",function(bandSteering){return bandSteering.Enable}],PreferBand:["$bandSteering",function(bandSteering){return bandSteering.PreferBand}]}},EndPointMax:1,EndPointNumberOfEntries:["EndPoint",function(ep){return ep?_.size(ep):void 0}],EndPointProfileMax:["$config",function(c){return c.Device.WiFi&&c.Device.WiFi.StationProfile?c.Device.WiFi.StationProfile.max_instance:void 0}],EndPoint:{"->":["?","$epp","Security"],$config:["$parent",function(p){return p.$config}],$input:["$parent",function(p){return p.$input}],$epAttrs:["$parent",function(p){return p.$epAttrs}],$statistic:["$parent",function(p){return p.$inputStatistics}],"?":["$input",function(i){return!!i&&!!i.EndPoint}],$eps:["$input",function(i){return getEps(i.EndPoint)}],"{$ep, $index}":["$eps","$epAttrs",function(eps,attrs){return 0!=eps.length?eps:[getDefaultEP(attrs)]}],":":["$ep*","$input",function(ep,i){return ep.__id||"+"+(1e3+("2.4GHz"==i.OperatingFrequencyBand?2:5))}],$epp:["$config","$ep*",function(c,ep){return""!=ep.Profile?funcs.fetchBranch(c,ep.Profile):ep}],$sec:["$epp*","$epAttrs",function(epp,attrs){return epp&&epp.Security?epp.Security:getDefaultEPSecurity(attrs)}],Enable:["$ep*",function(ep){return ep.Enable}],Interface:["$ep*",function(ep){return ep.Interface}],MeshEnable:["$input*",function(i){return _.size(funcs.newConfig.normalize(i.SuperMeshPoint))>0}],Profile:["$ep*",function(ep){return ep.Profile}],ProfileId:["$ep*",function(ep){return getProfileId(ep.Profile)}],SSID:["$epp*",function(epp){return _.isEmpty(epp)?"":epp.SSID}],BSSID:["$epp*",function(epp){return _.isEmpty(epp)?"":epp.BSSID}],Band:["$input",function(i){return i.OperatingFrequencyBand}],Security:["$sec*",function(sec){return components.security.build({$sec:sec})}],RSSI:["$statistic","$ep",function(st,ep){return st&&st.EndPoint&&st.EndPoint[ep.__id]&&!_.isEmpty(st.EndPoint[ep.__id].Info.BSSID)?st.EndPoint[ep.__id].Info.SignalStrength+"%":void 0}],Connect:["$statistic","$ep",function(st,ep){return st&&st.EndPoint&&st.EndPoint[ep.__id]?!_.isEmpty(st.EndPoint[ep.__id].Info.BSSID):void 0}],Channel:["$statistic",function(st){return st?st.Channel:void 0}]},WMM:{"->":["$ap","$ap","$ep","$ac","$enable","AP","EP"],$advanced:["$parent",function(p){return p.$advanced}],$ap:["$parent",function(p){return p.$ap}],$ep:["$parent",function(p){return p.$ep}],$ac:["$advanced*",function(ad){return ad.AC}],"?":["$ac",function(ac){return!!ac}],Mode:["$ap",function(ap){return ap&&ap[1]?ap[1].WMMMode:"Auto"}],AP:{"->":["$ap","$ac","AC"],$ap:["$parent",function(p){return p.$ap}],$ac:["$parent",function(p){return p.$ac}],"{$obj}":["$parent",function(p){return getAPs(p.$ap)}],":":["$obj",function(o){return o.__id}],ACNumberOfEntries:["AC",function(ac){return ac?_.size(ac):void 0}],AC:{"->":["$acs","$ac"],$acs:["$parent",function(p){return p.$ac&&p.$ac.AP?p.$ac.AP:void 0}],"{$ac, $index}":["$acs",function(acs){return acs}],":":["$ac",function(ac){return ac.AccessCategory}],__id:["$index",function(i){return i}],AccessCategory:["$ac",function(ac){return ac.AccessCategory}],AIFSN:["$ac*",function(ac){return ac.AIFSN}],ECWMin:["$ac*",function(ac){return ac.ECWMin}],ECWMax:["$ac*",function(ac){return ac.ECWMax}],TxOpMax:["$ac*",function(ac){return ac.TxOpMax}],AcmPolicy:["$ac*",function(ac){return ac.ACM}],AckPolicy:["$ac*",function(ac){return ac.AckPolicy}]}},EP:{"->":["$ep","$ac","AC"],$ep:["$parent",function(p){return p.$ap}],$ac:["$parent",function(p){return p.$ac}],"{$obj}":["$parent",function(p){return getEps(p.$ap)||[{__id:"1"}]}],":":["$obj",function(o){return o.__id}],ACNumberOfEntries:["AC",function(ac){return ac?_.size(ac):void 0}],AC:{"->":["$acs","$ac"],$acs:["$parent",function(p){return p.$ac&&p.$ac.BSS?p.$ac.BSS:void 0}],"{$ac, $index}":["$acs",function(acs){return acs}],":":["$ac",function(ac){return ac.AccessCategory}],__id:["$index",function(i){return i}],AccessCategory:["$ac",function(ac){return ac.AccessCategory}],AIFSN:["$ac*",function(ac){return ac.AIFSN}],ECWMin:["$ac*",function(ac){return ac.ECWMin}],ECWMax:["$ac*",function(ac){return ac.ECWMax}],TxOpMax:["$ac*",function(ac){return ac.TxOpMax}],AcmPolicy:["$ac*",function(ac){return ac.ACM}],AckPolicy:["$ac*",function(ac){return ac.AckPolicy}]}}}}),components.security=T({"->":!0,$sec:":external",$secondRadiusServer:["$root",function(){return autoconf.BR2_PACKAGE_ANWEB_SUPPORT_WIFI_SECOND_RADIUS_SERVER}],"?":["$sec",function(sec){return!!sec}],$defWEPKey:["$sec*",function(s){return s.WEPKeySelected?s.WEPKey[s.WEPKeySelected.toString()].Str:void 0}],ModeEnabled:["$sec*","$defWEPKey",function(s,ks){return getModeEnabled(s.ModeEnabled,ks)}],PreAuthentication:["$sec*",function(s){return s.PreAuthentication}],ModesSupported:["$sec*",function(s){return getModesSupported(s.ModesSupported)}],PreSharedKey:["$sec*",function(s){return s.KeyPassphrase}],EncryptionType:["$sec*",function(s){return"TKIPAES"==s.EncryptionType?"TKIP+AES":s.EncryptionType}],RekeyingInterval:["$sec*",function(s){return s.RekeyingInterval}],RadiusServerIPAddr:["$sec*",function(s){return s.RADIUS.ServerIPAddr}],RadiusServerPort:["$sec*",function(s){return s.RADIUS.ServerPort}],RadiusSecret:["$sec*",function(s){return s.RADIUS.Secret}],RadiusUseSecondServer:["$sec*","$secondRadiusServer*",function(security){return security.RADIUS.UseSecondServer}],RadiusSecondServerIPAddr:["$sec*","$secondRadiusServer*",function(security){return security.RADIUS.SecondServerIPAddr}],RadiusSecondServerPort:["$sec*","$secondRadiusServer*",function(security){return security.RADIUS.SecondServerPort}],RadiusSecondSecret:["$sec*","$secondRadiusServer*",function(security){return security.RADIUS.SecondSecret}],RadiusUsername:["$sec*",function(s){return s.RADIUS.Username}],RadiusPassword:["$sec*",function(s){return s.RADIUS.Password}],DefaultKeyID:["$sec*",function(s){return s.WEPKeySelected?s.WEPKeySelected.toString():void 0}],OpenWEP:["$sec*",function(s){return"WEP"==s.EncryptionType}],WEPasHEX:["$defWEPKey*",function(ks){return _.contains([10,26],ks.length)}],WEPKey1:["$sec*",function(s){return s.WEPKey[1].Str}],WEPKey2:["$sec*",function(s){return s.WEPKey[2].Str}],WEPKey3:["$sec*",function(s){return s.WEPKey[3].Str}],WEPKey4:["$sec*",function(s){return s.WEPKey[4].Str}],ProtectedManagementFrames:["$sec*",function(s){return getProtectedFrame(s.ProtectedManagementFrames)}]}),components.scanListItem=T({"->":!0,$scanItem:":external",$band:":external",SSID:["$scanItem*",function(e){return e.SSID}],BSSID:["$scanItem*",function(e){return e.BSSID}],Mode:["$scanItem*",function(e){return getOperationStandart(e.OperatingStandards)}],Channel:["$scanItem*",function(e){return e.Channel}],AdvancedChannel:["$scanItem*",function(e){return getExtChannel(e.ExtensionChannel)}],ModeEnabled:["$scanItem*",function(e){return getModeEnabled(e.ModeEnabled)}],EncryptionType:["$scanItem*",function(e){return getScanEncryptionType(e.EncryptionType)}],RSSI:["$scanItem",function(e){return e.RSSI}],SignalStrength:["$scanItem*",function(e){return e.SignalQuality}],Band:["$scanItem*","$band",function(e,b){return e.OperatingFrequencyBand||b}]}),components.wps=T({"->":["?"],$ap:":external",$radio:":external",$apProfile:":external",$wps:["$ap",function(a){return a.WPS}],"?":["$wps",function(w){return!!w}],Enable:["$wps*",function(w){return w.Enable}],Configured:["$wps*",function(w){return w.Configured}],DefaultPIN:["$wps*",function(w){return w.PIN}],Check:["$ap","$apProfile","$radio",function(a,prof,r){return getWpsCheck(a,prof,r)}],ActivateRadioByButtonWPS:["$ap",function(ap){return ap.EnableWiFiFromWPSButton}]}),components.countries=T({"->":!0,$config:":external","{$rd}":["$config",function(c){return c.View?funcs.newConfig.normalize(c.View.RegulatoryDomains):[]}],code:["$rd*",function(rd){return rd.Code}],name:["$rd*",function(rd){return rd.Name}]})},function(module,exports,__webpack_require__){"use strict";function getSecurity(sec){var pattern=T({"->":["?"],$sec:":external","?":["$sec",function(s){return!!s}],$wep:["$sec*",function(s){return s.WEPKey["#template"]}],$secondRadiusServer:["$root",function(){return autoconf.BR2_PACKAGE_ANWEB_SUPPORT_WIFI_SECOND_RADIUS_SERVER}],ModeEnabled:["$sec",function(s){return getModeEnabled(s.ModeEnabled)}],PreSharedKey:["$sec",function(s){return s.KeyPassphrase}],EncryptionType:["$sec",function(s){return s.EncryptionType}],RekeyingInterval:["$sec",function(s){return s.RekeyingInterval}],RadiusServerIPAddr:["$sec",function(s){return s.RADIUS.ServerIPAddr}],RadiusServerPort:["$sec",function(s){return s.RADIUS.ServerPort}],RadiusSecret:["$sec",function(s){return s.RADIUS.Secret}],RadiusSecondServerIPAddr:["$sec","$secondRadiusServer*",function(security){return security.RADIUS.SecondServerIPAddr}],RadiusSecondServerPort:["$sec","$secondRadiusServer*",function(security){return security.RADIUS.SecondServerPort}],RadiusSecondSecret:["$sec","$secondRadiusServer*",function(security){return security.RADIUS.SecondSecret}],PreAuthentication:["$sec",function(s){return s.PreAuthentication}],DefaultKeyID:["$sec",function(s){return getDefaultKeyID(s.WEPKeySelected)}],ProtectedManagementFrames:["$sec",function(s){return s.ProtectedManagementFrames}],OpenWEP:["$sec",function(s){return getOpenWEP()}],WEPasHEX:["$sec",function(s){return getWEPasHEX()}],WEPKey1:["$wep",function(w){return w.Str}],WEPKey1Type:["$wep",function(w){return getWEPType(w.Type)}],WEPKey2:["$wep",function(w){return w.Str}],WEPKey2Type:["$wep",function(w){return getWEPType(w.Type)}],WEPKey3:["$wep",function(w){return w.Str}],WEPKey3Type:["$wep",function(w){return getWEPType(w.Type)}],WEPKey4:["$wep",function(w){return w.Str}],WEPKey4Type:["$wep",function(w){return getWEPType(w.Type)}]});return sec?pattern.build({$sec:sec}):{}}function getEnable(enable){var result=enable;return _.isUndefined(result)||(result["default"]=!0),result}function getSSIDAdvertisement(ssid){var result=ssid;return _.isUndefined(result)||(result["default"]=!1),result}function getCPEBlock(){return{access:"readWrite","default":!0,type:"boolean"}}function getAutoChannelReselect(){return{access:"readWrite","default":!0,type:"boolean"}}function getBGProtection(attr){var valueMap={Auto:"Auto",Enable:"Always On",Disable:"Always Off"};return attr["default"]=valueMap[attr["default"]],attr["enum"]=_.map(attr["enum"],function(name){return valueMap[name]}),attr}function getExtensionChannel(attr){var valueMap={Auto:"Auto",AboveControlChannel:"wifi_advanced_above_channel",BelowControlChannel:"wifi_advanced_below_channel"};return attr["default"]=valueMap[attr["default"]],attr["enum"]=_.map(attr["enum"],function(name){return valueMap[name]}),attr}function getDefaultKeyID(attr){return attr.type="string",attr["default"]=attr["default"].toString(),attr}function getTransmitPower(attr){return attr["default"]=attr["default"].toString(),attr["enum"]=_.map(attr["enum"],function(name){return name.toString()}),attr}function getHTGI(attr){var valueMap={0:"Auto",400:"Enable",800:"Disable"};return attr["default"]=valueMap[attr["default"]],attr["enum"]=_.map(attr["enum"],function(name){return valueMap[name]}),attr.type="string",attr}function getModeEnabled(attr){function getMode(mode){switch(mode){case"OPEN":return["None"];case"WPAPSK":return["WPA-Personal"];case"WPA2PSK":return["WPA2-Personal"];case"WPAPSKWPA2PSK":return["WPA-WPA2-Personal"];case"WPA":return["WPA-Enterprise"];case"WPA2":return["WPA2-Enterprise"];case"WPA1WPA2":return["WPA-WPA2-Enterprise"];case"SHARED":case"WEP":return["WEP"];default:return[mode]}}attr["default"]=getMode(attr["default"])[0];var arrEnum=[];return _.each(attr["enum"],function(name){arrEnum=arrEnum.concat(getMode(name))}),attr["enum"]=_.uniq(arrEnum),attr}function getOpenWEP(){return{access:"readWrite","default":!0,type:"boolean"}}function getWEPasHEX(){return{access:"readWrite","default":!1,type:"boolean"}}function getWEPType(type){var mapValues={ASCII:"1",HEX:"2"};return type["default"]=mapValues[type["default"]]||type["default"],type["enum"]=_.map(type["enum"],function(e){return mapValues[e]||e}),type}var T=__webpack_require__(35).T,_=__webpack_require__(4);__webpack_require__(5),module.exports=function(input){var pattern=T({"->":["$input","$radio","$ap","Device"],$input:":external",$radio:["$input",function(i){return i.Device.WiFi.Radio["#template"]}],$ap:["$input",function(i){return i.Device.WiFi.Radio["#template"].AccessPoint["#template"]}],$apProfile:["$input",function(i){return i.Device.WiFi.APProfile?i.Device.WiFi.APProfile["#template"]:{}}],$ep:["$input",function(i){return i.Device.WiFi.Radio["#template"].EndPoint["#template"]}],$epProfile:["$input",function(i){return i.Device.WiFi.StationProfile?i.Device.WiFi.StationProfile["#template"]:{}}],$advanced:["$radio",function(r){return r.Advanced}],Device:{"->":!0,WiFi:{"->":!0,APProfile:["$root",function(root){return root.$apProfile}],Radio:{"->":!0,$radio:["$root",function(r){return r.$radio}],$advanced:["$root",function(r){return r.$advanced}],OperatingFrequencyBand:["$radio",function(r){return r.OperatingFrequencyBand}],Enable:["$radio",function(r){return r.Enable}],RegulatoryDomain:["$root",function(r){return r.$input.Device.WiFi.RegulatoryDomain}],SupportedStandards:["$radio",function(r){return r.SupportedStandards}],OperatingStandards:["$radio",function(r){return r.OperatingStandards}],PossibleChannels:["$radio",function(r){return r.PossibleChannels}],AutoChannelSupported:["$radio",function(r){return r.AutoChannelSupported}],AutoChannelEnable:["$radio",function(r){return r.AutoChannelEnable}],AutoChannelReselect:["$radio",function(r){return getAutoChannelReselect()}],AutoChannelReselectPeriod:["$radio",function(r){return r.AutoChannelRefreshPeriod}],Channel:["$radio",function(r){return r.Channel}],OperatingChannelBandwidth:["$advanced*",function(a){return a.OperatingChannelBandwidth}],BeaconPeriod:["$advanced*",function(a){return a.BeaconPeriod}],RTSThreshold:["$advanced*",function(a){return a.RTSThreshold}],FragmentationThreshold:["$advanced*",function(a){return a.FragmentationThreshold}],DTIMPeriod:["$advanced*",function(a){return a.DTIMPeriod}],StationKeepAlive:["$advanced*",function(a){return a.StationKeepAlive}],AdaptivityMode:["$advanced*",function(a){return a.AdaptivityMode}],BGProtection:["$advanced*",function(a){return getBGProtection(a.BGProtection)}],TransmitPower:["$advanced*",function(a){return getTransmitPower(a.TransmitPower)}],HTGI:["$advanced*",function(a){return getHTGI(a.GuardInterval)}],SessionTimeoutInterval:["$advanced*",function(a){return a.SessionTimeoutInterval}],ExtensionChannel:["$advanced*",function(a){return getExtensionChannel(a.ExtensionChannel)}],Dot11KEnabled:["$advanced*",function(a){return a.Dot11KEnabled}],Dot11VEnabled:["$advanced*",function(a){return a.Dot11VEnabled}],EnableLowOFDM:["$advanced*",function(a){return a.LowOFDM}],TxPreamble:["$advanced*",function(a){return a.PreambleType}],AccessPoint:{"->":["$ap","$sec","Security","AC"],$ap:["$root",function(r){return r.$ap}],$apProfile:["$root",function(r){return r.$apProfile}],"?":["$apProfile",function(a){return!!a}],$sec:["$apProfile",function(a){return a.Security}],SSID:["$apProfile",function(a){return a.SSID}],Broadcast:["$ap",function(a){return getEnable(a.Enable)}],GuestAccess:["$apProfile",function(a){return a.GuestAccess}],BSSID:["$apProfile",function(a){return a.BSSID}],SSIDAdvertisementEnabled:["$apProfile",function(a){return getSSIDAdvertisement(a.SSIDAdvertisementEnabled)}],MaxAssociatedDevices:["$apProfile",function(a){return a.MaxAssociatedDevices}],CPEBlock:["$ap",function(a){return getCPEBlock()}],ClientIsolation:["$apProfile",function(a){return a.IsolationEnable}],AccessPolicy:["$apProfile",function(a){return a.AccessPolicy}],BandwidthRestricted:["$apProfile",function(a){return a.BandwidthRestrict}],Profile:["$ap",function(a){return a.Profile}],Interface:["$ap",function(a){return a.Interface}],Security:["$sec",function(sec){return getSecurity(sec)}]},EndPoint:{"->":["$ep","$sec","Security","AC"],$ep:["$root",function(r){return r.$ep}],$epp:["$root",function(r){return r.$epProfile}],"?":["$epp",function(epp){return!!epp}],$sec:["$epp",function(epp){return epp.Security}],Enable:["$ep",function(ep){return ep.Enable}],Profile:["$ep",function(ep){return ep.Profile}],Interface:["$ep",function(ep){return ep.Interface}],SSID:["$epp",function(epp){return epp.SSID}],BSSID:["$epp",function(epp){return epp.BSSID}],Security:["$sec",function(sec){return getSecurity(sec)}]},WMM:{"->":["$ap","$advanced","$ac","AP","EP"],$advanced:["$root",function(r){return r.$advanced}],$ap:["$root",function(r){return r.$ap}],$ac:["$advanced*",function(ad){return ad.AC}],"?":["$ac",function(ac){return!!ac}],Enable:["$ap",function(ap){return ap?ap.WMMEnable:void 0}],AP:{"->":["$ac","AC"],$ac:["$parent",function(p){return p.$ac}],AC:{"->":["$ac","?"],$ac:["$parent",function(p){return p.$ac&&p.$ac.AP?p.$ac.AP["#template"]:void 0}],"?":["$ac",function(ac){return!!ac}],"{$key}":["$ac",function($ac){return $ac.AccessCategory["enum"]}],":":["$key",function(k){return k}],AIFSN:["$ac",function(ac){return ac.AIFSN}],AccessCategory:["$ac",function(ac){return ac.AccessCategory}],AckPolicy:["$ac",function(ac){return ac.AckPolicy}],AcmPolicy:["$ac",function(ac){return ac.ACM}],ECWMax:["$ac",function(ac){return ac.ECWMax}],ECWMin:["$ac",function(ac){return ac.ECWMin}],TxOpMax:["$ac",function(ac){return ac.TxOpMax}]}},EP:{"->":["$ac","AC"],$ac:["$parent",function(p){return p.$ac}],AC:{"->":["$ac","?"],$ac:["$parent",function(p){return p.$ac&&p.$ac.BSS?p.$ac.BSS["#template"]:void 0}],"?":["$ac",function(ac){return!!ac}],"{$key}":["$ac",function($ac){return $ac.AccessCategory["enum"]}],":":["$key",function(k){return k}],AIFSN:["$ac",function(ac){return ac.AIFSN}],AccessCategory:["$ac",function(ac){return ac.AccessCategory}],AckPolicy:["$ac",function(ac){return ac.AckPolicy}],AcmPolicy:["$ac",function(ac){return ac.ACM}],ECWMax:["$ac",function(ac){return ac.ECWMax}],ECWMin:["$ac",function(ac){return ac.ECWMin}],TxOpMax:["$ac",function(ac){return ac.TxOpMax}]}}}}}}});return input?pattern.build({$input:input}):{}}},function(module,exports,__webpack_require__){"use strict";var config=__webpack_require__(221);module.exports={config:config}},function(module,exports,__webpack_require__){"use strict";function getRADIUS(modeEnabled,field){return["WPA1WPA2","WPA","WPA2"].includes(modeEnabled)?field:void 0}function isAPProfileNeeded(ap){return ap._isNew?""===ap.Profile:!autoconf.BR2_PACKAGE_ANWEB_SUPPORT_BAND_STEERING||Boolean(ap._isCurrentlyEdited)}function getEncryptionType(standart,security){var mode=security.ModeEnabled,encType=security.EncryptionType;return"None"==mode&&-1==standart.indexOf("n")&&-1==standart.indexOf("c")?security.OpenWEP?"WEP":"NONE":-1==standart.indexOf("n")&&-1==standart.indexOf("c")||"WEP"!=encType?"TKIP+AES"==encType?"TKIPAES":encType:"NONE"}function getOperatingStandart(standart){var output=standart.split("").join("/").replace("a/c","ac");return output=output.replace("a/x","ax")}function getProfile(id,profile,profileMaxNumber){return void 0!==id&&!id.includes("+")||""!==profile?profile:"Device.WiFi.APProfile."+(profileMaxNumber+1)+"."}function getProfileEP(id,profile,profileMaxNumber){return"undefined"!=typeof id&&profile?profile:"Device.WiFi.StationProfile."+(profileMaxNumber+1)+"."}function getProfileId(id,key){return id&&""!=id?id:key}function getProfileIdEP(id,key){return id?id:"new_inst_"+key}function getAP(apList){var result={};return _.each(apList,function(elem,index){-1==index.indexOf("-")&&(result[index]=elem)}),result}function getEP(epList){var result={};for(var index in epList){var elem=epList[index];void 0==_typeof2["default"](elem.Band)&&""==elem.ProfileId||!elem.SSID||elem.noCreateProfile||(result[index]=elem)}return result}function getEPList(epList){var result={};return _.each(epList,function(elem,index){result[index]=elem}),result}function getOperationChannelBandwidth(bandwidth,standart){var band;if(band=~bandwidth.lastIndexOf("/")?bandwidth.slice(bandwidth.lastIndexOf("/")+1,bandwidth.length):bandwidth,"Auto"==band)return band;switch(standart){case"a":case"b":case"g":case"bg":return"20MHz"!=band?"Auto":band;case"n":case"an":return"20MHz"!=band&&"40MHz"!=band?"Auto":band;default:return band}}function getExtChannel(bandwidth,channel,extChannel){return-1==bandwidth.indexOf("/")?(channel=parseInt(channel),"AboveControlChannel"==extChannel&&9>=channel?extChannel:"BelowControlChannel"==extChannel&&channel>=5?extChannel:"Auto"):extChannel}function getHTCoexistence(bandwidth,coexistence){return!(!~bandwidth.lastIndexOf("/")&&"Auto"!=bandwidth)&&coexistence}function getModeEnabled(mode,standart,encType){
if(mode){if(-1!=standart.indexOf("n")&&"WEP"==encType)return"OPEN";switch(mode){case"None":return"OPEN";case"WPA-Personal":return"WPAPSK";case"WPA2-Personal":return"WPA2PSK";case"WPA-WPA2-Personal":return"WPAPSKWPA2PSK";case"WPA-Enterprise":return"WPA";case"WPA2-Enterprise":return"WPA2";case"WPA-WPA2-Enterprise":return"WPA1WPA2";case"WEP":return"SHARED";case"WPA3":return"WPA3SAE";case"WPA2-WPA3":return"WPA2PSKWPA3SAE";default:return mode}}}function getBGProtection(pr){switch(pr){case"Auto":return"Auto";case"Always On":return"Enable";case"Always Off":return"Disable"}}function getGuardInterval(htgi){switch(htgi){case"Auto":return 0;case"Enable":return 400;case"Disable":return 800}}function getWEPType(type){return type?"HEX":"ASCII"}function getProtectedFrame(param){switch(param){case"NoMgmtFrameProtection":return"Disabled";case"MgmtFrameProtectionOptional":return"Optional";case"MgmtFrameProtectionRequired":return"Required";default:return}}var _interopRequireDefault=__webpack_require__(7),_typeof2=_interopRequireDefault(__webpack_require__(8)),_=__webpack_require__(4),T=__webpack_require__(35).T,funcs=__webpack_require__(5);module.exports=function(config){function getPorts(ifaces,radio,devMode){if(ifaces&&ifaces.Bridge){var ifacePath="Device.Network.Interface.",bridges=funcs.newConfig.normalize(ifaces.Bridge),ifaceMaxInst=parseInt(ifaces.WiFi.max_instance),result={};return _.each(bridges,function(br,id){var ports=funcs.newConfig.normalize(br.Port);if(ports){var portsArr={};_.each(ports,function(port,key){-1==port.LowerLayer.indexOf("WiFi")&&(portsArr[key]=port)}),_.each(radio,function(elem,key){_.each(elem.AccessPoint,function(ap,index){if(-1==index.indexOf("-"))if(_.isUndefined(ap.ProfileId))~index.indexOf("+")&&"1"==id&&!ap._noNewProfile&&(portsArr["+3"]={LowerLayer:ifacePath+"WiFi."+(parseInt(ifaces.WiFi.max_instance)+1)+"."});else{var ifaceId=_.findKey(ports,{LowerLayer:ap.Interface});_.isUndefined(ifaceId)||(portsArr[ifaceId]={LowerLayer:ap.Interface})}});for(var index in elem.EndPoint){var ep=elem.EndPoint[index];if(ep.Enable){var ifaceId=_.findKey(ports,{LowerLayer:ep.Interface});if("undefined"!=typeof ifaceId)portsArr[ifaceId]={LowerLayer:ep.Interface};else if("1"==id&&"AccessPoint"==devMode){if(ep.Interface){var part=ep.Interface.split(".").filter(function(i){return!!i}),inst=part[part.length-1];ifaceMaxInst=inst in ifaces.WiFi?parseInt(inst):ifaceMaxInst+1}else ifaceMaxInst++;portsArr["+new_member"]={LowerLayer:ifacePath+"WiFi."+ifaceMaxInst+"."}}}}}),(_.size(portsArr)||"1"==id)&&(result[id]={Port:portsArr})}}),result}}var pattern=T({"->":!0,$config:":external",Device:{WiFi:{"->":["$radio","Radio"],$config:["$root",function(r){return r.$config}],$radio:["$root",function(r){return r.$config.Device.WiFi.Radio}],Radio:{"->":!0,"{$elem}":["$parent",function(p){return p.$radio}],":":["$elem",function(e){return e.Inx}],$return:["$parent","$elem",function(p,e){return components.radio.build({$radio:p.$radio,$band:e.OperatingFrequencyBand})}]},APProfile:["$radio","$config",function(r,c){return components.approfile.build({$radio:r,$config:c})}],StationProfile:["$radio",function(r){return components.stprofile.build({$radio:r})}]},Network:{Interface:{Bridge:{"->":!0,$interfaces:["$root",function(r){return r.$config.Device.Network?r.$config.Device.Network.Interface:void 0}],$radio:["$root",function(r){return r.$config.Device.WiFi.Radio}],$devMode:["$root",function(r){return r.$config.Device.DevMode}],$return:["$interfaces","$radio","$devMode",function(ifaces,r,devMode){return getPorts(ifaces,r,devMode)}]}}}}});return pattern.build({$config:config})};var components={radio:T({"->":["?","$advanced","$ap","$wmm","Advanced","AccessPoint","EndPoint"],$radio:":external",$band:":external",$input:["$radio","$band",function(r,b){return _.find(r,function(e){return e.OperatingFrequencyBand&&b==e.OperatingFrequencyBand})}],$ap:["$input",function(i){return getAP(i.AccessPoint)}],$ep:["$input*",function(i){return getEPList(i.EndPoint)}],$wmm:["$input",function(i){return i.WMM}],"?":["$input",function(i){return!!i}],OperatingFrequencyBand:["$input",function(i){return i.OperatingFrequencyBand}],Enable:["$input",function(i){return i.Enable}],OperatingStandards:["$input",function(i){return i.OperatingStandards?getOperatingStandart(i.OperatingStandards):void 0}],AutoChannelEnable:["$input",function(i){return i.AutoChannelEnable}],HighChannelsEnable:["$input",function(i){return _.has(i,"HighChannelEnable")?i.HighChannelEnable:void 0}],AutoChannelRefreshEnable:["$input",function(i){return i.AutoChannelReselect}],AutoChannelRefreshPeriod:["$input",function(i){return i.AutoChannelReselectPeriod}],Channel:["$input",function(i){return i.Channel?parseInt(i.Channel):void 0}],CurrentAP:["$input",function(i){return i.AccessPointCurrent}],Advanced:{"->":["$input","AC"],$input:["$parent",function(p){return p.$input}],$wmm:["$parent",function(p){return p.$wmm}],OperatingChannelBandwidth:["$input",function(i){return getOperationChannelBandwidth(i.OperatingChannelBandwidth,i.OperatingStandards)}],HTCoexistence:["$input",function(i){return getHTCoexistence(i.OperatingChannelBandwidth,i.Coexistence)}],ExtensionChannel:["$input",function(i){return getExtChannel(i.OperatingChannelBandwidth,i.Channel,i.ExtensionChannel)}],BeaconPeriod:["$input",function(i){return i.BeaconPeriod}],RTSThreshold:["$input",function(i){return i.RTSThreshold}],FragmentationThreshold:["$input",function(i){return i.FragmentationThreshold}],DTIMPeriod:["$input",function(i){return i.DTIMPeriod}],StationKeepAlive:["$input",function(i){return i.StationKeepAlive}],AdaptivityMode:["$input",function(i){return i.AdaptivityMode}],BGProtection:["$input",function(i){return getBGProtection(i.BGProtection)}],TransmitPower:["$input",function(i){return parseInt(i.TransmitPower)}],GuardInterval:["$input",function(i){return getGuardInterval(i.HTGI)}],DropMulticast:["$input",function(i){return i.Igmpdrop}],SessionTimeoutInterval:["$input",function(i){return i.SessionTimeoutInterval}],TransmitBeamforming:["$input",function(i){return i.TxBeamforming}],STBC:["$input",function(i){return i.STBC}],OFDMA:["$input",function(i){return i.OFDMA}],TWT:["$input",function(i){return i.TWT}],LowOFDM:["$input",function(i){return i.EnableLowOFDM}],DFSEnable:["$input",function(i){return i.DFS}],Dot11KEnabled:["$input",function(i){return i.Dot11KEnabled}],Dot11VEnabled:["$input",function(i){return _.has(i,"Dot11VEnabled")?!!i.Dot11KEnabled&&i.Dot11VEnabled:void 0}],PreambleType:["$input",function(i){return i.TxPreamble}],AC:{"->":["$acs","$bcs","?","AP","BSS"],$acs:["$parent",function(p){return p.$wmm?p.$wmm.AP[1].AC:void 0}],$bcs:["$parent",function(p){return p.$wmm?p.$wmm.EP[1].AC:void 0}],"?":["$acs","$bcs",function(acs,bcs){return!!acs||!!bcs}],AP:{"->":!0,$acs:["$parent",function(p){return p.$acs}],"{$ac, $index}":["$acs",function(acs){return acs}],":":["$ac",function(ac){return ac.__id}],AccessCategory:["$ac",function(ac){return ac.AccessCategory}],AIFSN:["$ac*",function(ac){return ac.AIFSN}],ECWMin:["$ac*",function(ac){return ac.ECWMin}],ECWMax:["$ac*",function(ac){return ac.ECWMax}],TxOpMax:["$ac*",function(ac){return ac.TxOpMax}],ACM:["$ac*",function(ac){return ac.AcmPolicy}],AckPolicy:["$ac*",function(ac){return ac.AckPolicy}]},BSS:{"->":!0,$bcs:["$parent",function(p){return p.$bcs}],"{$bc, $index}":["$bcs",function(bcs){return bcs}],":":["$bc",function(bc){return bc.__id}],AccessCategory:["$bc",function(bc){return bc.AccessCategory}],AIFSN:["$bc*",function(bc){return bc.AIFSN}],ECWMin:["$bc*",function(bc){return bc.ECWMin}],ECWMax:["$bc*",function(bc){return bc.ECWMax}],TxOpMax:["$bc*",function(bc){return bc.TxOpMax}],ACM:["$bc*",function(bc){return bc.AcmPolicy}],AckPolicy:["$bc*",function(bc){return bc.AckPolicy}]}}},AccessPoint:{"->":["?","$wmm","$obj","$key","WPS"],$wmm:["$parent",function(p){return p.$wmm}],"?":["$parent",function(p){return!!p.$ap}],"{$obj, $key}":["$parent",function(p){return p.$ap}],":":["$key",function(k){return k}],Enable:["$obj",function(o){return o.Broadcast}],WMMMode:["$wmm*",function(w){return w.Mode}],Profile:["$obj","$key","$root",function(o,k,r){return getProfile(k,o.Profile,r.$input.AccessPointProfileMax)}],EnableWiFiFromWPSButton:["$obj",function(o){return o.WPS?o.WPS.ActivateRadioByButtonWPS:void 0}],WPS:{"->":["?"],$wps:["$parent",function(p){return p.$obj.WPS}],"?":["$wps",function(w){return!!w}],Enable:["$wps*",function(w){return w.Enable}],ConnectPBC:["$wps*",function(w){return"PBC"==w.Method}],ConnectPIN:["$wps*",function(w){return"PIN"==w.Method?w.PIN:""}]}},EndPoint:{"->":["?"],"?":["$parent",function(p){return!!p.$ep}],"{$obj, $key}":["$parent",function(p){return p.$ep}],":":["$key*",function(k){return k}],Enable:["$obj*",function(o){return o.Enable}],Profile:["$obj*","$key*","$root",function(o,k,r){return o.SSID&&o.SSID.length?getProfileEP(k,o.Profile,r.$input.EndPointProfileMax):void 0}]}}),approfile:T({"->":["$ap","?","$standart","Security","BandSteering"],"?":["$ap",function(ap){return isAPProfileNeeded(ap)}],$radio:":external",$config:":external","{$input}":["$radio",function(r){return r}],$standart:["$input",function(i){return getOperatingStandart(i.OperatingStandards)}],"{$ap, $key}":["$input",function(i){return getAP(i.AccessPoint)}],":":["$ap","$key",function(a,k){return getProfileId(a.ProfileId,k)}],SSID:["$ap","$config",function(a,c){return c.HasPostfix?a.SSID+"@unifi":a.SSID}],BSSID:["$ap",function(a){return a.BSSID}],SSIDAdvertisementEnabled:["$ap",function(a){return!a.SSIDAdvertisementEnabled}],MaxAssociatedDevices:["$ap",function(a){return a.MaxAssociatedDevices}],IsolationEnable:["$ap",function(a){return a.ClientIsolation}],AccessPolicy:["$ap",function(a){return a.AccessPolicy}],GuestAccess:["$ap",function(o){return o.GuestAccess}],BandwidthRestrict:["$ap",function(a){return a.BandwidthRestricted}],NSG:["$ap",function(a){return a.NSG}],Security:{"->":["$sec","ModeEnabled","RADIUS","WEPKey"],$standart:["$parent",function(p){return p.$standart}],$sec:["$parent",function(p){return p.$ap.Security}],ModeEnabled:["$sec*","$standart",function(s,st){return getModeEnabled(s.ModeEnabled,st,s.EncryptionType)}],KeyPassphrase:["$sec*","ModeEnabled",function(s,me){return"WPAPSKWPA2PSK"==me||"WPAPSK"==me||"WPA2PSK"==me||"WPA3SAE"==me||"WPA2PSKWPA3SAE"==me?s.PreSharedKey:void 0}],EncryptionType:["$sec*","$standart",function(s,st){return getEncryptionType(st,s)}],RekeyingInterval:["$sec*","ModeEnabled",function(s,me){return"OPEN"!=me&&"SHARED"!=me?s.RekeyingInterval:void 0}],RADIUS:{"->":!0,$security:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.ModeEnabled}],$secondRadiusServer:["$root",function(){return autoconf.BR2_PACKAGE_ANWEB_SUPPORT_WIFI_SECOND_RADIUS_SERVER}],ServerIPAddr:["$security*","$me",function(s,modeEnabled){return getRADIUS(modeEnabled,s.RadiusServerIPAddr)}],ServerPort:["$security*","$me",function(s,modeEnabled){return getRADIUS(modeEnabled,s.RadiusServerPort)}],Secret:["$security*","$me",function(s,modeEnabled){return getRADIUS(modeEnabled,s.RadiusSecret)}],UseSecondServer:["$security*","$me","$secondRadiusServer*",function(security,modeEnabled){return getRADIUS(modeEnabled,security.RadiusUseSecondServer)}],SecondSecret:["$security*","$me","$secondRadiusServer*",function(security,modeEnabled){return getRADIUS(modeEnabled,security.RadiusSecondSecret)}],SecondServerIPAddr:["$security*","$me","$secondRadiusServer*",function(security,modeEnabled){return getRADIUS(modeEnabled,security.RadiusSecondServerIPAddr)}],SecondServerPort:["$security*","$me","$secondRadiusServer*",function(security,modeEnabled){return getRADIUS(modeEnabled,security.SecondServerPort)}]},ProtectedManagementFrames:["$sec*",function(s){return getProtectedFrame(s.ProtectedManagementFrames)}],PreAuthentication:["$sec*","ModeEnabled",function(s,me){return"WPA2"==me||"WPA1WPA2"==me?s.PreAuthentication:void 0}],WEPKeySelected:["$sec*","ModeEnabled",function(s,me){return!s.DefaultKeyID||"OPEN"!=me&&"SHARED"!=me?void 0:parseInt(s.DefaultKeyID)}],WEPKey:{"->":["$sec*","1","2","3","4"],$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.ModeEnabled}],1:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey1:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]},2:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey2:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]},3:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey3:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]},4:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey4:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]}}},BandSteering:{"->":!0,"?":["$root",function(){return Boolean(autoconf.BR2_PACKAGE_ANWEB_SUPPORT_BAND_STEERING)}],$bandSteering:["$parent",function(parent){return parent.$ap.BandSteering}],Enable:["$bandSteering",function(bandSteering){return bandSteering.Enable}],PreferBand:["$bandSteering",function(bandSteering){return bandSteering.PreferBand}]}}),stprofile:T({"->":["$ep","$standart","Security"],$radio:":external","{$input}":["$radio",function(r){return r}],$standart:["$input",function(i){return getOperatingStandart(i.OperatingStandards)}],"{$ep, $key}":["$input","$radio",function(i,r){return getEP(i.EndPoint,r)}],":":["$ep*","$key*",function(e,k){return getProfileIdEP(e.ProfileId,k)}],SSID:["$ep*",function(ep){return ep.SSID}],BSSID:["$ep*",function(ep){return ep.BSSID}],Security:{"->":["$sec","ModeEnabled","RADIUS","WEPKey"],$sec:["$parent",function(p){return p.$ep?p.$ep.Security:void 0}],$standart:["$parent",function(p){return p.$standart}],EncryptionType:["$sec*",function(s){return getEncryptionType("",s)}],ModeEnabled:["$sec*","$standart",function(s,st){return getModeEnabled(s.ModeEnabled,st,s.EncryptionType)}],KeyPassphrase:["$sec*","ModeEnabled",function(s,me){return"WPAPSKWPA2PSK"==me||"WPAPSK"==me||"WPA2PSK"==me||"WPA3SAE"==me||"WPA2PSKWPA3SAE"==me?s.PreSharedKey||void 0:void 0}],RADIUS:{"->":!0,$sec:["$parent",function(p){return p.$sec}],Password:["$sec*",function(s){return s.RadiusPassword}],Username:["$sec*",function(s){return s.RadiusUsername}]},WEPKeySelected:["$sec*","ModeEnabled",function(s,me){return!s.DefaultKeyID||"OPEN"!=me&&"SHARED"!=me?void 0:parseInt(s.DefaultKeyID)}],WEPKey:{"->":["$sec*","1","2","3","4"],$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.ModeEnabled}],"?":["$me","$sec*",function(me,s){return s&&("WEP"==me||s.OpenWEP)}],1:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey1:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]},2:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey2:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]},3:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey3:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]},4:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey4:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]}}}})}},function(module,exports,__webpack_require__){"use strict";!function(){function pull(cb){function initPull(response){var config=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList);return dms.data=converter.dsysinitToNative(config),dms.attrs=funcs.deepClone(attrs),dms.__initialData=funcs.deepClone(dms.data),cb&&cb(),Promise.resolve()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),Promise.reject()}var paths=[wifiPath,hostnamePath,ifacesPath];return autoconf.BR2_PACKAGE_ANWEB_WIFI_EASYMESH&&paths.push(emPath),Promise.all([cpe.GetParameterValues(paths),cpe.GetParameterAttributes(paths)]).then(initPull,errorCb)}function push(cb){function successCb(){cb&&cb()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),Promise.reject(error)}function prepareConfigDataHostnames(initialHosts,configHosts){var result={};return _.each(cpeData.Device.Hostnames,function(host,key){var existKey=null,existHost=_.find(initialHosts,function(h,k){return h.MAC.toUpperCase()==host.MAC.toUpperCase()&&(existKey=k,!0)});existHost?result[existKey]=host:result[key]=host}),result}function prepareHostnames(initialHosts,configHosts){var result={};return _.each(configHosts,function(elem,key){if(-1==key.indexOf("+")){var host=initialHosts[key];host&&(result[key]=host)}}),result}var changes=dms.status();if(!changes)return cb&&cb();var cpeData=converter.nativeToDsysinit(dms.data);cpeData.Device.Hostnames=prepareConfigDataHostnames(dms.__initialData.Device.Hostnames,cpeData.Device.Hostnames);var initData=converter.nativeToDsysinit(dms.__initialData);initData.Device.Hostnames=prepareHostnames(dms.__initialData.Device.Hostnames,cpeData.Device.Hostnames);var diffConfig=funcs.newConfig.makeDiff(initData,cpeData,dms.attrs);return cpe.ApplyDifference(diffConfig).then(successCb,errorCb)}var _=__webpack_require__(4),funcs=__webpack_require__(5),wifiPath="Device.WiFi.",hostnamePath="Device.Hostnames.",emPath="Device.Services.EasyMesh.",ifacesPath="Device.Network.Interface.WiFi.",converter=__webpack_require__(223),cpe=__webpack_require__(3),dms={pull:pull,push:push,data:null,attrs:null,__initialData:null};module.exports=dms}()},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getProfiles(data){var radio=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.radio)),easymesh=funcs.fetchBranch(data,"Device.Services.EasyMesh."),result={},key=1;return _.each(radio,function(item,radioKey){var phyIfname=funcs.fetchBranch(item,"Phy.Ifname");_.each(item.AccessPoint,function(ap){var type,profile=ap.Profile,profileId=profile?profile.match(/\.\d+\.$/g,""):void 0,networkIfname=funcs.fetchBranch(data,"".concat(ap.Interface,".Ifname"));if(easymesh&&networkIfname&&phyIfname&&easymesh.Enable&&(32==ap.MultiAPBSSType||phyIfname==networkIfname?type="Basic":64!=ap.MultiAPBSSType&&128!=ap.MultiAPBSSType||(type="Beckhol")),profileId&&(!easymesh||!easymesh.Enable||easymesh&&easymesh.Enable&&void 0!=type)){var approfile=funcs.fetchBranch(data,profile);approfile.Band=item.OperatingFrequencyBand,approfile.BandInx=radioKey,approfile.Inx=Number(profileId[0].replace(/\./g,"")),result[key++]=approfile}})}),result}function getHost(data,mac){var hosts=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.hostnames)),result={},host=_.find(hosts,function(elem){return elem.MAC.toUpperCase()==mac.toUpperCase()});return host&&(result.Hostname=host.Alias,result.__Inst=_.findKey(hosts,function(elem){return elem.MAC.toUpperCase()==mac.toUpperCase()})),result}var pattern=T({"->":["$data","Device"],$data:":external",Device:{"->":!0,Hostnames:["$root",function(r){return funcs.newConfig.normalize(funcs.fetchBranch(r.$data,paths.hostnames))}],WiFiMACFilter:{"->":["$profiles","Networks","Rules"],$profiles:["$root",function(r){return getProfiles(r.$data)}],NeedHostname:!0,Networks:{"->":!0,1:["$parent",function(p){return components.network.build({$profiles:p.$profiles,$band:"2.4GHz"})}],2:["$parent",function(p){return components.network.build({$profiles:p.$profiles,$band:"5GHz"})}]},Rules:{"->":!0,"{$profiles, $profileKey}":["$parent",function(p){return p.$profiles}],"{$macFilters, $key}":["$profiles*",function(p){return funcs.newConfig.normalize(p.MACFilter)}],":":["$profileKey*","$key*",function(pKey,key){return pKey+key}],$host:["$root","$macFilters*",function(r,mf){return getHost(r.$data,mf.MAC)}],Network:["$profiles","$macFilters",function(p,mf){return mf?p.Inx.toString():void 0}],Band:["$profiles","$macFilters",function(p,mf){return mf?"2.4GHz"==p.Band?"1":"2":void 0}],BandInx:["$profiles","$macFilters",function(p,mf){return mf?p.BandInx:void 0}],MAC:["$macFilters*",function(mf){return mf.MAC}],Enable:["$macFilters*",function(mf){return mf.Enable}],Hostname:["$macFilters*",function(mf){return mf.Name}],Inx:["$key*",function(k){return k}],HostInst:["$host*",function(h){return h.__Inst}]}}}});return pattern.build({$data:data})}function getBand(band){return band.replace(/\./g,"").replace(/GHz/g,"")}function getAccessPolicy(accessPolicy){switch(accessPolicy){case"Disable":return"off";case"Allow":return"allow";case"Deny":return"deny"}}function nativeToDsysinit(data){function getRules(allRules,band,network,hostnames){var rules=_.omit(allRules,function(rule,key){return-1!=key.indexOf("-")});return rules=_.where(rules,{Band:band,Network:network}),_.map(rules,function(elem){if(!elem.HostInst){var host=_.findKey(hostnames,function(obj){return obj.MAC.toUpperCase()==elem.MAC.toUpperCase()});host&&(elem.HostInst=host)}return _.has(elem,"Hostname")&&!elem.Hostname&&(elem.Hostname=""),elem})}function getAccessPolicy(accessPolicy){switch(accessPolicy){case"off":return"Disable";case"allow":return"Allow";case"deny":return"Deny"}}function getHosts(data){function getUniqueItemByParam(arr,param){for(var n=arr.length,k=0,b=[],i=0;n>i;i++){for(var j=0;k>j&&b[j][param].toUpperCase()!==arr[i][param].toUpperCase();)j++;j==k&&(b[k]=arr[i],k++)}return b}var result=[],networks=funcs.fetchBranch(data,paths.wifiProfiles),rules=funcs.fetchBranch(data,paths.wifiMACFilter),hostnames=funcs.fetchBranch(data,paths.hostnames);return _.each(networks,function(net,key){_.each(net.List,function(list,id){result=result.concat(getRules(rules,key,id,hostnames))})}),getUniqueItemByParam(result,"MAC")}var pattern=T({"->":["$data","Device"],$data:":external",Device:{"->":!0,WiFi:{APProfile:{"->":["$rules","$netKey","$profileKey","MACFilter"],$rules:["$root",function(r){return funcs.fetchBranch(r.$data,paths.wifiMACFilter)}],"{$networks, $netKey}":["$root",function(r){return funcs.fetchBranch(r.$data,paths.wifiProfiles)}],"{$profiles, $profileKey}":["$networks",function(net){return net.List}],":":["$profileKey*",function(key){return key}],AccessPolicy:["$profiles",function(p){return getAccessPolicy(p.AccessPolicy)}],MACFilter:{"->":!0,"{$rules, $key}":["$parent",function(p){return getRules(p.$rules,p.$netKey,p.$profileKey)}],":":["$rules*","$key*",function(r,key){return r.Inx?r.Inx:key+"+"}],MAC:["$rules*",function(r){return r.MAC}],Enable:["$rules*",function(r){return r.Enable}],Name:["$rules*",function(r){return r.Hostname}]}}},Hostnames:{"->":!0,"{$hosts, $i}":["$root",function(r){return getHosts(r.$data)}],":":["$hosts*","$i*",function(h,i){return h.HostInst?h.HostInst:"+"+i}],MAC:["$hosts*",function(h){return h.MAC}]}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={radio:"Device.WiFi.Radio.",hostnames:"Device.Hostnames.",wifiProfiles:"Device.WiFiMACFilter.Networks.",wifiMACFilter:"Device.WiFiMACFilter.Rules.",easyMesh:"Device.Services.EasyMesh.",ifaces:"Device.Network.Interface.WiFi."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit};var components={};components.network=T({"->":["$input","List"],$profiles:":external",$band:":external",$input:["$profiles","$band",function(p,b){return _.filter(p,function(e){return e.Band&&e.Band==b})}],"?":["$input",function(i){return i.length>0}],Band:["$band",function(b){return getBand(b)}],BandInx:["$input",function(i){return i[0].BandInx}],List:{"->":!0,"{$profilesList}":["$root",function(r){return r.$input}],":":["$profilesList*",function(p){return p.Inx}],BSSID:["$profilesList*",function(p){return p.BSSID}],SSID:["$profilesList*",function(p){return p.SSID}],AccessPolicy:["$profilesList*",function(p){return getAccessPolicy(p.AccessPolicy)}],Enable:["$profilesList*",function(p){return"Disable"!=p.AccessPolicy}]}})},function(module,exports,__webpack_require__){"use strict";"use version 6";!function(){function pull(cb){function fetchData(){return Promise.all([cpe.GetParameterValues(configPaths,void 0,!0),cpe.GetParameterAttributes(configPaths,void 0,!0)])}function initPull(response){var config=funcs.buildTree(response[0].result.ParameterList);return dms.attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),dms.data={Device:{DNS:converter.dsysinitToNative(config)}},dms.__initialData=funcs.deepClone(dms.data),cb&&cb(),Promise.resolve()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),Promise.reject(error)}return fetchData().then(initPull,errorCb)}function push(cb){function success(){return cb&&cb(),Promise.resolve()}function error(response){var error=response&&response.error?response.error:{};return cb&&cb(error),Promise.reject()}var initData=converter.nativeToDsysinit(dms.__initialData),newData=converter.nativeToDsysinit(dms.data),diff=funcs.newConfig.makeDiff(initData,newData,dms.attrs);return _.isEmpty(diff)?(cb&&cb(),Promise.resolve()):void cpe.ApplyDifference(diff).then(success,error)}var _=__webpack_require__(4),funcs=__webpack_require__(5),cpe=__webpack_require__(3),converter=(__webpack_require__(32),__webpack_require__(225)),paths={dhcp:"Device.Network.Server.DHCP.",connection:"Device.Network.Connection.",group:"Device.Network.Group.",dns:"Device.Network.DNS.",server:"Device.Network.Server.",iface:"Device.Network.Interface.",usbConns:"Device.USB.Connection."},dms={pull:pull,push:push,data:null,__initialData:null,attrs:null};module.exports=dms;var configPaths=[paths.dns,paths.server,paths.iface,paths.connection,paths.group];autoconf.BR2_PACKAGE_ANWEB_USB_MODEM&&configPaths.push(paths.usbConns)}()},function(module,exports,__webpack_require__){"use strict";var _interopRequireDefault=__webpack_require__(7),_slicedToArray2=_interopRequireDefault(__webpack_require__(226));!function(){function dsysinitToNative(data){function getGroup(data,dhcp){var groups=funcs.fetchBranch(data,paths.group);return _.findWhere(groups,{LAN:dhcp.Interface})}function getIfname(source,dnsMode,group,ipType){var ifname;if("Default"==dnsMode||"None"==dnsMode){var order="v4"==ipType?group.WAN.order:group.WANv6.order,wans="v4"==ipType?group.WAN:group.WANv6;ifname=order.length?wans[order[0]].Link:""}else ifname=source;return ifname}function getSubIface(iface,ipType){var subIface;if(/Device\.USB\.Connection\.\d+\./.test(iface)){var conn=funcs.fetchBranch(data,iface),connLink=_.find(conn.Connections,function(c){return"v4"==ipType?c.Link&&-1==c.Link.indexOf("v6"):c.Link&&-1!=c.Link.indexOf("v6")});connLink&&(subIface=connLink.Link)}return subIface}function getServers(servers,ifname,subIface){function correctOrder(_servers){var r=[];return _servers.order.forEach(function(e){r.push({IPAddress:_servers[e].IPAddress,__id:parseInt(e)})}),r}var ret=[];if(Object.keys(servers).length>2?ret=correctOrder(servers):null,!ret.length){var dns=funcs.fetchBranch(data,paths.dns+"Current."),activeDns=_.findWhere(dns,{Origin:null!==subIface&&void 0!==subIface?subIface:ifname});activeDns?ret=correctOrder(activeDns.Address):null}return ret}function getAfterServers(ipType){var dnsAfter=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.dns+"After.")),ipFunc="v4"==ipType?funcs.is.ipv4:funcs.is.ipv6;return _.chain(dnsAfter).map(function(elem,key){return elem.__id=key,elem}).filter(function(elem){return ipFunc(elem.IPAddress)}).value()}function getIfaces(group,data){function getIfaceList(group,data,type){function getConns(){function addVpnConns(conns){for(var vpnConnsNewKeys={},inst=conns.max_instance+1,_loop=function(){var _Object$entries$_i=_slicedToArray2["default"](_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];"max_instance"!==key&&allowedVpnConns.some(function(e){return value.Link.match(e)})?(vpnConnsNewKeys[inst]=value,inst++):0},_i=0,_Object$entries=Object.entries(group.VPN);_i<_Object$entries.length;_i++)_loop();return Object.assign(conns,vpnConnsNewKeys)}var ret="v4"==type?group.WAN:group.WANv6;return"v4"==type&&group.VPN?addVpnConns(ret):ret}var result={},conns=getConns(),order=conns.order?conns.order:0,gwKey=order&&order.length?order[0]:void 0;return _.each(funcs.newConfig.normalize(conns),function(elem,key){var link=elem.Link,iface=funcs.fetchBranch(data,link);iface&&(_.isEmpty(iface.Name)&&(iface=funcs.fetchBranch(data,iface.Interface)),result[link]={Name:iface.Name||iface.Ifname,Gwif:gwKey==key})}),result}var ifaces={V4:{},V6:{}};return ifaces.V4=getIfaceList(group,data,"v4"),_.has(group,"WANv6")&&(ifaces.V6=getIfaceList(group,data,"v6")),ifaces}var pattern=T({"->":["$data","$dhcp","$conns","$group","Ifaces","V4","V6"],$data:":external",$dhcp:["$data",function(d){return funcs.fetchBranch(d,paths.dhcp)}],$group:["$data","$dhcp",function(d,dhcp){return getGroup(d,dhcp)}],$conns:["$data",function(d){return funcs.fetchBranch(d,paths.conns)}],__DhcpInst:"1",AvailDefroute:["$dhcp*",function(dhcp){return _.has(dhcp.DHCPv4,"DNSSource")}],AvailIPv6:["$group*",function(gr){return _.has(gr,"WANv6")}],Ifaces:{"->":["$ifaces","V4","V6"],$group:["$parent",function(p){return p.$group}],$data:["$parent",function(p){return p.$data}],$ifaces:["$group*","$data",function(gr,data){return getIfaces(gr,data)}],V4:{"->":!0,"{$ifaces, $i}":["$parent",function(p){return p.$ifaces.V4}],":":["$i*",function(i){return i}],Name:["$ifaces*",function(i){return i.Name}],Gwif:["$ifaces*",function(i){return i.Gwif}]},V6:{"->":["?"],"?":["$parent",function(p){return!!p.$ifaces.V6}],"{$ifaces, $i}":["$parent",function(p){return p.$ifaces.V6}],":":["$i*",function(i){return i}],Name:["$ifaces*",function(i){return i.Name}],Gwif:["$ifaces*",function(i){return i.Gwif}]}},V4:{"->":["$dhcp","$ifname","Servers","After"],$dhcp:["$parent",function(p){return p.$dhcp.DHCPv4}],$group:["$parent",function(p){return p.$group}],Defroute:["$dhcp*",function(dhcp){return dhcp.DNSMode?"Default"==dhcp.DNSMode:void 0}],Manual:["$dhcp*",function(dhcp){return"None"==dhcp.DNSMode}],Ifname:["$dhcp*","$group*",function(dhcp,group){return dhcp.DNSMode?getIfname(dhcp.DNSSource,dhcp.DNSMode,group,"v4"):""}],$ifname:["Ifname",function(i){return i}],Servers:{"->":!0,$dhcp:["$parent",function(p){return p.$dhcp}],$ifname:["$parent",function(p){return p.$ifname}],$subIface:["$ifname",function(ifname){return getSubIface(ifname,"v4")}],"{$servers, $i}":["$dhcp*","$ifname","$subIface",function(dhcp,ifname,subIface){return getServers(dhcp.DNSServers,ifname,subIface)}],":":["$i",function(i){return i+1}],$return:["$servers",function(s){return s}]},After:{"->":!0,$data:["$root",function(r){return r.data}],"{$servers, $i}":["$data",function(d){return getAfterServers("v4")}],":":["$i",function(i){return i}],IPAddress:["$servers*",function(s){return s.IPAddress}],__id:["$servers*",function(s){return s.__id}]}},V6:{"->":["?","$dhcp","$ifname","Servers"],$dhcp:["$parent",function(p){return p.$dhcp.DHCPv6;
}],$group:["$parent",function(p){return p.$group}],"?":["$group*",function(gr){return _.has(gr,"WANv6")}],Defroute:["$dhcp*",function(dhcp){return dhcp.DNSMode?"Default"==dhcp.DNSMode:void 0}],Manual:["$dhcp*",function(dhcp){return"None"==dhcp.DNSMode}],Ifname:["$dhcp*","$group*",function(dhcp,group){return dhcp.DNSMode?getIfname(dhcp.DNSSource,dhcp.DNSMode,group,"v6"):""}],$ifname:["Ifname",function(i){return i}],Servers:{"->":!0,$dhcp:["$parent",function(p){return p.$dhcp}],$ifname:["$parent",function(p){return p.$ifname}],$subIface:["$ifname",function(ifname){return getSubIface(ifname,"v6")}],"{$servers, $i}":["$dhcp*","$ifname","$subIface",function(dhcp,ifname,subIface){return getServers(dhcp.DNSServers,ifname,subIface)}],":":["$i",function(i){return i+1}],$return:["$servers",function(s){return s}]},After:{"->":!0,$data:["$root",function(r){return r.$data}],"{$servers, $i}":["$data",function(d){return getAfterServers("v6")}],":":["$i",function(i){return i}],IPAddress:["$servers*",function(s){return s.IPAddress}],__id:["$servers*",function(s){return s.__id}]}}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getDnsSource(protocol){var servers=_.toArray(protocol.Servers);return servers=_.compact(servers),protocol.Manual?{mode:"None",source:""}:protocol.Defroute?{mode:"Default",source:""}:{mode:"Link",source:protocol.Ifname}}function serversToDsysinit(protocol){var ret={},keys=Object.keys(protocol.Servers);return protocol.Manual&&keys.length&&keys.forEach(function(e){var serv=protocol.Servers[e];serv.__id?ret[serv.__id]={IPAddress:serv.IPAddress}:ret[e]={IPAddress:serv.IPAddress}}),ret}function getAfterServers(data){var v4=data.V4,v6=data.V6,servers=_.toArray(v4.After);return servers=v6?servers.concat(_.toArray(v6.After)):servers,_.filter(servers,function(e){return!_.isEmpty(e.IPAddress)})}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Network:{"->":!0,Server:{"->":!0,DHCP:{"->":!0,$data:["$root",function(r){return r.$data.Device.DNS}],":":["$data",function(d){return d.__DhcpInst}],DHCPv4:{"->":!0,$data:["$root",function(r){return r.$data.Device.DNS}],DNSServers:["$data",function(d){return serversToDsysinit(d.V4)}],$DNSSource:["$data",function(d){return getDnsSource(d.V4)}],DNSMode:["$DNSSource",function(p){return p.mode}],DNSSource:["$DNSSource",function(p){return p.source}]},DHCPv6:{"->":!0,$data:["$root",function(r){return r.$data.Device.DNS}],DNSServers:["$data",function(d){return serversToDsysinit(d.V6)}],$DNSSource:["$data",function(d){return d.AvailIPv6?getDnsSource(d.V6):void 0}],DNSMode:["$DNSSource*",function(p){return p?p.mode:void 0}],DNSSource:["$DNSSource*",function(p){return p?p.source:void 0}]}}},DNS:{After:{"->":!0,$data:["$root",function(r){return r.$data.Device.DNS}],"{$servers, $inx}":["$data",function(d){return getAfterServers(d)}],":":["$inx*","$servers*",function(i,s){return s.__id?s.__id:"new_inst_"+i}],IPAddress:["$servers*",function(s){return s.IPAddress}]}}}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={dhcp:"Device.Network.Server.DHCP.1.",conns:"Device.Network.Connection.",group:"Device.Network.Group.",dns:"Device.Network.DNS."},allowedVpnConns=[paths.conns+"OpenVPN.",paths.conns+"L2TP.",paths.conns+"PPTP."];module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){function _slicedToArray(arr,i){return arrayWithHoles(arr)||iterableToArrayLimit(arr,i)||unsupportedIterableToArray(arr,i)||nonIterableRest()}var arrayWithHoles=__webpack_require__(18),iterableToArrayLimit=__webpack_require__(227),unsupportedIterableToArray=__webpack_require__(20),nonIterableRest=__webpack_require__(22);module.exports=_slicedToArray,module.exports.__esModule=!0,module.exports["default"]=module.exports},function(module,exports){function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i["return"]||_i["return"]()}finally{if(_d)throw _e}}return _arr}}module.exports=_iterableToArrayLimit,module.exports.__esModule=!0,module.exports["default"]=module.exports},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";!function(){function pull(cb){function initPull(response){var config=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList);return dms._data=converter.dsysinitToNative(config),dms._attrs=funcs.deepClone(attrs),dms._backup=funcs.deepClone(dms._data),cb&&cb(),Promise.resolve()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),Promise.reject()}return Promise.all([cpe.GetParameterValues([paths.radio,paths.bands,paths.apProfile]),cpe.GetParameterAttributes([paths.apProfile])]).then(initPull,errorCb)}function getData(){return dms._data.Rules}function getNetworks(){return dms._data.Networks}function push(cb){function successCb(){return cb&&cb(),Promise.resolve()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),Promise.reject(error)}var data=converter.nativeToDsysinit(dms._data),initData=converter.nativeToDsysinit(dms._backup),diff=funcs.newConfig.makeDiff(initData,data,dms._attrs);return _.isEmpty(diff)?cb&&cb():cpe.ApplyDifference(diff).then(successCb,errorCb)}function wasModified(){return!_.isEqual(dms._data,dms._backup)}var _=__webpack_require__(4),funcs=__webpack_require__(5),cpe=__webpack_require__(3),converter=__webpack_require__(230),dms={pull:pull,push:push,getData:getData,getNetworks:getNetworks,wasModified:wasModified,_data:null,_attrs:null,_backup:null},paths={radio:"Device.WiFi.Radio.*.AccessPoint.",bands:"Device.WiFi.Radio.*.OperatingFrequencyBand",apProfile:"Device.WiFi.APProfile."};module.exports=dms}()},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getProfiles(data){var radio=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.radio)),result={},key=1;return _.each(radio,function(item){_.each(funcs.newConfig.normalize(item.AccessPoint),function(ap){var profile=ap.Profile,profileId=Number(profile.split(".").at(-2));if(profileId){var approfile=funcs.deepClone(funcs.fetchBranch(data,profile));approfile.Band=item.OperatingFrequencyBand,approfile.Inx=profileId,result[key++]=approfile}})}),result}var pattern=T({"->":["$profiles","Rules","Networks"],$data:":external",$profiles:["$data",function(d){return getProfiles(d)}],NeedSSIDSelect:!0,Networks:{"->":!0,1:["$parent",function(p){return components.network.build({$profiles:p.$profiles,$band:"2.4GHz"})}],2:["$parent",function(p){return components.network.build({$profiles:p.$profiles,$band:"5GHz"})}]},Rules:{"->":!0,"{$profiles, $profileKey}":["$parent",function(p){return p.$profiles}],"{$rules, $key}":["$profiles*",function(p){return funcs.newConfig.normalize(p.StationBandwidth)}],":":["$profileKey*","$key*",function(pKey,key){return pKey+key}],Network:["$profiles","$rules*",function(p,r){return r?p.Inx.toString():void 0}],Band:["$profiles","$rules*",function(p,r){return r?"2.4GHz"==p.Band?"1":"2":void 0}],MAC:["$rules*",function(r){return r.MAC.toUpperCase()}],Enabled:["$rules*",function(r){return r.Enable}],Inx:["$key*",function(k){return k}],ProfileKey:["$profileKey*",function(pk){return pk}],UploadRate:["$rules*",function(r){return r.UploadRate}],DownloadRate:["$rules*",function(r){return r.DownloadRate}],SSID:["$profiles","$rules*",function(p,r){return r?p.SSID:void 0}]}});return pattern.build({$data:data})}function getBand(band){return band.replace(/\./g,"").replace(/GHz/g,"")}function nativeToDsysinit(data){function getRules(allRules,band,network){var rules=_.omit(allRules,function(rule,key){return-1!=key.indexOf("-")});return rules=_.where(rules,{Network:network})}var pattern=T({"->":["$data","Device"],$data:":external",Device:{WiFi:{APProfile:{"->":["$rules","$netKey","$profileKey","StationBandwidth"],$rules:["$root",function(r){return r.$data.Rules}],"{$networks, $netKey}":["$root",function(r){return r.$data.Networks}],"{$profiles, $profileKey}":["$networks",function(net){return net.List}],":":["$profileKey*",function(key){return key}],StationBandwidth:{"->":!0,"{$rules, $key}":["$parent",function(p){return getRules(p.$rules,p.$netKey,p.$profileKey)}],":":["$rules*","$key*",function(r,key){return r.Inx?r.Inx:key+"+"}],MAC:["$rules*",function(r){return r.MAC}],Enable:["$rules*",function(r){return r.Enabled}],UploadRate:["$rules*",function(r){return r.UploadRate}],DownloadRate:["$rules*",function(r){return r.DownloadRate}]}}}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={radio:"Device.WiFi.Radio."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit};var components={};components.network=T({"->":["$input","List"],$profiles:":external",$band:":external",$input:["$profiles","$band",function(p,b){return _.filter(p,function(e){return e.Band&&e.Band==b})}],"?":["$input",function(i){return i.length>0}],Band:["$band",function(b){return getBand(b)}],List:{"->":!0,"{$profilesList}":["$root",function(r){return r.$input}],":":["$profilesList*",function(p){return p.Inx}],BSSID:["$profilesList*",function(p){return p.BSSID}],SSID:["$profilesList*",function(p){return p.SSID}]}})},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={nativeToDsysinit:__webpack_require__(233),dsysinitToNative:__webpack_require__(234)}},function(module,exports,__webpack_require__){"use strict";"use version 6";function isFirewallMode(deviceMode){return"Firewall"==deviceMode}function getBaseIface(conn,root,deviceMode,type){var ret,_type=type?type:conn.type;if(isFirewallMode(deviceMode))ret=funcs.fetchBranch(root.$input,conn.data.MediaPath).__Link;else{var baseConn=funcs.fetchBranch(root.$input,conn.data.BaseConnection).__Link;switch(_type){case"PPTP":case"IPsec":ret=conn.__isVPN?"Device.Network.Group.1.":baseConn;break;case"L2TP":ret=conn.__isVPN?"Device.Network.Group.1.":conn.data.BaseConnectionIPSec?conn.data.BaseConnectionIPSec:baseConn;break;case"IPIP6":case"SIT":ret=baseConn}}return ret}function getIfaceEnabled(conns,iface){if("BRIDGE"!=iface.data.LinkType)return iface.data.Enable;var bridgeConns=_.filter(conns,{type:"Bridge"});if(!bridgeConns.length)return iface.data.Enable;var connIface=_.find(bridgeConns,function(elem){return elem.data.__Link==iface.data.__Link});return connIface?connIface.data.Enable:iface.data.Enable}function getIGMPConns(conns){var ipv4oeConns=_.filter(conns,function(c){return"DHCP"==c.type||"Static"==c.type}),upstreams=_.filter(ipv4oeConns,function(c){return!!funcs.fetchBranch(c,"data.Flags.IGMP")});if(__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_35980||__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_42512||__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_49221){var pppoeConn=conns.find(function(c){return"PPPoE"==c.type&&!!funcs.fetchBranch(c,"data.Flags.IGMP")});if(pppoeConn){var fakePPPoE=funcs.deepClone(pppoeConn);fakePPPoE.data.__Link=pppoeConn.data.__LinkInterface,fakePPPoE.link=pppoeConn.data.__LinkInterface,upstreams.push(fakePPPoE)}}if(upstreams.length>0)return upstreams;var newConn=_.find(ipv4oeConns,function(c){return c.__isNew});return newConn?[newConn]:upstreams}function getMLDProxyConns(conns){var ipv6oeConns=_.filter(conns,function(c){return"DHCPv6"==c.type||"Staticv6"==c.type}),upstreams=_.filter(ipv6oeConns,function(c){return!!funcs.fetchBranch(c,"data.Flags.MLDProxy")});return upstreams.length>0?upstreams[0]:upstreams}function getUdpxyConns(conns){var ipv4oeConns=_.filter(conns,function(c){return"DHCP"==c.type||"Static"==c.type}),upstreams=_.find(ipv4oeConns,function(c){return!!funcs.fetchBranch(c,"data.Flags.Udpxy")});return upstreams}function isSimpleMode(deviceMode){return!!deviceMode&&"Firewall"!=deviceMode}function flatConnections(input){var result=[];return _.each(input,function(elem,type){_.isObject(elem)&&elem.Connection&&_.each(elem.Connection,function(conn,inst){result.push({data:conn,inst:inst,type:type,path:"Device.WAN."+type+".Connection."+inst+"."})})}),result}function getConnections(conns){function isRemoveConn(inst){return/\-$/.test(inst)}function hasAdditonalConn(conn){return"PPPoEv6"==conn.type||"PPPoEDual"==conn.type||"PPTP"==conn.type&&"L2TPDUAL"==conn.data.ActualType||"PPTP"==conn.type&&!!conn.data.IPsec}function getAdditionalConn(conn,index,parentConn){var additionalConn=funcs.deepClone(conn);return"PPPoEv6"==conn.type||"PPPoEDual"==conn.type?(conn.data.__subConnInst=additionalConn.inst,additionalConn.type="IPv6oE"):"PPTP"==conn.type&&conn.data.IPsec?additionalConn.type="IPsec":"PPTP"==conn.type&&"L2TPDUAL"==conn.data.ActualType&&(conn.data.__subConnInst=additionalConn.inst,additionalConn.type="IPv6oE"),additionalConn.parentConn=parentConn.link,additionalConn.data.Flags=funcs.deepClone(parentConn.data.Flags),parentConn.data.__PingRuleInstSub&&(additionalConn.data.__PingRuleInst=parentConn.data.__PingRuleInstSub),parentConn.data.__RIPNetworkInstSub&&(additionalConn.data.__RIPNetworkInst=parentConn.data.__RIPNetworkInstSub),parentConn.data.__NATZoneInstSub&&(additionalConn.data.__NATZoneInst=parentConn.data.__NATZoneInstSub),parentConn.data.__IPsecInst&&(additionalConn.__Link="Device.Network.Connection.IPsec"+parentConn.data.__IPsecInst+"."),prepareConn(additionalConn,index)}function prepareConn(elem,index){function getLink(data,type,inst){if(data.__Link&&~data.__Link.indexOf(type))return data.__Link;if(data.__LinkSub)return data.__LinkSub;var newInst="new_conn_"+type+"_"+inst;return("USB"==type?"Device.USB.Connection.":"Device.Network.Connection."+type+".")+newInst+"."}function getType(conn,name){switch(name){case"IPv4oE":return"DHCP"==conn.AddressingType?"DHCP":"Static";case"IPoA":return"Static";case"IPv6oE":return"Static"==conn.Origin?"Staticv6":"DHCPv6";case"PPTP":return"PPTP"==conn.ActualType?"PPTP":"L2TP";case"PPPoA":case"PPPoEv6":case"PPPoEDual":return"PPPoE";default:return name}}function getInst(link){var arrLink=link?link.split("."):null,cpeInst=arrLink?arrLink[arrLink.length-2]:null;return cpeInst}function isPPP(type){return _.contains(["PPPoE","PPPoEv6","PPPoEDual","PPTP","L2TP","L2TPDUAL","PPPoA"],type)}function isVPN(type,data){return"IPsec"==type||!("PPTP"!=type&&"L2TP"!=type&&"Static"!=type&&"IPIP6"!=type&&"SIT"!=type||!data.AutomaticalConnection)}function getVersion(type,data){return"PPTP"==type&&"L2TPDUAL"==data.ActualType?"Dual":"PPPoEDual"==type?"Dual":["IPv6oE","PPPoEv6","SIT"].includes(type)?"IPv6":"USB"==type?data.Version:"IPv4"}var version=getVersion(elem.type,elem.data),type=getType(elem.data,elem.type),link=getLink(elem.data,type,elem.inst),inst=getInst(link);return"PPTP"==elem.data.__Type&&"L2TPOVERIPSEC"==elem.data.ActualType&&elem.data.__New&&(elem.data.BaseConnectionIPSec="Device.Network.Connection.IPsec.new_conn_IPsec_"+elem.inst+"."),{data:elem.data,inst:inst,type:type,link:link,version:version,__isNew:elem.data.__New,__nativePath:elem.path,__nativeType:elem.type,__isPPP:isPPP(type),__isVPN:isVPN(type,elem.data),__parentConn:elem.parentConn,__NATBridgeLink:elem.data.__NATBridgeLink}}function setLinks(conns){function getLinkConfiguration(type,inst){var newInst="new_ppp_configuration_"+type+"_"+inst;return"Device.Network.Settings.PPPClient."+newInst+"."}_.each(conns,function(elem){elem.data.__Link||(elem.data.__Link=elem.link),elem.__isPPP&&!elem.data.__LinkConfiguration&&(elem.data.__LinkConfiguration=getLinkConfiguration(elem.type,elem.inst))}),_.each(conns,function(elem){if(elem.__isPPP&&!elem.data.__LowerConnection&&elem.data.__LowerConnectionNative){var lowerConnectionPath=elem.data.__LowerConnectionNative,lowerConnection=_.find(conns,function(e){return e.__nativePath==lowerConnectionPath});lowerConnection&&(elem.data.__LowerConnection=lowerConnection.data.__Link)}})}var outputConns=[];return _.each(conns,function(conn,index){if(!isRemoveConn(conn.inst)){var output=prepareConn(conn,index);if(outputConns.push(output),hasAdditonalConn(conn)){var additionalConn=getAdditionalConn(conn,index,output);outputConns.push(additionalConn)}}}),setLinks(outputConns),outputConns}function getZones(conns,nativeModel,type){var result={2:{conns:_.filter(conns,function(c){return("IPv4"==type&&systemIPv4(c)||"IPv6"==type&&systemIPv6(c))&&"Bridge"!=c.type&&"IPsec"!=c.type&&("USB"!=c.type||!c.data.InterfaceOnly)}),typeZone:"wan"}};return result}function getZoneIfaceInst(conn,ifaceInst,zone,version){switch(zone.typeZone){case"wan":return"USB"==conn.type&&"IPv6"==version?conn.data.__NATZonev6Inst||"new_inst_"+ifaceInst:conn.data.__NATZoneInst||"new_inst_"+ifaceInst;case"usb":return"IPv4"==version?conn.data.__UsbZoneInst||"new_inst_"+ifaceInst:conn.data.__UsbZonev6Inst||"new_inst_"+ifaceInst}}function getInterfaces(conns,media){function getInst(link){var arrLink=link.split(".");return arrLink[arrLink.length-2]}function isUniqIface(ifaces,type,inst){return!_.find(ifaces,function(iface){return iface.type==type&&iface.inst==inst})}function findConnByMedia(conns,mediaType,mediaLink){return _.find(conns,function(conn){if(!conn.data.Media)return!1;var connMedia=funcs.fetchBranch(conn.data.Media,mediaType+".");return connMedia&&connMedia.__Link==mediaLink})}var ifaces=[],mediaTypes=[{name:"Bridging",prefix:"Bridge"},{name:"Ethernet",prefix:"Interface"},{name:"WiFi",prefix:"Network"},{name:"DSL.ATM",prefix:"Link"},{name:"DSL.PTM",prefix:"Link"}];return _.each(mediaTypes,function(mediaType){var mediaInsts=funcs.fetchBranch(media,mediaType.name+"."+mediaType.prefix+".");_.each(mediaInsts,function(mediaInst){var link=mediaInst.__Link,type=mediaType.name,inst=getInst(link),conn=findConnByMedia(conns,type,link);isUniqIface(ifaces,type,inst)&&ifaces.push({type:type,inst:inst,data:mediaInst,conn:conn?conn.data:void 0})})}),ifaces}function getSettings(conns){function getParams(input){var arrLink=input.data.__LinkConfiguration.split(".");return{data:input.data,type:arrLink[arrLink.length-3],inst:arrLink[arrLink.length-2],version:input.version,nativeConnType:input.__nativeType}}var result=[];return _.each(conns,function(elem){elem.data.__LinkConfiguration&&result.push(getParams(elem))}),result}function getGroups(conns,input,deviceMode){function getDLConns(conns){var connsPPPoE=_.filter(conns,function(c){return"PPPoE"==c.type&&("IPv4"==c.version||"Dual"==c.version)}),connsL2TP=_.filter(conns,function(c){return"L2TP"==c.type}),connsL2TPwithBaseConns=[];return _.each(connsL2TP,function(l2tp){var lowerConn=conns.find(function(conn){return"Device.WAN.".concat(conn.data.__Path)==l2tp.data.BaseConnection});lowerConn.data.DualLAN={Enable:!!l2tp.data.DualLAN&&l2tp.data.DualLAN.Enable},connsL2TPwithBaseConns.push(l2tp,lowerConn)}),_.union(connsPPPoE,connsL2TPwithBaseConns)}function getInst(linkGroup,type,inst){var arrLink=linkGroup?linkGroup.split("."):null;return arrLink?arrLink[arrLink.length-2]:"new_group_"+type+"_"+inst}function findConnLink(conns,link){var subConn=_.find(conns,{__parentConn:link});return subConn.link}if("Firewall"!=deviceMode){var dl=input.Device.WAN.DualLAN,output={1:[]};if(_.each(conns,function(conn){if("IPsec"!=conn.type&&!_.find(conns,function(c){return conn.__parentConn==c.link&&c.__isVPN&&"L2TPDUAL"==c.data.ActualType})){var version=conn.version,obj={},groupInst=conn.data.__GroupInst||1,linkGroup="IPv4"==version||"Dual"==version?conn.data.__LinkGroupv4:conn.data.__LinkGroupv6,rootPath="IPv4"==version||"Dual"==version?"Device.Network.Group."+groupInst+".WAN.":"Device.Network.Group."+(conn.data.__GroupInst||1)+".WANv6.",inst=getInst(linkGroup,conn.type,conn.inst);dl&&conn.data.DualLAN&&conn.data.DualLAN.Enable&&"L2TP"==conn.type||(obj={inst:inst,version:"Dual"==version?"IPv4":version,link:rootPath+inst+".",type:conn.type,vpn:conn.__isVPN,data:{Link:conn.data.__Link,InterfaceOnly:conn.data.InterfaceOnly},disabledGwif:conn.data.DisabledGateway,groupKey:funcs.newConfig.extractInst(linkGroup,0)},output[groupInst]||(output[groupInst]=[]),output[groupInst].push(obj),"USB"==conn.type&&"Dual"==version&&(linkGroup=conn.data.__LinkGroupv6,rootPath="Device.Network.Group."+groupInst+".WANv6.",inst=getInst(linkGroup,conn.type,conn.inst),obj={inst:inst,version:"IPv6",link:rootPath+inst+".",type:conn.type,vpn:conn.__isVPN,data:{Link:conn.data.__Link,InterfaceOnly:conn.data.InterfaceOnly},disabledGwif:conn.data.DisabledGateway},output[groupInst]||(output[groupInst]=[]),output[groupInst].push(obj)))}}),dl&&dl.__has){var key=dl.__GroupInst?dl.__GroupInst:"new_group",dlConns=getDLConns(conns),dlRes=[];_.each(dlConns,function(conn,inx){if(conn.data.DualLAN&&conn.data.DualLAN.Enable&&("L2TP"==conn.type||"PPPoE"==conn.type)){var rootPath="Device.Network.Group."+key,keyv4=conn.data.DualLAN.__GroupInst?conn.data.DualLAN.__GroupInst:conn.inst;if(dlRes.push({inst:keyv4,version:conn.version,link:rootPath+".WAN."+keyv4+".",type:conn.type,vpn:conn.__isVPN,enableDualLan:conn.data.DualLAN.Enable,dualLanBridge:dl.Group.LAN,data:{Link:conn.data.__Link,InterfaceOnly:conn.data.InterfaceOnly}}),"Dual"==conn.version){var keyv6=conn.data.DualLAN.__Groupv6Inst?conn.data.DualLAN.__Groupv6Inst:conn.inst,connLink=conn.data.__LinkSub?conn.data.__LinkSub:findConnLink(conns,conn.data.__Link);dlRes.push({inst:keyv6,version:"IPv6",type:"DHCPv6",vpn:!1,link:rootPath+".WANv6."+keyv6+".",data:{Link:connLink,InterfaceOnly:conn.data.InterfaceOnly}})}}}),output[key]=dlRes}return output}}function getVPN(conns){function getInst(linkVPN,type,inst){var arrLink=linkVPN?linkVPN.split("."):null;return arrLink?arrLink[arrLink.length-2]:"new_vpn_"+type+"_"+inst}return _.chain(conns).filter(function(conn){return conn.__isVPN||_.find(conns,function(c){return conn.__parentConn==c.link&&c.__isVPN&&"L2TPDUAL"==c.data.ActualType})}).map(function(conn){var linkVPN=conn.data.__LinkVPN,inst=getInst(linkVPN,conn.type,conn.inst);return{inst:inst,data:{Link:conn.link}}}).value()}function getXDSL(ifaces){function getInst(linkPVC,inst){var arrLink=linkPVC?linkPVC.split("."):null;return arrLink?arrLink[arrLink.length-2]:"new_xdsl_"+inst}return _.chain(ifaces).filter(function(iface){return iface.data.__PVCLink}).map(function(iface){var linkPVC=iface.data.__PVCLink,inst=getInst(linkPVC,iface.inst);return{inst:inst,data:iface.data}}).value()}function getConnMedia(conn){if(_.has(conn,"Media")&&_.has(conn,"MediaType")){var mediaType=conn.MediaType;return funcs.fetchBranch(conn.Media,mediaType+".")||void 0}}function getDNS(conn,isStatic,type){function addDNS(output,value,inst){output[inst]={IPAddress:value.toLowerCase()}}var output={};return(_.has(conn,"DNSIPv6Automatical")&&!conn.DNSIPv6Automatical||isStatic)&&"v4"!=type&&(conn.DNSIPv6Server1&&addDNS(output,conn.DNSIPv6Server1,conn.DNSIPv6Order&&conn.DNSIPv6Order[0]?conn.DNSIPv6Order[0]:"+1"),conn.DNSIPv6Server2&&addDNS(output,conn.DNSIPv6Server2,conn.DNSIPv6Order&&conn.DNSIPv6Order[1]?conn.DNSIPv6Order[1]:"+2")),(_.has(conn,"DNSAutomatical")&&!conn.DNSAutomatical||isStatic)&&"v6"!=type&&(conn.DNSServer1&&addDNS(output,conn.DNSServer1,conn.DNSOrder&&conn.DNSOrder[0]?conn.DNSOrder[0]:"+1"),conn.DNSServer2&&addDNS(output,conn.DNSServer2,conn.DNSOrder&&conn.DNSOrder[1]?conn.DNSOrder[1]:"+2")),output}function getPPPAuth(type){return{CHAP:"AUTO"==type||"CHAP"==type,EAP:"AUTO"==type||"EAP"==type,MSCHAP:"AUTO"==type||"MS-CHAP"==type,MSCHAPv2:"AUTO"==type||"MS-CHAP-V2"==type,PAP:"AUTO"==type||"PAP"==type}}function getPPPEncryption(encr){switch(encr){case"None":return"None";case"MPPE":return"MPPE-40/128";case"MPPE40":return"MPPE-40";case"MPPE128":return"MPPE-128"}}function getPPPOndemand(ct){return"OnDemand"==ct}function getIPv4Address(input){return input.StaticIPAddress0+"/"+funcs.ipv4.mask["short"](input.StaticIPSubnetMask0)}function getIPv6Address(input){return input.StaticIPAddress0+"/"+ +input.StaticIPPrefix0}function getIPv6Mode(origin){switch(origin){case"AutoConfiguredBySlaac":return"Autoconf";case"AutoConfiguredByDHCPv6":return"DHCP";case"AutoConfigured":return"Auto";default:return}}function getGroupList(gs,order,dm,gkey){function getOrder(groups,oldOrder){if(!groups.length)return[];if(groups[0].disabledGwif)return oldOrder;var newOrder=_.pluck(groups,"inst"),curGw=null,unsortOrder=[];oldOrder&&_.isString(oldOrder)&&(oldOrder=oldOrder.split(","),curGw=_.find(groups,function(e){return e.inst==oldOrder[0]}),unsortOrder=_.filter(oldOrder,function(inst){return!(!_.contains(newOrder,inst)||curGw&&curGw.inst==inst)}));var sortConns=_.filter(groups,function(e){return-1!=e.inst.indexOf("new_conn")});curGw&&sortConns.push(curGw);var sortConns=_.sortBy(sortConns,function(conn){var type=conn.type,inst=conn.inst;return"DHCPv6"==type?-1:-1==inst.indexOf("new_conn")||"PPTP"!=type&&"L2TP"!=type&&"PPPoE"!=type?0:-1}),sortOrder=_.pluck(sortConns,"inst");return _.union(sortOrder,unsortOrder)}var output={};if(_.each(gs,function(g){g.groupKey&&g.groupKey!=gkey?output.new_inst={Link:g.data.Link}:output[g.inst]={Link:g.data.Link}}),isSimpleMode(dm)){var order=getOrder(gs,order);order&&order.length?(output.order=[],output.order[0]=order[0]):output.order=[]}return output}function systemIPv4(conn){return"IPv4"==conn.version||"Dual"==conn.version}function systemIPv6(conn){return"IPv6"==conn.version&&"PPPoE"!=conn.type||"Dual"==conn.version&&"USB"==conn.type}function activeFlag(conn,name){return conn.data.Flags&&conn.data.Flags[name]}function inactiveFlag(conn,name){return conn.data.Flags&&!conn.data.Flags[name]}function linkType(lt){switch(lt){case"EoA":return"IPOE_PPPOE";case"IPoA":return"IPOA";case"PPPoA":return"PPPOA";case"BRIDGE":return"BRIDGE"}}function qosClass(qos){switch(qos){case"UBR":return"ubr";case"UBR+":return"ubr_pcr";case"CBR":return"cbr";case"VBR-nrt":return"nrtvbr";case"VBR-rt":return"rtvbr"}}function getUnnumberedIP(input,conns){var output={},unnumberedInst=input.Device.WAN.UnnumberedIP,pppoeConns=_.filter(conns,function(c){return"PPPoE"==c.type&&("IPv4"==c.version||"Dual"==c.version)});if(!pppoeConns)return unnumberedInst&&(output[unnumberedInst]={}),output;var result={};if(_.each(pppoeConns,function(elem){var unnumIP=elem.data.UnnumberedIP;if(unnumIP&&!_.isEmpty(unnumIP.IPAddress)&&!_.isEmpty(unnumIP.Mask)){var key=unnumIP.__IPKey?unnumIP.__IPKey:"new_"+elem.data.Name;result[key]={Enable:!0,Origin:elem.data.__Link,IPAddress:unnumIP.IPAddress+"/"+funcs.ipv4.mask["short"](unnumIP.Mask)}}}),!_.size(result))return unnumberedInst&&(output[unnumberedInst]={IPv4Address:{}}),output;var key=unnumberedInst?unnumberedInst:"new_ip";return output[key]={Enable:!0,IPv4Address:result,LowerLayer:"Device.Network.Interface.Loopback.1.",Name:"Unnumbered IP"},output}function getUnnumberedLink(conn,unnumberedInst){var unnumIP=conn.data.UnnumberedIP;return!unnumIP||_.isEmpty(unnumIP.IPAddress)||_.isEmpty(unnumIP.Mask)?"":unnumIP.__Link?unnumIP.__Link:"Device.Network.IP."+(unnumberedInst?unnumberedInst:"new_ip")+".IPv4Address.new_"+conn.data.Name+"."}function getFWRuleConns(input,conns,type){var pbr=input.Device.WAN.PBREnable,nat=_.filter(conns,function(c){return activeFlag(c,"NAT")}),natv6=_.filter(conns,function(c){return activeFlag(c,"NATv6")}),nonat=_.filter(conns,function(c){return inactiveFlag(c,"NAT")&&"IPv4"==c.version}),nonatv6=_.filter(conns,function(c){return inactiveFlag(c,"NATv6")&&"IPv6"==c.version}),result=_.filter(conns,function(c){return activeFlag(c,"Ping")});result=_.map(result,function(elem){return elem=funcs.deepClone(elem),elem.Direction="NONE",elem.ruletype="ping",elem.Table="Filter",elem});var fwRules=conns.filter(function(c){return c.data.Flags&&0==c.data.Flags.Firewall});if(fwRules.map(function(elem){var obj=funcs.deepClone(elem);obj.ruletype="fw",result.push(obj)}),pbr){var dlConns=_.filter(conns,function(c){return"L2TP"==c.type&&c.data.DualLAN&&c.data.DualLAN.Enable});if(dlConns=_.map(dlConns,function(elem){return elem.ruletype="vrf",elem.__PBRInst=input.Device.WAN.PBRRule,elem}),result=result.concat(dlConns),input.Device.WAN.DualLAN&&input.Device.WAN.DualLAN.__has){var rules="IPv4"==type?input.Device.WAN.DualLAN.Rulesv4:input.Device.WAN.DualLAN.Rulesv6;if(rules){var dlfwRule={};dlfwRule.ruletype="dlvrf",dlfwRule.sourceZone="Device.Firewall."+type+".Zones."+("IPv4"==type?input.Device.WAN.DualLAN.Zonev4:input.Device.WAN.DualLAN.Zonev6)+".",dlfwRule.destZone="Device.Firewall."+type+".Zones.1.",dlfwRule.__Link="Device.Network.Interface.Bridge.1.",dlfwRule.__PBRInst=_.size(rules)?rules.dlToFw:void 0;var lanfwRule={};lanfwRule.ruletype="dlvrf",lanfwRule.sourceZone="Device.Firewall."+type+".Zones.3.",lanfwRule.destZone="Device.Firewall."+type+".Zones.1.",lanfwRule.__Link="Device.Network.Interface.Bridge."+input.Device.WAN.DualLAN.__inst+".",lanfwRule.__PBRInst=_.size(rules)?rules.lanToFw:void 0,result=result.concat([dlfwRule,lanfwRule])}}}if("IPv4"==type&&nat.length>0){var natConns=[];_.map(nat,function(elem){elem.action="MASQUERADE",elem.destIface=elem.link,elem.destZone="Device.Firewall.IPv4.Zones.2.",elem.Direction="POSTROUTING",elem.ruletype="masq",elem.Table="NAT",natConns.push(elem)}),result=result.concat(natConns)}if("IPv6"==type&&natv6.length>0){var natv6Conns=[];_.map(natv6,function(elem){elem.action="MASQUERADE",elem.sourceZone="Device.Firewall.IPv6.Zones.2.",elem.destZone="Device.Firewall.IPv6.Zones.2.",elem.Direction="POSTROUTING",elem.ruletype="masq",elem.Table="NAT",natv6Conns.push(elem)}),result=result.concat(natv6Conns)}if(__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_52347){if("IPv4"==type&&nonat.length>0){var nonatConns=[];_.map(nonat,function(elem){elem=funcs.deepClone(elem),elem.action="ACCEPT",elem.sourceZone="Device.Firewall.IPv4.Zones.2.",elem.sourceIface=elem.link,elem.destZone="Device.Firewall.IPv4.Zones.3.",elem.ruletype="nonat",nonatConns.push(elem)}),result=result.concat(nonatConns)}if("IPv6"==type&&nonatv6.length>0){var nonatv6Conns=[];_.map(nonatv6,function(elem){elem=funcs.deepClone(elem),elem.action="ACCEPT",elem.sourceZone="Device.Firewall.IPv6.Zones.2.",elem.sourceIface=elem.link,elem.destZone="Device.Firewall.IPv6.Zones.3.",elem.ruletype="nonat",nonatv6Conns.push(elem)}),result=result.concat(nonatv6Conns)}}return result}function getNameIfaceATM(allIfaces,currentIface){if(currentIface.data.Name)return currentIface.data.Name;var name="ATM "+currentIface.data.DestinationAddress,ifaces=_.filter(allIfaces,function(iface){return iface.data.Name&&-1!==iface.data.Name.indexOf(name)}),index=getIndexIface(ifaces,currentIface.inst);return index>0?name+"_"+index:name}function getNameIfacePTM(allIfaces,currentIface){if(currentIface.data.Name)return currentIface.data.Name;var vlan=currentIface.conn.VLAN,tag=vlan.Enable?vlan.ID:"untag",name="PTM "+tag,ifaces=_.filter(allIfaces,function(iface){return-1!==iface.data.Name.indexOf(name)}),index=getIndexIface(ifaces,currentIface.inst);return index>0?name+"_"+index:name}function getIndexIface(ifaces,inst){if(!ifaces.length)return null;if("new_inst"==inst){if(1==ifaces.length)return 1;var prefixName=_.last(ifaces).data.Name.match(/\d+$/)[0];return+prefixName+1}return _.findIndex(ifaces,{inst:inst})}function getFWDestZone(conn,type){switch(conn.ruletype){case"ping":case"vrf":return"Device.Firewall."+type+".Zones.1.";case"fw":return"Device.Firewall."+type+".Zones.3.";default:return conn.destZone}}function getFWInst(conn,inx,version){switch(conn.ruletype){case"ping":return"USB"==conn.type&&"IPv6"==version&&"Dual"==conn.version?conn.data.__PingRulev6Inst?conn.data.__PingRulev6Inst:"new_inst_"+inx:conn.data.__PingRuleInst?conn.data.__PingRuleInst:"new_inst_"+inx;case"nonat":return"USB"==conn.type&&"IPv6"==version&&"Dual"==conn.version?conn.data.__NATDisableRuleInstv6?conn.data.__NATDisableRuleInstv6:"new_nonat_inst_"+inx:conn.data.__NATDisableRuleInst?conn.data.__NATDisableRuleInst:"new_nonat_inst_"+inx;
case"fw":return conn.data.__FWRuleInstSub||conn.data.__FWRuleInst?conn.data.__FWRuleInstSub||conn.data.__FWRuleInst:"new_inst_"+inx;case"masq":return"IPv4"==version?conn.data.__NATMasqInst?conn.data.__NATMasqInst:"new_inst_"+inx:conn.data.__NATMasqInstv6?conn.data.__NATMasqInstv6:"new_inst_"+inx;default:return conn.__PBRInst?conn.__PBRInst:"new_inst_"+inx}}function getMasqSourceIface(data){if(!data.$conn)return"";if(data.$groups){var bridgeLink=null;if(_.each(data.$groups,function(group){for(var i=0;i<group.length;i++)if(group[i].data.Link==data.$conn.link&&group[i].enableDualLan){bridgeLink=group[i].dualLanBridge;break}}),bridgeLink)return bridgeLink}return data.$conn.__NATBridgeLink&&"L2TP"!=data.$conn.type?data.$conn.__NATBridgeLink:"Device.Network.Interface.Bridge.1."}function getBandsPreference(conn){var result;return void 0!=conn.data.BandsPreference&&(result=conn.data.BandsPreferenceAuto?"AUTO":conn.data.BandsPreference.filter(function(b){return b.Value&&("auto"==conn.data.Mode||conn.data.Mode.includes("4G")&&/^LTE\d+/.test(b.Key)||conn.data.Mode.includes("3G")&&/^UMTS\d+/.test(b.Key)||conn.data.Mode.includes("2G")&&/^GSM\d+/.test(b.Key))}).map(function(b){return b.Key}).join(",")),result}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),__autoconf="undefined"==typeof autoconf?{}:autoconf;module.exports=function(input){var pattern=T({"->":["$input","$deviceMode","$flatConns","$conns","$ifaces","$settings","$groups","$vpns","$xdsl","$pbr","Device"],$input:":external",$deviceMode:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__DeviceMode")}],$flatConns:["$input",function(o){return flatConnections(funcs.fetchBranch(o,"Device.WAN."))}],$media:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.Media.")}],$conns:["$flatConns",function(o){return getConnections(o)}],$ifaces:["$flatConns","$media",function(cs,m){return getInterfaces(cs,m)}],$settings:["$conns",function(o){return getSettings(o)}],$groups:["$conns","$input","$deviceMode",function(o,i,d){return getGroups(o,i,d)}],$vpns:["$conns",function(o){return getVPN(o)}],$xdsl:["$ifaces",function(o){return getXDSL(o)}],$groupv4Order:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__Groupv4Order")}],$groupv6Order:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__Groupv6Order")}],$igmpDownstreamsInst:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__IgmpDownstreamsInst")}],$mldDownstreamInst:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__MLDDownstreamInst")}],$dsl:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__DSL")}],$natv6:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__NATv6")}],Device:{"->":["Network","Firewall","Routing","Services","xDSL","USB"],Network:{"->":!0,Connection:{"->":!0,DHCP:{"->":["$conn","?","Kabinet"],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"DHCP"==e.type})}],$media:["$conn*",function(c){return getConnMedia(c.data)}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],DNS:["$conn*",function(o){return getDNS(o.data,!1)}],Interface:["$media*",function(o){return o.__Link}],VendorID:["$conn*",function(o){return o.data.VendorID}],Hostname:["$conn*",function(o){return o.data.Hostname}],Kabinet:{"->":["?"],"?":["$parent",function(p){return!!p.$conn&&!!p.$conn.data.Kabinet}],$conn:["$parent",function(p){return p.$conn}],Enable:["$conn*",function(o){return o.data.Kabinet.Enable}],Password:["$conn*",function(o){return o.data.Kabinet.Password}]}},Static:{"->":["$conn","?","Kabinet"],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"Static"==e.type})}],$media:["$conn*",function(c){return getConnMedia(c.data)}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],IPAddress:["$conn*",function(o){return getIPv4Address(o.data)}],Gateway:["$conn*",function(o){return o.data.GatewayIPAddress}],DNS:["$conn*",function(o){return getDNS(o.data,!0)}],Interface:["$media*",function(o){return o.__Link}],Kabinet:{"->":["?"],"?":["$parent",function(p){return!!p.$conn&&!!p.$conn.data.Kabinet}],$conn:["$parent",function(p){return p.$conn}],Enable:["$conn*",function(o){return o.data.Kabinet.Enable}],Password:["$conn*",function(o){return o.data.Kabinet.Password}]}},DHCPv6:{"->":["$conn","?"],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"DHCPv6"==e.type})}],$media:["$conn*",function(c){return getConnMedia(c.data)}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],IPv6Mode:["$conn*",function(o){return getIPv6Mode(o.data.Origin)}],RequestPrefixes:["$conn*",function(c){return c.data.RequestPrefixes}],DNS:["$conn*",function(o){return getDNS(o.data,!1,"v6")}],Interface:["$media","$conn*",function(m,c){return c.__parentConn?c.__parentConn:m?m.__Link:void 0}]},Staticv6:{"->":["$conn","?"],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"Staticv6"==e.type})}],$media:["$conn*",function(c){return getConnMedia(c.data)}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],IPAddress:["$conn*",function(o){return getIPv6Address(o.data).toLowerCase()}],Gateway:["$conn*",function(o){return o.data.GatewayIPv6Address.toLowerCase()}],DNS:["$conn*",function(o){return getDNS(o.data,!0)}],Interface:["$media*",function(o){return o.__Link}]},PPPoE:{"->":["$conn","?"],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"PPPoE"==e.type})}],$media:["$conn*",function(c){return getConnMedia(c.data)}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],DNS:["$conn*",function(o){return getDNS(o.data,!1,"v4")}],ServiceName:["$conn*",function(o){return o.data.ServiceName}],PPPConfiguration:["$conn*",function(o){return o.data.__LinkConfiguration}],Interface:["$conn*",function(o){return o.data.__LinkTunnelInterface}],BaseInterface:["$media*",function(o){return o.__Link}],UnnumberedIP:["$conn*","$root",function(c,r){return getUnnumberedLink(c,r.$input.Device.WAN.UnnumberedIP)}]},PPTP:{"->":["$conn","?"],$deviceMode:["$root",function(r){return r.$deviceMode}],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"PPTP"==e.type})}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],DNS:["$conn*",function(o){return getDNS(o.data,!1)}],ServerAddress:["$conn*",function(o){return o.data.ServiceName}],PPPConfiguration:["$conn*",function(o){return o.data.__LinkConfiguration}],BaseInterface:["$conn*","$root","$deviceMode",function(c,r,dm){return getBaseIface(c,r,dm,"PPTP")}]},L2TP:{"->":["$conn","?"],$deviceMode:["$root",function(r){return r.$deviceMode}],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"L2TP"==e.type})}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],DNS:["$conn*",function(o){return getDNS(o.data,!1,"v4")}],LNS:["$conn*",function(o){return o.data.ServiceName}],PPPConfiguration:["$conn*",function(o){return o.data.__LinkConfiguration}],BaseInterface:["$conn*","$root","$deviceMode",function(c,r,dm){return getBaseIface(c,r,dm,"L2TP")}],LocalHostname:["$conn*",function(o){return o.data.Auth?o.data.Auth.LocalHostname:void 0}],RemoteHostname:["$conn*",function(o){return o.data.Auth?o.data.Auth.RemoteHostname:void 0}],Secret:["$conn*",function(o){return o.data.Auth?o.data.Auth.Secret:void 0}]},IPsec:{"->":!0,$deviceMode:["$root",function(r){return r.$deviceMode}],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"IPsec"==e.type})}],$parentConn:["$conn*","$root",function(c,r){return _.find(r.$conns,function(conn){return conn.link==c.__parentConn})}],":":["$conn*",function(c){return c.inst}],Name:["$conn*",function(o){return o.data.Name}],Enable:["$conn*",function(o){return o.data.Enable}],Key:["$conn*",function(o){return o.data.IPsec.Key}],PFS:["$conn*",function(o){return o.data.IPsec.PFS}],RightPort:["$conn*",function(o){return o.data.IPsec.PortEnabled?o.data.IPsec.Port:0}],Right:["$conn*",function(o){return o.data.ServiceName}],L2TP:["$parentConn*",function(o){return o.link}],Left:["$parentConn*","$root","$deviceMode",function(c,r,dm){return getBaseIface(c,r,dm,"IPsec")}],Type:["$conn*",function(o){return o.data.IPsec.Type}],DPD:["$conn*",function(o){return o.data.IPsec.DPD}],DPDDelay:["$conn*",function(o){return o.data.IPsec.DPDDelay}],DPDTimeOut:["$conn*",function(o){return o.data.IPsec.DPDTimeOut}]},IPIP6:{"->":!0,$deviceMode:["$root",function(r){return r.$deviceMode}],"{$conn, $i}":["$root",function(o){return o.$conns.filter(function(e){return"IPIP6"==e.type})}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(c){return c.data.Enable}],Name:["$conn*",function(c){return c.data.Name}],MTU:["$conn*",function(c){return c.data.MRUAuto?0:c.data.MaxMRUSize}],AFTRNameOption:["$conn*",function(c){return c.data.PeerIPv6Auto}],PeerIPv6:["$conn*",function(c){return c.data.PeerIPv6Auto?"":c.data.PeerIPv6.toLowerCase()}],Mode:["$conn*",function(c){return c.data.Mode}],IPv6:["$conn*","$root","$deviceMode",function(c,r,dm){return getBaseIface(c,r,dm,"IPIP6")}]},SIT:{"->":!0,$deviceMode:["$root",function(r){return r.$deviceMode}],"{$conn, $i}":["$root",function(o){return o.$conns.filter(function(e){return"SIT"==e.type})}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(c){return c.data.Enable}],Name:["$conn*",function(c){return c.data.Name}],Mode:["$conn*",function(c){return c.data.Mode}],PeerIP:["$conn*",function(c){return c.data.PeerIP}],MTU:["$conn*",function(c){return c.data.MRUAuto?0:c.data.MaxMRUSize}],IPv6rdHubAndSpoke:["$conn*",function(c){return"6rd"==c.data.Mode?c.data.IPv6rdHubAndSpoke:void 0}],IPv6rdIPv4MaskLen:["$conn*",function(c){return"6rd"==c.data.Mode?c.data.IPv6rdIPv4MaskLen:void 0}],IPv6rdOption:["$conn*",function(c){return"6rd"==c.data.Mode?c.data.IPv6rdOption:void 0}],IPv6rdPrefix:["$conn*",function(c){return"6rd"==c.data.Mode?c.data.IPv6rdPrefix:void 0}],IPv6rdPrefixLen:["$conn*",function(c){return"6rd"==c.data.Mode?c.data.IPv6rdPrefixLen:void 0}],VPNIPv6:["$conn*",function(c){return"6in4"==c.data.Mode?c.data.VPNIPv6:void 0}],PeerVPNIPv6:["$conn*",function(c){return"6in4"==c.data.Mode?c.data.PeerVPNIPv6:void 0}],RoutedPrefix:["$conn*",function(c){return"6in4"==c.data.Mode?c.data.RoutedPrefix:void 0}],IP:["$conn*","$root","$deviceMode",function(c,r,dm){return getBaseIface(c,r,dm,"SIT")}]}},Interface:{"->":!0,Bridge:{"->":["$iface","VLANPorts"],"{$iface,$i}":["$root",function(r){return _.filter(r.$ifaces,function(i){return"Bridging"==i.type})}],":":["$iface*",function(i){return i.inst}],Enable:["$iface*",function(i){return i.data.Enable}],MACAddress:["$iface*",function(i){return i.data.MACAddress?i.data.MACAddress.toLowerCase():void 0}],MTU:["$iface*",function(i){return i.data.MaxMRUSize}],Name:["$iface*",function(i){return i.data.Name}],CreateInterface:["$iface*",function(i){return i.data.CreateInterface}],ForceBridge:["$iface*",function(i){return i.data.ForceBridge}],ProxyARP:["$iface*",function(o){return o.data.ProxyARP}]},Ethernet:{"->":!0,"{$iface,$i}":["$root",function(o){return _.filter(o.$ifaces,function(e){return"Ethernet"==e.type})}],":":["$iface*",function(i){return i.inst}],Enable:["$iface*",function(o){return o.data.Enable}],MACAddress:["$iface*",function(o){return o.data.MACAddress.toLowerCase()}],MTU:["$iface*",function(o){return o.data.MaxMRUSize}],ProxyARP:["$iface*",function(o){return o.data.ProxyARP}]},WiFi:{"->":!0,"{$iface, $i}":["$root",function(o){return _.filter(o.$ifaces,function(e){return"WiFi"==e.type})}],":":["$iface*",function(i){return i.inst}],Enable:["$iface*",function(o){return o.data.Enable}],ProxyARP:["$iface*",function(o){return o.data.ProxyARP}]},ATM:{"->":!0,$ifaces:["$root",function(o){return _.filter(o.$ifaces,function(e){return"DSL.ATM"==e.type})}],"{$iface, $i}":["$ifaces",function(o){return o}],":":["$iface*",function(i){return i.inst}],$vlan:["$iface*",function(iface){return funcs.fetchBranch(iface,"conn.VLAN.")||void 0}],Enable:["$root","$iface*",function(r,i){return getIfaceEnabled(r.$conns,i)}],LinkType:["$iface*",function(o){return linkType(o.data.LinkType)}],VID:["$vlan*",function(v){return v.Enable?parseInt(v.ID):0}],VPR:["$vlan*",function(v){return v.Enable?parseInt(v.Priority):0}],Name:["$ifaces*","$iface*",function(allIfaces,iface){return getNameIfaceATM(allIfaces,iface)}],MTU:["$iface*",function(o){return o.data.MaxMRUSize}],ProxyARP:["$iface*",function(o){return o.data.ProxyARP}]},PTM:{"->":!0,$ifaces:["$root",function(o){return _.filter(o.$ifaces,function(e){return"DSL.PTM"==e.type})}],"{$iface, $i}":["$ifaces",function(o){return o}],$vlan:["$iface*",function(iface){return funcs.fetchBranch(iface,"conn.VLAN.")||void 0}],":":["$iface*",function(i){return i.inst}],Enable:["$root","$iface*",function(r,i){return getIfaceEnabled(r.$conns,i)}],MACAddress:["$iface*",function(o){return o.data.MACAddress.toLowerCase()}],VID:["$vlan*",function(v){return v.Enable?parseInt(v.ID):0}],VPR:["$vlan*",function(v){return v.Enable?parseInt(v.Priority):0}],Name:["$ifaces*","$iface*",function(allIfaces,iface){return getNameIfacePTM(allIfaces,iface)}],MTU:["$iface*",function(o){return o.data.MaxMRUSize}],ProxyARP:["$iface*",function(o){return o.data.ProxyARP}]}},Settings:{"->":["?","PPP"],"?":["$root",function(o){return o.$settings.length}],PPPClient:{"->":["$ppp","?","KeepAlive"],"?":["$ppp",function(o){return!!o}],"{$ppp,$i}":["$root",function(o){return _.filter(o.$settings,function(e){return"PPPClient"==e.type})}],":":["$ppp*",function(p){return p.inst}],Username:["$ppp*",function(p){return p.data.Username}],Password:["$ppp*",function(p){return p.data.WithoutAuth?"":p.data.Password}],MTU:["$ppp*",function(p){return p.data.MaxMRUSize}],KeepAlive:{"->":!0,$ppp:["$parent",function(p){return p.$ppp}],Enable:["$ppp*",function(p){return p.data.KeepAlive}],Fails:["$ppp*",function(p){return p.data.LCPEchoRetry}],Interval:["$ppp*",function(p){return p.data.LCPEcho}]},Auth:["$ppp*",function(p){return getPPPAuth(p.data.AuthenticationProtocol)}],Encryption:["$ppp*",function(p){return getPPPEncryption(p.data.EncryptionProtocol)}],Ondemand:["$ppp*",function(p){return getPPPOndemand(p.data.ConnectionTrigger)}],OndemandTimeout:["$ppp*",function(p){return p.data.IdleDisconnectTime}],PPPDebug:["$ppp*",function(p){return p.data.PPPDebug}],IPStack:["$ppp*",function(o){return o.version}],LocalIP:["$ppp*",function(o){return o.data.StaticIPAddress0&&o.data.StaticIPAddress0.toLowerCase()}]}},Group:{"->":["$group","WAN","WANv6","VPN"],"{$group, $key}":["$root",function(r){return r.$groups}],":":["$key",function(k){return k}],PBREnable:["$key","$root",function(k,r){return 1==k?r.$input.Device.WAN.PBREnable:void 0}],WAN:{"->":["$group","$order","?"],$deviceMode:["$root",function(r){return r.$deviceMode}],$order:["$root",function(r){return r.$groupv4Order}],$group:["$parent",function(o){return _.filter(o.$group,function(g){return systemIPv4(g)&&!g.vpn&&("USB"!=g.type||!g.data.InterfaceOnly)})}],$return:["$parent","$group","$order","$deviceMode",function(p,gs,order,dm){return getGroupList(gs,order,dm,p.$key)}]},WANv6:{"->":["$group","$order","?"],$deviceMode:["$root",function(r){return r.$deviceMode}],$order:["$root",function(r){return r.__Groupv6Order}],$group:["$parent",function(o){return _.filter(o.$group,function(g){return systemIPv6(g)&&("USB"!=g.type||!g.data.InterfaceOnly)})}],$return:["$parent","$group","$order","$deviceMode",function(p,gs,order,dm){return getGroupList(gs,order,dm,p.$key)}]},VPN:{"->":["$vpns"],"{$vpn,$i}":["$root",function(r){return r.$vpns}],":":["$vpn*",function(v){return v.inst}],$return:["$vpn*",function(v){return v.data}]}},IP:["$root",function(r){return getUnnumberedIP(r.$input,r.$conns)}]},Firewall:{"->":["?","IPv4","IPv6"],"?":["$root",function(p){return isSimpleMode(p.$deviceMode)}],IPv4:{"->":["$conns","Zones","Rules"],$conns:["$root",function(r){return _.filter(r.$conns,function(c){return systemIPv4(c)})}],Zones:{"->":["$zone","Interfaces","Type"],"{$zone, $inxZone}":["$root",function(r){return getZones(r.$conns,r.$input,"IPv4")}],":":["$inxZone",function(i){return i}],Interfaces:{"->":!0,$zone:["$parent",function(p){return p.$zone}],$inxZone:["$parent",function(p){return p.$inxZone}],"{$conn,$i}":["$parent",function(p){return p.$zone.conns}],":":["$conn*","$i","$zone",function(c,i,z){return getZoneIfaceInst(c,i,z,"IPv4")}],Path:["$conn*",function(c){return c.link}]},Type:["$zone",function(z){return z.type}],Name:["$zone",function(z){return"usb"==z.typeZone?"USB":void 0}]},Rules:{"->":["$conns","$conn","Dest","Source","Proto","NAT"],$conns:["$root","$parent",function(r,p){return getFWRuleConns(r.$input,p.$conns,"IPv4")}],"{$conn,$i}":["$conns",function(cs){return cs}],":":["$conn*","$i*",function(c,i){return getFWInst(c,i,"IPv4")}],Enable:!0,Action:["$conn*",function(c){return c.action||("ping"==c.ruletype||"fw"==c.ruletype||"nonat"==c.ruletype?"ACCEPT":"DROP")}],Pattern:["$conn*",function(c){return c.pattern||"fw"==c.ruletype&&"(FW)ALLOW"||"ping"==c.ruletype&&"ICMP"||"nonat"==c.ruletype&&"(CS)NATdisable"||void 0}],Proto:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],"?":["$conn",function(c){return!(!c||!c.proto&&"ping"!=c.ruletype)}],":":1,Value:["$conn",function(c){return c.proto||"icmp"}]},NAT:{"->":["$conn","Address"],$conn:["$parent",function(p){return p.$conn}],Address:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],"?":["$conn",function(c){return!!c&&!!c.originalNAT}],":":1,IPStart:["$conn",function(c){return c.originalNAT}]}},Source:{"->":["$conn","IPLinks"],$conn:["$parent",function(p){return p.$conn}],Iface:["$parent","$conn*",function(p,c){return"ping"==c.ruletype||"fw"==c.ruletype||"nonat"==c.ruletype?c.data.__Link:getMasqSourceIface(p)}],Zone:["$conn*",function(c){return"ping"==c.ruletype||"fw"==c.ruletype?"Device.Firewall.IPv4.Zones.2.":c.sourceZone?c.sourceZone:"Device.Firewall.IPv4.Zones.3."}],IPLinks:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],"?":["$conn",function(c){return!!c&&"masq"==c.ruletype}],":":1,Link:["$parent",function(p){return getMasqSourceIface(p)}],UseSubnet:!0}},Dest:{"->":["$conn","IPLinks"],$conn:["$parent",function(p){return p.$conn}],Zone:["$conn*",function(c){return getFWDestZone(c,"IPv4")}],Iface:["$conn*",function(c){return c.destIface}],IPLinks:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],"?":["$conn",function(c){return!!c&&["vrf","dlvrf","ping"].includes(c.ruletype)}],":":1,Link:["$conn*",function(c){return"dlvrf"==c.ruletype?c.__Link:c.data.__Link}]}},Direction:["$conn*",function(conn){return conn.Direction}],Table:["$conn*",function(conn){return conn.Table}]}},IPv6:{"->":["$conns","Zones","Rules"],$conns:["$root",function(r){return _.filter(r.$conns,function(c){return systemIPv6(c)})}],Zones:{"->":["$zone","Interfaces"],"{$zone, $inxZone}":["$root",function(r){return getZones(r.$conns,r.$input,"IPv6")}],":":["$inxZone",function(i){return i}],Interfaces:{"->":!0,$zone:["$parent",function(p){return p.$zone}],"{$conn, $i}":["$parent",function(p){return p.$zone.conns}],":":["$conn*","$i","$zone",function(c,i,z){return getZoneIfaceInst(c,i,z,"IPv6")}],Path:["$conn*",function(c){return c.link}]},Name:["$zone",function(z){return"usb"==z.typeZone?"USB":void 0}]},Rules:{"->":["$conns","$conn","Dest","Source","Proto"],$conns:["$root","$parent",function(r,p){return getFWRuleConns(r.$input,p.$conns,"IPv6")}],"{$conn,$i}":["$conns",function(cs){return cs}],":":["$conn*","$i*",function(c,i){return getFWInst(c,i,"IPv6")}],Enable:!0,Action:["$conn*",function(c){return c.action||("ping"==c.ruletype||"fw"==c.ruletype||"nonat"==c.ruletype?"ACCEPT":"DROP")}],Pattern:["$conn*",function(c){return"fw"==c.ruletype&&"(FW)ALLOW"||"ping"==c.ruletype&&"ICMP"||"nonat"==c.ruletype&&"(CS)NATdisable"||void 0}],Proto:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],"?":["$conn",function(c){return!!c&&"ping"==c.ruletype}],":":1,Type:{1:{Value:128},2:{Value:129}},Value:"ipv6-icmp"},Source:{"->":["$conn","IPLinks"],$conn:["$parent",function(p){return p.$conn}],Iface:["$parent","$conn*",function(p,c){return"ping"==c.ruletype||"fw"==c.ruletype||"nonat"==c.ruletype?c.data.__LinkSub||c.data.__Link:getMasqSourceIface(p)}],Zone:["$conn*",function(c){return"ping"==c.ruletype||"fw"==c.ruletype||"nonat"==c.ruletype?"Device.Firewall.IPv6.Zones.2.":"Device.Firewall.IPv6.Zones.3."}],IPLinks:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],"?":["$conn",function(c){return!!c&&"masq"==c.ruletype}],":":1,Link:["$parent",function(p){return getMasqSourceIface(p)}],UseSubnet:!0}},Dest:{"->":["$conn","IPLinks"],$conn:["$parent",function(p){return p.$conn}],Zone:["$conn*",function(c){return getFWDestZone(c,"IPv6")}],Iface:["$conn*",function(c){return"masq"==c.ruletype?c.data.__LinkSub?c.data.__LinkSub:c.data.__Link:void 0}],IPLinks:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],"?":["$conn",function(c){return!!c&&["dlvrf","ping"].includes(c.ruletype)}],":":1,Link:["$conn*",function(c){return"dlvrf"==c.ruletype?c.__Link:c.data.__LinkSub||c.data.__Link}]}},Direction:["$conn*",function(conn){return conn.Direction}],Table:["$conn*",function(conn){return conn.Table}]}}},Routing:{"->":["?"],"?":["$root",function(r){return isSimpleMode(r.$deviceMode)}],RIP:{"->":["Networks","Enable"],Networks:{"->":!0,$conns:["$root",function(r){return _.filter(r.$conns,function(c){return systemIPv4(c)&&activeFlag(c,"RIP")})}],"{$conn,$i}":["$conns*",function(c){return c}],":":["$conn*","$i",function(c,i){return c.data.__RIPNetworkInst||"new_inst_"+i}],Link:["$conn*",function(c){return c.data.__Link}]},Enable:["Networks",function(nets){return!!_.size(nets)}]},RIPng:{"->":["Networks","Enable"],Networks:{"->":!0,$conns:["$root",function(r){return _.filter(r.$conns,function(c){return systemIPv6(c)&&activeFlag(c,"RIPng")&&"PPPoE"!=c.type})}],"{$conn,$i}":["$conns*",function(c){return c}],":":["$conn*","$i",function(c,i){return c.data.__RIPNetworkInstSub||c.data.__RIPNetworkInst||"new_inst_"+i}],Link:["$conn*",function(c){return c.link}]},Enable:["Networks",function(nets){return!!_.size(nets)}]}},Services:{IGMPX:{"->":["?","$conn","Downstreams","Upstreams"],"?":["$root",function(r){return isSimpleMode(r.$deviceMode)&&!!__autoconf.BR2_PACKAGE_ANWEB_IGMP}],$conns:["$root",function(r){return getIGMPConns(r.$conns)}],Upstreams:{"->":!0,$conns:["$parent",function(p){return p.$conns}],"{$conn,$i}":["$conns*",function(c){return c}],":":["$conn*",function(c){return c.data?c.data.__IGMPInst||"new_inst_0":void 0}],Interface:["$conn*",function(c){return c.data.__Link}]},Downstreams:{"->":!0,$inst:["$root",function(r){return r.$igmpDownstreamsInst}],$conns:["$parent",function(p){return p.$conns}],":":["$conns*","$inst*",function(cs,inst){return inst?inst:cs.length?"new_inst_0":void 0}],Interface:["$conns*","$inst*",function(cs,inst){return cs.length||inst?"Device.Network.Interface.Bridge.1.":void 0}]}},MLDProxy:{"->":["$conn","Downstream"],"?":["$root",function(r){return isSimpleMode(r.$deviceMode)}],$conn:["$root",function(r){return getMLDProxyConns(r.$conns)}],Upstream:["$conn*",function(c){return c&&c.data?c.data.__Link:""}],Downstream:{"->":!0,$inst:["$root",function(r){return r.$mldDownstreamInst}],$conn:["$parent",function(p){return p.$conn}],":":["$conn*","$inst*",function(cs,inst){return inst?inst:!_.isEmpty(cs)&&cs.data.Flags.MLDProxy?"new_inst_0":void 0}],Interface:["$conn","$inst*",function(cs,inst){return!_.isEmpty(cs)||inst?"Device.Network.Interface.Bridge.1.":void 0}]}},Udpxy:{"->":!0,"?":["$root",function(r){return isSimpleMode(r.$deviceMode)}],$conn:["$root",function(r){return getUdpxyConns(r.$conns)}],IfaceWan:["$conn*",function(c){return c?c.data.__Link:""}]},IPsec:{"->":!0,Enable:["$root",function(r){return!!_.find(r.$conns,function(conn){return"IPsec"==conn.type})}]}},xDSL:{"->":["?","1"],"?":["$root",function(p){return p.$dsl}],1:{ATM:{PVC:{"->":!0,$pvcs:["$root",function(p){return p.$xdsl}],"{$pvc,$i}":["$pvcs*",function(p){return p}],":":["$pvc*",function(p){return p.inst}],$vpivci:["$pvc*",function(p){return p.data?p.data.DestinationAddress.split("/"):void 0}],Enable:!0,Interface:["$pvc*",function(p){return p.data.__Link}],VPI:["$vpivci*",function(o){return parseInt(o[0])}],VCI:["$vpivci*",function(o){return parseInt(o[1])}],QOS:["$pvc*",function(p){return qosClass(p.data.QoSClass)}],PCR:["$pvc*",function(p){return p.data.PeakCellRate}],MBS:["$pvc*",function(p){return p.data.MaximumBurstSize}],SCR:["$pvc*",function(p){return p.data.SustainableCellRate}],Encap:["$pvc*",function(p){return p.data.Encapsulation.toLowerCase()}]}}}},USB:{"->":["?","Modem","Connection"],"?":["$root",function(o){return!!o.$input.Device.WAN.Modems}],Modem:{"->":!0,"{$modems, $key}":["$root",function(o){return o.$input.Device.WAN.Modems}],":":["$key*",function(k){return k}],ActiveSIM:["$modems*",function(m){return m.ActiveSIM}]},Connection:{"->":["$conn","?","$ppp","PPPOptions","Binding","HealthCheck","DNS"],"{$conn, $i}":["$root",function(o){return _.filter(o.$conns,function(e){return"USB"==e.type})}],":":["$conn*",function(c){return c.inst}],APN:["$conn*",function(c){return c.data.APN}],DialNumber:["$conn*",function(c){return c.data.DialNumber}],AuthType:["$conn*",function(c){return c.data.AuthenticationProtocol}],Enable:["$conn*",function(c){return c.data.Enable}],Mode:["$conn*",function(c){return c.data.Mode}],Name:["$conn*",function(c){return c.data.Name}],NoAuth:["$conn*",function(c){return c.data.WithoutAuth}],Ifname:["$conn*",function(c){return _.isEmpty(c.data.Ifname)?void 0:c.data.Ifname}],Password:["$conn*",function(c){return c.data.WithoutAuth?"":c.data.Password}],Username:["$conn*",function(c){return c.data.WithoutAuth?"":c.data.Username}],IPStack:["$conn*",function(c){return c.data.Version}],InterfaceOnly:["$conn*",function(c){return c.data.InterfaceOnly}],$ppp:["$conn*",function(c){return c}],PPPOptions:{"->":["$ppp","KeepAlive"],$ppp:["$parent",function(p){return p.$ppp}],KeepAlive:{"->":!0,$ppp:["$parent",function(p){return p.$ppp}],Enable:["$ppp*",function(ppp){return ppp.data.KeepAlive}],Fails:["$ppp*",function(ppp){return ppp.data.LCPEchoRetry}],Interval:["$ppp*",function(ppp){return ppp.data.LCPEcho}]},MTU:["$ppp*",function(ppp){return ppp.data.MaxMRUSize}],PPPDebug:["$ppp*",function(ppp){return ppp.data.PPPDebug}],Ondemand:["$ppp*",function(ppp){return getPPPOndemand(ppp.data.ConnectionTrigger)}],OndemandTimeout:["$ppp*",function(ppp){return ppp.data.IdleDisconnectTime}]},Binding:{"->":!0,$conn:["$parent",function(p){return p.$conn}],Modem:["$conn*",function(c){return c.data.Modem}]},HealthCheck:{"->":["$conn","$data","Ping"],$conn:["$parent",function(p){return p.$conn}],$data:["$conn*",function(c){return c.data.HealthCheck}],Enable:["$data*",function(d){return d.Enable}],Timeout:["$data*",function(d){return d.Timeout}],MaxAttempts:["$data*",function(d){return d.MaxPing}],Ping:{"->":!0,$data:["$parent",function(p){return p.$data}],$dataPing:["$data*",function(d){return d.PingAddress}],"{$ping, $index}":["$dataPing*",function(d){return d}],":":["$ping*","$index*",function(p,i){return p.__inst?p.__inst:"new_inst_"+i}],Address:["$ping*",function(p){return p.Address}]},RestartOnFail:["$data*",function(d){return d.Enable&&d.RestartOnFail}]},DNS:{"->":["$conn","IPv4","IPv6"],$conn:["$parent",function(p){return p.$conn}],IPv4:["$conn*",function(c){return getDNS(c.data,!1,"v4")}],IPv6:["$conn*",function(c){return getDNS(c.data,!1,"v6")}]},IPChangeDetection:["$conn*",function(c){return c.data.IPChangeDetection}],BandsPreference:["$conn*",function(c){return getBandsPreference(c)}]}}}});return pattern.build({$input:input})}},function(module,exports,__webpack_require__){"use strict";"use version 6";function setBaseConnection(model){function flattenConnections(model){var types=["PPPoE","PPPoEv6","PPPoEDual","PPPoA","PPTP","IPv4oE","IPoA","IPv6oE","USB","SIT","TR069"],arr=[];for(var i in types){var t=types[i],obj=model[t];if(obj){var conns=obj.Connection;for(var j in conns){var c=conns[j];c.__TR069=c.__Link==model.TR069.Iface,c.__Path=t+".Connection."+j+".",arr.push(c)}}}return arr}var conns=flattenConnections(model),tunnels=model.PPTP.Connection,ipip6=model.IPIP6.Connection,sit=model.SIT.Connection;for(var i in tunnels){var tunn=tunnels[i],baseConns=conns.find(function(conn){return conn.__Link==tunn.__LowerConnection});baseConns&&(tunn.BaseConnection="Device.WAN."+baseConns.__Path)}for(var i in ipip6){var elem=ipip6[i],baseConns=conns.find(function(conn){return conn.__Link==elem.__LowerConnection});baseConns&&(elem.BaseConnection="Device.WAN."+baseConns.__Path)}for(var i in sit){var elem=sit[i],baseConns=conns.find(function(conn){return conn.__Link==elem.__LowerConnection});baseConns&&(elem.BaseConnection="Device.WAN."+baseConns.__Path)}}function getMediaPath(media){return"Device.WAN.Media."+media.type+"."+media.prefix+"."+media.inx+"."}function getUseAutomatical(conns){var count=0;return _.each(funcs.newConfig.normalize(conns),function(conn){count+=_.size(funcs.newConfig.normalize(conn))}),count>0}function getMedia(allIfaces,type,config,conns){function mapFn(data,inst){var statsLink="Device.Statistics.Interface.";if(config&&data.Statistics){var statsInterfaces=funcs.fetchBranch(config,statsLink);statsInterfaces=_.omit(statsInterfaces,"max_instance");var keys=data.Statistics.split("."),key=keys[keys.length-2],currentMACAddress=key&&_.size(statsInterfaces)&&statsInterfaces[key].MACAddress;currentMACAddress&&(data.CurrentMACAddress=currentMACAddress)}return{data:data,link:"Device.Network.Interface."+type+"."+inst+"."}}function filterFn(elem){function filterWifi(elem){return"sta"==elem.data.Type&&elem.data.Enable&&!elem.data.Bridged}function filterDSL(elem){return!0}function filterBridge(bridge){return"Device.Network.Interface.Bridge.1."!=bridge.link&&0!=bridge.data.CreateInterface&&bridge.data.Upstream}switch(type){case"Bridge":return filterBridge(elem);case"WiFi":return filterWifi(elem);case"ATM":case"PTM":return filterDSL(elem);default:return!1}}function getCellularMedia(input,conns){var curConns=funcs.newConfig.normalize(conns),result=[];return _.each(curConns,function(item){var usb_iface=funcs.fetchBranch(input,item.Interface),ifaceLink=item.Interface;usb_iface.Type=""==item.Ifname?"-":item.Ifname,result.push({link:ifaceLink,data:usb_iface})}),result}if("Cellular"==type)return getCellularMedia(allIfaces,conns);if(allIfaces&&allIfaces[type]){var ifaces=funcs.newConfig.normalize(allIfaces[type]);return _.chain(ifaces).map(mapFn).filter(filterFn).value()}}function getMediaByConnection(media,conn){var result=void 0,mediaTypes=[{name:"Bridging",prefix:"Bridge"},{name:"Ethernet",prefix:"Interface"},{name:"WiFi",prefix:"Network"},{name:"DSL.ATM",prefix:"Link"},{name:"DSL.PTM",prefix:"Link"},{name:"Dongle",prefix:"Interface"},{name:"FullIfaceList",prefix:"ipv4"},{name:"FullIfaceList",prefix:"ipv6"}];return _.some(mediaTypes,function(elem){var mediaInsts=funcs.fetchBranch(media,elem.name+"."+elem.prefix+".");_.each(mediaInsts,function(obj,inx){var link=obj.__Link,baseIface=[conn.data.Interface,conn.data.BaseInterface,conn.data.IP,conn.data.IPv6];return!result&&baseIface.includes(link)?(result=Object.assign({},{data:obj,type:elem.name,inx:inx,prefix:elem.prefix}),!0):void 0})}),result}function expandMedia(media){return funcs.setValue(media.type,media.data,{})}function getSubConnection(conns,types,config){var output=[];return _.each(types,function(type){output=output.concat(getConnection(conns,type,config,!0));
}),output}function getConnection(conns,nativeType,config,onlySubConn,usbConns){function prepareConns(conns,type,config){function getIPv4(conns,type,config){var input=_.pick(conns,"DHCP","Static"),output={};return _.each(input,function(elem,subType){output[subType]={},_.each(elem,function(obj,inst){if(_.isObject(obj)){var iface=funcs.fetchBranch(config,obj.Interface);("IPv4oE"!==type||isIPv4oE(iface))&&("IPoA"!==type||isIPv4oA(iface))&&(output[subType][inst]=obj)}})}),output}function getIPv6(conns,type,config){var input=_.pick(conns,"DHCPv6","Staticv6"),output={};return _.each(input,function(elem,subType){output[subType]={},_.each(elem,function(obj,inst){if(_.isObject(obj)){var usb=config.Device.USB?config.Device.USB.Connection:{};if(_.size(usb)){usb=funcs.newConfig.normalize(usb);var usbKey=_.findKey(usb,{Interface:"Device.Network.Connection."+subType+"."+inst+"."});if(usbKey)return}output[subType][inst]=obj}})}),output}function getPPPoE(conns,pppoeType,config){var output={PPPoE:{}};return _.each(conns.PPPoE,function(elem,inst){if(_.isObject(elem)){var pppClient=funcs.fetchBranch(config,elem.PPPConfiguration),iface=funcs.fetchBranch(config,elem.BaseInterface);("PPPoA"!=pppoeType||isPPPoA(iface))&&("PPPoE"!=pppoeType||isPPPoE(pppClient,iface))&&("PPPoEv6"!=pppoeType||isPPPoEv6(pppClient,iface))&&("PPPoEDual"!=pppoeType||isPPPoEDual(pppClient,iface))&&(output.PPPoE[inst]=elem)}}),output}function getPPTP(conns,config){var output=_.pick(conns,"PPTP","L2TP");return _.each(output,function(types){_.each(types,function(elem,key){if(elem.BaseInterface&&/IPsec/.test(elem.BaseInterface)){var baseIPsec=funcs.fetchBranch(config,elem.BaseInterface);baseIPsec&&(elem.BaseInterface=baseIPsec.Left)}if(elem.PPPConfiguration){var pppClient=funcs.fetchBranch(config,elem.PPPConfiguration);elem.isL2TPv6=pppClient&&["IPv6","Dual"].includes(pppClient.IPStack)?!0:!1}})}),output}function isIPv4oE(iface){return!isIPv4oA(iface)}function isIPv4oA(iface){return iface&&iface.LinkType&&"IPOA"===iface.LinkType}function isPPPoE(pppClient,iface){return"IPv4"==pppClient.IPStack&&!isPPPoA(iface)}function isPPPoEv6(pppClient,iface){var isUSBLowerLayer=iface.LowerLayer&&iface.LowerLayer.includes("USB.Modem.");return"IPv6"==pppClient.IPStack&&!isPPPoA(iface)&&!isUSBLowerLayer&&!_.has(iface,"DialNumber")}function isPPPoEDual(pppClient,iface){return"Dual"==pppClient.IPStack&&!isPPPoA(iface)}function isPPPoA(iface){return iface&&iface.LinkType&&"PPPOA"===iface.LinkType}switch(type){case"IPv4oE":return getIPv4(conns,"IPv4oE",config);case"IPv6oE":return getIPv6(conns,"IPv6oE",config);case"IPoA":return getIPv4(conns,"IPoA",config);case"PPPoA":return getPPPoE(conns,"PPPoA",config);case"PPPoE":return getPPPoE(conns,"PPPoE",config);case"PPPoEv6":return getPPPoE(conns,"PPPoEv6",config);case"PPPoEDual":return getPPPoE(conns,"PPPoEDual",config);case"PPTP":return getPPTP(conns,config);case"USB":return{USB:conns};case"IPIP6":return{IPIP6:conns.IPIP6};case"SIT":return{SIT:conns.SIT};default:return null}}function getAdditionalConn(conns,link,config){var additionalConn=void 0;return _.each(conns,function(elem,type){_.each(funcs.newConfig.normalize(elem),function(data,inst){data.Interface==link&&(additionalConn=makeConn(data,inst,type,config))})}),additionalConn}function getAdditionalConnUSB(conn,ifaceLink,config){if(conn.IPv6){var ifaceDHCPv6=_.find(ifaceLink,function(iface){return-1!=iface.indexOf("DHCPv6")});if(ifaceDHCPv6){var dhcpv6=funcs.fetchBranch(config,ifaceDHCPv6);if(-1!=dhcpv6.Interface.indexOf("PPPoE"))return dhcpv6.Interface}}}function getIPsecConn(conns,link,config){var ipsecConn=void 0;return _.each(conns,function(elem,type){_.each(funcs.newConfig.normalize(elem),function(data,inst){"IPsec"===type&&data.L2TP===link&&(ipsecConn=makeConn(data,inst,type,config))})}),ipsecConn}function makeConn(conn,inst,type,config,nativeType){var groups=funcs.fetchBranch(config,"Device.Network.Group."),vpn=funcs.fetchBranch(config,"Device.Network.Group.1.VPN."),fw=funcs.fetchBranch(config,"Device.Firewall."),rip=funcs.fetchBranch(config,"Device.Routing.RIP."),ripv6=funcs.fetchBranch(config,"Device.Routing.RIPng."),igmp=funcs.fetchBranch(config,"Device.Services.IGMPX."),mld=funcs.fetchBranch(config,"Device.Services.MLDProxy."),ipsec=funcs.fetchBranch(config,"Device.Network.Connection.IPsec."),modems=funcs.fetchBranch(config,"Device.USB.Modem."),udpxy=funcs.fetchBranch(config,"Device.Services.Udpxy."),balancing=funcs.fetchBranch(config,"Device.Network.LoadBalancing."),loadBalancing=void 0;balancing&&(balancing=funcs.newConfig.normalize(balancing),_.size(balancing)&&(loadBalancing=_.first(_.toArray(balancing))));var version=getVersion(type,conn,config),connLink=("USB"==type?"Device.USB.Connection.":"Device.Network.Connection."+type+".")+inst+".",ifaceLink="USB"==type?_.pluck(funcs.newConfig.normalize(conn.Connections),"Link"):conn.Interface,additionalConn="USB"!=type?getAdditionalConn(conns,connLink,config):getAdditionalConnUSB(conn,ifaceLink,config),curRip="IPv4"==version?rip:ripv6,output={data:"USB"!=type?conn:getUsbData(conn,conns,modems),additionalConn:additionalConn,ipsecConn:getIPsecConn(conns,connLink,config),type:type,isL2TPv6:_.has(conn,"isL2TPv6")?conn.isL2TPv6:void 0,version:version,link:connLink,ifaceLink:ifaceLink,NATBridgeLink:getNATBridgeLink(config,connLink),NATZoneInst:getNATZoneInst(fw,connLink,ifaceLink,"USB"==type?"IPv4":version),NATZoneInstv6:"USB"==type&&"IPv4"!=version?getNATZoneInst(fw,connLink,ifaceLink,"IPv6"):void 0,NATMasqInst:getNATMasqInst(fw,connLink,ifaceLink,version,"IPv4"),NATMasqInstv6:conn.InterfaceOnly?void 0:getNATMasqInst(fw,connLink,ifaceLink,version,"IPv6",nativeType,additionalConn),NATDisableRuleInst:getNATDisableInst(fw,connLink,"Dual"==version?"IPv4":version),NATDisableRuleInstv6:"USB"==type&&"Dual"==version?getNATDisableInst(fw,connLink,"IPv6"):void 0,PingRuleInst:getPingRuleInst(fw,connLink,ifaceLink,"Dual"==version?"IPv4":version),PingRulev6Inst:"USB"==type&&"Dual"==version?getPingRuleInst(fw,connLink,ifaceLink,"IPv6"):void 0,FWRuleInst:getFWRuleInst(fw,connLink,ifaceLink,version),RIPNetworkInst:getRIPNetworkInst(curRip,~connLink.indexOf("USB")?ifaceLink:connLink),IGMPInst:getIGMPInst(igmp,~connLink.indexOf("USB")?ifaceLink:connLink,conn),IGMPDownInst:getIGMPDownInst(igmp,~connLink.indexOf("USB")?ifaceLink:connLink),MLDProxyInst:getMLDProxyInst(mld,~connLink.indexOf("USB")?ifaceLink:connLink),UdpxyInst:getUdpxyInst(udpxy,connLink),IPsecInst:getIPsecInst(ipsec,connLink),isShorewallZone:isShorewallZone(fw,connLink),isShorewallMasq:isShorewallMasq(fw,connLink),usbZoneInst:"USB"==type&&conn.InterfaceOnly?getZoneInst(fw,connLink,"IPv4"):void 0,usbZonev6Inst:"USB"==type&&conn.InterfaceOnly&&"IPv4"!=version?getZoneInst(fw,connLink,"IPv6"):void 0,isBased:"USB"==type?checkBased(config,connLink):void 0,isUseInMirror:"USB"==type?isUseInMirror(config,connLink):void 0};if(["IPv4","Dual"].includes(version)&&(output.groupInst=getGroupInst(groups,connLink,ifaceLink,"IPv4"),output.groupInst)){var group=funcs.fetchBranch(config,"Device.Network.Group."+output.groupInst+".WAN."),failover=funcs.fetchBranch(config,"Device.Network.Group."+output.groupInst+".");output.gw=isDefaultGateway(group,connLink,ifaceLink,failover),output.groupLink=getGroupLink(group,connLink,ifaceLink,"IPv4",output.groupInst),output.disabledGateway=isDisabledGateway(failover,loadBalancing),output.isFailover=isFailover(group,connLink,ifaceLink,failover),output.isLoadBalancing=isLoadBalancing(connLink,ifaceLink,loadBalancing)}if(["IPv6","Dual"].includes(version)&&(output.groupInst=getGroupInst(groups,connLink,ifaceLink,"IPv6"),output.groupInst)){var groupv6=funcs.fetchBranch(config,"Device.Network.Group."+output.groupInst+".WANv6.");output.gwv6=isDefaultGateway(groupv6,connLink,ifaceLink),output.groupLinkv6=getGroupLink(groupv6,connLink,ifaceLink,"IPv6",output.groupInst)}return"PPTP"!=type&&"Static"!=type&&"IPIP6"!=type&&"SIT"!=type||(output.vpnLink=getVPNLink(vpn,connLink)),funcs.deepClone(output)}function getNATBridgeLink(config,connLink){var group=_.find(funcs.fetchBranch(config,"Device.Network.Group."),function(g){return _.find(g.WAN,function(w){return w.Link===connLink})});return group||(group=_.find(funcs.fetchBranch(config,"Device.Network.Group."),function(g){return _.find(g.WANv6,function(w){return w.Link===connLink})})),group?group.LAN:void 0}function isSubConnection(conn,usbConns){return"DHCPv6"==conn.type?/Connection/.test(conn.data.Interface)||/Cellular/.test(conn.data.Interface):!("PPPoE"!=conn.type||!/Cellular/.test(conn.data.BaseInterface))||!("DHCP"!=conn.type&&"PPPoE"!=conn.type&&"Static"!=conn.type||!usbConns)&&_.some(usbConns,function(elem){return _.some(elem.Connections,function(obj){return obj.Link==conn.link})})}function getUsbData(data,allConns,modems){function getRoutesInfo(config,conn){function getRoutes(config,version,iface){var routePath="Device.Routing."+version+".Routes.",routes=funcs.newConfig.normalize(funcs.fetchBranch(config,routePath)),result=[];for(var i in routes){var elem=routes[i];""==elem.Origin&&""!=elem.Destination&&Object.keys(funcs.newConfig.normalize(elem.Table)).length>0&&elem.Interface==iface&&result.push(elem)}return result}var routes=[];return conn&&["IPv4","Dual"].includes(conn.IPStack)&&(routes=getRoutes(config,"IPv4",conn.Interface)),conn&&conn.IPv6&&(routes=routes.concat(getRoutes(config,"IPv6",conn.Interface))),routes.length>0}var extData=funcs.deepClone(data),extConns={Device:{Network:{Connection:allConns}}},conn=funcs.fetchBranch(extConns,data.Interface),usbIface=funcs.fetchBranch(config,data.Interface);if(usbIface&&(extData.IsBridged=usbIface.Bridged,extData.UseAsRoute=getRoutesInfo(config,data)),conn&&(extData.BaseInterface=conn.BaseInterface,extData.StopOnFail=conn.StopOnFail),modems=funcs.newConfig.normalize(modems),!_.isEmpty(data.Binding.Modem)){var extModems={};funcs.setValue("Device.USB.Modem",modems,extModems);var modem=funcs.fetchBranch(extModems,data.Binding.Modem),sim=modem.ActiveSIM;extData.Modem=data.Binding.Modem,extData.IntModem=modem.Internal,_.isUndefined(sim)||(extData.SIM=sim?sim.toString():"1"),_.isEmpty(data.Binding.IMSI)||(extData.IMSI=data.Binding.IMSI)}return extData}function checkBased(config,connLink){var conns=funcs.fetchBranch(config,"Device.Network.Connection.");for(var i in conns)for(var j in conns[i]){if("SIT"==i&&conns[i][j].IP==connLink)return!0;if(conns[i][j].BaseInterface==connLink)return!0}return!1}function isUseInMirror(config,connLink){var mirror=funcs.fetchBranch(config,"Device.Switch.PortMirror.");if(!mirror)return!1;for(var i in funcs.newConfig.normalize(mirror))for(var j in funcs.newConfig.normalize(mirror[i].Source))if(mirror[i].Source[j].Link==connLink)return!0;return!1}function getVersion(type,conn,config){if(["DHCPv6","Staticv6","SIT"].includes(type))return"IPv6";if("USB"==type)return conn.IPStack;if("PPPoE"==type||"L2TP"==type){var pppClient=funcs.fetchBranch(config,conn.PPPConfiguration);return"IPv6"==pppClient.IPStack?"IPv6":"IPv4"}return"IPv4"}function isDefaultGateway(group,connLink,ifaceLink,failover){function getCurrentInst(group,link){var inst=null;for(var i in group){var elem=group[i];elem.Link&&elem.Link==link&&(inst=i)}return inst}var connInst;return _.isArray(ifaceLink)||(ifaceLink=[ifaceLink]),connInst=failover&&failover.FailoverEnable&&""!=failover.CurrentWAN?getCurrentInst(group,failover.CurrentWAN):group&&group.order&&group.order.length?group.order[0]:null,!!connInst&&(group[connInst].Link==connLink||_.contains(ifaceLink,group[connInst].Link))}function isDisabledGateway(failover,loadBalancing){return!(!failover||!failover.FailoverEnable)||!(!loadBalancing||!loadBalancing.Enable)}function isFailover(group,connLink,ifaceLink,failover){_.isArray(ifaceLink)||(ifaceLink=[ifaceLink]);var obj=_.find(group,function(gr){return gr.Link==connLink||_.contains(ifaceLink,gr.Link)});if(failover&&failover.FailoverEnable){var connInst=group.order&&group.order.length?group.order[0]:null;if(connInst&&(group[connInst].Link==connLink||_.contains(ifaceLink,group[connInst].Link)))return!0}return obj&&obj.FailoverEnable}function isLoadBalancing(connLink,ifaceLink,loadBalancing){if(!loadBalancing)return!1;var wans=funcs.newConfig.normalize(loadBalancing.WAN),obj=_.find(wans,function(elem){return elem.Link==connLink||elem.Link==ifaceLink});return!!obj&&loadBalancing.Enable}function getGroupInst(groups,connLink,ifaceLink,version){ifaceLink instanceof Array||(ifaceLink=[ifaceLink]);var type="IPv4"==version?"WAN":"IPv6"==version?"WANv6":"VPN";for(var key in groups){var elem=groups[key][type];for(var i in funcs.newConfig.normalize(elem))if(elem[i].Link==connLink||ifaceLink.find(function(il){return il==elem[i].Link}))return key}}function getGroupLink(group,connLink,ifaceLink,version,groupInst){_.isArray(ifaceLink)||(ifaceLink=[ifaceLink]);var inst=_.findKey(group,function(g){return g.Link==connLink||_.contains(ifaceLink,g.Link)}),groupName="IPv4"==version?"WAN":"WANv6";return inst?"Device.Network.Group."+groupInst+"."+groupName+"."+inst+".":void 0}function getVPNLink(vpn,link){var inst=_.findKey(vpn,function(v){return v.Link==link});return inst?"Device.Network.Group.1.VPN."+inst+".":void 0}function getNATZoneInst(fw,connLink,ifaceLink,version){if(fw){_.isArray(ifaceLink)||(ifaceLink=[ifaceLink]);var input=funcs.fetchBranch(fw,version+".Zones.2.Interfaces.");return _.findKey(input,function(e){return e.Path==connLink||_.contains(ifaceLink,e.Path)})}}function getNATMasqInst(fw,connLink,ifaceLink,version,type,nativeType,additionalConn){if(additionalConn)return additionalConn.NATMasqInstv6;if(fw&&!("IPv4"==type&&"IPv4"!=version&&"Dual"!=version||"IPv6"==type&&"IPv4"==version&&"PPPoEDual"!=nativeType&&"PPTP"!=nativeType)){_.isArray(ifaceLink)||(ifaceLink=[ifaceLink]);var input=funcs.fetchBranch(fw,type+".Rules.");return _.findKey(input,function(elem){return"MASQUERADE"==elem.Action?elem.Source&&elem.Dest&&(elem.Dest.Iface==connLink||_.contains(ifaceLink,elem.Dest.Iface)):void 0})}}function getPingRuleInst(fw,connLink,ifaceLink,version){if(fw&&fw[version]){_.isArray(ifaceLink)||(ifaceLink=[ifaceLink]);var input=funcs.fetchBranch(fw[version],"Rules.");return _.findKey(input,function(elem){function isIPv4IgmpProto(elem){return elem.Proto[1]&&"icmp"==elem.Proto[1].Value}function isIPv6IgmpProto(elem){var proto=elem.Proto[1];return proto&&"ipv6-icmp"==proto.Value&&proto.Type&&proto.Type[1]&&proto.Type[2]&&128==proto.Type[1].Value&&129==proto.Type[2].Value}return"IPv4"==version?elem.Source&&elem.Dest&&"ACCEPT"==elem.Action&&isIPv4IgmpProto(elem)&&(elem.Source.Iface==connLink||_.contains(ifaceLink,elem.Source.Iface))&&"Device.Firewall.IPv4.Zones.2."==elem.Source.Zone&&"Device.Firewall.IPv4.Zones.1."==elem.Dest.Zone:"IPv6"==version?elem.Source&&elem.Dest&&"ACCEPT"==elem.Action&&isIPv6IgmpProto(elem)&&(elem.Source.Iface==connLink||_.contains(ifaceLink,elem.Source.Iface))&&"Device.Firewall.IPv6.Zones.2."==elem.Source.Zone&&"Device.Firewall.IPv6.Zones.1."==elem.Dest.Zone:void 0})}}function getFWRuleInst(fw,connLink,ifaceLink,version){if(fw&&fw[version]){ifaceLink instanceof Array||(ifaceLink=[ifaceLink]);var ruleKey=void 0,input=funcs.newConfig.normalize(fw[version].Rules),sourceZone="Device.Firewall."+version+".Zones.2.",destZone="Device.Firewall."+version+".Zones.3.";for(var key in input){var elem=input[key];"ACCEPT"!=elem.Action||"(FW)ALLOW"!=elem.Pattern||elem.Source.Zone!=sourceZone||elem.Dest.Zone!=destZone||elem.Source.Iface!=connLink&&!ifaceLink.find(function(e){return e==elem.Source.Iface})||(ruleKey=key)}return ruleKey}}function getRIPNetworkInst(rip,connLink){if(rip){var input=funcs.fetchBranch(rip,"Networks.");return _.findKey(input,function(e){return e.Link==connLink})}}function getIGMPInst(igmp,connLink,conn){if(igmp){var link=connLink;return(__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_35980||__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_42512||__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_49221)&&~connLink.indexOf("PPPoE")&&(link=conn.BaseInterface),_.findKey(igmp.Upstreams,function(elem){return elem.Interface==link})}}function getMLDProxyInst(mld,connLink){return mld?mld.Upstream==connLink:void 0}function getIGMPDownInst(igmp,connLink){return igmp?_.findKey(igmp.Downstreams,function(elem){return elem.Interface==connLink}):void 0}function getUdpxyInst(udpxy,connLink){return udpxy?udpxy.IfaceWan==connLink:void 0}function isShorewallZone(fw,connLink){if(fw){var zones=_.values(funcs.newConfig.normalize(fw.IPv4.Zones));return fw.IPv6&&(zones=zones.concat(_.values(funcs.newConfig.normalize(fw.IPv6.Zones)))),!!_.find(zones,function(zone){var interfaces=_.values(funcs.newConfig.normalize(zone.Interfaces));return _.find(interfaces,function(i){return i.Path==connLink})})||void 0}}function isShorewallMasq(fw,connLink){if(fw){var masq=_.values(funcs.newConfig.normalize(fw.IPv4.Rules));return fw.IPv6&&(masq=masq.concat(_.values(funcs.newConfig.normalize(fw.IPv6.Rules)))),!!_.find(masq,function(e){return e.Dest.Iface==connLink||e.Source.Iface==connLink||"MASQUERADE"==e.Action})||void 0}}function getIPsecInst(ipsec,connLink){return ipsec?_.findKey(ipsec,function(conn){return!!_.isObject(conn)&&conn.L2TP===connLink}):void 0}function getZoneInst(fw,connLink,version){if(fw){var zones=funcs.newConfig.normalize(funcs.fetchBranch(fw,version+".Zones.")),zoneInst=null;for(var key in zones){var zone=zones[key];for(var inst in funcs.newConfig.normalize(zone.Interfaces)){var elem=zone.Interfaces[inst];elem.Path==connLink&&(zoneInst=inst)}}return zoneInst}}function getNATDisableInst(fw,connLink,version){if(fw){var input=funcs.fetchBranch(fw[version],"Rules.");return funcs.newConfig.findKey(input,function(o){return"(CS)NATdisable"==o.Pattern&&o.Source.Iface==connLink})}}var output=[],input=prepareConns(conns,nativeType,config);return _.each(input,function(elem,type){_.each(funcs.newConfig.normalize(elem),function(data,inst){var conn=makeConn(data,inst,type,config),isSubConn=isSubConnection(conn,usbConns);(onlySubConn&&isSubConn||!onlySubConn&&!isSubConn)&&output.push(conn)})}),output}function getStaticIP(ips,conn,type){var result=[],iface=conn.data.Interface,baseIface=conn.data.BaseInterface,prefix="ipv4"==type?"IPv4Address":"IPv6Address";for(var inst in ips){var elem=ips[inst];if(elem.LowerLayer==iface)for(var _inst in elem[prefix]){var _elem=elem[prefix][_inst];if("object"==_typeof2["default"](_elem)){if("PPPoE"!=conn.type&&"L2TP"!=conn.type||"IPv6Address"!=prefix||!conn.additionalConn){if(!iface.match("Cellular")||baseIface&&baseIface.match("Cellular")){if(conn.link!=_elem.Origin)continue}else if("DHCP"==conn.type&&conn.link!=_elem.Origin)continue}else if(conn.additionalConn.link!=_elem.Origin)continue;result.push({data:_elem,link:"Device.Network.IP."+inst+"."+prefix+"."+_inst+"."})}}}return result}function getSupportedUsbConn(usbConn,type,config){function findLink(obj){for(var i in types)if(obj.Link&&-1!=obj.Link.indexOf(types[i]+"."))return!0;return!1}var types="ipv4"==type?["PPPoE","DHCP"]:["DHCPv6"],connLinks=usbConn.data.Connections,objLink=_.find(connLinks,findLink);return objLink?{data:funcs.fetchBranch(config,objLink.Link),link:objLink.Link}:void 0}function getSupportRuleInst(conn,rulesV6){return _.findKey(rulesV6,function(rule){var _conn$__LinkIface;return rule.Origin==conn.link||(null===(_conn$__LinkIface=conn.__LinkIface)||void 0===_conn$__LinkIface?void 0:_conn$__LinkIface.includes(rule.Origin))})}function getConnStatus(conn,addConn,ipsec,isInternal){if(!ipsec&&_.has(conn,"Enable")&&!conn.Enable)return"Disabled";if(_.has(conn,"StopOnFail")&&conn.StopOnFail)return/\.WiFi\./.test(conn.Interface)?"WiFiDisconnect":/\.Cellular\./.test(conn.BaseInterface)||conn.Binding&&_.has(conn.Binding,"Modem")?isInternal?"SIMDisconnected":"USBDisconnected":/\.USB\./.test(conn.BaseInterface)?"USBNotActive":"CableDisconnected";if(ipsec){if(addConn&&"Connected"==ipsec.ConnectionStatus)return addConn.ConnectionStatus;if("Connected"==conn.ConnectionStatus)return ipsec.ConnectionStatus}else if(addConn&&"Connected"==conn.ConnectionStatus)return addConn.ConnectionStatus;return conn.ConnectionStatus}function getPPPStatusExt(statusExt,connSettings,isInternal){return connSettings&&connSettings.Kabinet&&connSettings.Kabinet.Enable?getKabinetConnStatus(connSettings.Kabinet.ConnectionStatus):statusExt&&"Unknown"!=statusExt?"Disconnected"!=statusExt||_.isUndefined(isInternal)?"PPP"+statusExt:isInternal?"SIMDisconnected":"USBDisconnected":statusExt}function getIPIP6Status(status){switch(status){case"Enabled":return"Connected";case"Enabling":return"Connecting";case"Aborted":return"Disconnected";default:return status}}function getUsbNumbers(usb){return usb?usb.max_instance:0}function getIPAddress(ip){return ip?ip.split("/")[0]:""}function getPrefix(ip){return ip?ip.split("/")[1]:""}function getSubnetMask(ip){return ip?funcs.ipv4.mask["long"](ip.split("/")[1]):""}function getDynDNS(dns,link,conn,version){function findCurDNS(dns,link){var output=_.find(dns.Current,function(obj){return _.isObject(obj)?(conn&&conn.ifaceLink&&Array.isArray(conn.ifaceLink)&&(link="v4"==version?_.find(conn.ifaceLink,function(c){return-1==c.indexOf("v6")}):_.find(conn.ifaceLink,function(c){return-1!=c.indexOf("v6")})),obj.Origin==link):void 0});return output?output.Address:null}var output=[],curDns=findCurDNS(dns,link);if(!curDns)return output;var orders=curDns.order;return _.each(orders,function(inst){output.push(curDns[inst].IPAddress)}),output}function getStatDNS(conn,type){var dns=type?conn.DNS[type]:conn.DNS;return _.chain(dns).filter(function(e){return _.isObject(e)&&!_.isArray(e)}).map(function(e){return e.IPAddress}).value()}function getDnsOrder(conn,type){return conn&&conn.DNS?type?conn.DNS[type].order:conn.DNS.order:[]}function getDNSValue(isAuto,dynDns,statDns,inst){var curDns=isAuto?dynDns:statDns;return curDns&&curDns[inst]?curDns[inst]:""}function getServerName(data){return _.has(data,"ServiceName")?data.ServiceName:_.has(data,"ServerAddress")?data.ServerAddress:_.has(data,"LNS")?data.LNS:void 0}function authProto(auth){function getType(auth){var activeType="",allActive=!0;return _.each(auth,function(value,name){!activeType&&value&&(activeType=name),value||(allActive=!1)}),allActive?"AUTO":activeType}var type=getType(auth);switch(type){case"AUTO":return"AUTO";case"PAP":return"PAP";case"EAP":return"EAP";case"CHAP":return"CHAP";case"MSCHAP":return"MS-CHAP";case"MSCHAPv2":return"MS-CHAP-V2"}}function encrProto(encr){switch(encr){case"None":return"None";case"MPPE-40/128":return"MPPE";case"MPPE-40":return"MPPE40";case"MPPE-128":return"MPPE128"}}function connTriger(ondemand){return ondemand?"OnDemand":"AlwaysOn"}function identifyDefaultGateway(wan,version){function checkDefaultGateway(conn,version){return"v4"==version?1==conn.DefaultGateway&&-1!=conn.__LinkGroupv4.indexOf("Device.Network.Group.1."):"v6"==version&&1==conn.DefaultGatewayv6&&-1!=conn.__LinkGroupv6.indexOf("Device.Network.Group.1.")}var path="";return _.some(wan,function(elem,type){return!(!_.isObject(elem)||!elem.Connection)&&_.some(elem.Connection,function(conn,instance){return!!checkDefaultGateway(conn,version)&&(path="Device.WAN."+type+".Connection."+instance+".",!0)})}),path}function getDeviceMode(config){var devinfo=funcs.fetchBranch(config,"Device.DeviceInfo.");return devinfo?devinfo.DeviceMode:void 0}function getOrigin(mode){switch(mode){case"Autoconf":return"AutoConfiguredBySlaac";case"DHCP":return"AutoConfiguredByDHCPv6";case"Auto":return"AutoConfigured";default:return"Static"}}function getOrder(group){return group&&group.order&&_.isArray(group.order)?group.order.join(","):""}function getIgmpDownstreamsInst(igmp){if(igmp&&igmp.Downstreams){var keys=_.keys(funcs.newConfig.normalize(igmp.Downstreams));return keys&&keys.length?keys[0]:void 0}}function getMLDDownstreamsInst(mld){if(mld&&mld.Downstream){var keys=_.keys(funcs.newConfig.normalize(mld.Downstream));return keys&&keys.length?keys[0]:void 0}}function linkType(lt){switch(lt){case"IPOE_PPPOE":return"EoA";case"IPOA":return"IPoA";case"PPPOA":return"PPPoA";case"BRIDGE":return"BRIDGE";default:return"Unknown"}}function getPVCSettings(xdsl,link){var output={link:null,data:null};return _.each(xdsl,function(elem,dslInst){if(_.isObject(elem)){var pvc=funcs.fetchBranch(elem,"ATM.PVC.");_.each(pvc,function(obj,atmInst){_.isObject(obj)&&obj.Interface==link&&(output.link="Device.xDSL."+dslInst+".ATM.PVC."+atmInst+".",output.data=obj)})}}),output}function qosClass(qos){switch(qos){case"ubr":return"UBR";case"ubr_pcr":return"UBR+";case"cbr":return"CBR";case"nrtvbr":return"VBR-nrt";case"rtvbr":return"VBR-rt";default:return"Unknown"}}function getValue(modems,conn,typeOfReturnValue){if(modems&&!_.isEmpty(conn.data.Modem)){var extModems={};funcs.setValue("Device.USB.Modem",modems,extModems);var curModem=funcs.fetchBranch(extModems,conn.data.Modem);if(curModem){var key=conn.data.Modem.match(/\.\d+\.$/g,"");key=Number(key[0].replace(/\./g,""));var value="";"modem"!=typeOfReturnValue&&"sim"!=typeOfReturnValue||(value=curModem.Internal?" "+key:curModem.Model+" "+curModem.Vendor);var sim=curModem.SIM[conn.data.SIM];return sim&&"sim"==typeOfReturnValue&&(value+=" SIM"+sim.Name+" "+sim.IMSI),"id"==typeOfReturnValue&&(value=key),value}}}function getModemBands(modems,conn){if(modems&&conn.data.Modem){var modemId=conn.data.Modem.replace(/.*\.(\d*)\.$/,"$1"),modem=modems[modemId];if(modem&&conn.data.BandsPreference&&modem.SupportedBands){var bandsPreference=conn.data.BandsPreference,isAuto="AUTO"==bandsPreference,supportedBands=modem.SupportedBands.split(",");return{BandsPreferenceAuto:isAuto,BandsPreference:supportedBands.map(function(m){return{Key:m,Value:!!isAuto||bandsPreference.split(",").includes(m)}})}}}}function getDualLAN(config){function findZoneKey(zone,link){return _.findKey(zone,function(elem){return _.some(elem.Interfaces,function(iface){return iface.Path==link})})}function findRuleKey(rules,type,bridgeLink,sourceZoneKey,destZoneKey){var sourceZone="Device.Firewall."+type+".Zones."+sourceZoneKey+".",destZone="Device.Firewall."+type+".Zones."+destZoneKey+".";return _.findKey(rules,function(elem){return"DROP"==elem.Action&&elem.Source.Zone==sourceZone&&elem.Dest.Zone==destZone&&_.size(funcs.newConfig.normalize(elem.Dest.IPLinks))>0&&elem.Dest.IPLinks[1]&&elem.Dest.IPLinks[1].Link==bridgeLink})}var bridges=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Network.Interface.Bridge.")),groups=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Network.Group.")),dualLanGroup=funcs.newConfig.find(groups,function(group){return"DualLAN"==group.Name});if(dualLanGroup){var dualLanKey=funcs.newConfig.extractInst(dualLanGroup.LAN);if(dualLanKey){var bridgeLink="Device.Network.Interface.Bridge."+dualLanKey+".",bridgeIfname=bridges[dualLanKey].Ifname,dualLANGroup=_.findKey(groups,{LAN:bridgeLink}),groupSettings=groups[dualLANGroup],conn=groupSettings.WAN.order[0]?groupSettings.WAN[groupSettings.WAN.order[0]].Link:void 0,zonesv4=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Firewall.IPv4.Zones.")),zonesv6=_.has(config.Device.Firewall,"IPv6")?funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Firewall.IPv6.Zones.")):{},dlZonev4=findZoneKey(zonesv4,bridgeLink),dlZonev6=findZoneKey(zonesv6,bridgeLink),rulesv4=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Firewall.IPv4.Rules.")),rulesv6=_.has(config.Device.Firewall,"IPv6")?funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Firewall.IPv6.Rules.")):{},dlRulesv4={dlToFw:dlZonev4?findRuleKey(rulesv4,"IPv4","Device.Network.Interface.Bridge.1.",dlZonev4,"1"):void 0,lanToFw:dlZonev4?findRuleKey(rulesv4,"IPv4",bridgeLink,"3","1"):void 0},dlRulesv6={dlToFw:dlZonev6?findRuleKey(rulesv6,"IPv6","Device.Network.Interface.Bridge.1.",dlZonev6,"1"):void 0,lanToFw:dlZonev6?findRuleKey(rulesv6,"IPv6",bridgeLink,"3","1"):void 0};return{bridgeIfname:bridgeIfname,bridgeID:dualLanKey,groupID:dualLANGroup,group:groupSettings,conn:conn,zones:{v4:dlZonev4,v6:dlZonev6},fwRules:{v4:dlRulesv4,v6:dlRulesv6}}}}}function getKabinetStatus(status){switch(status){case"Connected":case"Kabinet networks only":return"on";default:return"off"}}function getKabinetConnStatus(status){switch(status){case"Connected":return"KabinetFull";case"Disconnected":return"Disconnected";case"Error":return"Unknown";case"Kabinet networks only":return"KabinetNetworksOnly";case"Kabinet not started":return"KabinetNotStarted"}}function getKabinetStatusInfo(status){return"Disconnected"==status?"disconnected":"wan_status_"+status.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase()}function getPBRRule(firewall){if(firewall){var rules=funcs.newConfig.normalize(firewall.IPv4.Rules);if(rules){var pbrRule=void 0;return Object.entries(rules).filter(function(_ref){var _ref2=_slicedToArray2["default"](_ref,2),value=(_ref2[0],_ref2[1]);return Boolean(Object.keys(value).length)}).forEach(function(_ref3){var _ref4=_slicedToArray2["default"](_ref3,2),key=_ref4[0],elem=_ref4[1],destLinks=funcs.newConfig.normalize(elem.Dest.IPLinks);!("DROP"==elem.Action&&"Device.Firewall.IPv4.Zones.3."==elem.Source.Zone&&"Device.Firewall.IPv4.Zones.1."==elem.Dest.Zone&&_.size(destLinks)>0)||elem.URLLists&&elem.URLLists.Links&&0!=_.size(funcs.newConfig.normalize(elem.URLLists.Links))||0!=_.size(funcs.newConfig.normalize(elem.Source.Address))||0!=_.size(funcs.newConfig.normalize(elem.Dest.Address))||(pbrRule=key)}),pbrRule}}}function hasWanPorts(config,media){if(media.Ethernet&&_.size(media.Ethernet.Interface)||media.WiFi&&_.size(media.WiFi.Network)||media.DSL)return!0;var ports=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Switch.Ports."));return _.some(ports,function(p){return p.Upstream})}function mask(str){if(!str)return"";for(var tmp="",i=0;i<str.length;i++)tmp+="*";return tmp}function getNATv6Hide(conn,config){if("USB"==conn.type)return!["IPv6","Dual"].includes(conn.data.IPStack)&&!conn.data.InterfaceOnly;if("PPPoE"==conn.type||"L2TP"==conn.type){var pppClient=funcs.fetchBranch(config,conn.data.PPPConfiguration);return!["IPv6","Dual"].includes(pppClient.IPStack)}return"DHCPv6"!=conn.type&&"Staticv6"!=conn.type}function getRaccessRulesIfaces(firewall){var result=[],zonesPath={v4:{source:"Device.Firewall.IPv4.Zones.2.",dest:"Device.Firewall.IPv4.Zones.1."},v6:{source:"Device.Firewall.IPv6.Zones.2.",dest:"Device.Firewall.IPv6.Zones.1."}};return _.each(firewall,function(fw,type){var isIPv4="IPv4"==type,zones=isIPv4?zonesPath.v4:zonesPath.v6,rules=funcs.newConfig.normalize(fw.Rules);Object.entries(rules).filter(function(_ref5){var _ref6=_slicedToArray2["default"](_ref5,2),value=(_ref6[0],_ref6[1]);return Boolean(Object.keys(value).length)}).forEach(function(_ref7){var _ref8=_slicedToArray2["default"](_ref7,2),elem=(_ref8[0],_ref8[1]),action=isIPv4?"DNAT":"ACCEPT";return!(elem.Action!=action||elem.Dest.Zone!=zones.dest||elem.Source.Zone!=zones.source||!elem.Ports.Dest[1]&&"(RA)ICMP"!=elem.Pattern||"tcp"!=elem.Proto[1].Value&&"icmp"!=elem.Proto[1].Value)&&void result.push(elem.Source.Iface)})}),result}function getGatewayIPAddress(routes,conn,type){var origin;conn&&conn.ifaceLink&&Array.isArray(conn.ifaceLink)?"v6"==type?origin=_.find(conn.ifaceLink,function(cl){return-1!=cl.indexOf("v6")}):(origin=_.find(conn.ifaceLink,function(cl){return-1==cl.indexOf("v6")}),origin||"Dual"!=conn.version||(origin=conn.additionalConn)):conn&&conn.link&&(origin=conn.link);var destination="v4"==type?"0.0.0.0/0":"::/0",gw=_.find(funcs.newConfig.normalize(routes),function(r){return r.Destination==destination&&r.Origin==origin});return gw?gw.GatewayIPAddress:null}function getFullIfacesList(arr,type){return arr.map(function(e,i){var _path="Device.WAN.Media.FullIfaceList.".concat(type,".").concat(i,"."),_ret={name:e.name,ifaceType:e.ifaceType,value:_path,Name:e.name,path:_path,__Link:e.value};return _ret})}var _interopRequireDefault=__webpack_require__(7),_slicedToArray2=_interopRequireDefault(__webpack_require__(226)),_typeof2=_interopRequireDefault(__webpack_require__(8)),_defineProperty2=_interopRequireDefault(__webpack_require__(235)),T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),IfaceConstructor=__webpack_require__(236),__autoconf="undefined"==typeof autoconf?{}:autoconf;
module.exports=function(config,attrs){var _Connection,pattern=T({"->":["$input","$attrs","$conns","$usbConns","$ifaces","$ip","$xdsl","$xdslStats","$dns","$vpn","$defaultGroup","$groupv6","$rip","$ripv6","$igmp","$udpxy","$mld","$tr","$voip","$deviceMode","$modems","Modems","DualLAN","Media","IPv4oE","IPoA","IPv6oE","PPPoE","PPPoA","PPPoEv6","PPPoEDual","PPTP","USB","IPIP6","SIT","IPv4DefaultGateway","IPv6DefaultGateway","__DeviceMode","__Groupv4Order","__Groupv6Order","__IgmpDownstreamsInst","__MLDDownstreamInst","__SubConnections","TR069","VoIP","RaccessRules"],$config:":external",$attrs:":external",$input:["$config",function(c){return c}],$conns:["$input",function(i){return i.Device.Network.Connection}],$usbConns:["$input",function(i){return i.Device.USB?i.Device.USB.Connection:void 0}],$ifaces:["$input",function(i){return i.Device.Network.Interface}],$firewall:["$input",function(i){return i.Device.Firewall}],$dns:["$input",function(i){return i.Device.Network.DNS}],$ip:["$input",function(i){return i.Device.Network.IP}],$xdsl:["$input",function(i){return i.Device.xDSL}],$xdslStats:["$input",function(i){return funcs.fetchBranch(i,"Device.Statistics.xDSL.")||void 0}],$vpn:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.Group.1.VPN.")||void 0}],$defaultGroup:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.Group.1.")}],$groupv6:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.Group.1.WANv6.")||void 0}],$rip:["$input",function(i){return funcs.fetchBranch(i,"Device.Routing.RIP.")}],$ripv6:["$input",function(i){return funcs.fetchBranch(i,"Device.Routing.RIPng.")}],$routingv4:["$input",function(i){return funcs.fetchBranch(i,"Device.Routing.IPv4.Routes.")}],$routingv6:["$input",function(i){return funcs.fetchBranch(i,"Device.Routing.IPv6.Routes.")}],$igmp:["$input",function(i){return funcs.fetchBranch(i,"Device.Services.IGMPX.")}],$mld:["$input",function(i){return funcs.fetchBranch(i,"Device.Services.MLDProxy.")}],$udpxy:["$input",function(i){return funcs.fetchBranch(i,"Device.Services.Udpxy.")}],$tr:["$input",function(i){return funcs.fetchBranch(i,"Device.Services.TR069.")}],$voip:["$input",function(i){return funcs.fetchBranch(i,"Device.Voip.")}],$ipsec:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.Connection.IPsec.")}],$deviceMode:["$input",function(i){return getDeviceMode(i)}],$modems:["$input",function(i){return funcs.fetchBranch(i,"Device.USB.Modem.")||void 0}],$natv6:["$input",function(i){return funcs.fetchBranch(i,"Device.Firewall.IPv6.Rules.")}],Modems:{"->":!0,"{$modems, $key}":["$parent",function(p){return funcs.newConfig.normalize(p.$modems)}],":":["$key*",function(k){return k}],ActiveSIM:["$modems*",function(m){return m.ActiveSIM}],SIM:["$modems*",function(m){return funcs.newConfig.normalize(m.SIM)}]},DualLAN:{"->":["?"],"?":["$parent",function(p){return p.$config.hasDualLAN}],$duallan:["$parent",function(p){return getDualLAN(p.$config)}],__has:["$duallan",function(dl){return!!dl}],__GroupInst:["$duallan*",function(dl){return dl.groupID}],__inst:["$duallan*",function(dl){return dl.bridgeID}],Ifname:["$duallan*",function(dl){return dl.bridgeIfname}],Group:["$duallan*",function(dl){return dl.group}],Conn:["$duallan*",function(dl){return dl.conn}],Zonev4:["$duallan*",function(dl){return dl.zones.v4}],Zonev6:["$duallan*",function(dl){return dl.zones.v6}],Rulesv4:["$duallan*",function(dl){return dl.fwRules.v4}],Rulesv6:["$duallan*",function(dl){return dl.fwRules.v6}]},UnnumberedIP:["$ip",function(ips){return _.findKey(ips,{LowerLayer:"Device.Network.Interface.Loopback.1.",Name:"Unnumbered IP"})}],Media:{Bridging:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"Bridge")}],BridgeNumberOfEntries:["Bridge",function(o){return _.size(o)}],Bridge:{"->":!0,"{$Raw,$i}":["$root",function(o){return getMedia(o.$ifaces,"Bridge",o.$config)}],":":["$i*",function(i){return i+1}],__Link:["$Raw*",function(o){return o.link}],__VID:["$Raw*","$root",function(r,o){return funcs.fetchBranch(o.$config,r.data.LowerLayer).VID}],Enable:["$Raw*",function(o){return o.data.Enable}],Name:["$Raw*","$root",function(o){return o.data.Name}],MACAddress:["$Raw*",function(o){return o.data.MACAddress.toUpperCase()}],CurrentMACAddress:["$Raw*",function(o){return o.data.CurrentMACAddress?o.data.CurrentMACAddress.toUpperCase():null}],MaxMRUSize:["$Raw*",function(o){return o.data.MTU}],CurrentMaxMRUSize:["$Raw*",function(o){return o.data.MTU}],AutoIncMACAddress:!1,ProxyARP:["$Raw*",function(o){return o.data.ProxyARP}]}},Ethernet:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"Ethernet")}],InterfaceNumberOfEntries:["Interface",function(o){return _.size(o)}],Interface:{"->":!0,"{$media, $inx}":["$root",function(o){return getMedia(o.$ifaces,"Ethernet")}],":":["$inx*",function(i){return i+1}],__Link:["$media*",function(o){return o.link}],Enable:["$media*",function(o){return o.data.Enable}],Name:["$media*",function(o){return o.data.Name}],MACAddress:["$media*",function(o){return o.data.MACAddress.toUpperCase()}],MaxMRUSize:["$media*",function(o){return o.data.MTU}]}},WiFi:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"WiFi")}],NetworkNumberOfEntries:["Network",function(o){return _.size(o)}],Network:{"->":!0,"{$Raw,$i}":["$root",function(o){return getMedia(o.$ifaces,"WiFi",{},!1,!1,o.$config)}],":":["$i*",function(i){return i+1}],__Link:["$Raw*",function(o){return o.link}],Enable:["$Raw*",function(o){return o.data.Enable}],Name:["$Raw*",function(o){return o.data.Name||o.data.Ifname}],MACAddress:["$Raw*",function(o){return o.data.MACAddress.toUpperCase()}],CurrentMACAddress:["$Raw*",function(o){return o.data.CurrentMACAddress?o.data.CurrentMACAddress.toUpperCase():null}],MaxMRUSize:["$Raw*",function(o){return o.data.MTU}],ProxyARP:["$Raw*",function(o){return o.data.ProxyARP}]}},DSL:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"ATM")||_.has(r.$ifaces,"PTM")}],ATM:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"ATM")}],LinkNumberOfEntries:["Link",function(o){return _.size(o)}],Link:{"->":!0,"{$Raw,$i}":["$root",function(o){return getMedia(o.$ifaces,"ATM")}],":":["$i*",function(i){return i+1}],$pvc:["$Raw*","$root",function(raw,rt){return getPVCSettings(rt.$xdsl,raw.link)}],__BridgeLink:["$Raw*",function(o){return o.bridgeLink}],__Link:["$Raw*",function(r){return r.link}],__PVCLink:["$pvc*",function(p){return p.link}],__VID:["$Raw*",function(o){return o.data.VID}],__VPR:["$Raw*",function(o){return o.data.VPR}],Enable:["$Raw*",function(o){return o.data.Enable}],Name:["$Raw*",function(o){return o.data.Name||o.data.Ifname}],LinkType:["$Raw*",function(o){return linkType(o.data.LinkType)}],DestinationAddress:["$pvc*",function(o){return o.data?o.data.VPI+"/"+o.data.VCI:void 0}],Encapsulation:["$pvc*",function(o){return o.data&&o.data.Encap?o.data.Encap.toUpperCase():void 0}],QoSClass:["$pvc*",function(o){return o.data?qosClass(o.data.QOS):"Unknown"}],PeakCellRate:["$pvc*","QoSClass",function(pvc,qos){return"UBR"!=qos&&pvc.data?pvc.data.PCR:void 0}],MaximumBurstSize:["$pvc*","QoSClass",function(pvc,qos){return"VBR-nrt"==qos||"VBR-rt"==qos?pvc.data.MBS:void 0}],SustainableCellRate:["$pvc*","QoSClass",function(pvc,qos){return"VBR-nrt"==qos||"VBR-rt"==qos?pvc.data.SCR:void 0}],MaxMRUSize:["$Raw*",function(o){return o.data.MTU}],ProxyARP:["$Raw*",function(o){return o.data.ProxyARP}]}},PTM:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"PTM")}],LinkNumberOfEntries:["Link",function(o){return _.size(o)}],Link:{"->":!0,"{$Raw,$i}":["$root",function(o){return getMedia(o.$ifaces,"PTM",{},!1,!1,o.$config)}],":":["$i*",function(i){return i+1}],__Link:["$Raw*",function(r){return r.link}],__BridgeLink:["$Raw*",function(o){return o.bridgeLink}],__VID:["$Raw*",function(o){return o.data.VID}],__VPR:["$Raw*",function(o){return o.data.VPR}],Enable:["$Raw*",function(o){return o.data.Enable}],Name:["$Raw*",function(o){return o.data.Name||(0!=o.data.VID?"PTM "+o.data.VID:"PTM untag")}],MACAddress:["$Raw*",function(o){return o.data.MACAddress.toUpperCase()}],CurrentMACAddress:["$Raw*",function(o){return o.data.CurrentMACAddress?o.data.CurrentMACAddress.toUpperCase():null}],LinkType:["$Raw*",function(o){return linkType(o.data.LinkType)}],MaxMRUSize:["$Raw*",function(o){return o.data.MTU}],ProxyARP:["$Raw*",function(o){return o.data.ProxyARP}]}}},Dongle:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"Cellular")}],InterfaceNumberOfEntries:["Interface",function(o){return _.size(o)}],Interface:{"->":!0,"{$Raw, $i}":["$root",function(o){return getMedia(o.$input,"Cellular",o.$config,o.$usbConns)}],":":["$i*",function(i){return i+1}],__Link:["$Raw*",function(o){return o.link}],Enable:["$Raw*",function(o){return o.data.Enable}],Name:["$Raw*",function(o){return o.data.Name||o.data.Ifname}],Type:["$Raw*",function(o){return o.data.Type}]}},FullIfaceList:{"->":!0,"?":["$root",function(r){return"Firewall"==r.$deviceMode}],$iface:["$root",function(r){return new IfaceConstructor(r.$config)}],ipv4:["$iface",function(i){return getFullIfacesList(i.getIfacesForSelect(["v4"]),"ipv4")}],ipv6:["$iface",function(i){return getFullIfacesList(i.getIfacesForSelect(["v6"]),"ipv6")}]}},NoWanPorts:["$config","Media",function(c,m){return!hasWanPorts(c,m)}],IPv4oE:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"IPv4oE",o.$input,!1,o.$usbConns)}],":":["$i*",function(i){return i+1}],$extend:["$conn*","$root",function(c,r){return _.extend(this,ipv4Template.build({$conn:c,$parentRoot:r}))}]}},IPoA:{"->":!0,ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"IPoA",o.$input)}],":":["$i*",function(i){return i+1}],$extend:["$conn*","$root",function(c,r){return _.extend(this,ipv4Template.build({$conn:c,$parentRoot:r}))}]}},IPv6oE:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$media","$isStatic","$dynDns","$statDns","$isAutoDns","StaticIP"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"IPv6oE",o.$input)}],":":["$i*",function(i){return i+1}],$media:["$root","$conn*",function(r,c){return getMediaByConnection(r.Media,c)}],$isStatic:["$conn*",function(c){return"Staticv6"==c.type}],$dynDns:["$root","$conn*",function(r,o){return r.$dns?getDynDNS(r.$dns,o.link):void 0}],$statDns:["$conn*",function(o){return getStatDNS(o.data)}],$isAutoDns:["$statDns*",function(sdns){return!(sdns&&sdns.length)}],__Link:["$conn*",function(o){return o.link}],__LinkGroupv6:["$conn*",function(c){return c.groupLinkv6}],__LinkIface:["$conn*",function(o){return o.ifaceLink}],__NATBridgeLink:["$conn*",function(o){return o.NATBridgeLink}],__NATZoneInst:["$conn*",function(o){return o.NATZoneInst}],__NATMasqInst:["$conn*",function(o){return o.NATMasqInst}],__NATMasqInstv6:["$conn*",function(o){return o.NATMasqInstv6}],__NATDisableRuleInst:["$conn*",function(o){return o.NATDisableRuleInst}],__NATDisableRuleInstv6:["$conn*",function(o){return o.NATDisableRuleInstv6}],__PingRuleInst:["$conn*",function(o){return o.PingRuleInst}],__FWRuleInst:["$conn*",function(o){return o.FWRuleInst}],__RIPNetworkInst:["$conn*",function(o){return o.RIPNetworkInst}],__IGMPInst:["$conn*",function(o){return o.IGMPInst}],__IGMPDownInst:["$conn*",function(o){return o.IGMPDownInst}],__isShorewallZone:["$conn*",function(o){return o.isShorewallZone}],__isShorewallMasq:["$conn*",function(o){return o.isShorewallMasq}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],Status:["$conn*",function(o){return getConnStatus(o.data)}],StatusExt:["$conn*",function(o){return getPPPStatusExt(o.data.ConnectionStatusExt)}],AddressingType:["$isStatic*",function(isSt){return isSt?"Static":"DHCP"}],Origin:["$conn*",function(o){return getOrigin(o.data.IPv6Mode)}],RequestPrefixes:["$conn*","$isStatic",function(c,isSt){return isSt?void 0:c.data.RequestPrefixes}],StaticIPNumberOfEntries:["StaticIP*",function(o){return _.size(o)}],StaticIP:{"->":!0,"?":["$root",function(r){return!!r.$ip}],$conn:["$parent",function(o){return o.$conn}],"{$ip,$i}":["$root","$conn*",function(r,o){return getStaticIP(r.$ip,o,"ipv6")}],":":["$i*",function(i){return i+1}],Address:["$ip*",function(o){return getIPAddress(o.data.IPAddress)}],Prefix:["$ip*",function(o){return getPrefix(o.data.IPAddress)}]},IPAddress:["StaticIPNumberOfEntries*","StaticIP*",function(n,o){return n>0?o[1].Address:""}],Prefix:["StaticIPNumberOfEntries*","StaticIP*",function(n,o){return n>0?o[1].Prefix:""}],GatewayIPv6Address:["$conn*","$root",function(c,r){return c.data.Gateway||getGatewayIPAddress(r.$routingv6,c,"v6")}],StaticIPAddress0:["StaticIPNumberOfEntries*","StaticIP*","$conn*",function(n,o,c){return n>0?o[1].Address:getIPAddress(c.data.IPAddress)}],StaticIPPrefix0:["StaticIPNumberOfEntries*","StaticIP*","$conn*",function(n,o,c){return n>0?o[1].Prefix:getPrefix(c.data.IPAddress)}],DNSIPv6Automatical:["$isStatic*","$isAutoDns*",function(isSt,a){return isSt?void 0:a}],DNSIPv6Server1:["$isAutoDns*","$dynDns*","$statDns*",function(a,d,s){return getDNSValue(a,d,s,0)}],DNSIPv6Server2:["$isAutoDns*","$dynDns*","$statDns*",function(a,d,s){return getDNSValue(a,d,s,1)}],DNSIPv6Order:["$conn*",function(o){return getDnsOrder(o.data)}],DefaultGatewayv6:["$conn*",function(c){return c.gwv6}],MediaType:["$media*",function(o){return o.type}],Media:["$media*",function(o){return expandMedia(o)}],MediaPath:["$media*",function(o){return getMediaPath(o)}],Flags:["$root","$conn","$media*",function(rt,o,m){return flagsTemplate.build({$conn:o,$deviceMode:rt.$deviceMode,$igmp:rt.$igmp,$mld:rt.$mld,$media:m})}],VLAN:["$media*","$root",function(m,r){return vlanTemplate.build({$media:m,$root:r})}]}},PPPoE:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"PPPoE",o.$input,!1,o.$usbConns)}],":":["$i*",function(i){return i+1}],$extend:["$conn*","$root",function(c,r){return _.extend(this,pppTemplate.build({$conn:c,$parentRoot:r}))}]}},PPPoA:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"PPPoA",o.$input)}],":":["$i*",function(i){return i+1}],$extend:["$conn*","$root",function(c,r){return _.extend(this,pppTemplate.build({$conn:c,$parentRoot:r}))}]}},PPPoEv6:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"PPPoEv6",o.$input)}],":":["$i*",function(i){return i+1}],$extend:["$conn*","$root",function(c,r){return _.extend(this,pppTemplate.build({$conn:c,$parentRoot:r}))}]}},PPPoEDual:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"PPPoEDual",o.$input)}],":":["$i*",function(i){return i+1}],$extend:["$conn*","$root",function(c,r){return _.extend(this,pppTemplate.build({$conn:c,$parentRoot:r}))}]}},PPTP:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"PPTP",o.$input)}],":":["$i*",function(i){return i+1}],__LowerConnection:["$conn*",function(c){return c.data.BaseInterface}],ActualType:["$conn*",function(c){return c.isL2TPv6?"L2TPDUAL":c.type}],$extend:["$conn*","$root",function(c,r){return _.extend(this,pppTemplate.build({$conn:c,$parentRoot:r}))}]}},USB:{"->":["?","Connection","ConnectionNumberOfEntries"],"?":["$root",function(r){return!!r.$usbConns}],ConnectionNumberOfEntries:["$root",function(r){return getUsbNumbers(r.$usbConns)}],Connection:{"->":["$conn","$ifaces","?"],$usbAttrs:["$root",function(r){return r.$attrs?funcs.fetchBranch(r.$attrs,"Device.USB.Connection.#template."):null}],"{$conn, $i}":["$root",function(o){return getConnection(o.$usbConns,"USB",o.$input)}],":":["$i*",function(i){return i+1}],"?":["$conn*",function(c){return!!c}],$media:["$root","$conn*",function(r,c){return getMediaByConnection(r.Media,c)}],$additional:["$conn*",function(c){return c.additionalConn}],$statDnsV4:["$conn*",function(o){return getStatDNS(o.data,"IPv4")}],$dynDnsV4:["$root","$conn*",function(r,o){return r.$dns&&"IPv6"!=o.data.IPStack?getDynDNS(r.$dns,o.Link,o,"v4"):void 0}],$isAutoDnsV4:["$statDnsV4",function(sdns){return!(sdns&&sdns.length)}],$dynDnsV6:["$root","$conn*",function(r,o){return r.$dns&&["IPv6","Dual"].includes(o.data.IPStack)?getDynDNS(r.$dns,o.Link,o,"v6"):void 0}],$statDnsV6:["$conn*",function(o){return getStatDNS(o.data,"IPv6")}],$isAutoDnsV6:["$statDnsV6*",function(sdns){return!(sdns&&sdns.length)}],$bands:["$root","$conn*",function(r,c){return getModemBands(r.$modems,c)}],$natv6:["$root",function(r){return r.$natv6}],APN:["$conn*",function(c){return c.data.APN}],DialNumber:["$conn*","$usbAttrs",function(c,a){return c.data.DialNumber}],AuthenticationProtocol:["$conn*","$usbAttrs",function(c,a){return c.data.AuthType?c.data.AuthType:a?a.AuthType["#attr"]["default"]:void 0}],Enable:["$conn*",function(c){return c.data.Enable}],Mode:["$conn*",function(c){return c.data.Mode}],Name:["$conn*",function(c){return c.data.Name}],WithoutAuth:["$conn*",function(c){return c.data.NoAuth}],Username:["$conn*",function(c){return c.data.Username}],Password:["$conn*",function(c){return c.data.Password}],Interface:["$conn*",function(c){return c.data.Interface}],Ifname:["$conn*",function(c){return c.data.Ifname}],Version:["$conn*",function(c){return c.data.IPStack}],InterfaceOnly:["$conn*",function(c){return c.data.InterfaceOnly}],IsBridged:["$conn*",function(c){return c.data.IsBridged}],UseAsRoute:["$conn*",function(c){return c.data.UseAsRoute}],$pppOptions:["$conn*",function(c){return c.data.PPPOptions}],KeepAlive:["$pppOptions*","$usbAttrs",function(ppp,a){return ppp.KeepAlive?ppp.KeepAlive.Enable:a?a.PPPOptions.KeepAlive.Enable["#attr"]["default"]:void 0}],LCPEcho:["$pppOptions*","$usbAttrs",function(ppp,a){return ppp.KeepAlive?ppp.KeepAlive.Interval:a?a.PPPOptions.KeepAlive.Interval["#attr"]["default"]:void 0}],LCPEchoRetry:["$pppOptions*","$usbAttrs",function(ppp,a){return ppp.KeepAlive?ppp.KeepAlive.Fails:a?a.PPPOptions.KeepAlive.Fails["#attr"]["default"]:void 0}],PPPDebug:["$pppOptions*","$usbAttrs",function(ppp,a){return _.has(ppp,"PPPDebug")?ppp.PPPDebug:a?a.PPPOptions.PPPDebug["#attr"]["default"]:void 0}],ConnectionTrigger:["$pppOptions*","$usbAttrs",function(ppp,a){return _.has(ppp,"Ondemand")?connTriger(ppp.Ondemand):a?connTriger(a.PPPOptions.Ondemand["#attr"]["default"]):void 0}],MaxMRUSize:["$pppOptions*","$usbAttrs",function(ppp,a){return _.has(ppp,"MTU")?ppp.MTU:a?a.PPPOptions.MTU["#attr"]["default"]:void 0}],IdleDisconnectTime:["$pppOptions*","$usbAttrs",function(ppp,a){return _.has(ppp,"OndemandTimeout")?ppp.OndemandTimeout:a?a.PPPOptions.OndemandTimeout["#attr"]["default"]:void 0}],__Link:["$conn*",function(o){return o.link}],__LinkSub:["$additional",function(addl){return addl?addl:void 0}],__GroupInst:["$conn*",function(c){return c.groupInst}],__LinkGroupv4:["$conn*",function(c){return c.groupLink}],__NATBridgeLink:["$conn*",function(o){return o.NATBridgeLink}],__LinkGroupv6:["$conn*",function(c){return c.groupLinkv6}],__NATZoneInst:["$conn*",function(o){return o.NATZoneInst}],__NATZonev6Inst:["$conn*",function(o){return o.NATZoneInstv6}],__NATMasqInst:["$conn*",function(o){return o.NATMasqInst}],__NATMasqInstv6:["$conn*",function(o){return o.NATMasqInstv6}],__NATDisableRuleInst:["$conn*",function(o){return o.NATDisableRuleInst}],__NATDisableRuleInstv6:["$conn*",function(o){return o.NATDisableRuleInstv6}],__LinkIface:["$conn*",function(o){return o.ifaceLink}],__PingRuleInst:["$conn*",function(o){return o.PingRuleInst}],__PingRulev6Inst:["$conn*",function(o){return o.PingRulev6Inst}],__FWRuleInst:["$conn*",function(o){return o.FWRuleInst}],__LinkInterface:["$conn*",function(o){return o.data.BaseInterface}],__UsbZoneInst:["$conn*",function(o){return o.usbZoneInst}],__UsbZonev6Inst:["$conn*",function(o){return o.usbZonev6Inst}],__SupportRule:["$conn*","$natv6",function(c,natv6){return getSupportRuleInst(c,natv6)}],Status:["$conn*","$root",function(o,r){return getConnStatus(o.data,null,null,r.$input.OnlyInternalModems)}],StatusExt:["$conn*","$root",function(o,r){return getPPPStatusExt(o.data.ConnectionStatusExt,o.data,r.$input.OnlyInternalModems)}],IsFailover:["$conn*",function(c){return c.isFailover}],IsLoadBalancing:["$conn*",function(c){return c.isLoadBalancing}],DefaultGateway:["$conn*",function(c){return c.gw}],DefaultGatewayv6:["$conn*",function(c){return c.gwv6}],DisabledGateway:["$conn*",function(c){return c.disabledGateway}],MediaType:["$media*",function(o){return o.type}],Media:["$media*",function(o){return expandMedia(o)}],MediaPath:["$media*",function(o){return getMediaPath(o)}],Flags:["$root","$conn*","$media*",function(rt,o,m){return flagsTemplate.build({$conn:o,$deviceMode:rt.$deviceMode,$igmp:rt.$igmp,$mld:rt.$mld,$media:m})}],VLAN:["$media*","$root",function(m,r){return vlanTemplate.build({$media:m,$root:r})}],Modem:["$conn*",function(c){return c.data.Modem}],ActiveSIM:["$conn*",function(c){return c.data.SIM}],IntModem:["$conn*",function(c){return c.data.IntModem}],SIM:["$conn*",function(c){return c.data.Modem&&c.data.SIM?c.data.Modem+" "+c.data.SIM:""}],SIMName:["$conn*","$root",function(c,r){return getValue(r.$modems,c,"sim")}],ModemName:["$conn*","$root",function(c,r){return getValue(r.$modems,c,"modem")}],ModemId:["$conn*","$root",function(c,r){return getValue(r.$modems,c,"id")}],HealthCheck:["$conn*",function(c){return healthCheck.build({$data:c.data.HealthCheck})}],Connections:["$conn*",function(c){return funcs.newConfig.normalize(c.data.Connections)}],IPChangeDetection:["$conn*",function(c){return c.data.IPChangeDetection}],IsBased:["$conn*",function(c){return c.isBased}],isUseInMirror:["$conn*",function(c){return c.isUseInMirror}],DNSAutomatical:["$isAutoDnsV4",function(a){return a}],DNSServer1:["$isAutoDnsV4","$dynDnsV4","$statDnsV4",function(a,d,s){return getDNSValue(a,d,s,0)}],DNSServer2:["$isAutoDnsV4","$dynDnsV4","$statDnsV4",function(a,d,s){return getDNSValue(a,d,s,1)}],DNSOrder:["$conn*",function(o){return getDnsOrder(o.data,"IPv4")}],DNSIPv6Automatical:["$isAutoDnsV6*",function(a){return a}],DNSIPv6Server1:["$isAutoDnsV6*","$dynDnsV6*","$statDnsV6*",function(a,d,s){return getDNSValue(a,d,s,0)}],DNSIPv6Server2:["$isAutoDnsV6*","$dynDnsV6*","$statDnsV6*",function(a,d,s){return getDNSValue(a,d,s,1)}],DNSIPv6Order:["$conn*",function(o){return getDnsOrder(o.data,"IPv6")}],$ip:["$root",function(r){return r.$ip}],$ipv4Conn:["$conn*","$root",function(c,r){return getSupportedUsbConn(c,"ipv4",r.$config)}],$ipv6Conn:["$conn*","$root",function(c,r){return getSupportedUsbConn(c,"ipv6",r.$config)}],$ipv4:["$ip*","$ipv4Conn*",function(ip,conn){return getStaticIP(ip,conn,"ipv4")}],$ipv6:["$ip*","$ipv6Conn*",function(ip,conn){return getStaticIP(ip,conn,"ipv6")}],IPAddress:["$ipv4*",function(ip){return ip.length?getIPAddress(ip[0].data.IPAddress):void 0}],SubnetMask:["$ipv4*",function(ip){return ip.length?getSubnetMask(ip[0].data.IPAddress):void 0}],GatewayIPAddress:["$conn*","$root",function(c,r){return c.data.Gateway||getGatewayIPAddress(r.$routingv4,c,"v4")}],GatewayIPv6Address:["$conn*","$root",function(c,r){return c.data.Gateway||getGatewayIPAddress(r.$routingv6,c,"v6")}],IPv6Address:["$ipv6*",function(ip){return ip.length?getIPAddress(ip[0].data.IPAddress):void 0}],StaticIPPrefix0:["$ipv6*",function(ip){return ip.length?getPrefix(ip[0].data.IPAddress):void 0}],BandsPreferenceAuto:["$bands*",function(b){return b.BandsPreferenceAuto}],BandsPreference:["$bands",function(b){return b?b.BandsPreference:null}]}},IPIP6:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":!0,"{$conn, $i}":["$root",function(o){return getConnection(o.$conns,"IPIP6",o.$input)}],":":["$i*",function(i){return i+1}],__Link:["$conn*",function(c){return c.link}],Name:["$conn*",function(c){return c.data.Name}],$media:["$root","$conn*",function(r,c){return getMediaByConnection(r.Media,c)}],MediaType:["$media*",function(o){return o.type}],Media:["$media*",function(o){return expandMedia(o)}],MediaPath:["$media*",function(o){return getMediaPath(o)}],Enable:["$conn*",function(c){return c.data.Enable}],Status:["$conn*",function(o){return getIPIP6Status(o.data.Status)}],StatusExt:["$conn*",function(o){return getPPPStatusExt(o.data.ConnectionStatusExt)}],StopOnFail:["$conn*",function(o){return o.data.StopOnFail}],Mode:["$conn*",function(c){return c.data.Mode}],MRUAuto:["$conn*",function(c){return 0==c.data.MTU}],MaxMRUSize:["$conn*",function(c){return c.data.MTU}],PeerIPv6Auto:["$conn*",function(c){return c.data.AFTRNameOption}],PeerIPv6:["$conn*",function(c){return c.data.PeerIPv6}],PeerIPv6Type:["$conn*",function(c){return funcs.is.ipv6(c.data.PeerIPv6)?"ipv6":"fqdn"}],AutomaticalConnection:["$conn*",function(c){return void 0!=c.vpnLink}],DefaultGateway:["$conn*",function(c){return c.gw}],__LinkGroupv4:["$conn*",function(c){return c.groupLink}],__LinkVPN:["$conn*",function(c){return c.vpnLink?c.vpnLink:void 0}],__LinkInterface:["$conn*",function(c){return c.data.IPv6}],__NATMasqInst:["$conn*",function(c){return c.NATMasqInst}],__NATZoneInst:["$conn*",function(o){return o.NATZoneInst}],__PingRuleInst:["$conn*",function(o){return o.PingRuleInst}],__FWRuleInst:["$conn*",function(o){return o.FWRuleInst}],__RIPNetworkInst:["$conn*",function(o){return o.RIPNetworkInst}],__LowerConnection:["$conn*",function(o){return o.data.IPv6}],__BaseConnName:["$conn*","$root",function(c,r){return funcs.fetchBranch(r.$input,c.data.IPv6).Name}],Flags:["$root","$conn*","$media",function(rt,o,m){return flagsTemplate.build({$conn:o,$deviceMode:rt.$deviceMode,$igmp:rt.$igmp,$mld:rt.$mld,$media:m})}]}},SIT:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:(_Connection={"->":!0,"{$conn, $i}":["$root",function(o){return getConnection(o.$conns,"SIT",o.$input)}],":":["$i*",function(i){return i+1}],__Link:["$conn*",function(c){return c.link}],Name:["$conn*",function(c){return c.data.Name}],$media:["$root","$conn*",function(r,c){return getMediaByConnection(r.Media,c)}],MediaType:["$media*",function(o){return o.type}],Media:["$media*",function(o){return expandMedia(o)}],MediaPath:["$media*",function(o){return getMediaPath(o)}],Enable:["$conn*",function(c){return c.data.Enable}],Status:["$conn*",function(o){return getIPIP6Status(o.data.Status)}],StopOnFail:["$conn*",function(o){return o.data.StopOnFail}],Mode:["$conn*",function(c){return c.data.Mode}],PeerIP:["$conn*",function(c){return c.data.PeerIP}],MRUAuto:["$conn*",function(c){return 0==c.data.MTU}],MaxMRUSize:["$conn*",function(c){return c.data.MTU}],IPv6rdHubAndSpoke:["$conn*",function(c){return c.data.IPv6rdHubAndSpoke}],IPv6rdIPv4MaskLen:["$conn*",function(c){return c.data.IPv6rdIPv4MaskLen}],IPv6rdOption:["$conn*",function(c){return c.data.IPv6rdOption}],IPv6rdPrefix:["$conn*",function(c){return c.data.IPv6rdPrefix}],IPv6rdPrefixLen:["$conn*",function(c){return c.data.IPv6rdPrefixLen}],VPNIPv6:["$conn*",function(c){return c.data.VPNIPv6}],PeerVPNIPv6:["$conn*",function(c){return c.data.PeerVPNIPv6}],RoutedPrefix:["$conn*",function(c){return c.data.RoutedPrefix}],DefaultGatewayv6:["$conn*",function(c){return c.gwv6}],__LinkGroupv6:["$conn*",function(c){return c.groupLinkv6}],__LinkInterface:["$conn*",function(c){return c.data.IP}],__LinkTunnelInterface:["$conn*",function(o){return o.data.Interface}],__LinkVPN:["$conn*",function(c){return c.vpnLink?c.vpnLink:void 0}],__LowerConnection:["$conn*",function(o){return o.data.IP}]},_defineProperty2["default"](_Connection,"__LinkGroupv6",["$conn*",function(c){return c.groupLinkv6}]),_defineProperty2["default"](_Connection,"__LinkIface",["$conn*",function(o){return o.ifaceLink}]),_defineProperty2["default"](_Connection,"__NATBridgeLink",["$conn*",function(o){return o.NATBridgeLink}]),_defineProperty2["default"](_Connection,"__NATZoneInst",["$conn*",function(o){return o.NATZoneInst}]),_defineProperty2["default"](_Connection,"__NATMasqInst",["$conn*",function(o){return o.NATMasqInst}]),_defineProperty2["default"](_Connection,"__NATMasqInstv6",["$conn*",function(o){return o.NATMasqInstv6}]),_defineProperty2["default"](_Connection,"__PingRuleInst",["$conn*",function(o){return o.PingRuleInst}]),_defineProperty2["default"](_Connection,"__FWRuleInst",["$conn*",function(o){return o.FWRuleInst}]),_defineProperty2["default"](_Connection,"__RIPNetworkInst",["$conn*",function(o){return o.RIPNetworkInst}]),_defineProperty2["default"](_Connection,"__IGMPInst",["$conn*",function(o){return o.IGMPInst}]),_defineProperty2["default"](_Connection,"__IGMPDownInst",["$conn*",function(o){return o.IGMPDownInst}]),_defineProperty2["default"](_Connection,"__isShorewallZone",["$conn*",function(o){return o.isShorewallZone}]),_defineProperty2["default"](_Connection,"__isShorewallMasq",["$conn*",function(o){return o.isShorewallMasq}]),_defineProperty2["default"](_Connection,"Flags",["$root","$conn*","$media",function(rt,o,m){return flagsTemplate.build({$conn:o,$deviceMode:rt.$deviceMode,$igmp:rt.$igmp,$mld:rt.$mld,$media:m})}]),_Connection)},IPv4DefaultGateway:["$root",function(o){return identifyDefaultGateway(o,"v4")}],IPv6DefaultGateway:["$root",function(o){return identifyDefaultGateway(o,"v6")}],UseAutomaticalPPTP:["$conns*",function(c){return getUseAutomatical(c)}],__DeviceMode:["$input",function(i){return getDeviceMode(i)}],__Groupv4Order:["$defaultGroup*",function(g){return getOrder(g.WAN)}],__Groupv6Order:["$groupv6*",function(g){return getOrder(g)}],__IgmpDownstreamsInst:["$igmp*",function(i){return getIgmpDownstreamsInst(i)}],__MLDDownstreamInst:["$mld*",function(i){return getMLDDownstreamsInst(i)}],__Dsysinit:!0,__DSL:["$xdsl",function(xdsl){return!!xdsl}],__NATv6:["$natv6",function(f){return!!f}],PBREnable:["$defaultGroup*",function(g){return g.PBREnable}],PBRRule:["$firewall*",function(f){return getPBRRule(f)}],__SubConnections:{"->":!0,$typesConn:["IPv4oE","IPv6oE","PPPoE"],"{$conn, $i}":["$parent","$typesConn",function(p,types){return getSubConnection(p.$conns,types,p.$input)}],":":["$i*",function(i){return i}],__Link:["$conn*",function(c){return c.link}],Name:["$conn*",function(c){return c.data.Name}],Type:["$conn*",function(c){return c.type}]},TR069:{"->":!0,Iface:["$root",function(r){return r.$tr?r.$tr.Iface:void 0}]},VoIP:{"->":["$voip","XDLinkNetworkConnection"],$voip:["$root",function(r){return r.$voip}],XDLinkNetworkConnection:["$voip*",function(v){return v?v.XDLinkNetworkConnection:void 0}]},RaccessRules:{"->":!0,Ifaces:["$root",function(r){return getRaccessRulesIfaces(r.$firewall)}]}}),ipv4Template=T({"->":["$conn","$parentRoot","$media","$dynDns","$statDns","$isAutoDns","$isStatic","StaticIP","VLAN","Kabinet"],$conn:":external",$parentRoot:":external",$media:["$parentRoot","$conn",function(r,c){return getMediaByConnection(r.Media,c)}],$dynDns:["$parentRoot","$conn",function(r,o){return r.$dns?getDynDNS(r.$dns,o.link):void 0}],$statDns:["$conn",function(o){return getStatDNS(o.data)}],$isAutoDns:["$statDns",function(sdns){return!(sdns&&sdns.length)}],$isStatic:["$conn",function(o){return!!/Static/.test(o.link)}],__Link:["$conn",function(o){
return o.link}],__LinkGroupv4:["$conn",function(c){return c.groupLink}],__LinkVPN:["$conn",function(c){return c.vpnLink?c.vpnLink:void 0}],__LinkIface:["$conn",function(o){return o.ifaceLink}],__NATBridgeLink:["$conn",function(o){return o.NATBridgeLink}],__NATMasqInst:["$conn",function(o){return o.NATMasqInst}],__NATZoneInst:["$conn",function(o){return o.NATZoneInst}],__NATDisableRuleInst:["$conn",function(o){return o.NATDisableRuleInst}],__PingRuleInst:["$conn",function(o){return o.PingRuleInst}],__FWRuleInst:["$conn",function(o){return o.FWRuleInst}],__RIPNetworkInst:["$conn",function(o){return o.RIPNetworkInst}],__IGMPInst:["$conn",function(o){return o.IGMPInst}],__IGMPDownInst:["$conn",function(o){return o.IGMPDownInst}],__isShorewallZone:["$conn",function(o){return o.isShorewallZone}],__isShorewallMasq:["$conn",function(o){return o.isShorewallMasq}],AutomaticalConnection:["$conn",function(c){return void 0!=c.vpnLink}],Enable:["$conn",function(o){return o.data.Enable}],Name:["$conn",function(o){return o.data.Name}],Status:["$conn",function(o){return getConnStatus(o.data)}],StatusExt:["$conn",function(o){return getPPPStatusExt(o.data.ConnectionStatusExt,o.data)}],AddressingType:["$isStatic",function(isSt){return isSt?"Static":"DHCP"}],StaticIPNumberOfEntries:["StaticIP",function(o){return _.size(o)}],StaticIP:{"->":!0,$parentRoot:["$parent",function(p){return p.$parentRoot}],"?":["$parentRoot",function(r){return!!r.$ip}],$conn:["$parent",function(o){return o.$conn}],"{$ip,$i}":["$parentRoot","$conn",function(r,o){return getStaticIP(r.$ip,o,"ipv4")}],":":["$i*",function(i){return i+1}],Address:["$ip*",function(o){return getIPAddress(o.data.IPAddress)}],SubnetMask:["$ip*",function(o){return getSubnetMask(o.data.IPAddress)}]},StaticIPAddress0:["StaticIPNumberOfEntries","StaticIP*","$conn",function(n,o,c){return n>0?o[1].Address:getIPAddress(c.data.IPAddress)}],StaticIPSubnetMask0:["StaticIPNumberOfEntries","StaticIP*","$conn",function(n,o,c){return n>0?o[1].SubnetMask:getSubnetMask(c.data.IPAddress)}],GatewayIPAddress:["$conn*","$parentRoot",function(c,r){return c.data.Gateway||getGatewayIPAddress(r.$routingv4,c,"v4")}],IsFailover:["$conn",function(c){return c.isFailover}],IsLoadBalancing:["$conn",function(c){return c.isLoadBalancing}],DefaultGateway:["$conn",function(c){return c.gw}],DisabledGateway:["$conn",function(c){return c.disabledGateway}],DNSAutomatical:["$isStatic","$isAutoDns",function(isSt,a){return isSt?void 0:a}],DNSServer1:["$isAutoDns","$dynDns","$statDns",function(a,d,s){return getDNSValue(a,d,s,0)}],DNSServer2:["$isAutoDns","$dynDns","$statDns",function(a,d,s){return getDNSValue(a,d,s,1)}],DNSOrder:["$conn",function(o){return getDnsOrder(o.data)}],VendorID:["$conn",function(o){return o.data.VendorID}],Hostname:["$conn",function(o){return o.data.Hostname}],MediaType:["$media*",function(o){return o.type}],Media:["$media*",function(o){return expandMedia(o)}],MediaPath:["$media*",function(o){return getMediaPath(o)}],Flags:["$parentRoot","$conn","$media",function(rt,o,m){return flagsTemplate.build({$conn:o,$deviceMode:rt.$deviceMode,$igmp:rt.$igmp,$udpxy:rt.$udpxy,$media:m})}],VLAN:["$media*","$parentRoot",function(m,r){return vlanTemplate.build({$media:m,$root:r})}],Kabinet:{"->":["?"],"?":["$parent",function(p){return!!p.$conn.data.Kabinet}],$kabinet:["$parent",function(p){return p.$conn.data.Kabinet}],Enable:["$kabinet*",function(k){return k.Enable}],Password:["$kabinet*",function(k){return k.Password}],ConnectionStatus:["$kabinet*",function(k){return getKabinetStatusInfo(getKabinetConnStatus(k.ConnectionStatus))}],Status:["$kabinet*",function(k){return getKabinetStatus(k.ConnectionStatus)}]}}),pppTemplate=T({"->":["$conn","$duallan","$additional","$ipsec","$unnumberedIP","IPsec","UnnumberedIP","DualLAN","StaticIPAddress0","$dynDns","$dynDnsv6","$statDns","$statDnsv6","$isAutoDns","$isAutoDnsv6","$isStatic","StaticIP","Auth"],$conn:":external",$parentRoot:":external",$media:["$parentRoot","$conn",function(pr,c){return getMediaByConnection(pr.Media,c)}],$duallan:["$parentRoot",function(pr){return pr.DualLAN}],$config:["$parentRoot","$conn",function(pr,c){return funcs.fetchBranch(pr.$input,c.data.PPPConfiguration)}],$additional:["$conn",function(c){return c.additionalConn}],$ipsec:["$conn",function(c){return c.ipsecConn}],$dynDns:["$parentRoot","$conn*",function(r,c){return r.$dns?getDynDNS(r.$dns,c.link):void 0}],$dynDnsv6:["$parentRoot","$additional*",function(r,addl){return r.$dns?getDynDNS(r.$dns,addl.link):void 0}],$statDns:["$conn*",function(c){return getStatDNS(c.data)}],$statDnsv6:["$additional*",function(addl){return getStatDNS(addl.data)}],$isStatic:["$conn",function(o){return!!/Static/.test(o.link)}],$isAutoDns:["$statDns*",function(sdns){return!(sdns&&sdns.length)}],$isAutoDnsv6:["$statDnsv6*",function(sdns){return!(sdns&&sdns.length)}],$isAutoConn:["$conn",function(c){return"Device.Network.Group.1."==c.data.BaseInterface}],__Link:["$conn",function(o){return o.link}],__LinkIface:["$conn",function(o){return o.ifaceLink}],__LinkSub:["$additional","$ipsec",function(addl,ipsec){return addl?addl.link:ipsec?ipsec.link:void 0}],__IPsecConnStatus:["$ipsec",function(ipsec){return ipsec?ipsec.data.ConnectionStatus:void 0}],__LinkGroupv4:["$conn*",function(c){return c.groupLink}],__LinkGroupv6:["$additional*",function(a){return a.groupLinkv6}],__LinkVPN:["$conn*","$isAutoConn*",function(c,i){return i?c.vpnLink:void 0}],__LinkConfiguration:["$conn",function(o){return o.data.PPPConfiguration}],__LinkInterface:["$conn",function(o){return o.data.BaseInterface}],__LinkTunnelInterface:["$conn",function(o){return o.data.Interface}],__NATBridgeLink:["$conn",function(o){return o.NATBridgeLink}],__NATMasqInst:["$conn",function(o){return o.NATMasqInst}],__NATMasqInstv6:["$conn*",function(o){return o.NATMasqInstv6}],__NATZoneInst:["$conn",function(o){return o.NATZoneInst}],__NATZoneInstSub:["$additional*",function(o){return o.NATZoneInst}],__NATDisableRuleInst:["$conn",function(o){return o.NATDisableRuleInst}],__NATDisableRuleInstv6:["$conn",function(o){return o.NATDisableRuleInstv6}],__PingRuleInst:["$conn",function(o){return o.PingRuleInst}],__PingRuleInstSub:["$additional*",function(o){return o.PingRuleInst}],__FWRuleInst:["$conn",function(o){return o.FWRuleInst}],__FWRuleInstSub:["$additional*",function(o){return o.FWRuleInst}],__RIPNetworkInst:["$conn",function(o){return o.RIPNetworkInst}],__RIPNetworkInstSub:["$additional*",function(o){return o.RIPNetworkInst}],__IGMPInst:["$conn",function(o){return o.IGMPInst}],__IGMPDownInst:["$conn",function(o){return o.IGMPDownInst}],__isShorewallZone:["$conn",function(o){return o.isShorewallZone}],__isShorewallMasq:["$conn",function(o){return o.isShorewallMasq}],__IPsecInst:["$conn",function(o){return o.IPsecInst}],__IPsecZoneInst:["$ipsec*",function(o){return o.IPsecZoneInst}],Enable:["$conn","$ipsec",function(o,ipsec){return ipsec?ipsec.data.Enable:o.data.Enable}],Status:["$conn","$additional","$ipsec",function(o,a,i){return getConnStatus(o.data,a?a.data:null,i?i.data:null)}],StatusExt:["$conn",function(o){return getPPPStatusExt(o.data.ConnectionStatusExt)}],Name:["$conn",function(o){return o.data.Name}],Username:["$config",function(o){return __autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_35980?mask(o.Username):o.Username}],Password:["$config",function(o){return __autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_35980||__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_49221?mask(o.Password):o.Password}],ServiceName:["$conn",function(o){return getServerName(o.data)}],KeepAlive:["$config",function(o){return o.KeepAlive?o.KeepAlive.Enable:void 0}],LCPEcho:["$config",function(o){return o.KeepAlive?o.KeepAlive.Interval:void 0}],LCPEchoRetry:["$config",function(o){return o.KeepAlive?o.KeepAlive.Fails:void 0}],MaxMRUSize:["$config",function(o){return o.MTU}],PPPDebug:["$config",function(o){return o.PPPDebug}],IsFailover:["$conn","$additional",function(c,a){return c.isFailover||a&&a.isFailover}],IsLoadBalancing:["$conn","$additional",function(c,a){return c.isLoadBalancing||a&&a.isLoadBalancing}],DefaultGateway:["$conn","$additional",function(c,a){return c.gw||a&&a.gw}],DisabledGateway:["$conn","$additional",function(c,a){return c.disabledGateway||a&&a.disabledGateway}],DefaultGatewayv6:["$conn","$additional",function(c,a){return c.gwv6||a&&a.gwv6}],DNSAutomatical:["$conn","$isStatic","$isAutoDns",function(c,isSt,a){return isSt?void 0:a}],DNSServer1:["$conn","$isAutoDns","$dynDns","$statDns",function(c,a,d,s){return"IPv4"===c.version?getDNSValue(a,d,s,0):void 0}],DNSServer2:["$conn","$isAutoDns","$dynDns","$statDns",function(c,a,d,s){return"IPv4"===c.version?getDNSValue(a,d,s,1):void 0}],DNSOrder:["$conn",function(c){return"IPv4"===c.version?getDnsOrder(c.data):void 0}],AuthenticationProtocol:["$config",function(o){return authProto(o.Auth)}],EncryptionProtocol:["$config",function(o){return encrProto(o.Encryption)}],ConnectionTrigger:["$config",function(o){return connTriger(o.Ondemand)}],IdleDisconnectTime:["$config",function(o){return o.OndemandTimeout}],WithoutAuth:["$config*",function(o){return""==o.Password}],AutomaticalConnection:["$isAutoConn",function(i){return i}],Auth:{"->":["?"],"?":["$parent",function(p){return"undefined"!=typeof p.$conn.data.LocalHostname||"undefined"!=typeof p.$conn.data.RemoteHostname||"undefined"!=typeof p.$conn.data.Secret}],LocalHostname:["$parent",function(p){return p.$conn.data.LocalHostname}],RemoteHostname:["$parent",function(p){return p.$conn.data.RemoteHostname}],Secret:["$parent",function(p){return p.$conn.data.Secret}]},Origin:["$additional*",function(addl){return"IPv6"===addl.version?getOrigin(addl.data.IPv6Mode):void 0}],RequestPrefixes:["$additional*",function(addl){return addl.data.RequestPrefixes}],DNSIPv6Automatical:["$additional*","$isAutoDnsv6",function(addl,a){return"IPv6"===addl.version?a:void 0}],DNSIPv6Server1:["$additional*","$isAutoDnsv6*","$dynDnsv6*","$statDnsv6*",function(addl,a,d,s){return"IPv6"===addl.version?getDNSValue(a,d,s,0):void 0}],DNSIPv6Server2:["$additional*","$isAutoDnsv6*","$dynDnsv6*","$statDnsv6*",function(addl,a,d,s){return"IPv6"===addl.version?getDNSValue(a,d,s,1):void 0}],DNSIPv6Order:["$additional*",function(addl){return getDnsOrder(addl.data)}],MediaType:["$media*",function(o){return o.type}],Media:["$media*",function(o){return expandMedia(o)}],MediaPath:["$media*",function(o){return getMediaPath(o)}],Flags:["$parentRoot","$conn","$additional","$media",function(rt,o,add,m){return flagsTemplate.build({$conn:o,$additional:add,$deviceMode:rt.$deviceMode,$igmp:rt.$igmp,$media:m,$config:rt.$config})}],VLAN:["$media*","$parentRoot",function(m,r){return vlanTemplate.build({$media:m,$root:r})}],IPsec:{"->":["?"],$ipsec:["$parent",function(p){return p.$ipsec}],"?":["$ipsec",function(ipsec){return!!ipsec}],Key:["$ipsec*",function(ipsec){return ipsec.data.Key||""}],PFS:["$ipsec*",function(ipsec){return ipsec.data.PFS}],PortEnabled:["$ipsec*",function(ipsec){return 0!=ipsec.data.RightPort}],Port:["$ipsec*",function(ipsec){return 0!=ipsec.data.RightPort?ipsec.data.RightPort:1701}],Type:["$ipsec*",function(ipsec){return ipsec.data.Type}],DPD:["$ipsec*",function(ipsec){return ipsec.data.DPD}],DPDDelay:["$ipsec*",function(ipsec){return ipsec.data.DPDDelay}],DPDTimeOut:["$ipsec*",function(ipsec){return ipsec.data.DPDTimeOut}]},$ip:["$parentRoot",function(p){return p.$ip}],$ipv4:["$ip*","$conn",function(ip,conn){return getStaticIP(ip,conn,"ipv4")}],$ipv6:["$ip*","$conn",function(ip,conn){return getStaticIP(ip,conn,"ipv6")}],IPAddress:["$ipv4*",function(ip){return ip.length?getIPAddress(ip[0].data.IPAddress):void 0}],SubnetMask:["$ipv4*",function(ip){return ip.length?getSubnetMask(ip[0].data.IPAddress):void 0}],GatewayIPAddress:["$ipv4*",function(ip){return ip.length?getIPAddress(ip[0].data.PeerIPAddress):void 0}],GatewayIPv6Address:["$conn*","$parentRoot",function(c,r){return c.data.Gateway||getGatewayIPAddress(r.$routingv6,c.additionalConn||c,"v6")}],IPv6Address:["$ipv6*",function(ip){return ip.length?getIPAddress(ip[0].data.IPAddress):void 0}],StaticIPPrefix0:["$ipv6*",function(ip){return ip.length?getPrefix(ip[0].data.IPAddress):void 0}],$unnumberedIP:["$conn*","$parentRoot",function(c,pr){return _.isEmpty(c.data.UnnumberedIP)?void 0:funcs.fetchBranch(pr.$config,c.data.UnnumberedIP)}],UnnumberedIP:{"->":!0,$ip:["$parent",function(p){return p.$unnumberedIP}],$addr:["$ip",function(ip){return ip?ip.IPAddress.split("/"):""}],$conn:["$parent",function(p){return p.$conn}],IPAddress:["$addr",function(addr){return _.isEmpty(addr)?"":addr[0]}],Mask:["$addr",function(addr){return _.isEmpty(addr)?"":funcs.ipv4.mask["long"](addr[1])}],__Link:["$conn*",function(c){return c.data.UnnumberedIP}],__IPKey:["$conn*",function(c){return _.isEmpty(c.data.UnnumberedIP)?void 0:c.data.UnnumberedIP.match(/\.\d+\.$/g,"")[0].replace(/\./g,"")}]},DualLAN:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],$additional:["$parent",function(p){return p.$additional}],$duallan:["$parent",function(p){return p.$duallan}],"?":["$duallan",function(dl){return dl&&dl.__has}],$groupInst:["$duallan*","$conn*",function(dl,c){return dl.Group?_.findKey(dl.Group.WAN,{Link:c.link}):void 0}],$groupv6Inst:["$duallan*","$additional*",function(dl,ad){return dl.Group?_.findKey(dl.Group.WANv6,{Link:ad.link}):void 0}],Enable:["$groupInst",function(gr){return!!gr}],__GroupInst:["$groupInst",function(gr){return gr}],__Groupv6Inst:["$groupv6Inst",function(gr){return gr}]},StaticIP:{"->":!0,"?":["$parent",function(o){return!!o.StaticIPAddress0}],":":1,Address:["$parent","?",function(o){return o.StaticIPAddress0}]},StaticIPAddress0:["$config",function(c){return c.LocalIP}]}),flagsTemplate=T({"->":["?"],$conn:":external",$additional:":external",$igmp:":external",$mld:":external",$udpxy:":external",$deviceMode:":external",$media:":external",$config:":external","?":["$deviceMode",function(dm){return!!dm&&"Firewall"!=dm}],NAT:["$conn",function(c){return!_.isUndefined(c.NATMasqInst)}],NATv6:["$conn",function(c){return!_.isUndefined(c.NATMasqInstv6)}],NATHide:["$conn",function(c){return"USB"==c.type&&("IPv6"==c.data.version&&!__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_WW_39630||c.data.InterfaceOnly)}],NATv6Hide:["$conn","$config",function(conn,config){return getNATv6Hide(conn,config)}],Ping:["$conn","$additional",function(c,add){return add?!_.isUndefined(add.PingRuleInst):!_.isUndefined(c.PingRuleInst)}],PingHide:["$conn",function(c){return"USB"==c.type&&c.data.InterfaceOnly}],RIP:["$conn",function(c){return!_.isUndefined(c.RIPNetworkInst)&&"IPv4"==c.version}],RIPng:["$conn","$additional",function(c,add){return(add?!_.isUndefined(add.RIPNetworkInst):!_.isUndefined(c.RIPNetworkInst))&&(add?"IPv6"==add.version:"IPv6"==c.version)}],IGMP:["$conn","$igmp",function(c,igmp){return _.isUndefined(igmp)?void 0:!_.isUndefined(c.IGMPInst)}],MLDProxy:["$conn","$mld",function(c,mld){return _.isUndefined(mld)?void 0:c.MLDProxyInst}],Udpxy:["$conn","$udpxy",function(c,udpxy){return _.isUndefined(udpxy)?void 0:c.UdpxyInst}],ProxyARP:["$media",function(m){return m&&_.has(m.data,"ProxyARP")?m.data.ProxyARP:void 0}],Firewall:["$conn","$additional",function(c,add){return add?!add.FWRuleInst:!c.FWRuleInst}]}),vlanTemplate=T({"->":["?","Enable","ID","Priority"],$media:":external","?":["$media",function(m){return m&&("DSL.ATM"==m.type||"DSL.PTM"==m.type)}],Enable:["$media",function(m){return m.data.VID>0}],ID:["$media",function(m){return m.data.VID>0?m.data.VID:void 0}],Priority:["$media",function(m){return m.data.VID>0?m.data.VPR:void 0}]}),healthCheck=T({"->":["$data","PingAddress"],$data:":external",Enable:["$data",function(d){return d.Enable}],Timeout:["$data",function(d){return d.Timeout}],MaxPing:["$data",function(d){return d.MaxAttempts}],PingAddress:{"->":!0,$pingData:["$parent",function(p){return p.$data.Ping}],"{$ping, $i}":["$pingData",function(p){return p}],"?":["$ping",function(p){return p&&!!p.Address}],Address:["$ping*",function(p){return p.Address}],__inst:["$i*",function(i){return i}]},RestartOnFail:["$data",function(d){return d.RestartOnFail||!1}]}),nativeModel=config?pattern.build({$config:config,$attrs:attrs}):{};return setBaseConnection(nativeModel),nativeModel}},function(module,exports){function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}module.exports=_defineProperty,module.exports.__esModule=!0,module.exports["default"]=module.exports},function(module,exports,__webpack_require__){"use strict";function Interface(config){function getNameByPath(path){if(!path)return null;var iface=fetch(path),arr=path.split("."),l=arr.length;return iface?iface.Name||iface.Ifname||"[".concat(arr[l-3],"_").concat(arr[l-2],"]"):null}function getInterfaces(){function filterInterfaces(e){var isBridge=["Bridge"].includes(e.type),isValid=isBridge&&e.ForceBridge&&e.CreateInterface;return isValid}var ret=null,inputIfaces=fetch(paths["interface"]),inputConns=fetch(paths.connection),inputGroups=fetch(paths.group),inputServersVpn=fetch(paths.vpn),inputServersChilli=fetch(paths.chilli),inputUsb=fetch(paths.usb),interfaces=_.chain(inputIfaces).map(function(e,type){return getInterfacesByType(paths["interface"],type)}).flatten().filter(function(e){return filterInterfaces(e)}).value(),connections=_.chain(inputConns).map(function(e,type){return getInterfacesByType(paths.connection,type)}).flatten().filter(function(e){return filterUsbConns(e)}).map(function(e){return addProtoType(e,checkPPPClient)}).value(),groups=getIfaces(inputGroups,"Group",paths.group),serversVpn=getVpns(inputServersVpn,"Server",paths.vpn),serversChilli=getIfaces(inputServersChilli,"Server",paths.chilli,"Chilli"),usb=getIfaces(inputUsb,"Connection / Interface",paths.usb,"USB").map(function(e){return addProtoType(e,checkUsb)});return ret=interfaces.concat(connections,groups,serversVpn,serversChilli,usb)}function addProtoType(e,checkFn){var protoTypeArr=checkFn(e.path);return protoTypeArr.length&&(e.protoTypeArr=protoTypeArr),e}function getInterfacesByType(startPath,pathType){function mapInput(_input){function getType(e){return"PPPoE"==pathType?"IPv6"==fetch(e.PPPConfiguration+"IPStack")?"PPPoEv6":"PPPoE":pathType}return"DHCPv6"==pathType&&(_input=_input.filter(function(e){return!(/Connection/.test(e.Interface)||/Cellular/.test(e.Interface))})),_input.map(function(e){var ifacePath=path+e.__id+".",retObj={};switch(retObj={name:getNameByPath(ifacePath),path:ifacePath,type:getType(e),status:e.Status,ifaceType:"Connection / Interface",index:e.__id},retObj.type){case"IPsec":retObj.ipsecMode=fetch(ifacePath+"Type");break;case"Bridge":retObj.ForceBridge=fetch(ifacePath+"ForceBridge"),retObj.CreateInterface=fetch(ifacePath+"CreateInterface");break;case"PPPoEv6":retObj.path=getTunnelRealPath(ifacePath)}return retObj})}var path=startPath+pathType+".",input=funcs.newConfig.instanceObjectToArray(fetch(path)),ret=mapInput(input);return ret}function getTunnelRealPath(ifacePath){var _allDHCPv6$find,path=paths.connection+"DHCPv6.",allDHCPv6=funcs.newConfig.instanceObjectToArray(fetch(path)),curDHCPv6=null!==(_allDHCPv6$find=allDHCPv6.find(function(e){return e.Interface==ifacePath}))&&void 0!==_allDHCPv6$find?_allDHCPv6$find:{},retIndex=curDHCPv6.__id?curDHCPv6.__id:allDHCPv6.findIndex(function(e){return e.Interface==ifacePath});if(retIndex){var ret=path+retIndex+".";return ret}return ifacePath}function getIfaces(config,type,path,_type,_typeAsPrefix){var ret=[];return funcs.newConfig.instanceObjectToArray(config).forEach(function(e){var retObj={name:e.Name?e.Name:"[".concat(_type?_type:type,"_").concat(e.__id,"]"),path:"".concat(path).concat(_typeAsPrefix?_type+".":"").concat(e.__id,"."),ifaceType:type,index:e.__id};["Server","Group"].includes(type)&&(retObj.type=type),"USB"==_type&&(retObj.type=_type),ret.push(retObj)}),ret}function getVpns(config,type,path){var ret=[];for(var servType in config){var arr=funcs.newConfig.instanceObjectToArray(funcs.newConfig.normalize(getIfaces(config[servType],type,path,servType,!0)));arr.forEach(function(e){ret.push(e)})}return ret}function extractUsbConns(usbConfig){if(usbConfig){for(var connsToExclude={},_i2=0,_Object$entries=Object.entries(usbConfig);_i2<_Object$entries.length;_i2++){var _Object$entries$_i=_slicedToArray2["default"](_Object$entries[_i2],2),usbConn=(_Object$entries$_i[0],_Object$entries$_i[1]),usbConns=funcs.newConfig.normalize(usbConn.Connections);if(usbConns)for(var _i3=0,_Object$entries2=Object.entries(usbConns);_i3<_Object$entries2.length;_i3++){var _Object$entries2$_i=_slicedToArray2["default"](_Object$entries2[_i3],2),realConn=(_Object$entries2$_i[0],_Object$entries2$_i[1]);connsToExclude[realConn.Link]=!0}}return connsToExclude}}function getInterfaceInfo(path){function getInterfaceIpInfo(path){function prepareIP(obj,type){return _.chain(obj).filter(function(e){return _.isObject(e)}).map(function(elem){var result={},arrIp=elem.IPAddress.split("/");return result.ip=arrIp[0]||"","ipv4"==type?result.mask=arrIp[1]?funcs.ipv4.mask["long"](arrIp[1]):"":result.prefix=arrIp[1]||"",result}).value()}var ips=fetch(paths.ip);if(!ips)return null;var ip=__findInstanceByLowerLayer(ips,path);return ip?{ipv4:prepareIP(ip.IPv4Address,"ipv4"),ipv6:prepareIP(ip.IPv6Address,"ipv6")}:null}return{name:getNameByPath(path),ip:getInterfaceIpInfo(path)}}function __findInstanceByLowerLayer(obj,lowerLayer){return _.find(obj,function(elem){return!!_.isObject(elem)&&elem.LowerLayer==lowerLayer})}function getIfacesForSelect(serviceTypeArr){function filterByType(c){if(!serviceTypeArr)return!0;var ret=!1;return serviceTypeArr.forEach(function(type){if("v6"==type)switch(c.type){case"L2TP":"Dual"==fetch(fetch(c.path).PPPConfiguration+"IPStack")&&(c.path=getTunnelRealPath(c.path));break;case"PPPoE":"Dual"==fetch(fetch(c.path).PPPConfiguration+"IPStack")&&(c.path=getTunnelRealPath(c.path))}pathsByType[type].some(function(p){return makeRegExpFromPath(p).test(c.path)&&checkPPPClient(c.path,type)&&checkUsb(c.path,type,filterAttrs.usb)})&&(ret=!0)}),ret}function transform(c){return{name:c.name,value:c.path,ifaceType:c.ifaceType}}var filterAttrs=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return getInterfaces().filter(function(e){return filterByType(e)}).filter(function(e){return filterUsbConns(e)}).map(function(e){return transform(e)})}function filterUsbConns(c){var usbConfig=fetch(paths.usb);if(!usbConfig)return!0;var connsToExclude=extractUsbConns(usbConfig);return!connsToExclude[c.path]}function makeRegExpFromPath(path){return new RegExp(path.split(".").join("\\."))}function makeProtoArr(_conn){var protoTypeArr=[];return["IPv6","Dual"].includes(_conn.IPStack)&&protoTypeArr.push("v6"),["IPv4","Dual"].includes(_conn.IPStack)&&protoTypeArr.push("v4"),protoTypeArr.length?protoTypeArr:void 0}function checkProtoByTypeArr(flags,protoType){var protoArr=makeProtoArr(flags);return protoType?protoArr.some(function(e){return e==protoType}):protoArr}function checkUsb(path,protoType){function isUSB(){return makeRegExpFromPath(paths.usb).test(path)}var filterAttrs=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!isUSB())return!0;var _conn=fetch(path),isGood=checkProtoByTypeArr(_conn,protoType);for(var attr in filterAttrs)isGood&=null!=_conn[attr]&&filterAttrs[attr]===_conn[attr];return isGood}function checkPPPClient(path,protoType){function isTunnel(){return pathsByType.tunnel.some(function(_e){return makeRegExpFromPath(_e).test(path)})}if(!fetch(paths.pppClient))return!0;if(!isTunnel())return!0;var _realConn=fetch(path).PPPConfiguration,_ipFlags=fetch(_realConn);return checkProtoByTypeArr(_ipFlags,protoType)}function checkUsbConnByPath(path){var conn=fetch(path);return conn&&conn.Interface&&conn.Interface.includes("Cellular")}function fetch(path){return funcs.fetchBranch(config,path)}var paths={ip:"Device.Network.IP.","interface":"Device.Network.Interface.",connection:"Device.Network.Connection.",group:"Device.Network.Group.",vpn:"Device.Network.Server.VPN.",chilli:"Device.Network.Server.Chilli.",usb:"Device.USB.Connection.",pppClient:"Device.Network.Settings.PPPClient."},pathsByType={v4:[paths.connection+"DHCP.",paths.connection+"Static.",paths.connection+"PPPoE.",paths.connection+"L2TP.",paths.connection+"PPTP.",paths.group,paths.usb],v6:[paths.connection+"DHCPv6.",paths.connection+"Staticv6.",paths.connection+"PPPoE.",paths.connection+"L2TP.",paths.group,paths.usb],tunnel:[paths.connection+"PPPoE.",paths.connection+"L2TP."]};return{checkUsbConnByPath:checkUsbConnByPath,extractUsbConns:extractUsbConns,getIfacesForSelect:getIfacesForSelect,getInterfaceInfo:getInterfaceInfo,getInterfaces:getInterfaces,getNameByPath:getNameByPath,getTunnelRealPath:getTunnelRealPath}}var _interopRequireDefault=__webpack_require__(7),_slicedToArray2=_interopRequireDefault(__webpack_require__(226)),_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=Interface},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";var dms=__webpack_require__(213).get().wifi,funcs=__webpack_require__(5),WiFiAccessPoint=__webpack_require__(239),WiFiEndPoint=__webpack_require__(243),WiFiWPS=__webpack_require__(244),WiFiWMM=__webpack_require__(245),helper=__webpack_require__(15);module.exports=function(){function isChange(){function isOnlyRegulatoryDomain(status){var indexRadio;return status&&status.Device&&status.Device.WiFi&&status.Device.WiFi.Radio&&(indexRadio=_.keys(status.Device.WiFi.Radio)[0]),isHasOneProperty(status.Device)&&isHasOneProperty(status.Device.WiFi)&&isHasOneProperty(status.Device.WiFi.Radio)&&isHasOneProperty(status.Device.WiFi.Radio[indexRadio])&&_.has(status.Device.WiFi.Radio[indexRadio],"RegulatoryDomain")}function isHasOneProperty(obj){return!!obj&&1==_.keys(obj).length}function isOnlyClientInfoFields(status){var indexRadio,result=[];return status&&status.Device&&status.Device.WiFi&&status.Device.WiFi.Radio&&(indexRadio=_.keys(status.Device.WiFi.Radio)),_.map(indexRadio,function(band){var endPoint,indexEndPoint,pathEndPoint;status&&status.Device&&status.Device.WiFi&&status.Device.WiFi.Radio&&status.Device.WiFi.Radio[band]&&status.Device.WiFi.Radio[band].EndPoint&&(indexEndPoint=_.keys(status.Device.WiFi.Radio[band].EndPoint),pathEndPoint="Device.WiFi.Radio."+band+".EndPoint."+indexEndPoint+".",endPoint=funcs.fetchBranch(status,pathEndPoint)),indexEndPoint&&(_.has(endPoint,"RSSI")&&funcs.cutBranch(status,pathEndPoint+"RSSI"),_.has(endPoint,"SignalStrength")&&funcs.cutBranch(status,pathEndPoint+"SignalStrength"),_.has(endPoint,"Connect")&&funcs.cutBranch(status,pathEndPoint+"Connect"),_.has(endPoint,"Channel")&&funcs.cutBranch(status,pathEndPoint+"Channel"),_.has(endPoint,"Band")&&funcs.cutBranch(status,pathEndPoint+"Band")),result.push(isHasOneProperty(status.Device)&&isHasOneProperty(status.Device.WiFi)&&isHasOneProperty(status.Device.WiFi.Radio[band])&&isHasOneProperty(status.Device.WiFi.Radio[band].EndPoint)&&0==Object.keys(status.Device.WiFi.Radio[band].EndPoint[indexEndPoint]).length)}),result.length>1?result[0]&&result[1]:result[0]}function isApProfileChangeOnly(status){var apProfileRegEx=/Device.WiFi.RadioDevice.WiFi.Radio.[\d]+.AccessPoint.[\d]+.Profile/,splitted=funcs.splitTree(status,"Device.WiFi.Radio"),isOtherChanges=splitted.filter(function(pair){return!pair.Name.match(apProfileRegEx)}).length>0;return!isOtherChanges}var status=dms.status();return status&&!_.isEmpty(status)&&!isOnlyRegulatoryDomain(status)&&!isOnlyClientInfoFields(status)&&!isApProfileChangeOnly(status)}function setClientInfo(value){clientInfo=value}function getBand(index,freq){var radio=dms.data.Device.WiFi.Radio,found=[];freq&&(bandFreq=freq);for(var i in radio)if(radio[i].OperatingFrequencyBand==bandFreq){var obj={radio:radio[i],ap:new WiFiAccessPoint(dms.data,dms.attrs,i,freq),wps:new WiFiWPS(dms.data,i)};obj.wmm=new WiFiWMM(dms.data,dms.attrs,i),found.push(obj)}return _.isUndefined(index)?found:found[index]}function hasBand(freq){var radio=dms.data.Device.WiFi.Radio;return _.some(radio,function(elem){return elem.OperatingFrequencyBand==freq})}function setBandFreq(freq){bandFreq=freq}function getBandFreq(){return bandFreq}function setRegulatoryDomain(freq,domain){var radioFreq=_.findKey(dms.data.Device.WiFi.Radio,{OperatingFrequencyBand:freq});radioFreq&&(dms.data.Device.WiFi.Radio[radioFreq].RegulatoryDomain=domain)}function getClient(band){var index=band&&"2.4GHz"!=band?2:1;return new WiFiEndPoint(dms.data,index)}function getClientBands(){var ap=dms.data.Device.WiFi.Radio;return _.map(ap,function(elem){return elem.OperatingFrequencyBand})}function isSeparateClient(){var radio=dms.data.Device.WiFi.Radio[1],radio5G=dms.data.Device.WiFi.Radio[2];return radio&&radio5G&&radio.EndPointNumberOfEntries>0&&radio5G.EndPointNumberOfEntries>0}function isRadioEnable(freq){var radio=dms.data.Device.WiFi.Radio;return _.some(radio,function(elem){return elem.OperatingFrequencyBand==freq&&elem.Enable})}function enableRadio(freq,cb){var radio=getRadioData(freq);radio.Enable=!0,wifi.push(cb)}function enableRadioBroadcast(freq,inx,cb){var radio=getRadioData(freq);radio.AccessPoint[inx||"1"].Broadcast=!0,wifi.push(cb)}function countries(){var CountriesList=dms.data.Device.WiFi.CountriesList;return CountriesList}function scanList(band){if(!dms.scanData||!dms.scanData.Device.WiFi.ScanList)return[];var result=_.toArray(dms.scanData.Device.WiFi.ScanList);return band&&(result=_.filter(result,function(elem){return elem.Band==band})),result}function supportedParam(param){var band=getBand(0);if(band&&band.radio){var radio=band.radio;return _.has(radio,param)}}function writeSupported(param){var result=funcs.fetchBranch(dms.attrs,"Device.WiFi.Radio.");return!result[param]||-1!=result[param].access.indexOf("Write")}function getRadioAttrs(){var result=funcs.fetchBranch(dms.attrs,"Device.WiFi.Radio.");return result}function getRadioData(freq){var radio=dms.data.Device.WiFi.Radio;return _.find(radio,function(elem){return elem.OperatingFrequencyBand==freq})}function getWDSData(){return dms.data.Device.WiFi.WDS}function isCheckDeviceLoss(){return clientInfo&&"WLAN"==clientInfo.name}function checkDeviceLoss(){function getCurrentRadioPath(init,client){var radioInst,radio=funcs.fetchBranch(init,"Device.WiFi.Radio.");return _.each(radio,function(elem,inst1){isCurrentBand(elem.OperatingFrequencyBand,client.band)&&(radioInst=inst1)}),radioInst?"Device.WiFi.Radio."+radioInst+".":""}function getCurrentAPPath(init,client){var radioInst,apInst,radio=funcs.fetchBranch(init,"Device.WiFi.Radio.");return _.each(radio,function(elem,inst1){isCurrentBand(elem.OperatingFrequencyBand,client.band)&&(radioInst=inst1,_.each(elem.AccessPoint,function(ap,inst2){ap.SSID==client.SSID&&(apInst=inst2)}))}),radioInst&&apInst?"Device.WiFi.Radio."+radioInst+".AccessPoint."+apInst+".":""}function getAPParams(rPath,apPath,data){var result={},radio=funcs.fetchBranch(init,rPath),ap=funcs.fetchBranch(data,apPath),pathFrequency=apPath.replace(/AccessPoint.+$/,"OperatingFrequencyBand"),frequency=funcs.fetchBranch(data,pathFrequency);switch(result.SSID=ap.SSID,result.ModeEnabled=wifi.helper.getModeName(ap.Security.ModeEnabled,radio.OperatingStandards,radio.ModeAvailable),result.Frequency=frequency,result.ProfileId=getIndexFromPath(apPath),ap.Security.ModeEnabled){case"WPA-Personal":case"WPA2-Personal":case"WPA-WPA2-Personal":result.PreSharedKey=ap.Security.PreSharedKey;break;case"WEP":_.each([1,2,3,4],function(value){result["WEPKey"+value]=ap.Security["WEPKey"+value]});break;case"WPA-Enterprise":case"WPA2-Enterprise":case"WPA-WPA2-Enterprise":result.RadiusSecret=ap.Security.RadiusSecret}return result}function getIndexFromPath(path){var endIndex=path.lastIndexOf("."),beginIndex=path.lastIndexOf(".",endIndex-1)+1;return parseInt(path.substring(beginIndex,endIndex))}function isCurrentBand(band1,band2){return parseFloat(band1)==parseFloat(band2)}var result={loss:!1,reason:[],params:{}};if(!isCheckDeviceLoss())return result;var init=dms.getInitData(),data=dms.data,changes=dms.status(),apPath=getCurrentAPPath(init,clientInfo),rPath=getCurrentRadioPath(init,clientInfo);
if(!apPath)return result;var changeParamsList=funcs.splitTree(changes);return _.each(changeParamsList,function(obj){var reAP=new RegExp(apPath),reParams=[{name:"ssid",value:[/SSID/]},{name:"security_mode",value:[/ModeEnabled/]},{name:"security_encryption",value:[/PreSharedKey/,/WEPKey*/,/RadiusSecret/]}],name=obj.Name;obj.Value,_.last(name.split(".")),reAP.test(name)&&(_.each(reParams,function(elem){_.each(elem.value,function(reParam){reParam.test(name)&&(result.loss=!0,result.reason.push(elem.name))})}),result.loss&&(result.params=_.extend(result.params,getAPParams(rPath,apPath,data))))}),result}function isClientMode(){var result=!1,band=getBand();if(band&&band[0]){var freq=getBandFreq(),endPoint=_.findWhere(band[0].radio.EndPoint,{Band:freq});result=endPoint&&endPoint.Enable&&endPoint.Profile}return!!result}function getBasicClientInfo(){return dms.data.Device.WiFi.ClientBasic}function getUsedBand(){var radio=dms.data.Device.WiFi.Radio;for(var i in radio){var endPoint=_.find(radio[i].EndPoint,function(ep){return ep.Enable&&ep.Profile});if(endPoint)return endPoint.Band}return null}function getBandList(){var list=[];return wifi.hasBand("2.4GHz")&&list.push("2.4GHz"),wifi.hasBand("5GHz")&&list.push("5GHz"),list}var bandFreq=null,clientInfo=null,wifi={data:dms.data,getRootData:function(){return dms.data},scanData:dms.scanData,pull:dms.pull,pullCommon:dms.pullCommon,pullAdv:dms.pullAdv,pullWMM:dms.pullWMM,pullWDS:dms.pullWDS,pullClient:dms.pullClient,getChannels:dms.getChannels,setClientInfo:setClientInfo,updateScan:dms.updateScan,push:dms.push,isChange:isChange,hasBand:hasBand,getBand:getBand,getBandFreq:getBandFreq,setBandFreq:setBandFreq,getClient:getClient,getClientBands:getClientBands,getWDSData:getWDSData,getRadioAttrs:getRadioAttrs,isSeparateClient:isSeparateClient,isRadioEnable:isRadioEnable,enableRadio:enableRadio,enableRadioBroadcast:enableRadioBroadcast,countries:countries,scanList:scanList,supportedParam:supportedParam,checkDeviceLoss:checkDeviceLoss,isWirelessClient:isCheckDeviceLoss,helper:helper,isClientMode:isClientMode,writeSupported:writeSupported,setRegulatoryDomain:setRegulatoryDomain,getStatus:dms.status,getBasicClientInfo:getBasicClientInfo,getUsedBand:getUsedBand,setEditedAP:dms.setEditedAP,getBandList:getBandList};return wifi}()},function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4),somovd=__webpack_require__(240),dsysinit=__webpack_require__(241);module.exports=_.size(somovd)?somovd:dsysinit},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";var funcs=__webpack_require__(5),_=__webpack_require__(4),WiFiAccessPoint=__webpack_require__(242);module.exports=function(data,attrs,radioInx,freq){function getDefault(data,attrs){var baseAP=this.getBase(),attrsAP=funcs.fetchBranch(attrs,"Device.WiFi.Radio.AccessPoint."),attrsApProfile=funcs.fetchBranch(attrs,"Device.WiFi.APProfile."),aps=funcs.fetchBranch(data,"Device.WiFi.Radio."+radioInx+".AccessPoint."),ifaces=funcs.fetchBranch(data,"Device.Network.Interface.WiFi."),makeDefaultModel=funcs.newConfig.makeDefaultModel,defaultAp=makeDefaultModel(attrsAP);return defaultAp._isNew=!0,defaultAp.BandSteering=makeDefaultModel(attrsApProfile.BandSteering),defaultAp.SSID=this.getSSID(data.Device.WiFi.Radio[radioInx]),defaultAp.Interface=getInterface(ifaces,aps,freq),defaultAp.Security.ModesSupported=baseAP.Security.ModesSupported,defaultAp.Security.PreSharedKey=funcs.randomString(8),defaultAp.Security.ProtectedManagementFrames=getProtectedFrame(defaultAp.Security.ProtectedManagementFrames),delete defaultAp.AC,delete defaultAp.BSSID,defaultAp}function getProtectedFrame(param){switch(param){case"Disabled":return"NoMgmtFrameProtection";case"Required":return"MgmtFrameProtectionRequired";case"Optional":return"MgmtFrameProtectionOptional";default:return}}function getInterface(ifaces,aps,freq){function getIfacesPath(ifaces,band,freq){var result=[];return _.each(ifaces,function(iface,inx){("2.4GHz"!=freq||iface.Support24GHz)&&("5GHz"!=freq||iface.SSupport5GHz)&&result.push("Device.Network.Interface.WiFi."+inx+".")}),result}var allIfaces=getIfacesPath(ifaces,freq),useIfaces=_.map(aps,function(e){return e.Interface}),freeIfaces=_.difference(allIfaces,useIfaces);return freeIfaces.length?freeIfaces[0]:""}var wifiAP=new WiFiAccessPoint(data,attrs,radioInx);return wifiAP.getDefault=function(){return getDefault.call(this,data,attrs)},wifiAP}},function(module,exports,__webpack_require__){"use strict";function WiFiAccessPoint(data,attrs,radioInx){function getSSID(radio){var res,ssid=radio.AccessPoint[1].SSID,inx=_.size(radio.AccessPoint);do{inx++;var resFind=_.find(radio.AccessPoint,function(elem){return elem.SSID==ssid+"."+inx});res=!resFind}while(0==res);return ssid=ssid+"."+inx}return{get:function(inx){return data.Device.WiFi.Radio[radioInx].AccessPoint[inx]},getBase:function(){return data.Device.WiFi.Radio[radioInx].AccessPoint[1]},getSSID:getSSID,set:function(obj,inx){var path=funcs.setInstance(data.Device.WiFi.Radio[radioInx],"AccessPoint."+inx,obj);return path.replace("AccessPoint.","")},cut:function(inx){return funcs.cutInstance(data.Device.WiFi.Radio[radioInx],"AccessPoint."+inx)},list:function(){return data.Device.WiFi.Radio[radioInx].AccessPoint},add:function(obj){var path=funcs.addInstance(data.Device.WiFi.Radio[radioInx],"AccessPoint",obj);return path.replace("AccessPoint.","")},conflicts:function(obj){var list=this.list();return _.filter(_.keys(list),function(key){var elem=list[key];return elem.SSID==obj.SSID?!0:void 0})},supportedParam:function(param,root){var base=this.getBase(),obj=root?funcs.fetchBranch(base,root):base;return _.has(obj,param)}}}var funcs=__webpack_require__(5),_=__webpack_require__(4);module.exports=WiFiAccessPoint},function(module,exports,__webpack_require__){"use strict";function WiFiEndPoint(data,radioInx){return{getBase:function(){var arr=_.values(data.Device.WiFi.Radio[radioInx].EndPoint);return arr[0]},list:function(){return data.Device.WiFi.Radio[radioInx].EndPoint},conflicts:function(obj){var list=this.list();return _.filter(_.keys(list),function(key){var elem=list[key];return elem.SSID==obj.SSID?!0:void 0})}}}var _=(__webpack_require__(5),__webpack_require__(4));module.exports=WiFiEndPoint},function(module,exports,__webpack_require__){"use strict";function WiFiWPS(data,radioInx){function info(inx){var info={},currentAP=ap[inx],wps=currentAP.WPS,sec=currentAP.Security;return info.enabled=wps.Enable,info.configured=wps.Configured,_.has(wps,"Configured")&&(info.state=wps.Configured?"wifi_wps_configured":"wifi_wps_not_configured"),_.has(wps,"DefaultPIN")&&(info.defpin=wps.DefaultPIN),_.has(wps,"DevicePIN")&&(info.devpin=wps.DevicePIN),_.has(wps,"ClientPIN")&&(info.clipin=wps.ClientPIN),_.has(currentAP,"SSID")&&(info.ssid=currentAP.SSID),_.has(sec,"ModeEnabled")&&(info.mode=helper.getModeName(sec.ModeEnabled,radio.OperatingStandards,radio.ModeAvailable)),_.has(sec,"EncryptionType")&&(info.encr=sec.EncryptionType),_.has(sec,"PreSharedKey")&&"None"!=sec.ModeEnabled&&(info.psk=sec.PreSharedKey),info}var radio=data.Device.WiFi.Radio[radioInx],ap=data.Device.WiFi.Radio[radioInx].AccessPoint;return{data:function(inx){return ap[inx].WPS},getConnectMethod:function(inx){return ap[inx].WPS.PIN?"PIN":"PBC"},getInfo:function(inx){return info(inx)},connect:function(inx){"PIN"!=ap[inx].WPS.Method&&delete ap[inx].WPS.PIN},reset:function(cb,inx){ap[inx].WPS.Configured=!1,cb&&cb()},warnings:function(inx){var result=[];return radio.Enable||result.push("radioDisable"),_.has(ap[inx],"Broadcast")&&!ap[inx].Broadcast&&result.push("broadcastDisable"),ap[inx].WPS.Check||result.push("unallowableMode"),result},apInfo:function(){return ap}}}var _=(__webpack_require__(5),__webpack_require__(4)),helper=__webpack_require__(15);module.exports=WiFiWPS},function(module,exports,__webpack_require__){"use strict";function WiFiWMM(data,attrs,radioInx){function getRestriction(type,ac){function getRestrict(cwmin,cwmax){return{ECWMin:cwmin,ECWMax:cwmax}}function getAIFSRangeAttrs(wmmAttrs){var range=getAIFSRangeDefault(),minMax=funcs.newConfig.makeMinMaxModel(wmmAttrs);return _.has(minMax.AIFSN,"min")&&(range.min=minMax.AIFSN.min),_.has(minMax.AIFSN,"max")&&(range.max=minMax.AIFSN.max+1),prepareAIFSRange(range)}function getAIFSRangeDefault(){return{min:1,max:16}}function prepareAIFSRange(range){return _.range(range.min,range.max)}function getTxOpMaxMinMaxAttrs(wmmAttrs){var range=getTxOpMaxMinMaxDefault(),minMax=funcs.newConfig.makeMinMaxModel(wmmAttrs);return _.has(minMax.TxOpMax,"min")&&(range.min=minMax.TxOpMax.min),_.has(minMax.TxOpMax,"max")&&(range.max=minMax.TxOpMax.max),range}function getTxOpMaxMinMaxDefault(){return{min:0,max:9999}}function getWMMAttrs(type,ac){function getWMMAPAttrs(){return funcs.fetchBranch(attrs,"Device.WiFi.Radio.WMM.AP.AC.")}function getWMMEPAttrs(){return funcs.fetchBranch(attrs,"Device.WiFi.Radio.WMM.EP.AC.")}if(!attrs)return null;var wmmAttrs="ap"==type?getWMMAPAttrs():getWMMEPAttrs();return wmmAttrs&&wmmAttrs[ac]?wmmAttrs[ac]:null}var wmmAttrs=getWMMAttrs(type,ac);return{ap:{BK:getRestrict(5,10),BE:getRestrict(4,6),VI:getRestrict(3,4),VO:getRestrict(2,3)},ep:{BK:getRestrict(4,10),BE:getRestrict(4,10),VI:getRestrict(3,4),VO:getRestrict(2,3)},AIFSN:wmmAttrs?getAIFSRangeAttrs(wmmAttrs):prepareAIFSRange(getAIFSRangeDefault()),TxOpMax:wmmAttrs?getTxOpMaxMinMaxAttrs(wmmAttrs):getTxOpMaxMinMaxDefault()}}function hasSupportMode(){return _.has(data.settings,"Mode")}var radio=data.Device.WiFi.Radio[radioInx];if(!radio.WMM)return{};var wmm=radio.WMM,ap=wmm.AP[1].AC,ep=wmm.EP[1].AC,data={settings:wmm,ap:ap,ep:ep};return{data:data,get:function(type,inst){return data[type][inst]},getRestriction:getRestriction,hasSupportMode:hasSupportMode}}var funcs=__webpack_require__(5),_=__webpack_require__(4);module.exports=WiFiWMM},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(247)}},function(module,exports,__webpack_require__){"use strict";module.exports={dsysinitToNative:__webpack_require__(248),nativeToDsysinit:__webpack_require__(253)}},function(module,exports,__webpack_require__){"use strict";module.exports={list:__webpack_require__(249),instance:__webpack_require__(251),duallan:__webpack_require__(252)}},function(module,exports,__webpack_require__){"use strict";function getStrNamesPorts(vlanPorts,config){var namesPorts=[],links=_.map(vlanPorts,function(p){return p.LowerLayer});return _.each(links,function(link){var name;if(-1!=link.indexOf("WiFi"))name=helper.getSSID(link,config);else{var port=funcs.fetchBranch(config,link);name=port.Name?port.Name:port.Alias}name&&namesPorts.push(name)}),namesPorts.sort().join(", ")}function getDefaultLAN(config){var defaultGroup=funcs.fetchBranch(config,paths.groups+"1.");return defaultGroup?defaultGroup.LAN:""}function getNamesConns(config,inxBridge){var result=[],pathBridge=paths.bridges+inxBridge+".",allConns=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.conns));return _.each(allConns,function(groupConns){groupConns=funcs.newConfig.normalize(groupConns),_.each(groupConns,function(conn){conn.Interface!=pathBridge&&conn.BaseInterface!=pathBridge||result.push(conn.Name)})}),result}function getServers(config,inxBridge){var result=[],pathBridge=paths.bridges+inxBridge+".",servers=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Network.Server."));return _.each(servers,function(server,type){server=funcs.newConfig.normalize(server),"Chilli"==type&&_.each(server,function(serv,id){serv.Interface==pathBridge&&result.push("CoovaChilli_"+id)})}),result}function isDualLAN(inxBridge,config){if(!inxBridge)return!1;var groups=funcs.fetchBranch(config,paths.groups);return!!_.find(groups,function(group){return group.LAN==paths.bridges+inxBridge+"."&&"DualLAN"==group.Name})}function getGroups(config,inxBridge){var result=[],pathBridge=paths.bridges+inxBridge+".",groups=funcs.fetchBranch(config,paths.groups);return _.each(groups,function(group){group=funcs.newConfig.normalize(group),group.LAN==pathBridge&&result.push(group.Name.split("#")[0])}),result}function getRouts(config,inxBridge){var result=[],pathBridge=paths.bridges+inxBridge+".",routsv4=funcs.fetchBranch(config,paths.routingv4),routsv6=funcs.fetchBranch(config,paths.routingv6);return _.each(routsv4,function(rout,inx){if(rout=funcs.newConfig.normalize(rout),rout.Interface==pathBridge&&""==rout.Origin){var arrDest=rout.Destination.split("/"),dest=arrDest[1]?rout.Destination:rout.Destination+"/32";result.push(dest)}}),_.each(routsv6,function(rout,inx){rout=funcs.newConfig.normalize(rout),rout.Interface==pathBridge&&""==rout.Origin&&result.push(rout.Destination)}),result}function filterPorts(brPort,config){var ports=funcs.newConfig.normalize(brPort),result=[];for(var i in ports)helper.isHideEasyMesh(ports[i].LowerLayer,config)||result.push(ports[i]);return result}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),helper=__webpack_require__(250),paths={bridges:"Device.Network.Interface.Bridge.",groups:"Device.Network.Group.",routingv4:"Device.Routing.IPv4.Routes.",routingv6:"Device.Routing.IPv6.Routes.",conns:"Device.Network.Connection."};module.exports=function(config){var pattern=T({"->":["$config","Mode","DefaultLAN","List"],$config:":external",Mode:["$config",function(c){return funcs.fetchBranch(c,"Device.DeviceInfo.DeviceMode")}],DefaultLAN:["$config",function(c){return getDefaultLAN(c)}],List:{"->":["$config","$bridges","$ports","Ports"],$config:["$parent",function(p){return p.$config}],$bridges:["$config",function(c){return funcs.newConfig.normalize(funcs.fetchBranch(c,paths.bridges))}],"{$bridge, $inxBridge}":["$bridges",function(br){return br}],$ports:["$bridge","$config",function(br,config){return filterPorts(br.Port,config)}],Name:["$bridge",function(br){return br.Name}],VID:["$bridge",function(br){return 0!=br.VLANID?br.VLANID:"-"}],ForceBridge:["$bridge",function(br){return br.ForceBridge}],MVR:["$bridge",function(br){return br.MVR}],Ports:{"->":!0,$config:["$parent",function(p){return p.$config}],$ports:["$parent",function(p){return p.$ports}],$tagged:["$ports",function(p){return p.filter(function(port){return-1!=port.LowerLayer.indexOf("Vconfig")||port.Tagged})}],$untagged:["$ports",function(p){return p.filter(function(port){return!(-1!=port.LowerLayer.indexOf("Vconfig")||port.Tagged)})}],Tagged:["$tagged","$config",function(p,c){return getStrNamesPorts(p,c)}],Untagged:["$untagged","$config",function(p,c){return getStrNamesPorts(p,c)}]},DualLAN:["$inxBridge","$config",function(inx,config){return isDualLAN(inx,config)}],__inxBridge:["$inxBridge",function(i){return i}],Conns:["$config","$inxBridge",function(c,ibr){return getNamesConns(c,ibr)}],Groups:["$config","$inxBridge",function(c,ibr){return getGroups(c,ibr)}],Routs:["$config","$inxBridge",function(c,ibr){return getRouts(c,ibr)}],Servers:["$config","$inxBridge",function(c,ibr){return getServers(c,ibr)}]}});return pattern.build({$config:config})}},function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4),funcs=__webpack_require__(5);module.exports={getSSID:function(link,config){var name="",radioCol=funcs.fetchBranch(config,"Device.WiFi.Radio.");return _.some(radioCol,function(radio){var accessPoint=_.find(radio.AccessPoint,function(ap){return ap.Interface==link});if(accessPoint){var profile=funcs.fetchBranch(config,accessPoint.Profile);return name="".concat(profile.SSID," (").concat(radio.OperatingFrequencyBand,")"),!0}}),name},isHideEasyMesh:function(link,config){var easymesh=funcs.fetchBranch(config,"Device.Services.EasyMesh."),isHide=!1;if(easymesh&&easymesh.Enable){var phyIfname,networkIfname,multiAPBSSType,radio=funcs.fetchBranch(config,"Device.WiFi.Radio.");for(var r in radio){for(var a in radio[r].AccessPoint)if(radio[r].AccessPoint[a].Interface==link){phyIfname=funcs.fetchBranch(radio[r],"Phy.Ifname"),networkIfname=funcs.fetchBranch(config,"".concat(link,"Ifname")),multiAPBSSType=radio[r].AccessPoint[a].MultiAPBSSType;break}if(multiAPBSSType)break}networkIfname&&phyIfname&&(isHide=32!=multiAPBSSType&&phyIfname!=networkIfname)}return isHide}}},function(module,exports,__webpack_require__){"use strict";function getName(name){return name.split("#")[0]}function getDefaultBridge(){var result={Name:"",CreateIface:!1,Ports:{}};return result}function getPorts(config,allBridges,vlanPorts,switchPorts){function getState(vlanPorts){for(var _len=arguments.length,links=new Array(_len>1?_len-1:0),_key=1;_len>_key;_key++)links[_key-1]=arguments[_key];var result,port=_.find(vlanPorts,function(port){return _.some(links,function(link){return port.LowerLayer==link})});return result=port?port.Tagged?"tagged":"untagged":"excluded"}function getInstPort(vlanPorts){for(var _len2=arguments.length,links=new Array(_len2>1?_len2-1:0),_key2=1;_len2>_key2;_key2++)links[_key2-1]=arguments[_key2];return _.findKey(vlanPorts,function(port){return _.some(links,function(link){return port.LowerLayer==link})})}function getAvailStates(type,allBridges,link,currentState,isWan){function isBusy(allBridges,link){var links="string"==typeof link?[link]:link;return _.some(allBridges,function(bridge){return _.some(bridge.Port,function(port){return!port.Tagged&&_.some(links,function(link){return port.LowerLayer==link})})})}var states=["excluded"];return"port"==type?(("untagged"==currentState||!isBusy(allBridges,link)||__autoconf.BR2_PACKAGE_ANWEB_ALLOW_DUPLICATE_VID&&isWan)&&states.push("untagged"),states.push("tagged")):"wifi"==type?"untagged"!=currentState&&isBusy(allBridges,link)||states.push("untagged"):"eogre"==type?"included"!=currentState&&isBusy(allBridges,link)||states.push("included"):"eoip"==type?"included"!=currentState&&isBusy(allBridges,link)||states.push("included"):"l2tpv3"==type?"included"!=currentState&&isBusy(allBridges,link)||states.push("included"):"usb"==type?"untagged"!=currentState&&isBusy(allBridges,link)||states.push("untagged"):"atm"==type?"included"!=currentState&&isBusy(allBridges,link)||states.push("included"):"ptm"==type&&("included"!=currentState&&isBusy(allBridges,link)||states.push("included")),states}function getWiFiIfaces(config,allBridges,vlanPorts){var ifaces=funcs.fetchBranch(config,"Device.Network.Interface.WiFi.");return ifaces?(ifaces=funcs.newConfig.normalize(ifaces),Object.keys(ifaces).filter(function(inxIface){var linkIface=paths.ifacesWiFi+inxIface+".",isAP="ap"==ifaces[inxIface].Type;return isAP&&!helper.isHideEasyMesh(linkIface,config)}).map(function(inxIface){var linkIface=paths.ifacesWiFi+inxIface+".",type="wifi",state=getState(vlanPorts,linkIface),instPort=getInstPort(vlanPorts,linkIface);return{Name:helper.getSSID(linkIface,config),Link:linkIface,Type:type,State:state,AvailStates:getAvailStates(type,allBridges,linkIface,state),IsWan:!1,Inst:instPort}})):[]}function getEoGREIfaces(config,allBridges,vlanPorts){var ifaces=funcs.fetchBranch(config,paths.ifacesEoGRE);if(!ifaces)return[];var vconfig=funcs.fetchBranch(config,paths.vconfig);return ifaces=funcs.newConfig.normalize(ifaces),_.map(ifaces,function(iface,inxIface){var linkIface=paths.ifacesEoGRE+inxIface+".",inxVconfEogre=_.findKey(vconfig,{LowerLayer:linkIface}),type="eogre",link=inxVconfEogre?"".concat(paths.vconfig).concat(inxVconfEogre,"."):linkIface,state="excluded"==getState(vlanPorts,link)?"excluded":"included",instPort=getInstPort(vlanPorts,link);return{Name:iface.Name,Link:link,Type:type,State:state,AvailStates:getAvailStates(type,allBridges,link,state),IsWan:iface.Upstream,TagID:inxVconfEogre?vconfig[inxVconfEogre].VID:null,Inst:instPort}})}function getEoIPIfaces(config,allBridges,vlanPorts){var ifaces=funcs.fetchBranch(config,paths.ifacesEoIP);if(!ifaces)return[];var vconfig=funcs.fetchBranch(config,paths.vconfig);return ifaces=funcs.newConfig.normalize(ifaces),_.map(ifaces,function(iface,inxIface){var linkIface=paths.ifacesEoIP+inxIface+".",inxVconfEoip=_.findKey(vconfig,{LowerLayer:linkIface}),type="eoip",link=inxVconfEoip?"".concat(paths.vconfig).concat(inxVconfEoip,"."):linkIface,state="excluded"==getState(vlanPorts,link)?"excluded":"included",instPort=getInstPort(vlanPorts,link);return{Name:iface.Name,Link:link,Type:type,State:state,AvailStates:getAvailStates(type,allBridges,link,state),IsWan:iface.Upstream,TagID:inxVconfEoip?vconfig[inxVconfEoip].VID:null,Inst:instPort}})}function getL2TPv3Ifaces(config,allBridges,vlanPorts){var ifaces=funcs.fetchBranch(config,paths.ifacesL2TPv3);return ifaces?(ifaces=funcs.newConfig.normalize(ifaces),_.map(ifaces,function(iface,inxIface){var linkIface=paths.ifacesL2TPv3+inxIface+".",type="l2tpv3",link=linkIface,state="excluded"==getState(vlanPorts,link)?"excluded":"included",instPort=getInstPort(vlanPorts,link);return{Name:iface.Name,Link:link,Type:type,State:state,AvailStates:getAvailStates(type,allBridges,link,state),IsWan:iface.Upstream,TagID:null,Inst:instPort}})):[]}function getATMIfaces(config,allBridges,vlanPorts){var ifaces=funcs.fetchBranch(config,paths.ifacesATM),conns=getConns(config);return ifaces?(ifaces=funcs.newConfig.normalize(ifaces),_.map(ifaces,function(iface,inxIface){var linkIface=paths.ifacesATM+inxIface+".",type="atm",link=linkIface,state="excluded"==getState(vlanPorts,link)?"excluded":"included",instPort=getInstPort(vlanPorts,link),usedInConn=-1!=_.indexOf(conns,link);return{Name:iface.Name,Link:link,Type:type,State:state,AvailStates:getAvailStates(type,allBridges,link,state),IsWan:!!usedInConn,TagID:iface.VID,Inst:instPort}})):[]}function getPTMIfaces(config,allBridges,vlanPorts){var ifaces=funcs.fetchBranch(config,paths.ifacesPTM),conns=getConns(config);return ifaces?(ifaces=funcs.newConfig.normalize(ifaces),_.map(ifaces,function(iface,inxIface){var linkIface=paths.ifacesPTM+inxIface+".",type="ptm",link=linkIface,state="excluded"==getState(vlanPorts,link)?"excluded":"included",instPort=getInstPort(vlanPorts,link),usedInConn=-1!=_.indexOf(conns,link);return{Name:iface.Name,Link:link,Type:type,State:state,AvailStates:getAvailStates(type,allBridges,link,state),IsWan:!!usedInConn,TagID:iface.VID,Inst:instPort}})):[]}function getUSBIfaces(config,allBridges,vlanPorts){var usbConns=funcs.fetchBranch(config,paths.usbConns);return usbConns?(usbConns=funcs.newConfig.normalize(usbConns),usbConns=_.pick(usbConns,function(conn){return conn.InterfaceOnly}),_.map(usbConns,function(conn,inxConn){var type="usb",link=conn.Interface,state=getState(vlanPorts,link,conn.Interface),instPort=getInstPort(vlanPorts,link,conn.Interface);return{Name:conn.Name||conn.Ifname,Link:link,Type:type,State:state,AvailStates:getAvailStates(type,allBridges,[link,conn.Interface],state),IsWan:!1,Inst:instPort}})):[]}function getConns(config){var conns=funcs.fetchBranch(config,paths.conns);if(!conns)return[];conns=funcs.newConfig.normalize(conns);var connsArr=[];return _.each(conns,function(connType){_.each(funcs.newConfig.normalize(connType),function(conn){conn&&(connsArr.push(conn.Interface),conn.BaseInterface&&connsArr.push(conn.BaseInterface))})}),connsArr}var swPorts=_.map(switchPorts.order,function(inxPort){var port=switchPorts[inxPort],linkPort=paths.ports+inxPort+".",type="port",state=getState(vlanPorts,linkPort),instPort=getInstPort(vlanPorts,linkPort);return{Name:port.Alias,Link:linkPort,Type:type,State:state,AvailStates:getAvailStates(type,allBridges,linkPort,state,port.Upstream),IsWan:port.Upstream,Inst:instPort}}),wifi=getWiFiIfaces(config,allBridges,vlanPorts),eogre=getEoGREIfaces(config,allBridges,vlanPorts),eoip=getEoIPIfaces(config,allBridges,vlanPorts),l2tpv3=getL2TPv3Ifaces(config,allBridges,vlanPorts),atm=getATMIfaces(config,allBridges,vlanPorts),ptm=getPTMIfaces(config,allBridges,vlanPorts),usb=getUSBIfaces(config,allBridges,vlanPorts);return swPorts.concat(wifi,eogre,eoip,l2tpv3,atm,ptm,usb)}function isDualLAN(inxBridge,config){if(!inxBridge)return!1;var groups=funcs.fetchBranch(config,paths.groups);return!!_.find(groups,function(group){return group.LAN==paths.bridges+inxBridge+"."&&"DualLAN"==group.Name})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),__autoconf="undefined"!=typeof autoconf?autoconf:{},helper=__webpack_require__(250),paths={bridges:"Device.Network.Interface.Bridge.",ports:"Device.Switch.Ports.",ifacesWiFi:"Device.Network.Interface.WiFi.",ifacesEoGRE:"Device.Network.Interface.EoGRE.",ifacesEoIP:"Device.Network.Interface.EoIP.",ifacesL2TPv3:"Device.Network.Interface.L2TPv3.",ifacesATM:"Device.Network.Interface.ATM.",ifacesPTM:"Device.Network.Interface.PTM.",vconfig:"Device.Network.Interface.Vconfig.",groups:"Device.Network.Group.",conns:"Device.Network.Connection.",usbConns:"Device.USB.Connection."};module.exports=function(config,inxBridge){var pattern=T({"->":["$config","$inxBridge","$allBridges","$bridge","$vlanPorts","Vlan","Ports"],$config:":external",$inxBridge:":external",$allBridges:["$config",function(c){return funcs.newConfig.normalize(funcs.fetchBranch(c,paths.bridges))}],$bridge:["$allBridges","$inxBridge",function(brs,inxBr){return inxBr?brs[inxBr]:getDefaultBridge()}],$vlanPorts:["$bridge",function(br){return funcs.newConfig.normalize(br.Port)}],Mode:["$config",function(c){return funcs.fetchBranch(c,"Device.DeviceInfo.DeviceMode")}],Vlan:{"->":!0,$bridge:["$parent",function(p){return p.$bridge}],$ports:["$parent",function(p){return p.$vlanPorts}],Enable:["$bridge",function(br){return br.Enable}],Name:["$bridge",function(br){return getName(br.Name)}],CreateInterface:["$bridge",function(br){return br.CreateInterface}],ForceBridge:["$bridge",function(br){return br.ForceBridge}],MVR:["$bridge",function(br){return br.MVR}],VID:["$bridge",function(br){return br.VLANID}],VPR:["$bridge",function(br){return br.VLANPriority}]},Ports:{"->":["$config","$allBridges","$vlanPorts","$switchPorts"],$config:["$parent",function(p){return p.$config}],$allBridges:["$parent",function(p){return p.$allBridges}],$vlanPorts:["$parent",function(p){return p.$vlanPorts}],$switchPorts:["$config",function(c){return funcs.fetchBranch(c,paths.ports)}],"{$port}":["$config","$allBridges","$vlanPorts","$switchPorts",function(c,brs,vps,swp){return getPorts(c,brs,vps,swp)}],Name:["$port",function(pa){return pa.Name}],Type:["$port",function(pa){return pa.Type}],Link:["$port",function(pa){return pa.Link}],State:["$port",function(pa){return pa.State}],AvailStates:["$port",function(pa){return pa.AvailStates}],IsWan:["$port",function(pa){return pa.IsWan}],TagID:["$port",function(pa){return pa.TagID}],VlanInst:["$port",function(pa){return pa.Inst}]},DualLAN:["$inxBridge","$config",function(inx,config){return isDualLAN(inx,config)}]});return pattern.build({$config:config,$inxBridge:inxBridge})}},function(module,exports,__webpack_require__){"use strict";function findDualLAN(config){function getID(link){var id=link?link.match(/\.\d+\.$/g,""):void 0;return id?Number(id[0].replace(/\./g,"")):""}function getPolicy(type,fw,dualLanZoneKey){function getName(elem){function getShort(path){return/Zones.1./.test(path)?"fw":/Zones.2./.test(path)?"wan":/Zones.3./.test(path)?"lan":"dl"}return getShort(elem.Source)+"_"+getShort(elem.Dest)}var policy={},path="ipv4"==type?paths.fw4:paths.fw6,dualZonePath=path+"Zones."+dualLanZoneKey+".";return _.each(funcs.newConfig.normalize(fw.Policy),function(elem,key){if(elem.Source==dualZonePath||elem.Dest==dualZonePath){var name=getName(elem);policy[name]=key}}),policy}function getRules(type,fw,dualLanZoneKey,dualLanKey){var rules={},path="ipv4"==type?paths.fw4:paths.fw6,dualZonePath=path+"Zones."+dualLanZoneKey+".",lanZonePath=path+"Zones.3.",dualBridge=paths.bridges+dualLanKey+".",lanBridge=paths.bridges+"1.";return _.each(funcs.newConfig.normalize(fw.Rules),function(elem,key){if("DROP"==elem.Action&&elem.Dest.Zone==path+"Zones.1."&&elem.Dest.IPLinks[1]&&(elem.Source.Zone==dualZonePath&&elem.Dest.IPLinks[1].Link==lanBridge||elem.Source.Zone==lanZonePath&&elem.Dest.IPLinks[1].Link==dualBridge)){var name=(elem.Source.Zone==dualZonePath?"dl":"lan")+"_fw";rules[name]=key}}),rules}var groups=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.groups)),dualLANGroup=_.findKey(groups,{Name:"DualLAN"});if(dualLANGroup){var dualLanKey=getID(groups[dualLANGroup].LAN);if(dualLanKey){var bridgeLink=paths.bridges+dualLanKey+".",groupOrder=groups[dualLANGroup].WAN.order,dhcpServ=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.dhcp)),daulLANDhcpKey=_.findKey(dhcpServ,{Interface:bridgeLink}),ipParam=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.ip)),dualLANIP=_.findKey(ipParam,{LowerLayer:bridgeLink}),fw4=funcs.fetchBranch(config,paths.fw4),dualLanZoneKey=_.findKey(fw4.Zones,{Type:"ipv4",Name:"DualLAN"}),dualLanPolicy4=getPolicy("ipv4",fw4,dualLanZoneKey),dualLanRulesv4=getRules("ipv4",fw4,dualLanZoneKey,dualLanKey),fw6=funcs.fetchBranch(config,paths.fw6),dualLanZoneKeyv6=_.findKey(fw6.Zones,{Type:"ipv6",Name:"DualLAN"}),dualLanPolicy6=getPolicy("ipv6",fw6,dualLanZoneKeyv6),dualLanRulesv6=getRules("ipv6",fw6,dualLanZoneKeyv6,dualLanKey);return{id:dualLanKey,group:dualLANGroup,dhcp:daulLANDhcpKey,ip:dualLANIP,zone:dualLanZoneKey,zonev6:dualLanZoneKeyv6,policy:dualLanPolicy4,policyv6:dualLanPolicy6,rules:dualLanRulesv4,rulesv6:dualLanRulesv6,conn:groupOrder[0]?groups[dualLANGroup].WAN[groupOrder[0]].Link:""}}}}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={bridges:"Device.Network.Interface.Bridge.",groups:"Device.Network.Group.",dhcp:"Device.Network.Server.DHCP.",ip:"Device.Network.IP.",fw4:"Device.Firewall.IPv4.",fw6:"Device.Firewall.IPv6."};module.exports=function(config){var pattern=T({"->":!0,$config:":external",$dualLAN:["$config",function(c){return findDualLAN(c)}],Enable:["$dualLAN",function(dl){return!!dl}],inxBridge:["$dualLAN*",function(dl){return dl.id}],inxGroup:["$dualLAN*",function(dl){return dl.group}],conn:["$dualLAN*",function(dl){return dl.conn}],inxDhcp:["$dualLAN*",function(dl){return dl.dhcp}],inxIp:["$dualLAN*",function(dl){return dl.ip}],inxZone4:["$dualLAN*",function(dl){return dl.zone}],inxsPolicy4:["$dualLAN*",function(dl){return dl.policy}],inxZone6:["$dualLAN*",function(dl){return dl.zonev6}],inxsPolicy6:["$dualLAN*",function(dl){return dl.policyv6}],inxsRules4:["$dualLAN*",function(dl){return dl.rules}],inxsRules6:["$dualLAN*",function(dl){return dl.rulesv6}]});return pattern.build({$config:config})}},function(module,exports,__webpack_require__){"use strict";module.exports={applyConfig:__webpack_require__(254),removeConfig:__webpack_require__(255)}},function(module,exports,__webpack_require__){"use strict";var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),__autoconf="undefined"!=typeof autoconf?autoconf:{},paths={network:"Device.Network.",bridges:"Device.Network.Interface.Bridge.",fw:"Device.Firewall."};module.exports=function(config,instance,inxBridge,duallanInfo,isBackup){function getLinkType(dslIface,bridge,inx,type){var ifaceLink="Device.Network.Interface."+type+"."+inx+".";return _.find(bridge.Ports,function(iface){return iface.Link==ifaceLink&&"included"==iface.State})?"BRIDGE":"BRIDGE"==dslIface.LinkType?"IPOE_PPPOE":dslIface.LinkType}function getPorts(ports){return ports=_.filter(ports,function(p){return"excluded"!=p.State})}function hasTaggedPorts(ports){return _.some(ports,function(p){return"tagged"==p.State})}function getDLZone(inxBridge,type){var bridgePath=paths.bridges+(inxBridge?inxBridge:"new_vlan")+".";return{Type:type,Name:"DualLAN",Interfaces:{1:{Path:bridgePath}}}}function getNetInfo(lans){for(var k=1,net="",is_find_net=!1;!is_find_net;)net="192.168."+k++ +".0",_.contains(lans,net)||(is_find_net=!0);return net}function getPolicyIndexes(duallanInfo,type){var keys=["dl_fw","dl_wan","lan_dl","wan_dl"];__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MTS_29548&&keys.push("fw_dl");var result={},dlKeys="IPv4"==type?duallanInfo.inxsPolicy4:duallanInfo.inxsPolicy6;return _.each(keys,function(elem){result[elem]=_.has(dlKeys,elem)?dlKeys[elem]:elem}),result}function getPolicy(policyName,fwType,duallanInfo){
function getZone(name,pathDLZone,pathFW){switch(name){case"dl":return pathDLZone;case"fw":return pathFW+"Zones.1.";case"wan":return pathFW+"Zones.2.";case"lan":return pathFW+"Zones.3."}}var pathFW=paths.fw+fwType+".",zoneInxInfo="IPv4"==fwType?duallanInfo.inxZone4:duallanInfo.inxZone6,pathDLZone=pathFW+"Zones."+(zoneInxInfo?zoneInxInfo:"new_zone_dl")+".",splitName=policyName.split("_"),result={Policy:"lan_dl"==policyName&&__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MTS_29548?"DROP":"ACCEPT",Source:getZone(splitName[0],pathDLZone,pathFW),Dest:getZone(splitName[1],pathDLZone,pathFW)};return result}function getRulesIndexes(duallanInfo,type){var keys=["dl_fw","lan_fw"],result={},dlKeys="IPv4"==type?duallanInfo.inxRules4:duallanInfo.inxRules6;return _.each(keys,function(elem){result[elem]=_.has(dlKeys,elem)?dlKeys[elem]:elem}),result}function getRules(ruleName,fwType,duallanInfo,inxBridge){function getBridgePath(ruleName,inxBridge){switch(ruleName){case"lan_fw":return paths.bridges+(inxBridge?inxBridge:"new_vlan")+".";case"dl_fw":return"Device.Network.Interface.Bridge.1."}}function getZonePath(ruleName,fwType,duallanInfo){switch(ruleName){case"lan_fw":return 0/0;case"dl_fw":var zoneInxInfo="IPv4"==fwType?duallanInfo.inxZone4:duallanInfo.inxZone6;return paths.fw+fwType+".Zones."+(zoneInxInfo?zoneInxInfo:"new_zone_dl")+"."}}var pathFW=paths.fw+fwType+".",result={Action:"DROP",Dest:{Zone:pathFW+"Zones.1.",IPLinks:{1:{Link:getBridgePath(ruleName,inxBridge)}}},Source:{Zone:getZonePath(ruleName,fwType,duallanInfo)}};return result}var pattern=T({"->":["$config","$instance","$inxBridge","$duallanInfo","$isBackup","$atm","$ptm","Device"],$config:":external",$instance:":external",$inxBridge:":external",$duallanInfo:":external",$isBackup:":external",$atm:["$config",function(c){return funcs.newConfig.normalize(funcs.fetchBranch(c,"Device.Network.Interface.ATM."))}],$ptm:["$config",function(c){return funcs.newConfig.normalize(funcs.fetchBranch(c,"Device.Network.Interface.PTM."))}],Device:{"->":!0,Network:{"->":["$duallanInfo","Group","Server","IP"],$duallanInfo:["$root",function(r){return r.$duallanInfo&&r.$instance.DualLAN?r.$duallanInfo:void 0}],Interface:{Bridge:{"->":["$bridge","Port"],$bridge:["$root",function(r){return r.$inxBridge||!isBackup?r.$instance:void 0}],":":["$root","$bridge*",function(r,b){return r.$inxBridge?r.$inxBridge:"new_vlan"}],Name:["$bridge*",function(br){return br.Vlan.Name}],Enable:["$bridge*",function(br){return void 0==br.Vlan.MVR||br.Vlan.Enable}],CreateInterface:["$bridge*",function(br){return br.Vlan.CreateInterface}],MVR:["$bridge*",function(br){return br.Vlan.MVR}],VLANID:["$bridge*",function(br){return hasTaggedPorts(br.Ports)||br.Vlan.MVR?br.Vlan.VID:0}],VLANPriority:["$bridge*",function(br){return br.Vlan.VPR}],Port:{"->":["?"],"?":["$parent",function(p){return!!p.$bridge}],"{$ports, $inx}":["$parent",function(p){return getPorts(p.$bridge.Ports)}],":":["$ports*","$inx*",function(p,i){return p.VlanInst?p.VlanInst:"new_port_"+i}],LowerLayer:["$ports*",function(p){return p.Link}],Tagged:["$ports*",function(p){return"tagged"==p.State}]}},ATM:{"->":["?"],"?":["$root",function(r){return!!r.$atm}],"{$atm, $inx}":["$root",function(r){return r.$atm}],":":["$atm*","$inx*",function(a,i){return i}],$bridge:["$root",function(r){return r.$instance}],LinkType:["$atm*","$bridge*","$inx",function(a,b,i){return getLinkType(a,b,i,"ATM")}]},PTM:{"->":["?"],"?":["$root",function(r){return!!r.$ptm}],"{$ptm, $inx}":["$root",function(r){return r.$ptm}],":":["$ptm*","$inx*",function(p,i){return i}],$bridge:["$root",function(r){return r.$instance}],LinkType:["$ptm*","$bridge*","$inx",function(p,b,i){return getLinkType(p,b,i,"PTM")}]}},Group:{"->":!0,$duallanInfo:["$parent",function(p){return p.$duallanInfo}],":":["$duallanInfo*",function(dl){return dl.inxGroup?dl.inxGroup:"new_group_dl"}],LAN:["$duallanInfo*","$root",function(dl,r){return paths.bridges+(r.$inxBridge?r.$inxBridge:"new_vlan")+"."}],Name:"DualLAN"},Server:{DHCP:{"->":["$duallanInfo","$net","DHCPv4"],$duallanInfo:["$root",function(r){return r.$duallanInfo&&r.$instance.DualLAN?r.$duallanInfo:void 0}],$net:["$duallanInfo*","$root",function(dl,r){return getNetInfo(dl.infoNetLans)}],":":["$duallanInfo*",function(dl){return dl.inxDhcp?dl.inxDhcp:"new_server_dl"}],Enable:!0,Interface:["$duallanInfo*","$root",function(dl,r){return paths.bridges+(r.$inxBridge?r.$inxBridge:"new_vlan")+"."}],DHCPv6:{Mode:"Autoconf"},DHCPv4:{"->":!0,$net:["$parent",function(p){return p.$net}],StartIP:["$net*",function(n){return n.replace(/\.0$/,".100")}],EndIP:["$net*",function(n){return n.replace(/\.0$/,".199")}],Mode:__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MTS_29548?"None":void 0}}},IP:{"->":["$net","IPv4Address"],$duallanInfo:["$parent",function(p){return p.$duallanInfo}],$net:["$duallanInfo*","$root",function(dl,r){return getNetInfo(dl.infoNetLans)}],":":["$duallanInfo*",function(dl){return dl.inxIp?dl.inxIp:"new_ip_dl"}],Enable:!0,LowerLayer:["$duallanInfo*","$root",function(dl,r){return paths.bridges+(r.$inxBridge?r.$inxBridge:"new_vlan")+"."}],IPv4Address:{"->":!0,":":1,IPAddress:["$parent",function(p){return p.$net?p.$net.replace(/\.0$/,".1")+"/24":void 0}],Enable:!0}}},Firewall:{"->":["?"],"?":["$root",function(r){return!!r.$duallanInfo}],IPv4:{"->":!0,Zones:{"->":!0,$duallanInfo:["$root",function(r){return r.$instance.DualLAN?r.$duallanInfo:void 0}],":":["$duallanInfo*",function(dl){return dl.inxZone4?dl.inxZone4:"new_zone_dl"}],$return:["$duallanInfo*","$root",function(dl,r){return getDLZone(r.$inxBridge,"ipv4")}]},Policy:{"->":!0,$duallanInfo:["$root",function(r){return r.$instance.DualLAN?r.$duallanInfo:void 0}],"{$policy, $inx}":["$duallanInfo*",function(dl){return getPolicyIndexes(dl,"IPv4")}],":":["$policy*",function(p){return p}],$return:["$inx*","$duallanInfo*",function(i,dl){return getPolicy(i,"IPv4",dl)}]},Rules:{"->":!0,isGroup:["$root",function(r){return r.$config&&r.$config.Device.Network.Group[1]&&r.$config.Device.Network.Group[1].PBREnable}],$duallanInfo:["$root","isGroup*",function(r,isgroup){return r.$instance.DualLAN&&isgroup?r.$duallanInfo:void 0}],"{$rules, $inx}":["$duallanInfo*",function(dl){return getRulesIndexes(dl,"IPv4")}],":":["$rules*",function(r){return function(r){return r}}],$return:["$duallanInfo*","$inx*","$root",function(dl,i,r){return getRules(i,"IPv4",dl,r.$inxBridge)}]}},IPv6:{"->":["?"],"?":["$root",function(r){return __autoconf.BR2_PACKAGE_ANWEB_IPV6}],Zones:{"->":!0,$duallanInfo:["$root",function(r){return r.$instance.DualLAN?r.$duallanInfo:void 0}],":":["$duallanInfo*",function(dl){return dl.inxZone6?dl.inxZone6:"new_zone_dl"}],$return:["$duallanInfo*","$root",function(dl,r){return getDLZone(r.$inxBridge,"ipv6")}]},Policy:{"->":!0,$duallanInfo:["$root",function(r){return r.$instance.DualLAN?r.$duallanInfo:void 0}],"{$policy, $inx}":["$duallanInfo","$root",function(dl,r){return r.$instance.DualLAN?getPolicyIndexes(dl,"IPv6"):{}}],":":["$policy*",function(p){return p}],$return:["$inx*","$duallanInfo*",function(i,dl){return getPolicy(i,"IPv6",dl)}]},Rules:{"->":!0,isGroup:["$root",function(r){return r.$config&&r.$config.Device.Network.Group[1]&&r.$config.Device.Network.Group[1].PBREnable}],$duallanInfo:["$root","isGroup*",function(r,isgroup){return r.$instance.DualLAN&&isgroup?r.$duallanInfo:void 0}],"{$rules, $inx}":["$duallanInfo*",function(dl){return getRulesIndexes(dl,"IPv6")}],":":["$rules*",function(r){return function(r){return r}}],$return:["$duallanInfo*","$inx*","$root",function(dl,i,r){return getRules(i,"IPv6",dl,r.$inxBridge)}]}}}}});return pattern.build({$config:config,$instance:instance,$inxBridge:inxBridge,$duallanInfo:duallanInfo,$isBackup:isBackup})}},function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4),funcs=__webpack_require__(5),helper=__webpack_require__(256),paths={bridges:"Device.Network.Interface.Bridge.",fw4:"Device.Firewall.IPv4.",fw6:"Device.Firewall.IPv6."};module.exports=function(initConfig,vlans,duallanInfo,mode){function checkLinks(item,path){var reList=[new RegExp(path)],links=_.filter(config.Links,function(il){return _.some(reList,function(re){return re.test(il.Link)})}),positions=_.filter(links,function(il){return!_.some(reList,function(re){return re.test(il.Position)})});return{check:!1,pos:positions}}var config=funcs.deepClone(initConfig);return _.each(vlans,function(vlan){var pathBridge=paths.bridges+vlan.__inxBridge,bridge=funcs.fetchBranch(config,pathBridge+".");funcs.cutBranch(config,pathBridge),vlan.DualLAN&&duallanInfo&&duallanInfo.Enable&&duallanInfo.inxBridge==vlan.__inxBridge&&helper.delDualLAN(config,duallanInfo);var check=checkLinks(vlan,pathBridge);"router"==mode&&check.pos.length&&_.each(check.pos,function(elem){if(!elem.Position.includes("Network.IP.")&&funcs.fetchBranch(config,elem.Position)){if(funcs.setValue(elem.Position,"",config),~elem.Position.indexOf("Routing")){var position=elem.Position.match(/([a-zA-Z]+\d*\.)+\d+/g,"")[0];funcs.setValue(position+".Enable",!1,config)}if(~elem.Position.indexOf("Zones")){var position=elem.Position.match(/([a-zA-Z]+\d*\.)+\d+\.([a-zA-Z]+\.)+\d+\./g,"")[0];funcs.cutBranch(config,position)}}}),_.each(funcs.newConfig.normalize(bridge.Port),function(port){!port.LowerLayer||-1==port.LowerLayer.indexOf("ATM")&&-1==port.LowerLayer.indexOf("PTM")||funcs.setValue("".concat(port.LowerLayer)+"LinkType","IPOE_PPPOE",config)})}),config}},function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4),funcs=__webpack_require__(5),paths={network:"Device.Network.",fw:"Device.Firewall."};module.exports={delDualLAN:function(newConfig,duallanInfo){return funcs.cutBranch(newConfig,paths.network+"Group."+duallanInfo.inxGroup),funcs.cutBranch(newConfig,paths.network+"Server.DHCP."+duallanInfo.inxDhcp),funcs.cutBranch(newConfig,paths.network+"IP."+duallanInfo.inxIp),funcs.cutBranch(newConfig,paths.fw+"IPv4.Zones."+duallanInfo.inxZone4),funcs.cutBranch(newConfig,paths.fw+"IPv6.Zones."+duallanInfo.inxZone6),_.each(duallanInfo.inxsPolicy4,function(inx){funcs.cutBranch(newConfig,paths.fw+"IPv4.Policy."+inx)}),_.each(duallanInfo.inxsPolicy6,function(inx){funcs.cutBranch(newConfig,paths.fw+"IPv6.Policy."+inx)}),_.each(duallanInfo.inxsRules4,function(inx){funcs.cutBranch(newConfig,paths.fw+"IPv4.Rules."+inx)}),_.each(duallanInfo.inxsRules6,function(inx){funcs.cutBranch(newConfig,paths.fw+"IPv6.Rules."+inx)}),newConfig}}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(258),converter:__webpack_require__(260)}},function(module,exports,__webpack_require__){"use strict";function IPsec(config,attrs,oldConfig){function getTunnels(){function getIfaceName(iface){var result;return _.each(attrs,function(elem){elem.iface==iface&&(result=elem.name)}),result?result:iface}function getPhaseAlgs(alg,hash){return alg&&hash?alg.toUpperCase()+"/"+hash.toUpperCase():""}return _.chain(ipsec.tunnels).map(function(tunnel,index){var obj={};return obj.__index=index,obj.peer=""==tunnel.peer?"anonymous":tunnel.peer,obj.alg=tunnel.alg&&tunnel.alg.toUpperCase(),obj.alg_ph2=tunnel.alg_ph2&&tunnel.alg_ph2.toUpperCase(),obj.hash=tunnel.hash&&tunnel.hash.toUpperCase(),obj.auth_alg=tunnel.auth_alg&&tunnel.auth_alg.toUpperCase(),obj.type=tunnel.type&&tunnel.type.toUpperCase(),obj.firstPhaseAlgs=getPhaseAlgs(tunnel.alg,tunnel.hash),obj.secondPhaseAlgs=getPhaseAlgs(tunnel.alg_ph2,tunnel.auth_alg),obj.iface=getIfaceName(tunnel.iface),obj.anonymous=tunnel.anonymous,obj.isL2TP=tunnel.isL2TP,obj.__id=tunnel.__index,obj.isIPv6=tunnel.ipv6,obj}).value()}function getSettings(){return{enabled:funcs.deepClone(ipsec.enabled),logLevel:funcs.deepClone(ipsec.logLevel),debug:!!_.has(ipsec,"debug")&&funcs.deepClone(ipsec.debug)}}function getTunnelsStatus(){function formState(obj,state){switch(state){case 1:obj.state="pending",obj.stateText="larval";break;case 2:obj.state="on",obj.stateText="established";break;case 3:obj.state="pending",obj.stateText="dying";break;case 4:obj.state="off",obj.stateText="dead"}}var result=[];return _.each(ipsec.tunnels,function(tunnel){if(tunnel.status)_.each(tunnel.status,function(rule){var obj={};obj.peer=""==tunnel.peer?"anonymous":tunnel.peer,obj.ip={left:rule.left_ip,right:rule.right_ip},obj.packet={"in":rule.packets_in,out:rule.packets_out},obj.rate={rx:funcs.lookSize(rule.bytes_in),tx:funcs.lookSize(rule.bytes_out)},obj.time=rule.time,formState(obj,rule.state),result.push(obj)});else{var obj={};obj.peer=""==tunnel.peer?"anonymous":tunnel.peer,obj.CHILD=tunnel.CHILD,obj.IKE=tunnel.IKE,obj.state=tunnel.state,obj.stateText=tunnel.stateText,result.push(obj)}}),result}function setEnabled(enabled){return ipsec.enabled=enabled,ipsec}function setLogLevel(logLevel){return ipsec.logLevel=logLevel,ipsec}function setDebug(debug){return ipsec.debug=debug,ipsec}function getDefaultTemplate(isCpe){if(isCpe){var defaultTemplate=funcs.fetchBranch(attrs,paths.ipsecConns+"#template.");return{anonymous:!1,peer:defaultTemplate.Right["default"],enable:!0,auth:defaultTemplate.Auth["default"],leftType:"group",key:defaultTemplate.Key["default"],leftGroup:defaultTemplate.Left["default"],leftIface:defaultTemplate.Left["default"],leftAddr:defaultTemplate.Left["default"],modeIKE:defaultTemplate.IKE.Crypto.Mode["default"],sizeKeyIKE:defaultTemplate.IKE.Crypto.SizeKey["default"],alg:defaultTemplate.IKE.Crypto.Type["default"],ikeHashMode:defaultTemplate.IKE.Hash.Mode["default"],ikeHashSKey:defaultTemplate.IKE.Hash.SizeKey["default"],aggressive:defaultTemplate.Aggressive?defaultTemplate.Aggressive["default"]:void 0,hash:defaultTemplate.IKE.Hash.Type["default"],dhgroup:defaultTemplate.IKE.DHGroup["default"],modeESP:defaultTemplate.ESP.Crypto.Mode["default"],sizeKeyESP:defaultTemplate.ESP.Crypto.SizeKey["default"],alg_ph2:defaultTemplate.ESP.Crypto.Type["default"],espHashMode:defaultTemplate.ESP.Hash.Mode["default"],espHashSKey:defaultTemplate.ESP.Hash.SizeKey["default"],auth_alg:defaultTemplate.ESP.Hash.Type["default"],enable_pfs:!0,dhgroup2:defaultTemplate.ESP.DHGroup["default"],remote_lifetime:defaultTemplate.LifeTimeIKE["default"],sainfo_lifetime:defaultTemplate.LifeTime["default"],nat_t:defaultTemplate.NATTraversal["default"],peer_type:getFilterList("my_ident")[0].value,my_ident_value:funcs.generateName("IPsec"),type:defaultTemplate.Type["default"],version:defaultTemplate.Version["default"],DPD:"restart",dpd_delay:defaultTemplate.DPDDelay["default"],dpd_timeout:defaultTemplate.DPDTimeOut["default"],tcpmss:2,nets:[],delete_nets:[],devMode:ipsec.devMode,router_ipsec:!0,left_proto:0,right_proto:0}}return{anonymous:!1,peer:"",my_ident:getFilterList("my_ident")[0].value,my_ident_value:"",key:"",iface:"auto",nat_t:getList("nat_t")[0].value,exchange_mode:getFilterList("exchange_mode")[0].value,dpd_delay:5,dpd_maxfail:3,tcpmss:getList("tcpmss")[0].value,tcpmss_value:1300,enable_routing:!1,alg:getList("alg")[0].value,alg_ph2:getList("alg_ph2")[0].value,hash:getList("hash")[0].value,auth_alg:getList("auth_alg")[0].value,enable_pfs:!0,dhgroup:getList("dhgroup")[0].value,pfsgroup:getList("pfsgroup")[0].value,remote_lifetime:28800,sainfo_lifetime:3600,nets:[]}}function getList(param,rule,ipVersion){function getInterfaceList(){var result=[];return _.each(attrs,function(elem){elem.is_wan&&elem.name&&elem.iface&&result.push({name:elem.name,value:elem.iface})}),result}function getListFromRpcData(param){var list=[],isGroupsParam="p1_groups"==param||"p2_groups"==param;return ipsec[param]&&_.each(ipsec[param],function(elem,key){var obj={name:isGroupsParam?elem:key,value:elem};list.push(obj)}),list}function createList(arr){return _.map(arr,function(value){return{name:value.toUpperCase(),value:value}})}function getMode(arr,phase,type,rule){function getUseModes(phase,type,rule,arr){var crypto="alg"==type?"IKE"==phase?rule.alg:rule.alg_ph2:"IKE"==phase?rule.hash:rule.auth_alg;switch(crypto){case"3des":case"des":case"blowfish":case"cast128":case"serpent":case"twofish":return["cbc"];case"chacha20poly1305":case"null":return arr;case"camellia":return["cbc","ctr","ccm64","ccm96","ccm128"];case"aes":return"alg"==type?arr:["xcbc","cmac","gmac"];case"sha1":case"md5":case"sha2":return["hmac"]}}var modes=arr,useModes=getUseModes(phase,type,rule,arr);return createList(_.filter(modes,function(e){return _.contains(useModes,e)}))}function getSizeKey(arr,phase,type,rule){function getUseSizeKey(arr,phase,type,rule){var crypto="alg"==type?"IKE"==phase?rule.alg:rule.alg_ph2:"IKE"==phase?rule.hash:rule.auth_alg;switch(crypto){case"3des":case"des":case"blowfish":case"serpent":case"twofish":case"camellia":case"null":return arr;case"cast128":return[128];case"chacha20poly1305":return[256];case"aes":if("alg"==type)return arr;var hashMode="IKE"==phase?rule.ikeHashMode:rule.espHashMode;return"xcbc"==hashMode||"cmac"==hashMode?[96]:[128,192,256];case"sha1":return"2"==ipsec.version?[96,128]:[96];case"md5":return"2"==ipsec.version?[96,160]:[96];case"sha2":return[256,384,512]}}var sizeKey=arr,useSizeKey=getUseSizeKey(arr,phase,type,rule);return _.filter(sizeKey,function(e){return _.contains(useSizeKey,e)})}function getAlgList(arr,type,rule){var restrictedAlgs="crypto"==type?["des","null"]:["md5","sha1"],algArr=ipsec.shortAlgs?restrictedAlgs:arr,version=rule.version;if("crypto"==type?algArr="1"==version?_.without(algArr,"cast128","chacha20poly1305"):_.without(algArr,"serpent","twofish"):"1"==version&&(algArr=_.without(algArr,"aes")),algArr.length&&-1!=algArr.findIndex(function(elem){return"null"==elem})){var ind=algArr.findIndex(function(elem){return"null"==elem});ind!=algArr[algArr.length-1]&&(algArr.splice(ind,1),algArr.push("null"))}return createList(algArr)}function getLogLevel(maxlogLevel){for(var levels=[{name:"ipsec_log_basic",value:0},{name:"ipsec_log_detailed",value:1},{name:"ipsec_log_high",value:2},{name:"ipsec_log_higher",value:3},{name:"ipsec_log_highest",value:4}],logLevel=[],i=maxlogLevel;i>=0;--i)logLevel.push(i);return _.filter(levels,function(e){return _.contains(logLevel,e.value)})}function createDhgroup(arr){var result=[];return _.each(arr,function(elem){""!=elem&&"modp8192"!=elem&&result.push({name:elem.toUpperCase(),value:elem})}),result}function createNATList(){return[{name:"Enabled",value:!0},{name:"Disabled",value:!1}]}function getGroupList(){var groups=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.group)),keys=_.keys(groups);return _.map(keys,function(elem){return{name:elem,value:paths.group+elem+"."}})}function getInterface(ipVersion){function getWanIfaces(wanGroup){var types=["DHCP","Static","DHCPv6","Staticv6","PPPoE","L2TP","PPTP","USB"],result=[];return result=result.concat(getInterfacesByType(types,wanGroup))}function getInterfacesByType(types,wanGroup){var wan_ifaces=[];return types.forEach(function(type){var isUSB="USB"==type,path=isUSB?paths.usbConns:"".concat(paths.interfaces).concat(type,"."),input=funcs.newConfig.normalize(funcs.fetchBranch(config,path));if(input)for(var inst in input){var ifacePath="".concat(path).concat(inst,"."),elem=input[inst];if(!elem.Enable)return;if(isUSB&&elem.InterfaceOnly)return;if(isUSB&&"ipv4"==ipVersion&&"IPv6"==elem.IPStack)return;if(isUSB&&"ipv6"==ipVersion&&(!elem.IPStack||"IPv4"==elem.IPStack))return;wanGroup.includes(ifacePath)&&wan_ifaces.push({name:elem.Name,value:ifacePath})}}),wan_ifaces}var groups=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.group)),wanGroup=[];_.each(groups,function(elem){"ipv4"==ipVersion?_.each(funcs.newConfig.normalize(elem.WAN),function(obj){wanGroup.push(obj.Link)}):_.each(funcs.newConfig.normalize(elem.WANv6),function(obj){wanGroup.push(obj.Link)})}),wanGroup=_.unique(wanGroup);var wan_ifaces=getWanIfaces(wanGroup);return wan_ifaces}var rootAttrs=funcs.fetchBranch(attrs,paths.ipsecConns+"#template.");switch(param){case"advanced_iface_list":var _ipVersion=[ipVersion.includes("v6")?"v6":"v4"];return iface.getIfacesForSelect(_ipVersion);case"auth":return rootAttrs?createList(rootAttrs.Auth["enum"]):{};case"ike_crypto_mode":return rootAttrs?getMode(rootAttrs.IKE.Crypto.Mode["enum"],"IKE","alg",rule):{};case"ike_crypto_skey":return rootAttrs?getSizeKey(rootAttrs.IKE.Crypto.SizeKey["enum"],"IKE","alg",rule):{};case"alg":return rootAttrs?getAlgList(rootAttrs.IKE.Crypto.Type["enum"],"crypto",rule):getListFromRpcData("p1_cyphers");case"esp_crypto_mode":return rootAttrs?getMode(rootAttrs.ESP.Crypto.Mode["enum"],"ESP","alg",rule):{};case"esp_crypto_skey":return rootAttrs?getSizeKey(rootAttrs.ESP.Crypto.SizeKey["enum"],"ESP","alg",rule):{};case"alg_ph2":return rootAttrs?getAlgList(rootAttrs.ESP.Crypto.Type["enum"],"crypto",rule):getListFromRpcData("p2_cyphers");case"hash":return rootAttrs?getAlgList(rootAttrs.IKE.Hash.Type["enum"],"hash",rule):getListFromRpcData("p1_digests");case"dhgroup":return rootAttrs?createDhgroup(rootAttrs.IKE.DHGroup["enum"]):getListFromRpcData("p1_groups");case"auth_alg":return rootAttrs?getAlgList(rootAttrs.ESP.Hash.Type["enum"],"hash",rule):getListFromRpcData("p2_digests");case"dhgroup2":return rootAttrs?createDhgroup(rootAttrs.ESP.DHGroup["enum"]):{};case"type":return rootAttrs?createList(rootAttrs.Type["enum"]):{};case"version":return rootAttrs?rootAttrs.Version["enum"]:{};case"ike_hash_mode":return rootAttrs?getMode(rootAttrs.IKE.Hash.Mode["enum"],"IKE","hash",rule):{};case"ike_hash_skey":return rootAttrs?getSizeKey(rootAttrs.IKE.Hash.SizeKey["enum"],"IKE","hash",rule):{};case"esp_hash_mode":return rootAttrs?getMode(rootAttrs.ESP.Hash.Mode["enum"],"ESP","hash",rule):{};case"esp_hash_skey":return rootAttrs?getSizeKey(rootAttrs.ESP.Hash.SizeKey["enum"],"ESP","hash",rule):{};case"nat_t":return rootAttrs?createNATList():[{name:"Disabled",value:1},{name:"Enabled",value:2},{name:"Force",value:3}];case"left_iface":return rootAttrs?getInterface(ipVersion):{};case"left_group":return rootAttrs?getGroupList():{};case"log_level":var commonSettings=funcs.fetchBranch(attrs,paths.services);return commonSettings.LogLevel?getLogLevel(commonSettings.LogLevel.maxInclusive):{};case"iface":return rootAttrs?{}:getInterfaceList();case"tcpmss":return[{name:"Path MTU discovery",value:2}];case"pfsgroup":return rootAttrs?{}:getListFromRpcData("p2_groups")}}function getFilterList(param,rule){switch(param){case"my_ident":var list=[{name:"Address",value:1}];return rule&&1!=rule.exchange_mode&&list.push({name:"FQDN",value:2}),list;case"exchange_mode":var list=[];return rule&&2!=rule.my_ident&&list.push({name:"Main",value:1}),list.push({name:"Base",value:2}),list.push({name:"Aggressive",value:3}),list}}function getRule(index){var rule=funcs.deepClone(ipsec.tunnels[index]);return rule.devMode=ipsec.devMode,rule}function applyRule(rule,index){return _.isUndefined(index)?ipsec.tunnels.push(rule):ipsec.tunnels[index]=rule,ipsec}function removeRules(indexes){return _.each(indexes.sort().reverse(),function(index){ipsec.tunnels.splice(index,1)}),ipsec}var paths={interfaces:"Device.Network.Connection.",group:"Device.Network.Group.",services:"Device.Services.IPsec.",ipsecConns:"Device.Network.Connection.IPsec.",usbConns:"Device.USB.Connection."},ipsec=funcs.deepClone(config),attrs=funcs.deepClone(attrs),config=oldConfig,iface=new Interface(config);return{getRule:getRule,getSettings:getSettings,getTunnels:getTunnels,getTunnelsStatus:getTunnelsStatus,getList:getList,getFilterList:getFilterList,getDefaultTemplate:getDefaultTemplate,setEnabled:setEnabled,removeRules:removeRules,applyRule:applyRule,setLogLevel:setLogLevel,setDebug:setDebug}}var _=__webpack_require__(4),funcs=(__webpack_require__(3),__webpack_require__(32),__webpack_require__(5));funcs.is=__webpack_require__(12),funcs.ipv4=__webpack_require__(13);var Interface=(__webpack_require__(259),__webpack_require__(236));module.exports=IPsec},function(module,exports,__webpack_require__){"use strict";function IP(config,attrs){function getIPs(){function prepareIP(ips,type,rootPath){function transform(elem,inst){if(!_.isObject(elem))return null;var result={},arrIp=elem.IPAddress.split("/");return result.ip=arrIp[0]||"","ipv4"==type?result.mask=arrIp[1]?funcs.ipv4.mask["long"](arrIp[1]):"":result.prefix=arrIp[1]||"",result.type=type,result.path=getPath(type,rootPath,inst),result.addressingType=elem.AddressingType,result.origin=elem.Origin,result}function getPath(type,rootPath,inst){var result=rootPath;return result+="ipv4"==type?"IPv4Address.":"IPv6Address.",result+=inst+"."}return _.chain(ips).map(transform).compact().value()}var result=[],input=funcs.fetchBranch(config,paths.ip);return _.each(input,function(elem,inst){var rootPath=paths.ip+inst+".";result=result.concat(prepareIP(elem.IPv4Address,"ipv4",rootPath),prepareIP(elem.IPv6Address,"ipv6",rootPath))}),result}var paths={ip:"Device.Network.IP."};return{getIPs:getIPs}}var _=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=IP},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function isUSBConnShown(data,ipStack,left){var usbData=funcs.fetchBranch(data,left);if(usbData){usbData=funcs.newConfig.normalize(usbData);var isInterfaceOnly=usbData.InterfaceOnly,isSameIpVersion=ipStack==usbData.IPStack||"Dual"==usbData.IPStack;return!isInterfaceOnly&&isSameIpVersion}return!1}function getStatus(status,stopOnFail){switch(status){case"ESTABLISHED":case"INSTALLED":return"wifi_client_connected";case"INSTALLING":return"ipsec_status_connecting";case"Disabled":return stopOnFail?"wan_status_cable_disconnected":"wifi_mac_mode_disabled";default:return"ipsec_status_"+status.toLowerCase()}}function getIface(data,left,ipv6,ipStack){return~left.indexOf(paths.usb)?getInterfaceNameByLink(data,left,ipStack):~left.indexOf(paths.interfaces)?getInterfaceNameByLink(data,left):~left.indexOf(paths.ipAddress)?getIPbyLink(data,left):~left.indexOf(paths.group)?getGroupByLink(data,left,ipv6):"Unknown"}function getLeftIface(t,p){return~t.Left.indexOf(paths.interfaces)||~t.Left.indexOf(paths.usb)&&isUSBConnShown(p.$data,t.IPStack,t.Left)||isFirewall(p.devMode)?t.Left:""}function getLeftType(addr,iface,group,left){return addr==left?"addr":iface==left?"iface":group==left?"group":void 0}function getIPbyLink(config,link){var ip=funcs.deepClone(funcs.fetchBranch(config,link));return ip?ip.IPAddress:""}function getGroupByLink(config,link,ipv6){var group=funcs.fetchBranch(config,link);if(!group)return"Unknown";if(ipv6&&""!=group.CurrentWANv6)return getInterfaceNameByLink(config,group.CurrentWANv6);if(ipv6||""==group.CurrentWAN){var order=ipv6?group.WANv6.order:group.WAN.order;return order&&(order.length||_.size(order))?ipv6?getInterfaceNameByLink(config,group.WANv6[order[0]].Link):getInterfaceNameByLink(config,group.WAN[order[0]].Link):"NONE"}return getInterfaceNameByLink(config,group.CurrentWAN)}function getInterfaceNameByLink(config,link,ipStack){var iface=funcs.fetchBranch(config,link);return ipStack&&iface&&(iface.InterfaceOnly||"Dual"!=iface.IPStack&&ipStack!=iface.IPStack)?"Unknown":iface&&iface.Name?iface.Name:"Unknown"}function getAddrOrigin(config,link){var ip=funcs.fetchBranch(config,link);return ip?ip.Origin:""}function formState(stateText){switch(stateText){case"Enabled":return"on";case"Aborted":return"off";case"Disabled":return"off";case"Enabling":return"pending";case"Disabling":return"pending"}}function getSubnets(rule){rule.LeftSubnet=funcs.newConfig.normalize(rule.LeftSubnet),rule.RightSubnet=funcs.newConfig.normalize(rule.RightSubnet);var output=[];if(1==rule.Version)for(var leftNets=Object.values(rule.LeftSubnet),rightNets=Object.values(rule.RightSubnet),i=0;i<leftNets.length;i++){var tmp={};tmp.source=leftNets[i].Subnet,tmp.dest=rightNets[i].Subnet,tmp.mtu=rightNets[i].MTU,tmp.indexL=Object.keys(rule.LeftSubnet)[i],tmp.indexR=Object.keys(rule.RightSubnet)[i],output.push(tmp)}else{var tmpRule={source:[],dest:[]};_.each(rule.LeftSubnet,function(leftNet,index){tmpRule.source.push({source:rule.LeftSubnet[index].Subnet,index:index})}),_.each(rule.RightSubnet,function(rightNet,index){tmpRule.dest.push({dest:rule.RightSubnet[index].Subnet,mtu:rule.RightSubnet[index].MTU,index:index})}),output.push(tmpRule)}return output}function getGroups(data){var groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.vpn));return groups=_.map(groups,function(gr,inx){return gr.__id=inx,gr}),_.filter(groups,function(gr){return-1!=gr.Link.indexOf("IPsec")})}function getPolicy(zoneId,policy,tunnel){return zoneId?_.chain(policy).map(function(elem,id){return elem.__id=id,elem}).filter(function(elem){return elem.Source==paths.firewall+"Zones."+zoneId+"."||elem.Dest==paths.firewall+"Zones."+zoneId+"."||elem.Source==paths.firewallIPv6+"Zones."+zoneId+"."||elem.Dest==paths.firewallIPv6+"Zones."+zoneId+"."}).value():{}}function isShortAlgs(countryCode){if(autoconf.BR2_PACKAGE_ANWEB_IPSEC_DISABLE_CRYPTO_RESTRICTIONS)return!1;var shortCountries=["AR","BY","BE","BG","GB","HU","DK","IN","KZ","RU"];return _.contains(shortCountries,countryCode)}function isFirewall(mode){return mode&&"Firewall"==mode}function getRouterIpsecPolicy(inst,tunnel,data){function tunnelIPLinks(rule,inst,tunnel){var ipLinks=funcs.newConfig.normalize(rule.Source.IPLinks);if(!Object.keys(ipLinks).length)return!1;var subnets=[];for(var i in funcs.newConfig.normalize(tunnel.RightSubnet))subnets.push(paths.interfaces+"IPsec."+inst+".RightSubnet."+i+".Subnet");for(var i in ipLinks)if(!subnets.find(function(e){return e==ipLinks[i].Link}))return!1;return!0}if("transport"!=tunnel.Type){var fwPath="IPv6"==tunnel.IPStack?paths.firewallIPv6:paths.firewall,fwRules=funcs.fetchBranch(data,fwPath+"Rules.");if(fwRules)for(var i in funcs.newConfig.normalize(fwRules)){var rule=fwRules[i];if(rule.Dest.Zone==fwPath+"Zones.1."&&"ACCEPT"==rule.Action&&tunnelIPLinks(rule,inst,tunnel))return{inst:i,rule:rule}}}}function getIPLinks(rule){var ipLinks=funcs.newConfig.normalize(rule.Source.IPLinks);return Object.keys(ipLinks)}var pattern=T({"->":["$data","tunnels","groups","firewall"],$data:":external",$commonSettings:["$data",function(d){return funcs.fetchBranch(d,ipsec.services)}],enabled:["$commonSettings*",function(cs){return!!cs&&cs.Enable}],logLevel:["$commonSettings*",function(cs){return cs?cs.LogLevel:void 0}],devMode:["$data",function(d){return funcs.fetchBranch(d,paths.devMode)}],shortAlgs:["$data",function(d){return isShortAlgs(funcs.fetchBranch(d,paths.countryCode))}],maxInstTunnel:["$data",function(d){return funcs.fetchBranch(d,ipsec.connections+"max_instance")}],tunnels:{"->":!0,$fw:["$parent",function(p){return funcs.fetchBranch(p.$data,paths.firewall)}],"{$tunnel, $i}":["$parent",function(p){return funcs.newConfig.normalize(funcs.fetchBranch(p.$data,ipsec.connections))}],__index:["$i*",function(i){return i}],isL2TP:["$tunnel*",function(t){return _.has(t,"L2TP")&&""!==t.L2TP}],l2tp:["$tunnel*",function(t){return t.L2TP}],ipv6:["$tunnel*",function(t){return"IPv6"==t.IPStack}],init_ipv6:["$tunnel*",function(t){return"IPv6"==t.IPStack}],peer:["$tunnel*",function(t){return t.Right}],anonymous:["$tunnel*",function(t){return""==t.Right}],alg:["$tunnel*",function(t){return t.IKE.Crypto.Type}],hash:["$tunnel*",function(t){return t.IKE.Hash.Type}],iface:["$parent","$tunnel*",function(p,t){return getIface(p.$data,t.Left,"IPv6"==t.IPStack,t.IPStack)}],CHILD:["$tunnel*",function(t){return getStatus(t.Statistic.CHILD)}],IKE:["$tunnel*",function(t){return getStatus(t.Statistic.IKE)}],stateText:["$tunnel*",function(t){return getStatus(t.Status,t.StopOnFail)}],state:["$tunnel*",function(t){return formState(t.Status)}],enable:["$tunnel*",function(t){return t.Enable}],auth:"psk",leftAddr:["$tunnel*",function(t){return~t.Left.indexOf(paths.ipAddress)?t.Left:""}],leftAddrOrigin:["$parent","$tunnel*",function(p,t){return~t.Left.indexOf(paths.ipAddress)?getAddrOrigin(p.$data,t.Left):""}],leftIface:["$tunnel*","$parent",function(t,p){return getLeftIface(t,p)}],leftGroup:["$tunnel*",function(t){return~t.Left.indexOf(paths.group)?t.Left:""}],leftType:["leftAddr*","leftIface*","leftGroup*","$tunnel*",function(addr,iface,group,t){return getLeftType(addr,iface,group,t.Left)}],left_port:["$tunnel*",function(t){
return t.LeftPort||""}],left_proto:["$tunnel*",function(t){return t.LeftProto}],left_id:["$tunnel*",function(t){return t.LeftID}],right_port:["$tunnel*",function(t){return t.RightPort||""}],right_proto:["$tunnel*",function(t){return t.RightProto}],right_id:["$tunnel*",function(t){return t.RightID}],key:["$tunnel*",function(t){return t.Key}],modeIKE:["$tunnel*",function(t){return t.IKE.Crypto.Mode}],sizeKeyIKE:["$tunnel*",function(t){return t.IKE.Crypto.SizeKey}],dhgroup:["$tunnel*",function(t){return t.IKE.DHGroup}],modeESP:["$tunnel*",function(t){return t.ESP.Crypto.Mode}],sizeKeyESP:["$tunnel*",function(t){return t.ESP.Crypto.SizeKey}],alg_ph2:["$tunnel*",function(t){return t.ESP.Crypto.Type}],ikeHashMode:["$tunnel*",function(t){return t.IKE.Hash.Mode}],ikeHashSKey:["$tunnel*",function(t){return t.IKE.Hash.SizeKey}],espHashMode:["$tunnel*",function(t){return t.ESP.Hash.Mode}],espHashSKey:["$tunnel*",function(t){return t.ESP.Hash.SizeKey}],auth_alg:["$tunnel*",function(t){return t.ESP.Hash.Type}],enable_pfs:["$tunnel*",function(t){return t.PFS}],dhgroup2:["$tunnel*",function(t){return""==t.ESP.DHGroup?"modp1024":t.ESP.DHGroup}],remote_lifetime:["$tunnel*",function(t){return t.LifeTimeIKE}],sainfo_lifetime:["$tunnel*",function(t){return t.LifeTime}],nat_t:["$tunnel*",function(t){return t.NATTraversal}],peer_type:["$tunnel*",function(t){return""==t.Rught||funcs.is.ipv4(t.Right)||funcs.is.ipv6(t.Right)?1:2}],my_ident_value:["$tunnel*",function(t){return t.Name}],type:["$tunnel*",function(t){return t.Type}],version:["$tunnel*",function(t){return t.Version}],DPD:["$tunnel*",function(t){return t.DPD}],dpd_delay:["$tunnel*",function(t){return t.DPDDelay}],dpd_timeout:["$tunnel*",function(t){return t.DPDTimeOut}],nets:["$tunnel*",function(t){return getSubnets(t)}],aggressive:["$tunnel*",function(t){return _.has(t,"Aggressive")?t.Aggressive:null}],tcpmss:["$tunnel*",function(t){return t.UsePMTU?2:1}],$router_ipsec:["$i*","$tunnel*","$root",function(i,t,r){return getRouterIpsecPolicy(i,t,r.$data)}],router_ipsec:["$router_ipsec",function(r){return!!r}],router_ipsec_inst:["$router_ipsec*",function(r){return r.inst}],router_ipsec_iplinks:["$router_ipsec*",function(r){return getIPLinks(r.rule)}],delete_nets:[]},groups:{"->":!0,"{$groups, $i}":["$parent",function(p){return getGroups(p.$data)}],__id:["$groups*",function(gr){return gr.__id}],link:["$groups*",function(gr){return gr.Link}]},firewall:{"->":["?"],$devMode:["$parent",function(p){return funcs.fetchBranch(p.$data,paths.devMode)}],"?":["$devMode*",function(dm){return!isFirewall(dm)}],ipv4:{"->":!0,$fw:["$root",function(r){return funcs.fetchBranch(r.$data,paths.firewall)}],$tunnel:["$root",function(r){return funcs.fetchBranch(r.$data,ipsec.connections)}],$zones:["$fw*",function(fw){return fw?funcs.newConfig.normalize(fw.Zones):void 0}],$policy:["$fw*",function(fw){return fw?funcs.newConfig.normalize(fw.Policy):void 0}],zones:["$zones*",function(z){return z}],zoneId:["$zones*",function(z){return _.findKey(z,function(zone){return _.find(zone.Interfaces,function(iface){var _iface$Path;return null===(_iface$Path=iface.Path)||void 0===_iface$Path?void 0:_iface$Path.includes("Connection.IPsec")})})}],maxInstZone:["$fw*",function(fw){return fw?fw.Zones.max_instance:void 0}],policy:["zoneId*","$policy*","$tunnel*",function(zid,p,t){return getPolicy(zid,p,t)}]},ipv6:{"->":!0,$fw:["$root",function(r){return funcs.fetchBranch(r.$data,paths.firewallIPv6)}],$tunnel:["$root",function(r){return funcs.fetchBranch(r.$data,ipsec.connections)}],$zones:["$fw*",function(fw){return fw?funcs.newConfig.normalize(fw.Zones):void 0}],$policy:["$fw*",function(fw){return fw?funcs.newConfig.normalize(fw.Policy):void 0}],zones:["$zones*",function(z){return z}],zoneId:["$zones*",function(z){return _.findKey(z,function(zone){return _.find(zone.Interfaces,function(iface){var _iface$Path2;return null===(_iface$Path2=iface.Path)||void 0===_iface$Path2?void 0:_iface$Path2.includes("Connection.IPsec")})})}],maxInstZone:["$fw*",function(fw){return fw?fw.Zones.max_instance:void 0}],policy:["zoneId*","$policy*","$tunnel*",function(zid,p,t){return getPolicy(zid,p,t)}]}}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getNets(tunnels,type){return tunnels&&"transport"!=tunnels.type?"source"!=type||_.isArray(tunnels.nets[0].source)?"source"==type&&_.isArray(tunnels.nets[0].source)?tunnels.nets[0].source:"dest"!=type||_.isArray(tunnels.nets[0].dest)?"dest"==type&&_.isArray(tunnels.nets[0].dest)?tunnels.nets[0].dest:void 0:tunnels.nets:tunnels.nets:{}}function getGroups(data){var tunnels=data.tunnels.filter(function(t){return!t.isL2TP}),groups=data.groups,result=[];return _.each(tunnels,function(tunnel,id){var group=_.find(groups,{link:ipsec.connections+tunnel.__index+"."});result.push(group?group:{link:ipsec.connections+"new_ipsec."})}),result}function getLeft(tunnel,devMode){return"Firewall"==devMode?tunnel.leftIface:"iface"==tunnel.leftType?tunnel.leftIface:"addr"==tunnel.leftType?tunnel.leftAddr:"group"==tunnel.leftType?"Firewall"!=devMode?paths.group+"1.":tunnel.leftGroup:void 0}function getZoneIfaces(zone,tunnels){if(!zone)return tunnels;var ifaces=funcs.newConfig.normalize(zone.Interfaces);return _.map(tunnels,function(tunnel,id){if(!tunnel.__index||!ifaces)return tunnel;var key=_.findKey(ifaces,{Path:ipsec.connections+tunnel.__index+"."});return key&&(tunnel.__zoneId=key),tunnel})}function getZones(data,ipVersion){function getIfaces(firewall,tunnels,version){var zoneIPsec=firewall.zoneId?firewall.zones[firewall.zoneId]:{},newTunnels=getZoneIfaces(zoneIPsec,tunnels),result={};return _.each(newTunnels,function(elem,id){if(!("ipv6"==version&&!elem.ipv6||"ipv4"==version&&elem.ipv6)&&"transport"!=elem.type){var _elem$__index,index=null!==(_elem$__index=elem.__index)&&void 0!==_elem$__index?_elem$__index:"new_ipsec",resultId=elem.__zoneId?elem.__zoneId:"new_inst_"+id;result[resultId]={Path:ipsec.connections+index+"."}}}),result}var firewall=data.firewall,tunnels=data.tunnels.filter(function(t){return"transport"!=t.type});if(!tunnels.length&&!firewall.zoneId)return{};var isIPv6Tunnel=_.find(tunnels,function(elem){return elem.ipv6}),isIPv4Tunnel=_.find(tunnels,function(elem){return!elem.ipv6}),result={};if(isIPv4Tunnel&&"ipv4"==ipVersion){var id=firewall.ipv4.zoneId?firewall.ipv4.zoneId:"new_inst";result[id]={Type:ipVersion,Interfaces:getIfaces(firewall.ipv4,data.tunnels.filter(function(t){return!t.isL2TP}),ipVersion)}}if(isIPv6Tunnel&&"ipv6"==ipVersion){var id=firewall.ipv6.zoneId?firewall.ipv6.zoneId:"new_inst";result[id]={Type:ipVersion,Interfaces:getIfaces(firewall.ipv6,data.tunnels.filter(function(t){return!t.isL2TP}),ipVersion)}}return result}function getPolicy(data,ipVersion){var firewall=data.firewall,tunnels=data.tunnels.filter(function(t){return"transport"!=t.type}),isIPv6Tunnel=_.find(tunnels,function(elem){return elem.ipv6}),isIPv4Tunnel=_.find(tunnels,function(elem){return!elem.ipv6});if(!tunnels.length&&!firewall.zoneId)return{};var zones=firewall.ipv4.zones,zonesIPv6=firewall.ipv6.zones,ipsecZoneLink=paths.firewall+"Zones."+(firewall.ipv4.zoneId?firewall.ipv4.zoneId:"new_inst")+".",ipsecZoneLinkIPv6=paths.firewallIPv6+"Zones."+(firewall.ipv6.zoneId?firewall.ipv6.zoneId:"new_inst")+".",result={},inx=0;return isIPv4Tunnel&&"ipv4"==ipVersion&&(firewall.ipv4.policy&&firewall.ipv4.policy.length?_.each(firewall.ipv4.policy,function(elem,inx){var workElem=Object.assign({},elem),id=workElem.__id;delete workElem.__id,result[id]=workElem}):_.each(zones,function(zone,id){var obj={};"lan"!=zone.Name&&"wan"!=zone.Name&&"fw"!=zone.Name||(obj.Source=ipsecZoneLink,obj.Dest=paths.firewall+"Zones."+id+".",obj.Policy="fw"==zone.Name?"DROP":"ACCEPT",result["new_inst_"+ ++inx]=funcs.deepClone(obj),"ipv4"==zone.Type&&"lan"==zone.Name&&(obj.Source=paths.firewall+"Zones."+id+".",obj.Dest=ipsecZoneLink,result["new_inst_"+ ++inx]=funcs.deepClone(obj)))})),isIPv6Tunnel&&"ipv6"==ipVersion&&(firewall.ipv6.policy&&firewall.ipv6.policy.length?_.each(firewall.ipv6.policy,function(elem,inx){var workElem=Object.assign({},elem),id=workElem.__id;delete workElem.__id,result[id]=workElem}):_.each(zonesIPv6,function(zone,id){var obj={};"lan"!=zone.Name&&"wan"!=zone.Name&&"fw"!=zone.Name||(obj.Source=ipsecZoneLinkIPv6,obj.Dest=paths.firewallIPv6+"Zones."+id+".",obj.Policy="fw"==zone.Name?"DROP":"ACCEPT",result["new_inst_"+ ++inx]=funcs.deepClone(obj),"ipv6"==zone.Type&&"lan"==zone.Name&&(obj.Source=paths.firewallIPv6+"Zones."+id+".",obj.Dest=ipsecZoneLinkIPv6,result["new_inst_"+ ++inx]=funcs.deepClone(obj)))})),result}function getRules(data,ipVersion){function getIPLinks(elem){var _elem$__index2,output={},ipsecId=null!==(_elem$__index2=elem.__index)&&void 0!==_elem$__index2?_elem$__index2:"new_ipsec",iplinksList=elem.router_ipsec_inst&&elem.ipv6==elem.init_ipv6?elem.router_ipsec_iplinks:[];for(var i in elem.nets)if(1==elem.version){var id=iplinksList[i]?iplinksList[i]:"new_iplink_"+i,netId=elem.nets[i].indexR?elem.nets[i].indexR:"new_inst_"+i,obj={Link:paths.interfaces+"IPsec."+ipsecId+".RightSubnet."+netId+".Subnet"};output[id]=obj}else if(_.isArray(elem.nets[i].dest))for(var j in elem.nets[i].dest){var id=iplinksList[j]?iplinksList[j]:"new_iplink_"+j,netId=elem.nets[i].dest[j].index?elem.nets[i].dest[j].index:"new_inst_"+j,obj={Link:paths.interfaces+"IPsec."+ipsecId+".RightSubnet."+netId+".Subnet"};output[id]=obj}return output}var firewall=data.firewall,result={},zoneIpsec=("ipv4"==ipVersion?paths.firewall:paths.firewallIPv6)+"Zones."+(("ipv4"==ipVersion?firewall.ipv4.zoneId:firewall.ipv6.zoneId)||"new_inst")+".",zoneFw=("ipv4"==ipVersion?paths.firewall:paths.firewallIPv6)+"Zones.1.";for(var i in data.tunnels){var elem=data.tunnels[i];if(elem.router_ipsec&&"transport"!=elem.type&&("ipv4"==ipVersion&&!elem.ipv6||"ipv6"==ipVersion&&elem.ipv6)){var id=elem.router_ipsec_inst&&elem.ipv6==elem.init_ipv6?elem.router_ipsec_inst:"new_ipsec",obj={Source:{Zone:zoneIpsec,IPLinks:getIPLinks(elem)},Dest:{Zone:zoneFw},Direction:"NONE",Enable:!0,Action:"ACCEPT",Pattern:"(WEB)IPSec",Table:"Filter"};result[id]=obj}}return result}function isChangeMode(alg){return"null"!=alg&&"chacha20poly1305"!=alg}function isChangeSizeKey(alg){return"3des"!=alg&&"des"!=alg&&"null"!=alg}function isFirewall(mode){return mode&&"Firewall"==mode}var pattern=T({"->":["$data","Device"],$data:":external",Device:{"->":!0,Services:{IPsec:{"->":!0,$data:["$root",function(r){return r.$data}],Enable:["$data",function(d){return d.enabled}],LogLevel:["$data",function(d){return d.logLevel}]}},Firewall:{"->":["?","IPv4","IPv6"],"?":["$root",function(r){return!isFirewall(r.$data.devMode)}],IPv4:{"->":!0,Zones:["$root",function(r){return getZones(r.$data,"ipv4")}],Policy:["$root",function(r){return getPolicy(r.$data,"ipv4")}],Rules:["$root",function(r){return getRules(r.$data,"ipv4")}]},IPv6:{"->":!0,Zones:["$root",function(r){return getZones(r.$data,"ipv6")}],Policy:["$root",function(r){return getPolicy(r.$data,"ipv6")}],Rules:["$root",function(r){return getRules(r.$data,"ipv6")}]}},Network:{"->":!0,Connection:{IPsec:{"->":["$tunnels","ESP","IKE","LeftSubnet","RightSubnet"],"{$tunnels, $i}":["$root",function(r){return r.$data.tunnels.filter(function(t){return!t.isL2TP})}],":":["$tunnels*",function(t){return t.__index?t.__index:"new_ipsec"}],Auth:["$tunnels*",function(t){return t.auth}],Key:["$tunnels*",function(t){return"psk"==t.auth?t.key:""}],Name:["$tunnels*",function(t){return t.my_ident_value}],Left:["$tunnels*","$root",function(t,r){return getLeft(t,r.$data.devMode)}],LifeTimeIKE:["$tunnels*",function(t){return t.remote_lifetime}],LifeTime:["$tunnels*",function(t){return t.sainfo_lifetime}],IPStack:["$tunnels*",function(t){return t.ipv6?"IPv6":"IPv4"}],L2TP:["$tunnels*",function(t){return t.l2tp}],NATTraversal:["$tunnels*",function(t){return t.nat_t}],Right:["$tunnels*",function(t){return t.anonymous?"":t.peer.toLowerCase()}],Type:["$tunnels*",function(t){return t.type}],Version:["$tunnels*",function(t){return t.version}],UsePMTU:["$tunnels*",function(t){return 1!=t.tcpmss}],PFS:["$tunnels*",function(t){return t.enable_pfs}],LeftPort:["$tunnels*",function(t){return t.left_port?parseInt(t.left_port):0}],LeftProto:["$tunnels*",function(t){return t.left_proto?parseInt(t.left_proto):0}],LeftID:["$tunnels*",function(t){return t.left_id}],RightPort:["$tunnels*",function(t){return t.right_port?parseInt(t.right_port):0}],RightProto:["$tunnels*",function(t){return t.right_proto?parseInt(t.right_proto):0}],RightID:["$tunnels*",function(t){return t.right_id}],ESP:{"->":["$tunnels","Crypto","Hash"],$tunnels:["$parent",function(p){return p.$tunnels}],Crypto:{"->":!0,$tunnels:["$parent",function(p){return p.$tunnels}],Mode:["$tunnels*",function(t){return isChangeMode(t.alg_ph2)?t.modeESP:void 0}],SizeKey:["$tunnels*",function(t){return isChangeSizeKey(t.alg_ph2)?t.sizeKeyESP:void 0}],Type:["$tunnels*",function(t){return t.alg_ph2}]},DHGroup:["$tunnels*",function(t){return t.dhgroup2}],Hash:{"->":!0,$tunnels:["$parent",function(p){return p.$tunnels}],Mode:["$tunnels*",function(t){return t.espHashMode}],SizeKey:["$tunnels*",function(t){return t.espHashSKey}],Type:["$tunnels*",function(t){return t.auth_alg}]}},Aggressive:["$tunnels*",function(t){return t.aggressive}],IKE:{"->":["$tunnels","Crypto","Hash"],$tunnels:["$parent",function(p){return p.$tunnels}],Crypto:{"->":!0,$tunnels:["$parent",function(p){return p.$tunnels}],Mode:["$tunnels*",function(t){return isChangeMode(t.alg)?t.modeIKE:void 0}],SizeKey:["$tunnels*",function(t){return isChangeSizeKey(t.alg)?t.sizeKeyIKE:void 0}],Type:["$tunnels*",function(t){return t.alg}]},DHGroup:["$tunnels*",function(t){return t.dhgroup}],Hash:{"->":!0,$tunnels:["$parent",function(p){return p.$tunnels}],Mode:["$tunnels*",function(t){return t.ikeHashMode}],SizeKey:["$tunnels*",function(t){return t.ikeHashSKey}],Type:["$tunnels*",function(t){return t.hash}]}},DPD:["$tunnels*",function(t){return t.DPD}],DPDDelay:["$tunnels*",function(t){return t.dpd_delay}],DPDTimeOut:["$tunnels*",function(t){return t.dpd_timeout}],LeftSubnet:{"->":!0,"{$net, $i}":["$parent",function(p){return getNets(p.$tunnels,"source")}],":":["$net*","$i*",function(net,i){return net.index?net.index:net.indexL?net.indexL:"new_inst_"+i}],Subnet:["$net*",function(net){return~net.source.indexOf("/")?net.source.toLowerCase():net.source.toLowerCase+"/32"}]},RightSubnet:{"->":!0,$mtu:["$parent",function(p){return p.$tunnels&&1==p.$tunnels.tcpmss?p.$tunnels.tcpmss_value:void 0}],"{$net, $i}":["$parent",function(p){return getNets(p.$tunnels,"dest")}],":":["$net*","$i*",function(net,i){return net.index?net.index:net.indexR?net.indexR:"new_inst_"+i}],Subnet:["$net*",function(net){return~net.dest.indexOf("/")?net.dest.toLowerCase():net.dest.toLowerCase()+"/32"}],MTU:["$parent","$net*",function(p,net){return 1==p.$tunnels.tcpmss?net.mtu:void 0}]},Enable:["$tunnels*",function(t){return t.enable}]}},Group:{"->":["?","1"],"?":["$root",function(r){return!isFirewall(r.$data.devMode)||!!r.$data.firewallAutoConfig}],1:{VPN:{"->":!0,"{$groups, $i}":["$root",function(r){return getGroups(r.$data)}],":":["$groups*","$i*",function(gr,i){var _gr$__id;return null!==(_gr$__id=gr.__id)&&void 0!==_gr$__id?_gr$__id:"new_inst_"+i}],Link:["$groups*",function(gr){return gr.link}]}}}}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),ipsec={services:"Device.Services.IPsec.",connections:"Device.Network.Connection.IPsec.",enabled:"Device.Network.Connection.IPsec.Enable",status:"Device.Network.Connection.IPsec.Status"},paths={devMode:"Device.DeviceInfo.DeviceMode",interfaces:"Device.Network.Connection.",ipAddress:"Device.Network.IP.",vpn:"Device.Network.Group.1.VPN.",group:"Device.Network.Group.",firewall:"Device.Firewall.IPv4.",firewallIPv6:"Device.Firewall.IPv6.",zoneFW:"Device.Firewall.IPv4.Zones.1.",zoneWAN:"Device.Firewall.IPv4.Zones.2.",countryCode:"Device.DeviceInfo.CountryCode",usb:"Device.USB.Connection."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";module.exports={constants:__webpack_require__(262),Helper:__webpack_require__(263),converter:__webpack_require__(264)}},function(module,exports){"use strict";module.exports={paths:{statsRouting:"Device.Statistics.Routing."}}},function(module,exports,__webpack_require__){"use strict";function StatsRouting(config){function getData(){return config?_.has(config,"Routing")?config.Routing:config:{}}function getTables(){return config?config.Tables:{}}function getRules(){return config?config.Rules:{}}function getDestString(elem){var ipWithMask=elem.mask?elem.dest+"/"+funcs.ipv4.mask["short"](elem.mask):elem.dest;return elem.gw&&""!=elem.gw?ipWithMask+" - "+elem.gw:ipWithMask}if(!(this instanceof StatsRouting))return new StatsRouting(config);var config=funcs.deepClone(config);return{getData:getData,getDestString:getDestString,getTables:getTables,getRules:getRules}}var _=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=StatsRouting},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getIfaceName(ifname,ifaceLink){if(_.isEmpty(ifaceLink))return _.isEmpty(ifname)?"any":ifname;var iface=funcs.fetchBranch(data,ifaceLink);if(autoconf.BR2_PACKAGE_ANWEB_SWITCH&&iface)return iface.Name;if("Device.Network.Interface.Bridge.1."==ifaceLink)return"LAN";if(!iface)return ifname;if(-1!=ifaceLink.indexOf("PTM"))return"PTM "+(0!=iface.VID?iface.VID:"untag");if(-1!=ifaceLink.indexOf("ATM")){var xdsl=data.Device.xDSL;if(xdsl){var pvc="";if(_.findKey(funcs.newConfig.normalize(xdsl),function(elem,key){return _.some(elem.ATM.PVC,function(obj,id){return obj.Interface==ifaceLink&&(pvc=obj.VPI+"/"+obj.VCI,!0)})}),""!=pvc)return"ATM "+pvc}}if(!_.isEmpty(iface.Name))return iface.Name;if(_.has(iface,"LowerLayer")){var vlanIface=funcs.fetchBranch(data,iface.LowerLayer);return _.isEmpty(vlanIface.Name)?ifname:vlanIface.Name}return ifname?ifname:iface.Ifname}function getIPAddress(extendAddr,addressFamily){var ip="";if("IPv4"==addressFamily){var splitAddr=extendAddr.split("/");ip=splitAddr[0]}else"IPv6"==addressFamily&&(ip=extendAddr);return ip}function getMask(extendAddr,addressFamily){if(!extendAddr)return"";if("IPv6"==addressFamily)return"";var splitAddr=extendAddr.split("/"),mask=splitAddr&&splitAddr[1]?funcs.ipv4.mask["long"](splitAddr[1]):"255.255.255.255";return mask}function getTableName(link,id){var table=funcs.fetchBranch(data,link),tableName=table?table.Name:null;return""!=tableName?tableName:id}function getRouting(){function checkLinklocal(data){var addr=funcs.ipv6.address.full(data),splitAddr=addr.split(":");return"fe80"==splitAddr[0].toLowerCase()}function ignoreRouteIfNeed(addressFamily,tableId){var table=_.find(tables,function(t){return t.TableID==tableId});if(table.Origin&&-1==table.Origin.indexOf("Device.Network.Group")){var isOriginV6=-1!=table.Origin.indexOf("v6")||-1!=table.Origin.indexOf("SIT");return"IPv6"==addressFamily?!isOriginV6:isOriginV6}}var routing=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.routing)),tables=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.tables)),voipTable=_.find(tables,{Name:"voip"});return _.filter(routing,function(elem){if(""==elem.TableLink)return!1;if(data.hideTRVoip&&voipTable&&elem.Table==voipTable.TableID)return!1;if("unreachable"==elem.Type)return!1;if(ignoreRouteIfNeed(elem.AddressFamily,elem.Table))return!1;if(data.hideMulticast&&"ff00::/8"==elem.Destination)return!1;if(data.hideLoopback&&/^Device\.Network\.Interface\.Loopback\./.test(elem.InterfaceLink))return!1;if(data.mainOnly&&"main"!=getTableName(elem.TableLink,elem.Table))return!1;if("IPv6"==elem.AddressFamily)return!checkLinklocal(elem.Destination)&&"UGc"!=elem.Flags&&"Uc"!=elem.Flags;var iface=funcs.fetchBranch(data,elem.InterfaceLink);return iface&&!iface.Bridged})}function getTables(data){var tables=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.tables));if(data.mainOnly)return _.filter(tables,function(e){return"main"==e.Name});var hideTablesList=["unreachable","resolve","failover","default","ldp-ip","voip","tr069"];return _.filter(tables,function(e){return!_.contains(hideTablesList,e.Name)})}function getRules(data){var rules=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.rules)),viewTables=getTables(data),viewTablesID=_.pluck(viewTables,"TableID");return _.filter(rules,function(r){return _.contains(viewTablesID,r.Table)})}var pattern=T({"->":["$data","Routing","Tables","Rules"],$data:":external",Routing:{"->":["?"],$data:["$parent",function(p){return p.$data}],"?":["$routing",function(r){return!!r}],"{$routing}":getRouting(),name:["$routing",function(r){return getIfaceName(r.Interface,r.InterfaceLink)}],dest:["$routing",function(r){return getIPAddress(r.Destination,r.AddressFamily)}],mask:["$routing",function(r){return getMask(r.Destination,r.AddressFamily)}],gw:["$routing",function(r){return r.GatewayIPAddress}],flags:["$routing",function(r){return r.Flags}],metric:["$routing",function(r){return r.ForwardingMetric}],table:["$routing",function(r){return r.Table}]},Tables:{"->":!0,$data:["$parent",function(p){return p.$data}],"{$tables}":["$data",function(d){return getTables(d)}],id:["$tables*",function(t){return t.TableID}],name:["$tables*",function(t){return t.Name}]},Rules:{"->":!0,$data:["$parent",function(p){return p.$data}],"{$rules}":["$data",function(d){return getRules(d)}],addressFamily:["$rules*",function(r){return r.AddressFamily}],destIP:["$rules*",function(r){return r.DestinationIPAddress||"all"}],sourceIP:["$rules*",function(r){return r.SourceIPAddress||"all"}],fwMark:["$rules*",function(r){return"0x"+r.FWMark.toString(16).toUpperCase()}],incomingIface:["$rules*",function(r){return getIfaceName(r.IncomingInterface,r.IncomingInterfaceLink)}],outgoingIface:["$rules*",function(r){return getIfaceName(r.OutgoingInterface,r.OutgoingInterfaceLink)}],priority:["$rules*",function(r){return r.Priority}],tos:["$rules*",function(r){return r.TOS}],table:["$rules*",function(r){return getTableName(r.TableLink,r.Table)}]}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={routing:"Device.Statistics.Routing.",tables:"Device.Routing.Tables.",rules:"Device.Statistics.RoutingRules."};module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";var _interopRequireDefault=__webpack_require__(7),_typeof2=_interopRequireDefault(__webpack_require__(8)),funcs=__webpack_require__(5),cpe=__webpack_require__(3);module.exports=function(){function changeLang(lang){var input=[{Name:"Device.DeviceInfo.Language",Value:lang}];return cpe.SetParameterValues(input)}function changePassword(response,username,password){var tree=funcs.buildTree(response),fetch=funcs.fetchBranch(tree,"Device.Users.User."),nameValue=[];return _.each(fetch,function(item,i){return"object"==_typeof2["default"](item)&&item.Username==username?void(nameValue=[{Name:"Device.Users.User."+i+".Password.",Value:password}]):void 0}),nameValue}return{changeLang:changeLang,changePassword:changePassword}}()},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(270),constants:__webpack_require__(271),converter:__webpack_require__(272)}},function(module,exports,__webpack_require__){"use strict";function SystemTime(config,attrs){function getData(){var result={ntp:{},time:{},ifaces:{},ifacesList:[]},ntp=funcs.fetchBranch(config,paths.ntp),time=funcs.fetchBranch(config,paths.time),ifaces=getIfaces(config),ifacesList=_.pluck(ifaces,"name");return result.ntp.Enable=ntp.Enable,result.ntp.TimeZoneOffset=_.has(ntp,"TimeZoneHourOffset")&&_.has(ntp,"TimeZoneMinuteOffset")?unionOffset(ntp.TimeZoneHourOffset,ntp.TimeZoneMinuteOffset):void 0,result.ntp.Servers=_.map(funcs.newConfig.normalize(ntp.Servers),function(value,inst){return{address:value.Server,__id:inst,isDynamic:value.Dynamic}}),_.has(ntp,"DST")&&(result.ntp.DST=ntp.DST),_.has(ntp,"DSTHour")&&(result.ntp.DSTHour=ntp.DSTHour),_.has(ntp,"DSTStart")&&(result.ntp.DSTStart=ntp.DSTStart),_.has(ntp,"DSTEnd")&&(result.ntp.DSTEnd=ntp.DSTEnd),_.has(ntp,"DSTTimeZoneHourOffset")&&_.has(ntp,"DSTTimeZoneMinuteOffset")&&(result.ntp.DSTTimeZoneOffset=unionOffset(ntp.DSTTimeZoneHourOffset,ntp.DSTTimeZoneMinuteOffset)),_.has(ntp,"DHCPServers")&&(result.ntp.DHCPServers=ntp.DHCPServers),_.has(ntp,"NTPServer")&&(result.ntp.NTPServer=ntp.NTPServer),_.has(ntp,"Sync")&&(result.ntp.Sync=ntp.Sync),_.has(ntp,"Interval")&&(result.ntp.Interval=ntp.Interval),_.has(ntp,"AutoInterval")&&(result.ntp.AutoInterval=ntp.AutoInterval),_.has(ntp,"PollInterval")&&(result.ntp.PollInterval=ntp.PollInterval),_.has(ntp,"RetryInterval")&&(result.ntp.RetryInterval=ntp.RetryInterval,result.ntp.RetryType=0==ntp.RetryInterval?0:1),_.has(ntp,"Interface")&&(result.ntp.Interface=ntp.Interface),result.time=time,result.ifaces=ifaces,result.ifacesList=ifacesList,result}function formConfig(data){function prepareNtp(ntp){return ntp.Servers=prepareNtpServer(ntp.Servers),autoconf.BR2_PACKAGE_ANWEB_RESIDENT&&(prepareOffset(ntp),prepareDSTOffset(ntp)),ntp}function prepareNtpServer(server){var result={};return _.each(server,function(elem,inx){if(elem.address){var inst=elem.__id?elem.__id:"new_inst_"+inx;result[inst]={Server:elem.address}}}),result}function prepareOffset(ntp){var arrOffset=ntp.TimeZoneOffset.split(":");ntp.TimeZoneHourOffset=Number(arrOffset[0]),ntp.TimeZoneMinuteOffset=Number(arrOffset[1]),delete ntp.TimeZoneOffset}function prepareDSTOffset(ntp){if(ntp.DSTTimeZoneOffset){var arrOffset=ntp.DSTTimeZoneOffset.split(":");ntp.DSTTimeZoneHourOffset=Number(arrOffset[0]),ntp.DSTTimeZoneMinuteOffset=Number(arrOffset[1]),delete ntp.DSTTimeZoneOffset}}var config={},input=funcs.deepClone(data);return input.ntp=prepareNtp(input.ntp),void 0!=input.ntp.RetryType&&delete input.ntp.RetryType,funcs.setValue(paths.ntp.replace(/\.$/,""),input.ntp,config),funcs.setValue(paths.time.replace(/\.$/,""),input.time,config),config}function getTimeStamp(input){return new Date(input.Year,input.Month-1,input.Day,input.Hour,input.Minute).getTime()}function getTimeZones(){var result=[];if(attrs)var ntpAttrs=funcs.fetchBranch(attrs,paths.ntp),start=ntpAttrs.TimeZoneHourOffset.minInclusive,end=ntpAttrs.TimeZoneHourOffset.maxInclusive;else var start=-12,end=12;for(var i=start;end>=i;i++){var sign=identifySign(i),name=i.toString();result.push({sign:sign,name:name,value:unionOffset(i,0)}),_.contains([-4,-3,3,4,5,6,9],i)&&result.push({sign:sign,name:name+"30",value:unionOffset(i,30)}),5==i&&result.push({sign:sign,name:name+"45",value:unionOffset(i,45)})}return result}function unionOffset(hour,minute){var sign=identifySign(hour),hour=Math.abs(hour).toString(),minute=minute.toString();return 1==hour.length&&(hour="0"+hour),1==minute.length&&(minute="0"+minute),sign+hour+":"+minute}function identifySign(hour){return hour>0?"+":0>hour?"-":""}function checkServer(server){if(!server)return!0;var isIpv4=function(value){var patt=/^(0|[1-9]?\d|1\d\d|2[0-4]\d|25[0-5])\.(0|[1-9]?\d|1\d\d|2[0-4]\d|25[0-5])\.(0|[1-9]?\d|1\d\d|2[0-4]\d|25[0-5])\.(0|[1-9]?\d|1\d\d|2[0-4]\d|25[0-5])$/;return!!patt.test(value)},isDomain=function(host){var regDomain=/^[а-яА-Яa-zA-Z0-9]+([\-]{0,2}[а-яА-Яa-zA-Z0-9])*$/;if(host=host.replace(/(^\s+|\s+$)/g,""),host.length>255)return!1;var domains=host.split(".");for(var i in domains)if(domains[i].length<1||domains[i].length>63||!regDomain.test(domains[i]))return!1;return!0};return isIpv4(server)||isDomain(server)}function getPoolIntervalEnum(){var pollInterval=funcs.fetchBranch(attrs,"Device.Services.NTP.PollInterval.");if(!pollInterval)return[];pollInterval=[pollInterval["#attr"]["default"]].concat(pollInterval["#attr"]["enum"]);var result=[];for(var i in pollInterval){var obj={value:pollInterval[i],name:0==i?"auto":pollInterval[i]};result.push(obj)}return result}function getRetryIntervalEnum(){return[{name:"auto",value:0},{name:"manual",value:1}]}function getIfaces(data){var unuseTypes=["IPsec","GRE","OpenVPN"],connPath="Device.Network.Connection.",usbConnPath="Device.USB.Connection.",conns=funcs.newConfig.normalize(funcs.fetchBranch(data,connPath)),usbConns=funcs.newConfig.normalize(funcs.fetchBranch(data,usbConnPath)),result=[];return _.each(conns,function(conn,type){_.contains(unuseTypes,type)||_.each(funcs.newConfig.normalize(conn),function(elem,inx){var isUsbConn=~elem.Interface.indexOf("Cellular")||elem.BaseInterface&&~elem.BaseInterface.indexOf("Cellular");!elem.Interface||~elem.Interface.indexOf("Connection")||isUsbConn||result.push({name:elem.Name,value:connPath+type+"."+inx+"."})})}),_.each(usbConns,function(conn,inx){conn.InterfaceOnly||result.push({name:conn.Name,value:usbConnPath+inx+"."})}),result.push({name:"wan_auto",value:""}),result}var config=funcs.deepClone(config),attrs=funcs.deepClone(attrs);return{getData:getData,formConfig:formConfig,getTimeStamp:getTimeStamp,getTimeZones:getTimeZones,unionOffset:unionOffset,checkServer:checkServer,getPoolIntervalEnum:getPoolIntervalEnum,getRetryIntervalEnum:getRetryIntervalEnum}}var _=__webpack_require__(4),funcs=__webpack_require__(5),paths=__webpack_require__(271).paths;module.exports=SystemTime},function(module,exports){"use strict";module.exports={paths:{time:"Device.System.Time.",ntp:"Device.Services.NTP.",ifaces:"Device.Network.Interface.",conns:"Device.Network.Connection.",usbConns:"Device.USB.Connection."},rpc:65}},function(module,exports,__webpack_require__){"use strict";function somovdToDsysinit(input){function getTimeZoneHour(hour){var hour=hour.split(":")[0];return-1*new Number(hour)}function getTimeZoneMinute(hour){var minute=hour.split(":")[1];return minute||0}var pattern=T({"->":!0,$input:":external",Device:{System:{Time:{"->":!0,$input:["$root",function(r){return r.$input}],$time:["$input",function(i){return i.time}],Day:["$time",function(t){return t.tm_mday}],Minute:["$time",function(t){return t.tm_min}],Hour:["$time",function(t){return t.tm_hour}],Month:["$time",function(t){return t.tm_mon}],Year:["$time",function(t){return t.tm_year}]}},Services:{NTP:{"->":!0,$input:["$root",function(r){return r.$input}],Enable:["$input",function(i){return i.enable}],Servers:{"->":!0,$input:["$root",function(r){return r.$input}],"{$value,$i}":["$input",function(i){return i.servers}],":":["$i*",function(i){return i+1}],Server:["$value",function(v){return v}]},TimeZoneHourOffset:["$input",function(i){return getTimeZoneHour(i.hour)}],TimeZoneMinuteOffset:["$input",function(i){return getTimeZoneMinute(i.hour)}],DST:["$input",function(i){return i.dst||!1}],DSTHour:["$input",function(i){return i.dst_hour||""}],DSTTimeZoneHourOffset:["$input",function(i){return getTimeZoneHour(i.dst_hour?i.dst_hour:i.hour)}],DSTTimeZoneMinuteOffset:["$input",function(i){return getTimeZoneMinute(i.dst_hour?i.dst_hour:i.hour)}],DSTStart:["$input",function(i){return i.dst_start||""}],DSTEnd:["$input",function(i){return i.dst_end||""}],DHCPServers:["$input",function(i){return i.use_dhcp}],NTPServer:["$input",function(i){return i.run_as_serv}],AutoInterval:["$input",function(i){return!i.interval}],Interval:["$input",function(i){return i.interval||1440}]}}}});return pattern.build({$input:input})}function dsysinitToSomovd(input){function getHour(hourOffset,minuteOffset){var output="";return 0!=hourOffset&&(hourOffset*=-1),output+=hourOffset,minuteOffset&&(output+=":"+minuteOffset),output}var pattern=T({"->":["$time","$ntp","time","servers"],$input:":external",$time:["$input",function(i){return i.Device.System.Time}],$ntp:["$input",function(i){return i.Device.Services.NTP}],time:{"->":!0,$time:["$root",function(r){return r.$time}],tm_mday:["$time",function(t){return t.Day}],tm_min:["$time",function(t){
return t.Minute}],tm_hour:["$time",function(t){return t.Hour}],tm_mon:["$time",function(t){return t.Month}],tm_year:["$time",function(t){return t.Year}]},enable:["$ntp",function(n){return n.Enable}],hour:["$ntp",function(n){return getHour(n.TimeZoneHourOffset,n.TimeZoneMinuteOffset)}],servers:{"->":!0,$ntp:["$root",function(r){return r.$ntp}],"{$value,$i}":["$ntp",function(n){return n.Servers}],$return:["$value",function(v){return v?v.Server:{}}]},dst:["$ntp",function(n){return n.DST}],dst_hour:["$ntp",function(n){return void 0!=n.DSTTimeZoneHourOffset?getHour(n.DSTTimeZoneHourOffset,n.DSTTimeZoneMinuteOffset):getHour(n.TimeZoneHourOffset,n.TimeZoneMinuteOffset)}],dst_start:["$ntp",function(n){return n.DSTStart}],dst_end:["$ntp",function(n){return n.DSTEnd}],use_dhcp:["$ntp",function(n){return n.DHCPServers}],run_as_serv:["$ntp",function(n){return n.NTPServer}],interval:["$ntp",function(n){return n.AutoInterval?0:n.Interval}]});return pattern.build({$input:input})}var T=(__webpack_require__(4),__webpack_require__(35).T);module.exports={somovdToDsysinit:somovdToDsysinit,dsysinitToSomovd:dsysinitToSomovd}},function(module,exports,__webpack_require__){"use strict";module.exports={converterSyslog:__webpack_require__(274),converterUsbInfo:__webpack_require__(275)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(input,hasUSB){function getDestination(){return buffKey&&servKey&&dst[buffKey].Enable&&dst[servKey].Enable?"Both":servKey&&dst[servKey].Enable?"Remote":"Local"}function getLevel(){return levels.indexOf(dst[buffKey].Level)}var dst=input.Device.Services.Syslog.Destination,buffKey=funcs.newConfig.findKey(dst,function(o){return"buffer"==o.Type}),servKey=funcs.newConfig.findKey(dst,function(o){return"server"==o.Type}),fileKey=funcs.newConfig.findKey(dst,function(o){return"file"==o.Type}),result={__buffKey:buffKey,__servKey:servKey,__fileKey:fileKey,Enable:dst[buffKey].Enable||servKey&&dst[servKey].Enable,Destination:getDestination(),Level:getLevel(),Server:servKey?dst[servKey].ServerAddress:"",Port:servKey?dst[servKey].ServerPort:514};if(hasUSB)if(fileKey){var path=/\/mnt\/(.*)\/(.*)$/.exec(dst[fileKey].Filepath);result.Log2USB={Enable:dst[fileKey].Enable,RotateNumber:dst[fileKey].Logrotate.RotateLimit,RotateSize:dst[fileKey].Logrotate.SizeLimit,Directory:path?"/"+path[1]:"",File:path?path[2]:"",InvalidPath:!1}}else result.Log2USB={Enable:!1,RotateNumber:1,RotateSize:0,Directory:"",File:"log",InvalidPath:!1};return result}function nativeToDsysinit(input){var destination={},hasLocal="Local"==input.Destination||"Both"==input.Destination,hasRemote="Remote"==input.Destination||"Both"==input.Destination;return destination[input.__buffKey]={Type:"buffer",Enable:input.Enable&&hasLocal,Level:levels[input.Level]},(input.__servKey||hasRemote)&&(destination[input.__servKey||"new_remote"]={Type:"server",Enable:input.Enable&&hasRemote,Level:levels[input.Level],ServerAddress:input.Server,ServerPort:input.Port}),(input.__fileKey||input.Log2USB&&input.Log2USB.Enable)&&(destination[input.__fileKey||"new_file"]={Type:"file",Enable:input.Enable&&input.Log2USB.Enable,Level:levels[input.Level],Filepath:"/mnt"+input.Log2USB.Directory+"/"+input.Log2USB.File,Logrotate:{RotateLimit:input.Log2USB.RotateNumber,SizeLimit:input.Log2USB.RotateSize}}),{Device:{Services:{Syslog:{Destination:destination}}}}}function attrsToNative(input){function getLevels(levels){for(var result=[],i=0;i<levels["enum"].length;i++)result.push(i);return result}function getDestination(types){var result=[];return types["enum"].includes("console")&&result.push("Local"),types["enum"].includes("server")&&result.push("Remote"),2==result.length&&result.push("Both"),result}var dst=input.Device.Services.Syslog.Destination["#template"];return{Levels:getLevels(dst.Level),Destination:getDestination(dst.Type)}}var funcs=__webpack_require__(5),levels=["emerg","alert","crit","err","warning","notice","info","debug"];module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit,attrsToNative:attrsToNative}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(input){var pattern=T({"->":!0,$input:":external","?":["$usb",function(u){return!!u}],"{$usb, __id}":["$input",function(i){return funcs.newConfig.normalize(i.Device.USB.Storage)}],Filesystem:["$usb",function(u){return u.Filesystem?u.Filesystem:"UNKNOWN"}],Device:["$usb",function(u){return u.Vendor+" "+u.Model}],Disable:["$usb",function(u){return u.Disable}],Mountpoint:["$usb",function(u){return u.Mountpoint.replace("/mnt/","")}],Total:["$usb",function(u){return _.isUndefined(u.Space)?"-":funcs.lookSize(1024*u.Space.Total*1024).toString()}],Free:["$usb",function(u){return _.isUndefined(u.Space)?"-":funcs.lookSize(1024*u.Space.Free*1024).toString()}]});return pattern.build({$input:input})}var _=__webpack_require__(4),T=__webpack_require__(35).T,funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(277),converter:__webpack_require__(278)}},function(module,exports,__webpack_require__){"use strict";function StatsDHCP(config){function getData(){return config?config:{}}function getLeaseExpiresTime(elem){return elem.lease?funcs.lookTime(elem.lease):"-"}if(!(this instanceof StatsDHCP))return new StatsDHCP(config);var config=funcs.deepClone(config);return{getData:getData,getLeaseExpiresTime:getLeaseExpiresTime}}var funcs=(__webpack_require__(4),__webpack_require__(5));module.exports=StatsDHCP},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getClients(serv,data){if(serv){var cpeStats="Disabled"!=serv.Status?funcs.newConfig.normalize(funcs.fetchBranch(data,paths.stats)):{},clients=[],id=0;for(var _statsInst in cpeStats){var clientObj=cpeStats[_statsInst].Client;for(var _clientInst in clientObj){var cl=clientObj[_clientInst];cl&&"max_instance"!==_clientInst&&(cl.id=id++,clients.push(cl))}}return _.filter(clients,function(cl){return cl.IPAddress&&""!=cl.IPAddress&&cl.MACAddress&&""!=cl.MACAddress})}}var pattern=T({"->":!0,$data:":external","{$servers}":["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.dhcpServer))}],"{$dhcp}":["$servers",function(s){return s}],"?":["$clients",function(c){return!!c}],":":["$clients",function(c){return c?c.id:null}],"{$clients}":["$dhcp","$data",function(s,d){return getClients(s,d)}],hostname:["$clients*",function(c){return c.Hostname}],ip:["$clients*",function(c){return c.IPAddress}],MACAddress:["$clients*",function(c){return c.MACAddress}],lease:["$clients*",function(c){return c.LeaseTimeout}]});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths=__webpack_require__(279).paths;module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports){"use strict";module.exports={paths:{dhcpServer:"Device.Network.Server.DHCP.",stats:"Device.Statistics.DHCPServer."}}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(282),converter:__webpack_require__(283)}},function(module,exports,__webpack_require__){"use strict";function PortSettings(config){function getData(){return config?sortData():{}}function getGlobalData(){return config}function sortData(){if(!config.order)return config.ports;var sortData=[];return _.each(config.order,function(elem){sortData.push(_.findWhere(config.ports,{__id:elem}))}),sortData}function getAdvertisementKeys(advertisement){if(advertisement){var result=Object.keys(advertisement);return result}return{}}function prepareData(port,speed,range){var result={};return result="auto"!==speed?{__id:port.__id,__range:range,enable:port.enable,name:port.name,autonegotiation:!1,mdix:port.mdix,speed:speed,maxReceiveFrameSize:port.maxReceiveFrameSize,preferenceMode:port.preferenceMode}:{__id:port.__id,__range:range,enable:port.enable,name:port.name,autonegotiation:!0,advertisement:port.advertisement,pause:port.pause,mdix:port.mdix,maxReceiveFrameSize:port.maxReceiveFrameSize,preferenceMode:port.preferenceMode}}if(!(this instanceof PortSettings))return new PortSettings(config);var config=funcs.deepClone(config);return{getData:getData,getGlobalData:getGlobalData,getAdvertisementKeys:getAdvertisementKeys,prepareData:prepareData}}var _=__webpack_require__(4),funcs=(__webpack_require__(3),__webpack_require__(32),__webpack_require__(5));module.exports=PortSettings},function(module,exports,__webpack_require__){"use strict";function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function(){};return{s:F,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function(){it=it.call(o)},n:function(){var step=it.next();return normalCompletion=step.done,step},e:function(_e2){didErr=!0,err=_e2},f:function(){try{normalCompletion||null==it["return"]||it["return"]()}finally{if(didErr)throw err}}}}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);len>i;i++)arr2[i]=arr[i];return arr2}!function(){function cpeToNative(data,ignoreStat){function getOrder(){var order=funcs.fetchBranch(data,constants.ports);return order.order}function getAdvertisement(port,portStat){var data=port.Advertisement,advertisement={},input=funcs.newConfig.normalize(data),names=Object.keys(data);return"Fiber"==portStat.Media?(advertisement["100M-Full"]=input["A100M-Full"],advertisement["1000M-Full"]=input["A1000M-Full"]):"10GBase-X"==port.Standard?(advertisement["1000M-Full"]=input["A1000M-Full"],advertisement["10000M-Full"]=input["A10000M-Full"]):_.each(names,function(elem){var inx=elem.slice(1);advertisement[inx]=input[elem]}),advertisement}function getAvailSpeed(port,portStat){return"Fiber"==portStat.Media?["100M-Full","1000M-Full"]:"10GBase-X"==port.Standard?["1000M-Full","10000M-Full"]:"1000BASE-T"==port.Standard?autoconf.BR2_PACKAGE_ANWEB_SWITCH?["1000M-Full","100M-Full","100M-Half","10M-Full","10M-Half"]:["100M-Full","100M-Half","10M-Full","10M-Half"]:void 0}function getPreferenceMode(port,portStat){return"1000BASE-T"==port.Standard&&"Fiber"!=portStat.Media?port.PreferenceMode:void 0}function getStats(portsStat,id){var portLink=constants.ports+id+".",curPort=_.find(portsStat,{CrossLink:portLink});return curPort?curPort:{}}var pattern=T({"->":["$data","maxReceiveFrameSize","ports"],$data:":external",order:getOrder(),maxReceiveFrameSize:["$data",function(o){return funcs.fetchBranch(o,constants.frameSize)||void 0}],ports:{"->":!0,$portsStat:["$parent",function(p){return funcs.newConfig.normalize(funcs.fetchBranch(p.$data,constants.stats))}],"{$port, __id}":["$parent",function(p){return funcs.newConfig.normalize(funcs.fetchBranch(p.$data,constants.ports))}],$stat:["$portsStat","__id",function(ps,id){return getStats(ps,id)}],enable:["$port",function(p){return p.Enable}],name:["$port",function(p){return p.Alias}],alias:["$port",function(p){return p.Alias}],status:["$port*",function(p){return"Enabled"==p.Status?"Up":p.Status}],autonegotiation:["$stat","$port",function(s,p){return ignoreStat?0==p.Speed:s.Autonegotiation}],preferenceMode:["$port*","$stat*",function(p,s){return getPreferenceMode(p,s)}],advertisement:["$port*","$stat*",function(p,s){return p.Advertisement&&getAdvertisement(p,s)}],pause:["$port*",function(p){return p.FlowControl}],mdix:["$port*","$stat*",function(p,s){return"10GBase-X"!=p.Standard&&"Fiber"!=s.Media?p.MDIX:void 0}],speedAvail:["$port*","$stat*",function(p,s){return getAvailSpeed(p,s)}],speed:["$stat*","$port",function(s,p){return ignoreStat?getSpeed(p.Speed,p.Duplex):getSpeed(s.Speed,s.Duplex)}],flowControl:["$stat*","$port",function(s,p){return ignoreStat?p.FlowControl?"Enabled":"Disabled":_.size(s)?s.FlowControl:void 0}],maxReceiveFrameSize:["$port*",function(p){return p.MaxReceiveFrameSize}]}});return pattern.build({$data:data})}function getSpeed(speed,duplex){return speed+"M-"+(duplex?"Full":"Half")}function attrs(attrs){var pattern=T({"->":["$data","ports"],$attrs:":external",speedList:["$attrs*",function(a){return getSpeedList(a)}]});return pattern.build({$attrs:attrs})}function getSpeedList(attrs){var speeds=funcs.fetchBranch(attrs,"Device.Switch.Ports.#template.Speed."),result=[];return _.each(speeds["enum"],function(speed){0!=speed&&(1e3>speed&&result.push(getSpeed(speed,!1)),result.push(getSpeed(speed,!0)))}),result=result.reverse()}function nativeToCpe(data){function getPort(data){function getAdvertisement(data){var advertisement={},names=Object.keys(data).reverse();return _.each(names,function(elem){var inx="A"+elem;advertisement[inx]=data[elem]}),advertisement}function getSpeed(speed){return Number(speed.replace(/\D+/g,""))}function getDuplex(speed){var start=speed.indexOf("-"),duplex=speed.slice(start+1);return"Full"==duplex||"Half"!=duplex&&void 0}var result={},diff={Enable:data.enable,MDIX:data.mdix,MaxReceiveFrameSize:data.maxReceiveFrameSize||void 0,PreferenceMode:data.preferenceMode};if(_.isUndefined(data.pause)||(diff.FlowControl=data.pause),data.advertisement&&(diff.Advertisement=getAdvertisement(data.advertisement)),data.autonegotiation?diff.Speed=0:data.speed&&(diff.Speed=getSpeed(data.speed),diff.Duplex=getDuplex(data.speed)),data.__id)result[data.__id]=diff;else{var _step,_iterator=_createForOfIteratorHelper(data.__range);try{for(_iterator.s();!(_step=_iterator.n()).done;){var port=_step.value;result[port.id]=diff}}catch(err){_iterator.e(err)}finally{_iterator.f()}}return result}var result={Device:{Switch:{Ports:getPort(data)}}};return result}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),constants={frameSize:"Device.Switch.Switches.1.MaxReceiveFrameSize",ports:"Device.Switch.Ports.",stats:"Device.Statistics.Port."};module.exports={nativeToCpe:nativeToCpe,cpeToNative:cpeToNative,attrs:attrs}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(285)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getIface(portLink,ifaceLink){var link;if(~portLink.indexOf("WiFi"))return"WLAN";link=portLink;var port=""!=link?funcs.fetchBranch(data,link):void 0,iface=""!=ifaceLink?funcs.fetchBranch(data,ifaceLink):void 0,name="",name=port&&port.Alias?port.Alias:iface?iface.Name||iface.Ifname:"-";return name=/LAN/.test(name)?name.replace(/\d/g,""):port?port.Upstream?"WAN":"LAN":name}function getClients(data){var clients=funcs.newConfig.normalize(funcs.fetchBranch(data,path.clientsPath));return clients=_.filter(clients,function(e){return""!=e.IPAddress&&"incomplete"!=e.Flags&&"failed"!=e.Flags&&""!=e.Port})}function getUpstream(portLink){var port=""!=portLink?funcs.fetchBranch(data,portLink):void 0;return!(!port||!_.has(port,"Upstream"))&&port.Upstream}var pattern=T({"->":!0,$data:":external","?":["$clients",function(c){return!!c}],"{$clients}":["$data",function(d){return getClients(d)}],flags:["$clients",function(c){return c.Flags}],ip:["$clients",function(c){return c.IPAddress}],mac:["$clients",function(c){return c.MACAddress}],name:["$clients",function(c){return getIface(c.Port,c.Interface)}],hostname:["$clients",function(c){return c.Hostname}],upstream:["$clients*",function(c){return getUpstream(c.Port)}]});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),path=__webpack_require__(286);module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports){"use strict";module.exports={clientsPath:"Device.Statistics.Neighbours.",routes:"Device.Routing.IPv4.Routes."}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(290),converter:__webpack_require__(291)}},function(module,exports,__webpack_require__){"use strict";function DDNS(config){function getDdns(){return config&&config.DDNS?config.DDNS:{}}function getIfaces(){return config&&config.Ifaces?config.Ifaces:{}}function getServices(){return config&&config.Services?config.Services:{}}function getConfiguration(){return config?_.omit(config,["DDNS","Services"]):{}}function getAvailIfaces(currentIface){function isWan(iface){return iface.IsWan}function isAvail(iface){return currentIface&&iface.Iface===currentIface||!~getBusyIfaces().indexOf(iface.Iface)}function getBusyIfaces(){return config.DDNS.map(function(iface){return iface.Iface})}return config.Ifaces.filter(isWan).filter(isAvail)}function getRule(index){function getDefaultTemplate(){return{System:"",Hostname:config.MultiHostname?[{Name:"",__id:0}]:"",Service:"",Period:"",Username:"",Iface:"",Password:""}}var result;return result=_.isUndefined(index)?getDefaultTemplate():config.DDNS[index],_.isUndefined(result)?getDefaultTemplate():result}function getCurrentService(service){var currentService=_.findWhere(config.Services,{Service:service});return currentService?currentService:(currentService=_.findWhere(config.Services,{Name:service}),currentService?currentService:config.Services[0])}function isUniqueName(host,ddns){var checkExternal=_.some(config.DDNS,function(elem){return elem.Instance!=ddns.Instance?_.some(elem.Hostname,function(el){return host.Name==el.Name||null}):null}),checkInside=_.some(ddns.Hostname,function(elem){return!!(host.Name&&elem.__id<host.__id&&elem.Name==host.Name)||null});return!(!checkInside&&!checkExternal)||null}function uniqueRule(ddns,pos){return!_.some(config.DDNS,function(elem){function checkHostname(ddns,rule){return _.every(ddns,function(elem){return _.findWhere(rule,{Name:elem.Name})})}return pos!=elem.Instance&&ddns.Service==elem.Service&&(ddns.Username==elem.Username||ddns.Hostname.length==elem.Hostname.length&&checkHostname(ddns.Hostname,elem.Hostname))})}if(!(this instanceof DDNS))return new DDNS(config);var config=funcs.deepClone(config);return{getDdns:getDdns,getIfaces:getIfaces,getAvailIfaces:getAvailIfaces,getRule:getRule,getServices:getServices,getCurrentService:getCurrentService,getConfiguration:getConfiguration,uniqueRule:uniqueRule,isUniqueName:isUniqueName}}var _=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=DDNS},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data){function getService(services,provider){var service=_.find(services,{Custom:provider.Custom,Name:provider.Name,Server:provider.Server,Path:provider.Path});return service?service:{Name:"ddns_custom_prov",Link:provider.Name,Server:provider.Server,Path:provider.Path}}function getServices(data){var customs=data.custom||[],services=funcs.newConfig.normalize(data.Device.Services.DDNS.ProvInfo);services=_.map(services,function(elem,key){return elem.__id=key,elem});var result=customs.concat(services);result=_.sortBy(result,"Name");var customProv={Custom:!0,Path:"",Name:"ddns_custom_prov",Server:""};return result.push(customProv),result}function getSupportedIfaceTypes(data,mode){var types=[];return"Firewall"!=mode?types.push({Name:"wan_group",Value:"Group"}):types.push({Name:"iface",Value:"Interface"},{Name:"wanConnecting",Value:"Connection"},{Name:"wan_group",Value:"Group"}),types}function getExtIfaces(data,mode){function getConnections(config){var connList=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.conn)),groupList=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.wanGroup)),usbList=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.usbConn)),result=[],supportedTypes=["DHCP","DHCPv6","PPTP","L2TP","PPPoE","Static","Staticv6"],links=[],_loop=function(conn){if(supportedTypes.find(function(type){return type==conn}))for(var _inx in funcs.newConfig.normalize(connList[conn]))links.push(paths.conn+conn+"."+_inx+".")};for(var conn in connList)_loop(conn);for(var inx in usbList)links.push(paths.usbConn+inx+".");return Object.keys(groupList).forEach(function(inx){var groupLinks=[paths.wanGroup+inx+".WAN.",paths.wanGroup+inx+".WANv6.",paths.wanGroup+inx+".VPN."];groupLinks.forEach(function(link){Object.values(funcs.newConfig.normalize(funcs.fetchBranch(config,link))).forEach(function(conn){var ifaceLink=conn.Link,iface=funcs.fetchBranch(config,ifaceLink);if(iface&&(void 0==iface.Name&&(iface=funcs.fetchBranch(config,iface.Interface)),links.find(function(supportedLink){return supportedLink==ifaceLink}))){var connection={Path:ifaceLink,Name:getIfaceName(ifaceLink,iface)};result.some(function(conn){return conn.Path==connection.Path})||result.push(connection)}})})}),result}function getIfaceName(link,ifaceConfig){var splitLink=link.split("."),connType=splitLink[3];return"DHCPv6"==connType&&(ifaceConfig.Interface.includes("PPPoE")||ifaceConfig.Interface.includes("L2TP"))&&isDual(ifaceConfig,connType)?ifaceConfig.Name+" (IPv6)":"PPPoE"!=connType&&"L2TP"!=connType||!isDual(ifaceConfig,connType)?ifaceConfig.Name:ifaceConfig.Name+" (IPv4)"}function isDual(conn,connType){if("DHCPv6"==connType){var iface=conn.Interface,flags=funcs.fetchBranch(data,funcs.fetchBranch(data,iface).PPPConfiguration);if(flags&&"Dual"==flags.IPStack)return!0}if("PPPoE"==connType||"L2TP"==connType){var _flags=funcs.fetchBranch(data,conn.PPPConfiguration);if(_flags&&"Dual"==_flags.IPStack)return!0}return!1}function getWanGroups(data){var output=[],groups=funcs.fetchBranch(data,paths.wanGroup);return groups=funcs.newConfig.normalize(groups),_.each(groups,function(groupList,type){var path=paths.wanGroup+type+".";output.push({Path:path,Name:type,CurrentWAN:groupList.CurrentWAN})}),output}var result={};return result.Groups=getWanGroups(data),result.Connections=getConnections(data),result}function getExtIfaceType(iface,types){if(iface)for(var i=0;i<types.length;++i)if(~iface.indexOf(types[i].Value))return types[i].Value;return types[0].Value}var pattern=T({"->":["SupportedIfaceTypes","Instances","Services","DDNS","Ifaces","ExtIfaces"],$data:":external",MultiDdns:!0,MultiHostname:!0,$devinfo:["$data",function(d){return funcs.fetchBranch(d,paths.deviceInfo)}],DeviceMode:["$devinfo",function(di){return di?di.DeviceMode:""}],NeedChooseIface:!0,SupportedIfaceTypes:["$data","DeviceMode",function(d,mode){return getSupportedIfaceTypes(d,mode)}],ExtIfaces:{"->":["$extIfaces","Interface","Connection","Group"],$extIfaces:["$root",function(r){return getExtIfaces(r.$data,r.DeviceMode)}],Connection:{"->":!0,"{$iface}":["$parent",function(p){return p.$extIfaces?p.$extIfaces.Connections:void 0}],Name:["$iface*",function(i){return i.Name}],Value:["$iface*",function(i){return i.Path}]},Group:{"->":!0,"{$iface}":["$parent",function(p){return p.$extIfaces?p.$extIfaces.Groups:void 0}],Name:["$iface*",function(i){return i.Name}],Value:["$iface*",function(i){return i.Path}],CurrentWAN:["$iface*",function(i){return i.CurrentWAN}]}},ExtSelectedIface:{Group:"",Connection:""},Services:{"->":!0,"{$services, $key}":["$root",function(r){return getServices(r.$data)}],Name:["$services*",function(s){return s.Name}],Service:["$services*",function(s){return s.Domain}],Link:["$services*",function(s){return"ddns_custom_rule"!=s.Name?s.Name:""}],Custom:["$services*",function(s){return!!s.Custom}],Path:["$services*",function(s){return s.Custom?s.Path:""}],Server:["$services*",function(s){return s.Custom?s.Server:""}]},DDNS:{"->":["$provider","Hostname","ExtIfaceType","ExternalInterface"],"?":["$ddns",function(d){return!!d}],"{$ddns, $key}":["$root",function(r){return funcs.newConfig.normalize(r.$data.Device.Services.DDNS.Instances)}],"{$providers}":["$ddns",function(d){return funcs.newConfig.normalize(d.Providers)}],$services:["$parent",function(p){return p.Services}],$service:["$services","$providers*",function(s,p){return getService(s,p)}],$provider:["$providers*",function(p){return p}],$supportTypes:["$root",function(r){return r.SupportedIfaceTypes}],Service:["$service*",function(s){return s.Name}],Name:["$service*",function(s){return"ddns_custom_prov"==s.Name?s.Link:void 0}],Server:["$service*",function(s){return"ddns_custom_prov"==s.Name?s.Server:void 0}],Path:["$service*",function(s){return"ddns_custom_prov"==s.Name?s.Path:void 0}],Hostname:{"->":!0,"{$names, __id}":["$parent*",function(p){return p.$provider?funcs.newConfig.normalize(p.$provider.Hostname):{}}],Name:["$names*",function(n){return n.Name}]},Password:["$providers*",function(p){return p.Password}],Username:["$providers*",function(p){return p.Username}],Instance:["$key",function(k){return k}],Period:["$ddns",function(d){return parseInt(d.Period/60)}],ExtIfaceType:["$ddns","$supportTypes",function(ddns,ifaceTypes){return getExtIfaceType(ddns.ExternalInterface,ifaceTypes)}],ExternalInterface:{"->":!0,Type:["$parent",function(p){return p.ExtIfaceType}],Iface:["$parent",function(p){return p.$ddns.ExternalInterface}]},Enable:["$ddns*",function(d){return d.Enable}],Status:["$ddns*",function(d){return d.Status}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({"->":["$rule","$key","Device"],$data:":external",$rule:["$data",function(d){return d}],$key:["$data",function(d){return _.isUndefined(d.Instance)?"+1":d.Instance}],Device:{Services:{DDNS:{Instances:{"->":["$rule","Providers"],$rule:["$root",function(r){return r.$rule}],$key:["$root",function(r){return r.$key}],":":["$key",function(k){return k}],Enable:["$rule*",function(r){return r.Enable}],Period:["$rule*",function(r){return 60*r.Period}],ExternalInterface:["$rule*",function(r){return _.isUndefined(r.ExternalInterface)?paths.wanGroup+"1.":r.ExternalInterface.Iface}],Providers:{"->":["$rule","Hostname"],$rule:["$root",function(r){return r.$rule}],$key:["$root",function(r){return _.isUndefined(r.$data.Instance)?"+2":"1"}],":":["$key",function(k){return k}],Hostname:{"->":!0,"{$names, $id}":["$parent",function(p){return p.$rule.Hostname}],":":["$names*","$id*",function(n,i){return _.isUndefined(n.__id)?"+"+i:n.__id}],Name:["$names*",function(n){return n.Name}]},Password:["$rule",function(r){return r.Password}],Username:["$rule",function(r){return r.Username}],Name:["$rule",function(r){return r.Link}],Custom:["$rule",function(r){return r.Custom}],Path:["$rule",function(r){return r.Path}],Server:["$rule",function(r){return r.Server}]}}}}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5);__webpack_require__(292),module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit};var paths={ddnsInstance:"Device.Services.DDNS.Instances.",provInfo:"Device.Services.DDNS.ProvInfo.",deviceInfo:"Device.DeviceInfo.",ifaces:"Device.Network.Interface.",conn:"Device.Network.Connection.",usbConn:"Device.USB.Connection.",wanGroup:"Device.Network.Group."}}()},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(input){function getIfaces(config){var ifaces=funcs.fetchBranch(config,paths["interface"]),output=[];for(var type in ifaces){var _input=funcs.newConfig.normalize(ifaces[type]);for(var inst in _input)output.push({inst:inst,path:"".concat(paths["interface"]).concat(type,".").concat(inst,"."),data:_input[inst],type:type})}return output}function getName(iface){if(!_.isEmpty(iface.Name))return iface.Name;if(_.has(iface,"LowerLayer")){var vlanIface=funcs.fetchBranch(input.config,iface.LowerLayer);return vlanIface&&!_.isEmpty(vlanIface.Name)?vlanIface.Name:iface.Ifname}return iface.Ifname}function getIP(config,rule){function prepareIP(obj,type){return _.chain(obj).filter(function(e){return _.isObject(e)}).map(function(elem){var result={},arrIp=elem.IPAddress.split("/");return result.IP=arrIp[0]||"","ipv4"==type?result.Mask=arrIp[1]?funcs.ipv4.mask["long"](arrIp[1]):"":result.Prefix=arrIp[1]||"",result}).value()}function __findInstanceByLowerLayer(obj,lowerLayer){return _.find(obj,function(elem){return!!_.isObject(elem)&&elem.LowerLayer==lowerLayer})}var path=rule.path,ips=funcs.fetchBranch(config,paths.ip);if(!ips)return null;var ip=__findInstanceByLowerLayer(ips,path);return ip?{IPv4:prepareIP(ip.IPv4Address,"ipv4"),IPv6:prepareIP(ip.IPv6Address,"ipv6")}:null}var pattern=T({"->":!0,$input:":external",$config:["$input",function(i){return i.config}],"{$rule}":["$config",function(cfg){return getIfaces(cfg)}],Inst:["$rule*",function(r){return r.inst}],Path:["$rule*",function(r){return r.path}],Name:["$rule*",function(r){return getName(r.data)}],Data:["$rule*",function(r){return r.data}],IP:["$config","$rule*",function(cfg,r){return getIP(cfg,r)}],Type:["$rule*",function(r){return r.type}]});return pattern.build({$input:input})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative};var paths={ip:"Device.Network.IP.","interface":"Device.Network.Interface."}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(294),converter:__webpack_require__(295)}},function(module,exports,__webpack_require__){"use strict";function UrlFilter(config,list,workList,dsysinit){function formList(list){function listPrepare(list){return _.map(list,function(elem,index){return elem.__index=index,elem})}function getOriginal(list){for(var index=0;list[index]&&hasWWW(list[index].url);)index++;return list[index]?list.splice(index,1)[0]:list.splice(0,1)[0]}function getDub(list,originalURL){if(!originalURL)return{};var index=_.findIndex(list,function(elem){return elem.url=="www."+originalURL});return-1!=index?list.splice(index,1)[0]:{}}var result=[];if(list=listPrepare(list),list.length)if(void 0!=list[0].match_mode)result=angular.copy(list);else for(;list.length;){var obj={};obj.original=getOriginal(list),obj.dub=getDub(list,obj.original.url),result.push(obj)}return result}function getConfig(){return config}function getList(){return workList.length&&void 0!=workList[0].match_mode?workList:_.map(workList,function(elem){return elem.original})}function getClientsList(){var clientsList=[];for(var key in config.clients_list)clientsList.push(config.clients_list[key]);return clientsList}function getFilterTypes(){return funcs.newConfig.getOptionsForSelectFromEnumAttrs(dsysinit.attrs,"Device.Services.URLFilter.","FilterType")}function getGroupsList(){var ifaceHelper=new iface(dsysinit.config),retArr=ifaceHelper.getIfacesForSelect();return retArr}function updateClientsList(list){config.clients_list={},_.each(list,function(elem,inx){config.clients_list[inx+1]=elem})}function updateAddrsList(addrList,inx){list=[],_.each(addrList,function(elem,inx){elem.url=elem.url.toLowerCase(),list[inx]=elem}),autoconf.BR2_PACKAGE_ANWEB_RLX_819X_DNS_FILTER||autoconf.BR2_PACKAGE_ANWEB_DNS_FILTER?workList=funcs.deepClone(addrList):_.each(addrList,function(elem,inx){workList[inx]||(workList[inx]={}),workList[inx].original=getOriginal(elem),workList[inx].dub=getDub(elem)}),list=funcs.deepClone(addrList)}function addRule(rule){setRule(rule)}function setRule(rule,inx){normalizeRule(rule);var obj={original:getOriginal(rule),dub:getDub(rule)};if(_.isUndefined(inx))workList.push(obj);else{var curRule=workList[inx];curRule.original=_.extend(curRule.original,obj.original),curRule.dub=_.extend(curRule.dub,obj.dub);
}}function getOriginal(rule){var obj=funcs.deepClone(rule);return _.omit(obj,"__index")}function getDub(rule){var obj=funcs.deepClone(rule);return obj.url=hasWWW(obj.url)?obj.url.replace(/^www\./,""):"www."+obj.url,_.omit(obj,"__index")}function removeRule(inx){__initWorkList[inx]?(workList[inx].original.__removed=!0,workList[inx].dub.__removed=!0):workList.splice(inx,1)}function removeRuleDNS(inx){_.each(inx,function(i){void 0!=workList[i].__index?workList[i].__removed=!0:delete workList[i]}),workList=_.compact(workList)}function normalizeRule(rule){rule.url&&(rule.url=rule.url.toLowerCase())}function wasModified(newConfig){return wasModifiedConfig(newConfig)||wasModifiedList()}function wasModifiedConfig(newConfig){return __initConfig&&!_.isEqual(newConfig,__initConfig)}function wasModifiedList(){return!!__initWorkList&&(__initWorkList.length!=workList.length||(workList.length&&void 0!=workList[0].match_mode?_.some(__initWorkList,function(elem,index){return elem.url!=workList[index].url||elem.match_mode!=workList[index].match_mode||workList[index].__removed}):workList.length&&void 0==workList[0].match_mode?_.some(__initWorkList,function(elem,index){var original=angular.fromJson(angular.toJson(workList[index].original));return!_.isEqual(elem.original,original)&&!_.isEqual(elem.dub,workList[index].dub)||!_.isEqual(elem.original,original)&&_.isEqual(elem.dub,workList[index].dub)}):void 0))}function hasWWW(url){return/^www\./.test(url)}function supportedParam(obj,param){return _.has(obj,param)}function prepareSettings(settings){function getConfigRequests(config){var data={enable:config.enable,type:config.enable?config.type:__initConfig.type};return supportedParam(config,"show_block_page")&&(data.show_block_page=config.enable?config.show_block_page:__initConfig.show_block_page),supportedParam(config,"clients_mode")&&(data.clients_mode=config.clients_mode),supportedParam(config,"clients_list")&&(data.clients_list=config.clients_list),{config:data}}function getListWriteRequests(list){var requests=[];return _.each(list,function(elem,index){var __initElem=__initList[index];__initElem&&_.isEqual(__initElem,elem)||requests.push({data:elem,pos:__initElem?index:-1})}),{list:requests}}function getListRemoveRequests(list){function getRemoveIndexes(){var indexes=_.range(0,list.length).reverse();return _.filter(indexes,function(index){return _.has(list[index],"__removed")&&__initList[index]})}var indexes=getRemoveIndexes();return _.map(indexes,function(index){var elem=funcs.deepClone(list[index]);return list.splice(index,1),__initList.splice(index,1),{data:_.omit(elem,"__removed"),pos:index}})}function formList(list,isDNSFilter){function appendRule(rule){_.has(rule,"__index")?result[rule.__index]=_.omit(rule,"__index"):newRules.push(rule)}var result=[],newRules=[];return isDNSFilter?_.each(list,function(elem){appendRule(elem)}):_.each(list,function(elem){var orig=elem.original,dub=elem.dub;_.isEmpty(orig)||appendRule(orig),_.isEmpty(dub)||appendRule(dub)}),result=_.compact(result.concat(newRules))}var write=[],remove=[],isDNSFilter=settings.isRLX819XFilter;if(wasModifiedConfig(settings.config)&&write.push(getConfigRequests(config)),wasModifiedList()){var list=formList(workList,isDNSFilter);remove=remove.concat(getListRemoveRequests(list)),write=write.concat(getListWriteRequests(list))}var result={};return write.length&&(result.write=write),remove.length&&(result.remove=remove),result}if(!(this instanceof UrlFilter))return new UrlFilter(config,workList);var config=funcs.deepClone(config),list=funcs.deepClone(list),workList=workList?funcs.deepClone(workList):formList(list),__initConfig=funcs.deepClone(config),__initList=funcs.deepClone(list),__initWorkList=funcs.deepClone(workList),urlfilter={getConfig:getConfig,getList:getList,getClientsList:getClientsList,getFilterTypes:getFilterTypes,getGroupsList:getGroupsList,updateClientsList:updateClientsList,updateAddrsList:updateAddrsList,addRule:addRule,setRule:setRule,removeRule:removeRule,removeRuleDNS:removeRuleDNS,wasModified:wasModified,prepareSettings:prepareSettings};return urlfilter}var _=__webpack_require__(4),funcs=__webpack_require__(5),iface=__webpack_require__(236);module.exports=UrlFilter},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getUrlFilter(data){var servUrl=funcs.newConfig.normalize(funcs.fetchBranch(data,"Device.Services.URLFilter."));return servUrl}function getClientsList(config){var addrs=funcs.newConfig.normalize(config.ClientList),result={};for(var i in addrs){var elem=addrs[i];""!=elem.MACAddress&&(result[i]={mac:elem.MACAddress,__id:i})}return result}function getLink(config,link){var result=link.replace(/\\\.\*/g,"*").replace(/\\\./g,".");return config.IsDNSFilter&&(result=result.replace(/\*/g,"").replace("$","").replace(/\^/,"")),result}function getLinkMatchMode(mode){switch(mode){case"Partial":return"middle";case"Full":return"full";case"StartsWith":return"begin";case"EndsWith":return"end"}}var pattern=T({"->":["$data","config","list"],$data:":external",config:{"->":["$data","$filter","list"],$data:["$parent",function(p){return p.$data}],"{$filter, $i}":["$data",function(d){return getUrlFilter(d)}],":":["$i*",function(i){return i}],__id:["$i*",function(i){return i}],enable:["$filter*",function(c){return!!c&&c.Enable}],filterType:["$filter*",function(c){return c?c.FilterType:"DNS"}],type:["$filter*",function(c){return c&&"allow"==c.HostnamePolicy?"Include":"Exclude"}],clients_mode:["$data","$filter*",function(d,c){return d.IsDNSFilter?c?"allow"==c.ClientPolicy?"White":"Black":"White":void 0}],clients_list:["$data","$filter*",function(d,c){return d.IsDNSFilter?c?getClientsList(c):{}:void 0}],wanGroup:["$data","$filter*",function(d,c){return d.isFirewallMode&&c?c.WANGroup:void 0}],list:{"->":!0,$data:["$parent",function(p){return p.$data}],$filter:["$parent",function(p){return p.$filter}],"{$links, $id}":["$filter*",function(c){return c.HostnameList?funcs.newConfig.normalize(c.HostnameList):void 0}],__id:["$id*",function(i){return i}],url:["$data","$links*",function(d,l){return getLink(d,l.HostnamePattern)}],match_mode:["$data","$links*",function(d,l){return d.IsDNSFilter?getLinkMatchMode(l.PatternMatchingType):void 0}]}}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getLink(link){return link.url.replace(/\./g,"\\.")}function getCompare(mode){switch(mode){case"end":return"EndsWith";case"begin":return"StartsWith";case"middle":return"Partial";case"full":return"Full"}}function getInstances(config){return _.filter(config,function(i){return i.list})}var pattern=T({"->":["$data","$config","$list","Device"],$data:":external",$config:["$data",function(d){return d.config}],Device:{Services:{URLFilter:{"->":["$config","$filter","ClientList","HostnameList"],$config:["$root",function(r){return r.$config}],"{$filter, $inx}":["$config",function(c){return getInstances(c)}],":":["$filter*",function(f){return f.__id||"new_filter"}],Enable:["$filter*",function(f){return f.enable}],FilterType:["$filter*",function(f){return f.filterType||"HTTP"}],HostnamePolicy:["$filter*",function(f){return"Exclude"==f.type?"block":"allow"}],WANGroup:["$config","$filter*",function(c,f){return c.isFirewallMode?f.wanGroup:"Device.Network.Group.1."}],ClientPolicy:["$filter*",function(f){return"White"==f.clients_mode?"allow":"block"}],ClientList:{"->":!0,$filter:["$parent",function(p){return p.$filter}],"{$list, $id}":["$filter*",function(f){return f.clients_list}],":":["$list*","$id*",function(l,id){return l.__id?l.__id:"new_inst_"+id}],MACAddress:["$list*",function(l){return l.mac}]},HostnameList:{"->":!0,$filter:["$parent",function(p){return p.$filter}],"{$list, $id}":["$filter*",function(f){return f.list.filter(function(e){return!e.__removed})}],":":["$list*","$id*",function(l,id){return l.__id||"new_inst_"+id}],HostnamePattern:["$list*","$id*",function(l,id){return getLink(l)}],PatternMatchingType:["$list*",function(l){return getCompare(l.match_mode)}]}}}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(297),converter:__webpack_require__(299)}},function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4),funcs=(__webpack_require__(298),__webpack_require__(5));module.exports=function(){function getDefaultRule(config,attrs){function getBiggestId(rules){var ids=_.pluck(rules,"__id");return ids.length?_.max(ids)+1:1}if(attrs){var defaultModel=funcs.newConfig.makeDefaultModel(attrs.Rules);return _.has(defaultModel,"Enable")&&(defaultModel.Enable=!0),_.has(defaultModel,"Action")&&(defaultModel.Action="ACCEPT"),defaultModel}return{Enable:!0,Action:"ACCEPT",MACAddress:"",Hostname:"",__id:getBiggestId(config.Rules)}}function changeConfig(config,opts){var workCopy=funcs.deepClone(config);if(opts=opts||{},opts.removeIndexes&&_.each(opts.removeIndexes.sort().reverse(),function(index){workCopy.Rules.splice(index,1)}),opts.editRules){var rule=opts.editRules.rule,index=opts.editRules.index;_.isUndefined(index)?workCopy.Rules.push(rule):workCopy.Rules[index]=rule}return workCopy}function accessWillLost(config){function getClientState(config){var clientMac=config.Client.MACAddress;clientMac&&(clientMac=clientMac.toUpperCase());var rule=_.find(config.Rules,function(elem){return elem.MACAddress.toUpperCase()==clientMac});return rule?{Action:rule.Action,Stat:rule.Enable}:"NONE"}if(config.Client&&!config.Client.MACAddress&&!autoconf.BR2_PACKAGE_ANWEB_DSYSINIT)return!1;if(config.Client&&autoconf.BR2_PACKAGE_ANWEB_DSYSINIT&&(!config.Client.Port||"WAN"==config.Client.Port))return!1;var baseAction=config.BaseRule.Action,client=getClientState(config);return"DROP"==baseAction&&!client.Stat||!("DROP"!=client.Action||!client.Stat)}function getUsedMacList(config,withoutIndex){return config&&config.Rules?_.chain(config.Rules).filter(function(r,i){return!!_.isUndefined(withoutIndex)||i!=withoutIndex}).map(function(rule){return{mac:rule.MACAddress}}).value():[]}function isNotUniqRule(config,curRule,curIndex){var useRules=getUsedMacList(config,curIndex);return _.some(useRules,function(rule){return rule.mac.toUpperCase()==curRule.MACAddress.toUpperCase()})}function makeSomovdRequests(changed,init){function getWriteChanges(changed,init){var rules=[];return _.each(changed,function(elem){var initRule=_.find(init,function(e){return e.id==elem.id});if(initRule){var compareRule=_.omit(elem,"__pos");_.isEqual(initRule,compareRule)||rules.push(elem)}else rules.push(elem)}),rules}function getRemoveChanges(changed,init){var rules=[];return _.each(init,function(elem,index){var changedRule=_.find(changed,function(e){return e.id==elem.id});changedRule||(elem.__pos=index,rules.push(elem))}),rules.sort(function(a,b){return b.__pos-a.__pos})}function makeWriteList(rules){return _.map(rules,function(elem){return{id:74,data:_.omit(elem,"__pos"),pos:elem.__pos}})}function makeRemoveList(rules){return rules=_.sortBy(rules,function(inx){return-rules.id}),_.map(rules,function(rule){return{id:74,data:_.omit(rule,"__pos"),pos:rule.__pos}})}var requests={},writeChanges=getWriteChanges(changed,init),removeChanges=getRemoveChanges(changed,init);return _.size(writeChanges)&&(requests.write=makeWriteList(writeChanges)),_.size(removeChanges)&&(requests.remove=makeRemoveList(removeChanges)),requests}return{getDefaultRule:getDefaultRule,changeConfig:changeConfig,accessWillLost:accessWillLost,getUsedMacList:getUsedMacList,isNotUniqRule:isNotUniqRule,makeSomovdRequests:makeSomovdRequests}}},function(module,exports){"use strict";var somovd=null;module.exports={set:function(actualModule){return somovd=actualModule},get:function(){return somovd}}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNativeConfig(input){function getBaseRule(policyv4,policyv6){var id="",idWan="",idv6="",idWanv6="",result=_.find(policyv4,function(elem,inst){return id=inst,elem.Dest==zonesPathv4.dest&&elem.Source==zonesPathv4.source});return _.find(policyv4,function(elem,inst){return idWan=inst,elem.Dest==zonesPathv4.wan&&elem.Source==zonesPathv4.source}),_.findKey(policyv6,function(elem,inst){return idv6=inst,elem.Dest==zonesPathv6.dest&&elem.Source==zonesPathv6.source}),_.findKey(policyv6,function(elem,inst){return idWanv6=inst,elem.Dest===zonesPathv6.wan&&elem.Source===zonesPathv6.source}),result?(result.__ruleIdv4=id,result.__ruleWanIdv4=idWan,result.__ruleIdv6=idv6,result.__ruleWanIdv6=idWanv6,result):{Policy:"ACCEPT"}}function getRules(firewall){var allRules={};return _.each(firewall,function(obj,type){var dest="IPv4"==type?zonesPathv4.dest:zonesPathv6.dest,source="IPv4"==type?zonesPathv4.source:zonesPathv6.source,rules=_.chain(funcs.newConfig.normalize(obj.Rules)).map(function(elem,id){elem.__ruleId=id,"IPv4"==type?elem.__ruleIdv4=id:elem.__ruleIdv6=id,elem.__sourceMAC="";var sourceAddrs=funcs.newConfig.normalize(funcs.fetchBranch(elem,"Source.Address."));for(var addrID in sourceAddrs){var sourceAddr="mac_instance"!=addrID&&sourceAddrs[addrID]||null;if(sourceAddr&&""!=sourceAddr.MACAddr){elem.__sourceMAC=sourceAddr.MACAddr;break}}return elem}).filter(function(elem){return(elem.Dest.Zone==dest||elem.Dest.Zone=="Device.Firewall.".concat(type,"."))&&elem.Source.Zone==source&&elem.__sourceMAC}).value();rules&&rules.length&&rules.forEach(function(elem){var key=elem.__sourceMAC;if(key in allRules)allRules[key]=allRules[key].concat(elem);else{var data={};data[key]=[elem],allRules=Object.assign(allRules,data)}})}),allRules}function getIds(rules,id){return _.map(rules,function(rule){return rule[id]})}var pattern=T({"->":["$config","$policy","$firewall","$client","BaseRule","Rules","Client"],$input:":external",$config:["$input",function(i){return i.config}],$firewall:["$config*",function(cfg){return funcs.newConfig.normalize(funcs.fetchBranch(cfg,firewallPath))}],$policyv4:["$config*",function(cfg){return funcs.newConfig.normalize(funcs.fetchBranch(cfg,policyPath.v4))}],$policyv6:["$config*",function(cfg){return funcs.newConfig.normalize(funcs.fetchBranch(cfg,policyPath.v6))}],$client:["$input",function(i){return i.client}],BaseRule:{"->":!0,$policyv4:["$parent",function(p){return p.$policyv4}],$policyv6:["$parent",function(p){return p.$policyv6}],$baseRule:["$policyv4*","$policyv6",function(v4,v6){return getBaseRule(v4,v6)}],__ruleIdv4:["$baseRule*",function(r){return r.__ruleIdv4}],__ruleWanIdv4:["$baseRule*",function(r){return r.__ruleWanIdv4}],__ruleIdv6:["$baseRule*",function(r){return r.__ruleIdv6}],__ruleWanIdv6:["$baseRule*",function(r){return r.__ruleWanIdv6}],Action:["$baseRule*",function(r){return r.Policy}]},Rules:{"->":!0,"{$rule, $index}":["$parent",function(p){return getRules(p.$firewall)}],__ruleId:["$rule*",function(r){return getIds(r,"__ruleId")}],__ruleIdv4:["$rule*",function(r){return getIds(r,"__ruleIdv4")}],__ruleIdv6:["$rule*",function(r){return getIds(r,"__ruleIdv6")}],Enable:["$rule*",function(r){return r[0].Enable}],Action:["$rule*",function(r){return r[0].Action}],MACAddress:["$rule*",function(r){return r[0].Source.Address[1].MACAddr}],Name:["$rule*",function(r){return r[0].Name}]},Client:{"->":!0,$client:["$parent",function(p){return p.$client}],MACAddress:["$client*",function(c){return c.mac}],Port:["$client*",function(c){return c.port}]}});return pattern.build({$input:input})}function dsysinitToNativeAttrs(input){var pattern=T({"->":["$ruleAttrs","Rules"],$input:":external",$ruleAttrs:["$input",function(i){return funcs.fetchBranch(i.attrs,rulesPath.v4+"#template.")}],Rules:{"->":!0,$ruleAttrs:["$parent",function(p){return p.$ruleAttrs}],Enable:["$ruleAttrs",function(r){return r.Enable}],Action:["$ruleAttrs",function(r){return r.Action}],MACAddress:["$ruleAttrs",function(r){return r.Source.Address["#template"].MACAddr}],Name:["$ruleAttrs",function(r){return r.Name}]}});return pattern.build({$input:input})}function nativeTodsysinitConfig(input){function getBaseRules(br,type){var objFw={Id:"v4"==type?br.__ruleIdv4?br.__ruleIdv4:"new_inst_fw_v4":br.__ruleIdv6?br.__ruleIdv6:"new_inst_fw_v6",Type:"fw"},objWan={Id:"v4"==type?br.__ruleWanIdv4?br.__ruleWanIdv4:"new_inst_wan_v4":br.__ruleWanIdv6?br.__ruleWanIdv6:"new_inst_wan_v6",Type:"wan"};return[objFw,objWan]}function getRules(rules,type){return _.filter(rules,function(e){return e.Type==type})}var pattern=T({"->":["Device"],$input:":external",Device:{Firewall:{IPv4:{Policy:{"->":!0,$baseRule:["$root",function(r){return r.$input.BaseRule}],"{$rule}":["$baseRule*",function(br){return getBaseRules(br,"v4")}],":":["$rule",function(r){return r.Id}],Dest:["$rule",function(r){return"fw"==r.Type?zonesPathv4.dest:zonesPathv4.wan}],Source:zonesPathv4.source,Policy:["$baseRule*",function(bs){return bs.Action}]},Rules:{"->":["$rule","Dest","Source","CTState"],"{$rule, $index}":["$root",function(r){return getRules(r.$input.Rules,"v4")}],":":["$rule*","$index",function(r,i){return r.__ruleId?r.__ruleId:"new_inst_"+i}],Enable:["$rule*",function(r){return r.Enable}],Action:["$rule*",function(r){return r.Action}],Name:["$rule*",function(r){return r.Name}],CTState:{"->":["?"],"?":["$parent",function(p){return!!p.$rule}],1:{Value:"NEW"},2:{Value:"ESTABLISHED"},3:{Value:"RELATED"}},Dest:{"->":!0,"?":["$parent",function(p){return!!p.$rule}],Zone:"Device.Firewall.IPv4."},Direction:"NONE",Source:{"->":["$rule","Address"],"?":["$parent",function(p){return!!p.$rule}],$rule:["$parent",function(p){return p.$rule}],Zone:zonesPathv4.source,Address:{"->":["$rule","1"],$rule:["$parent",function(p){return p.$rule}],1:{"->":!0,$rule:["$parent",function(p){return p.$rule}],MACAddr:["$rule",function(r){return r.MACAddress.toUpperCase()}]}}},Table:"Filter"}},IPv6:{Policy:{"->":!0,$baseRule:["$root",function(r){return r.$input.BaseRule}],"{$rule}":["$baseRule*",function(br){return getBaseRules(br,"v6")}],":":["$rule",function(r){return r.Id}],Dest:["$rule",function(r){return"fw"==r.Type?zonesPathv6.dest:zonesPathv6.wan}],Source:zonesPathv6.source,Policy:["$baseRule*",function(bs){return bs.Action}]},Rules:{"->":["$rule","Dest","Source","CTState"],"{$rule, $index}":["$root",function(r){return getRules(r.$input.Rules,"v6")}],":":["$rule*","$index",function(r,i){return r.__ruleId?r.__ruleId:"new_inst_"+i}],Enable:["$rule*",function(r){return r.Enable}],Action:["$rule*",function(r){return r.Action}],Name:["$rule*",function(r){return r.Name}],CTState:{"->":["?"],"?":["$parent",function(p){return!!p.$rule}],1:{Value:"NEW"},2:{Value:"ESTABLISHED"},3:{Value:"RELATED"}},Dest:{"->":!0,"?":["$parent",function(p){return!!p.$rule}],Zone:"Device.Firewall.IPv6."},Direction:"NONE",Source:{"->":["$rule","Address"],"?":["$parent",function(p){return!!p.$rule}],$rule:["$parent",function(p){return p.$rule}],Zone:zonesPathv6.source,Address:{"->":["$rule","1"],$rule:["$parent",function(p){return p.$rule}],1:{"->":!0,$rule:["$parent",function(p){return p.$rule}],MACAddr:["$rule",function(r){return r.MACAddress.toUpperCase()}]}}},Table:"Filter"}}}}});return pattern.build({$input:input})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),firewallPath="Device.Firewall.",policyPath={v4:"Device.Firewall.IPv4.Policy.",v6:"Device.Firewall.IPv6.Policy."},rulesPath={v4:"Device.Firewall.IPv4.Rules.",v6:"Device.Firewall.IPv6.Rules."},zonesPathv4={source:"Device.Firewall.IPv4.Zones.3.",dest:"Device.Firewall.IPv4.Zones.1.",wan:"Device.Firewall.IPv4.Zones.2."},zonesPathv6={source:"Device.Firewall.IPv6.Zones.3.",dest:"Device.Firewall.IPv6.Zones.1.",wan:"Device.Firewall.IPv6.Zones.2."};module.exports={dsysinitToNative:{config:dsysinitToNativeConfig,attrs:dsysinitToNativeAttrs},nativeToDsysinit:{config:nativeTodsysinitConfig}}}()},function(module,exports,__webpack_require__){"use strict";module.exports={ipfilterConverter:__webpack_require__(301),lanConverter:__webpack_require__(302),Helper:__webpack_require__(308)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function setDirections(config){var firewall=config.Device.Firewall;zonesPath={v4:{source:{lan:"Device.Firewall.IPv4.Zones.3.",wan:"Device.Firewall.IPv4.Zones.2."},dest:{lan:"Device.Firewall.IPv4.Zones.3.",wan:"Device.Firewall.IPv4.Zones.2.",fw:"Device.Firewall.IPv4.Zones.1."}},v6:{source:{lan:"Device.Firewall.IPv6.Zones.3.",wan:"Device.Firewall.IPv6.Zones.2."},dest:{lan:"Device.Firewall.IPv6.Zones.3.",wan:"Device.Firewall.IPv6.Zones.2.",fw:"Device.Firewall.IPv6.Zones.1."}}},_.each(firewall,function(fw,type){function addZonesPath(firewallZones,type){function addZone(zoneName,zone){if(zoneName&&zone){var temp="Device.Firewall."+type+".Zones."+zone+".";zonesPath[ipVersion].source[zoneName]||(zonesPath[ipVersion].source[zoneName]=temp),zonesPath[ipVersion].dest[zoneName]||(zonesPath[ipVersion].dest[zoneName]=temp)}}var newZones={},ipVersion="IPv4"==type?"v4":"v6";_.each(firewallZones,function(zone,key){var first=!0;_.each(zone.Interfaces,function(iface){if(iface.Path){var arr=iface.Path.split("."),inx=arr[arr.length-3].toLowerCase();"openvpn"==inx&&(inx=zone.Name),/GRE|IPsec|VPN\.PPTP|VPN\.L2TP|Connection\.OpenVPN|Server\.VPN\.OpenVPN|IPIP/.test(iface.Path)&&first&&(newZones[inx]=key,first=!1)}})}),_.each(newZones,function(item,key){addZone(key,item)})}var firewallZones=funcs.newConfig.normalize(fw.Zones);addZonesPath(firewallZones,type)})}function findIPFilterRule(firewall){var result=[];return _.each(firewall,function(fw,type){function checkZones(rule){var sourceZone=_.find(zones.source,function(zone){return zone==rule.Source.Zone}),destZone=_.find(zones.dest,function(zone){return zone==rule.Dest.Zone});return sourceZone&&destZone}var rules=funcs.newConfig.normalize(fw.Rules);if(0!=Object.keys(rules).length){_.map(rules,function(rule,key){return rule.__index=key,rule});var zones="IPv4"==type?zonesPath.v4:zonesPath.v6,ipRule=_.filter(rules,function(r){return!(_.isUndefined(r.Source)||_.isUndefined(r.Dest)||""!=r.Origin||"Custom"!=r.Pattern||_.findKey(r.Source.Address,function(obj){return obj.MACAddr})||"DROP"!=r.Action&&"ACCEPT"!=r.Action||!checkZones(r))});_.map(ipRule,function(rule,key){return rule.id=key+1,rule.IPv6="IPv6"==type,rule}),ipRule.length&&(result=result.concat(ipRule))}}),result}function getAction(action){return"DROP"==action?1:"ACCEPT"==action?0:void 0}function getProtocol(proto){switch(proto=_.values(funcs.newConfig.normalize(proto)),proto=proto.length?proto[0].Value:""){case"":return 4;case"tcp":return 1;case"udp":return 2;case"icmp":case"ipv6-icmp":return 3;default:return 1}}function getProtocolInst(proto){var keys=Object.keys(funcs.newConfig.normalize(proto));return keys.length?keys[0]:void 0}function getAddress(addrs){addrs=_.values(funcs.newConfig.normalize(addrs));var addr=addrs[0];if(_.isUndefined(addr))return"";var result="";switch(addr.IPStart){case"":result="";break;case"0.0.0.0":result="";break;default:result=addr.IPStart}return""!=addr.IPEnd&&"0.0.0.0"!=addr.IPEnd&&(result+="-"+addr.IPEnd),result}function getPorts(ports){if(ports=funcs.newConfig.normalize(ports),""==ports)return"";var portString=[];return _.each(ports,function(port){if(port.PortStart&&-1!=port.PortStart){var portElem=port.PortStart.toString();port.PortEnd&&-1!=port.PortEnd&&(portElem+=":"+port.PortEnd.toString()),portString.push(portElem)}}),portString.join(",")}function getDirection(isIPv6,zone,name){var zones=isIPv6?zonesPath.v6[name]:zonesPath.v4[name],zoneKey=null,defZone="source"==name?3:2;return _.find(zones,function(val,key){return val==zone?(zoneKey=key,!0):void 0}),zonesDirections[zoneKey].zone||defZone}var pattern=T({"->":["?"],$data:":external","{$iprule}":["$data",function(d){return findIPFilterRule(d.Device.Firewall)}],"?":["$iprule",function(i){return!!i}],state:["$iprule*",function(i){return i.Enable}],__index:["$iprule*",function(i){return i.__index}],action:["$iprule*",function(i){return getAction(i.Action)}],id:["$iprule*",function(i){return i.id}],name:["$iprule*",function(i){return i.Name}],weight:["$iprule*",function(ipRule){return ipRule.Weight}],ipd:["$iprule*",function(i){return getAddress(i.Dest.Address)}],ips:["$iprule*",function(i){return getAddress(i.Source.Address)}],ports:["$iprule*",function(i){return getPorts(i.Ports.Source)}],portd:["$iprule*",function(i){return getPorts(i.Ports.Dest)}],proto:["$iprule*",function(i){return getProtocol(i.Proto)}],protoInst:["$iprule*",function(i){return getProtocolInst(i.Proto)}],sourceDirection:["$iprule*",function(i){return getDirection(i.IPv6,i.Source.Zone,"source")}],destDirection:["$iprule*",function(i){return getDirection(i.IPv6,i.Dest.Zone,"dest")}],is_ipv6:["$iprule*",function(i){return i.IPv6}],is_init_ipv6:["$iprule*",function(i){return i.IPv6}],sourceDirIface:["$iprule*",function(i){return i.Source.Iface||"auto"}],destDirIface:["$iprule*",function(i){return i.Dest.Iface||"auto"}]});return setDirections(data),pattern.build({$data:data})}function attrsToNative(data){function getDirectionEnum(name,version){var directionEnum="source"==name?[2,3]:[1,2,3];return _.each(zonesDirections,function(value,key){zonesPath[version][name][key]&&-1==directionEnum.indexOf(value.zone)&&directionEnum.push(value.zone)}),directionEnum}var pattern=T({"->":["$data","is_ipv6"],$data:":external",id:{supported:!0,type:"string"},name:{supported:!0,type:"string"},state:{supported:!0,type:"boolean","default":!0},is_ipv6:{"->":!0,supported:["$root",function(r){return _.has(r.$data.Device.Firewall,"IPv6")}],type:"boolean","default":!1},action:{supported:!0,type:"number","default":0,"enum":[0,1]},proto:{supported:!0,type:"number","default":1,"enum":[1,2,3,4]},ipd:{supported:!0,type:"ipv4/ipv6","default":""},ips:{supported:!0,type:"ipv4/ipv6","default":""},portd:{supported:!0,type:"port","default":""},ports:{supported:!0,type:"port","default":""},sourceDirection:{supported:!0,type:"number","default":3,enumv4:getDirectionEnum("source","v4"),enumv6:getDirectionEnum("source","v6")},destDirection:{supported:!0,type:"number","default":2,enumv4:getDirectionEnum("dest","v4"),enumv6:getDirectionEnum("dest","v6")},sourceDirIface:{supported:!0,type:"string","default":"auto"},destDirIface:{supported:!0,type:"string","default":"auto"},weight:{supported:!0,type:"number","default":0}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getID(rule){return _.has(rule,"is_init_ipv6")&&rule.is_init_ipv6!=rule.is_ipv6?"+1000":_.isUndefined(rule.__index)?"+1000":rule.__index}function getIP(ipString,identifer){var ip=ipString.split("-");return"start"==identifer?ip[0]&&""!=ip[0]?ip[0].toLowerCase():"":"end"==identifer?ip[1]&&""!=ip[1]?ip[1].toLowerCase():"":void 0}function getProtocol(isIpv6,id,protocol,protocolInst){var proto,result={};switch(protocol){case 1:proto="tcp";break;case 2:proto="udp";break;case 3:proto=isIpv6?"ipv6-icmp":"icmp";break;case 4:return result}var icmpv6Types={1:{Value:127},2:{Value:128}},obj={Value:proto,Type:"ipv6-icmp"==proto?icmpv6Types:{}},key=id&&protocolInst?protocolInst:"+4000";return result[key]=obj,result}function getPorts(portsString,proto){if(4==proto||3==proto)return{};var portRanges=portsString.split(","),portObject={};return _.each(portRanges,function(elem,key){var ports=elem.split(":");portObject[key+1]={},portObject[key+1].PortStart=ports[0]&&""!=ports[0]?parseInt(ports[0]):-1,portObject[key+1].PortEnd=ports[1]&&""!=ports[1]?parseInt(ports[1]):-1}),portObject}function getZone(rule,name){var zoneKey="",direction="source"==name?"sourceDirection":"destDirection";_.find(zonesDirections,function(val,key){return rule[direction]==val.zone?(zoneKey=key,!0):void 0});var zone=rule.is_ipv6?zonesPath.v6[name][zoneKey]:zonesPath.v4[name][zoneKey];return zone}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Firewall:{"->":["$data","Rules"],$data:["$root",function(r){return r.$data}],":":["$data",function(d){return d.is_ipv6?"IPv6":"IPv4"}],Rules:{"->":!0,$rule:["$parent",function(r){return r.$data}],":":["$rule",function(r){return getID(r)}],Enable:["$rule",function(r){return r.state}],Name:["$rule",function(r){return r.name}],Action:["$rule",function(r){return r.action?"DROP":"ACCEPT"}],CTState:{1:{Value:"NEW"},2:{Value:"ESTABLISHED"},3:{Value:"RELATED"}},Source:{"->":["$data","Address"],$data:["$root",function(r){return r.$data}],Address:{"->":!0,$addr:["$parent",function(r){return r.$data}],":":["$addr",function(a){return a.ips?a.__index||"new_addr_source":void 0}],IPStart:["$addr",function(a){return getIP(a.ips,"start")}],IPEnd:["$addr",function(a){return getIP(a.ips,"end")}]},Zone:["$data",function(d){return getZone(d,"source")}],Iface:["$data",function(d){return"auto"!=d.sourceDirIface?d.sourceDirIface:""}]},Dest:{"->":["$data","Address"],$data:["$root",function(r){return r.$data}],Address:{"->":!0,$addr:["$parent",function(r){return r.$data}],":":["$addr",function(a){return a.ipd?a.__index||"new_addr_dest":void 0}],IPStart:["$addr",function(a){return getIP(a.ipd,"start")}],IPEnd:["$addr",function(a){return getIP(a.ipd,"end")}]},Zone:["$data",function(d){return getZone(d,"dest")}],Iface:["$data",function(d){return"auto"!=d.destDirIface?d.destDirIface:""}]},Direction:"NONE",Proto:["$rule",function(r){return getProtocol(r.is_ipv6,r.__index,r.proto,r.protoInst)}],Ports:{"->":!0,$proto:["$root",function(r){return r.$data.proto}],$portd:["$root",function(r){return r.$data.portd}],$ports:["$root",function(r){return r.$data.ports}],Dest:["$portd","$proto",function(port,proto){return getPorts(port,proto)}],Source:["$ports","$proto",function(port,proto){return getPorts(port,proto)}]},Table:"Filter",Weight:["$rule",function(rule){return rule.weight}]}}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit,attrsToNative:attrsToNative};var zonesPath,zonesDirections={fw:{zone:1},wan:{zone:2},lan:{zone:3},gre:{zone:4},ipsec:{zone:5},pptp:{zone:6},l2tp:{zone:7},openvpnClient:{zone:8},openvpnServer:{zone:9},ipip:{zone:10}}},function(module,exports,__webpack_require__){"use strict";module.exports={cpeToNative:__webpack_require__(303),nativeToCpe:__webpack_require__(306)}},function(module,exports,__webpack_require__){"use strict";module.exports={config:__webpack_require__(304),attrs:__webpack_require__(305)}},function(module,exports,__webpack_require__){"use strict";function getGateway(input,addrType,addrMode,ip){var mode=funcs.fetchBranch(input,"Device.DeviceInfo.DeviceMode");if("AccessPoint"==mode){if(!addrMode||"Static"==addrMode||ip&&"Dynamic"==addrMode&&"Static"==ip.data.AddressingType){var conn="ipv4"==addrType?"Static":"Staticv6",path="Device.Network.Connection."+conn+".1.",staticConn=funcs.fetchBranch(input,path);if(!staticConn)return;return staticConn.Gateway}if(!_.has(input.Device,"Routing"))return"";var conn="ipv4"==addrType?"DHCP":"DHCPv6",connPath="Device.Network.Connection."+conn+".1.",routePath="Device.Routing."+("ipv4"==addrType?"IPv4":"IPv6")+".Routes.",routes=funcs.fetchBranch(input,routePath);if(!_.size(routes))return"";var defRoute=_.find(routes,function(elem){var destIP="ipv4"==addrType?"0.0.0.0/0":"::/0";return elem.Destination==destIP&&elem.Origin==connPath});return defRoute?defRoute.GatewayIPAddress:""}}function getLans(input){function makeLanSections(input,version){function getIPs(input,ifaceLink,version){var rootPath="Device.Network.IP.",ips=funcs.newConfig.normalize(funcs.fetchBranch(input,rootPath)),ipInst=_.findKey(ips,function(e){return e.LowerLayer==ifaceLink});if(!ipInst)return null;var ipPrefix="ipv4"==version?"IPv4Address":"IPv6Address",ipPath=rootPath+ipInst+"."+ipPrefix+".",ipIface=funcs.fetchBranch(input,ipPath);if(!ipIface)return null;var ipList=funcs.newConfig.normalize(ipIface);return _.map(ipList,function(elem,inst){return{link:ipPath+inst+".",data:elem}})}var dhcpPath="Device.Network.Server.DHCP.",dhcp=funcs.fetchBranch(input,dhcpPath),dnsPath="Device.Network.Server.DNS.",dns=funcs.newConfig.normalize(funcs.fetchBranch(input,dnsPath)),groupPath="Device.Network.Group.",group=funcs.newConfig.normalize(funcs.fetchBranch(input,groupPath));
return _.compact(_.map(dhcp,function(elem,inst){if(_.isObject(elem)){var output=_defineProperty2["default"]({iface:{},dhcp:{}},version,{dns:{},group:{},ip:null});if(output.iface.link=elem.Interface,output.iface.data=funcs.fetchBranch(input,output.iface.link),"GUEST"!=output.iface.data.Name){var ifaceGroup=_.find(group,function(g){return g.LAN===output.iface.link});output.iface.name=ifaceGroup?ifaceGroup.Name.match("#")?ifaceGroup.Name.split("#")[0]:ifaceGroup.Name:output.iface.data.name,output.dhcp.link=dhcpPath+inst+".",output.dhcp.inst=inst,output.dhcp.data=elem;var rootPath="Device.Network.IP.",ips=funcs.newConfig.normalize(funcs.fetchBranch(input,rootPath)),ipInst=_.findKey(ips,function(e){return e.LowerLayer==output.iface.link});ipInst&&(output.dhcp.ipInst=ipInst),output[version].ip=getIPs(input,output.iface.link,version);var dnsInst=_.findKey(dns,function(e){return e.Interface==output.iface.link});dnsInst&&(output[version].dns.link=dnsPath+dnsInst+".",output[version].dns.inst=dnsInst,output[version].dns.data=dns[dnsInst]);var groupInst=_.findKey(group,function(e){return e.LAN==output.iface.link});return groupInst&&(output[version].group.link=groupPath+groupInst+".",output[version].group.inst=groupInst,output[version].group.data=group[groupInst]),output}}}))}function addLanSections(result,sections){_.each(sections,function(section){result[section.iface.link]||(result[section.iface.link]={}),result[section.iface.link]=_.extend(result[section.iface.link],section)})}var result={};return addLanSections(result,makeLanSections(input,"ipv4")),addLanSections(result,makeLanSections(input,"ipv6")),_.chain(result).values().sortBy(function(elem){return elem.iface.link}).value()}function prepareIP(ipList,devMode,connDHCP){var addrType="AccessPoint"!=devMode||_.isEmpty(connDHCP)?"Static":connDHCP.Enable?"DHCP":"Static",enabledIP=_.filter(ipList,function(e){return"Enabled"==e.data.Status||"Enabling"==e.data.Status}),staticIP=_.filter(ipList,function(e){return"DHCP"==addrType?e.data.AddressingType==addrType||"Static"==e.data.AddressingType:e.data.AddressingType==addrType});return staticIP&&staticIP.length?{data:enabledIP[0].data,link:staticIP&&staticIP.length?staticIP[0].link:""}:void 0}function getIPAddress(ip){return ip?ip.split("/")[0]:""}function getSubnetMask(ip){return ip?funcs.ipv4.mask["long"](ip.split("/")[1]):""}function getReservedRules(reserved,version){function mapFn(elem,inst){return elem.__inst=inst,elem}function filterFn(elem){return"ipv4"==version?funcs.is.ipv4(elem.IP):"ipv6"==version&&funcs.is.ipv6(elem.IPv6)}var input=funcs.newConfig.normalize(reserved);return _.chain(input).map(mapFn).filter(filterFn).value()}function getHosts(dns,type){var hosts=funcs.newConfig.normalize(dns.Hosts);return _.chain(hosts).map(function(host,inst){return host.__id=inst,host}).filter(function(host){return!("ipv4"!=type||!host||!funcs.is.ipv4(host.IPAddress))||!("ipv6"!=type||!host||!funcs.is.ipv6(host.IPAddress))}).value()}function getHost(hostnames,mac){var result={},host=_.find(hostnames,function(elem){return elem.MAC&&elem.MAC.toUpperCase()==mac.toUpperCase()});return host&&(result.Hostname=host.Alias,result.__Inst=_.findKey(hostnames,function(elem){return elem.MAC.toUpperCase()==mac.toUpperCase()})),result}function getOption(tag){switch(tag){case 1:case 3:case 6:case 7:case 33:case 41:case 42:case 65:case 68:case 69:case 70:case 71:case 74:case 121:return"ipv4";case 12:case 43:case 60:case 64:case 66:return"text";case 15:case 40:case 119:case 120:return"domain";case 23:case 26:case 35:case 37:case 38:case 58:case 59:return"dec";case 121:return"hex"}}function getDynDNS(dns){function findCurDNS(dns){var output=_.find(dns,function(obj){return _.isObject(obj)?!0:void 0});return output?output.Address:null}var output=[],curDns=findCurDNS(dns);if(!curDns)return output;var orders=curDns.order;return _.each(orders,function(inst){output.push(curDns[inst].IPAddress)}),output}function getStatDNS(conn){return conn?_.chain(conn.DNS).filter(function(e){return _.isObject(e)&&!_.isArray(e)}).map(function(e){return e.IPAddress}).value():[]}function getDnsOrder(conn){return conn&&conn.DNS?conn.DNS.order:[]}function getDNSValue(isAuto,dynDns,statDns,inst){var curDns=isAuto?dynDns:statDns;return curDns&&curDns[inst]?curDns[inst]:""}var _interopRequireDefault=__webpack_require__(7),_defineProperty2=_interopRequireDefault(__webpack_require__(235)),T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=function(input){var pattern=T({"->":["$input","$lans","$dhcp","$dhcpv6","$connDhcp","connDhcpv6","$devMode","$hostnames","LAN","LANNumberOfEntries"],$input:":external",$lans:["$input",function(i){return getLans(i)}],$connDhcp:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.Connection.DHCP.1.")}],$connDhcpv6:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.Connection.DHCPv6.1.")}],$devMode:["$input",function(i){return funcs.fetchBranch(i,"Device.DeviceInfo.DeviceMode")}],$hostnames:["$input",function(i){return funcs.newConfig.normalize(funcs.fetchBranch(i,"Device.Hostnames."))}],$autoDNS:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.DNS.Current")}],Hostnames:["$hostnames",function(h){return h}],DeviceMode:["$devMode",function(dm){return dm}],LANNumberOfEntries:["$lans",function(l){return l.length}],LAN:{"->":["$raw","?","$iface","IPv4","IPv6","DNS"],"{$raw,$i}":["$parent",function(p){return p.$lans}],":":["$i",function(i){return i+1}],"?":["$raw",function(r){return!!r}],$iface:["$raw",function(r){return r.iface}],$dns:["$raw",function(r){return r.ipv4.dns}],$group:["$raw",function(r){return r.ipv4.group}],__ifaceLink:["$iface*",function(i){return i.link}],Enable:["$iface*",function(i){return i.data.Enable}],Name:["$iface*",function(i){return i.name}],IPv4:{"->":["$raw","?","$ip","$dhcp","$dns","$group","$iface","AddressingMode","StaticIP","StaticIPNumberOfEntries","DHCP","DNS"],$raw:["$parent",function(p){return p.$raw}],"?":["$raw",function(r){return!!r.ipv4}],$ip:["$raw",function(r){return r.ipv4.ip}],$dhcp:["$raw",function(r){return r.dhcp}],$dns:["$raw",function(r){return r.ipv4.dns}],$group:["$raw",function(r){return r.ipv4.group}],$iface:["$raw",function(r){return r.iface}],AddressingMode:["$root",function(r){return"AccessPoint"!=r.$devMode||_.isEmpty(r.$connDhcp)?"Static":r.$connDhcp.Enable?"Dynamic":"Static"}],StaticIPNumberOfEntries:1,StaticIP:{"->":["$ip","?","1"],$ip:["$parent",function(p){return p.$ip}],$dns:["$parent",function(p){return p.$dns}],$group:["$parent",function(p){return p.$group}],$addrMode:["$parent",function(p){return p.AddressingMode}],"?":["$ip",function(ip){return!!ip}],1:{"->":!0,$ip:["$parent","$root",function(p,r){return prepareIP(p.$ip,r.$devMode,r.$connDhcp)}],$dns:["$parent",function(p){return p.$dns}],$group:["$parent",function(p){return p.$group}],$addrMode:["$parent",function(p){return p.$addrMode}],"?":["$ip*",function(ip){return!!ip||!!ip.length}],AddnHostname:["$group*",function(group){return group.data?group.data.DomainName:void 0}],Address:["$ip*",function(ip){return getIPAddress(ip.data.IPAddress)}],SubnetMask:["$ip*",function(ip){return getSubnetMask(ip.data.IPAddress)}],__StaticIPLink:["$ip*",function(ip){return ip.link}],GatewayAddress:["$root","$addrMode","$ip*",function(r,addrMode,ip){return getGateway(r.$input,"ipv4",addrMode,ip)}]}},DHCP:{"->":["$dhcp","$iface","$connDhcp","$autoDNS","Server","Relay","DHCPCustomOpts","$dynDns","$statDns","$isAutoDns"],$dhcp:["$parent",function(p){return p.$dhcp}],$dns:["$parent",function(p){return p.$dns}],$group:["$parent",function(p){return p.$group}],$ip:["$parent","$root",function(p,r){return prepareIP(p.$ip,r.$devMode,r.$connDhcp)}],$iface:["$parent",function(p){return p.$iface}],$connDhcp:["$root",function(r){return r.$connDhcp}],$statDns:["$connDhcp",function(o){return getStatDNS(o)}],$dynDns:["$root",function(r){return r.$autoDNS?getDynDNS(r.$autoDNS):void 0}],$isAutoDns:["$statDns",function(sdns){return!(sdns&&sdns.length)}],$isStatic:["$connDhcp",function(o){return!!o&&!!/Static/.test(o.link)}],DHCPAddrMode:["$ip*",function(ip){return ip.data.AddressingType}],__DHCPLink:["$dhcp*",function(d){return d.link}],__DHCPInst:["$dhcp*",function(d){return d.inst}],__DNSLink:["$dns*",function(d){return d.link}],__DNSInst:["$dns*",function(d){return d.inst}],__GroupInst:["$group*",function(g){return g.inst}],__GroupLink:["$group*",function(g){return g.link}],Mode:["$dhcp*","$root",function(d,r){if(_.has(d.data,"Enable")){var enable="None"!=d.data.IPv4Mode&&("AccessPoint"!=r.$devMode||"Disabled"!=d.data.Status);return enable?""!=d.data.RelayIP?"Relay":"Server":"Disable"}}],DNSAutomatical:["$isStatic","$isAutoDns",function(isSt,a){return isSt?void 0:a}],DNSServer1:["$isAutoDns","$dynDns","$statDns",function(a,d,s){return getDNSValue(a,d,s,0)}],DNSServer2:["$isAutoDns","$dynDns","$statDns",function(a,d,s){return getDNSValue(a,d,s,1)}],DNSOrder:["$root",function(r){return getDnsOrder(r.$connDhcp)}],Server:{"->":["$dhcp","StaticAddress"],$dhcp:["$parent",function(p){return p.$dhcp.data}],$dns:["$parent",function(p){return p.$dns.data}],$iface:["$parent",function(p){return p.$iface}],MinAddress:["$dhcp*",function(d){return d.StartIP}],MaxAddress:["$dhcp*",function(d){return d.EndIP}],LeaseTime:["$dhcp*",function(d){return d.Lease?d.Lease/60:void 0}],StaticAddressNumberOfEntries:["StaticAddress*",function(st){return _.size(st)}],StaticAddress:{"->":!0,$dhcp:["$parent",function(p){return p.$dhcp}],$hostnames:["$root",function(r){return r.$hostnames}],"?":["$dhcp",function(d){return _.has(d,"Reservation")}],"{$raw, $i}":["$dhcp*",function(d){return getReservedRules(d.Reservation,"ipv4")}],":":["$i",function(i){return(i+1).toString()}],$host:["$hostnames","$raw*",function(h,r){return getHost(h,r.MAC)}],IPAddress:["$raw*",function(r){return r.IP||""}],MACAddress:["$raw*",function(r){return r.MAC||""}],Hostname:["$host*","$raw*",function(h,r){return h.Hostname}],LeaseTime:["$raw*",function(r){return r.Lease?r.Lease/60:void 0}],__HostInst:["$host*","$raw*",function(h,r){return h.__Inst}],__Inst:["$raw*",function(r){return r.__inst}]},DNSRelay:["$dns*",function(d){return _.has(d,"Enable")?d.Enable:void 0}],ProxyARP:["$iface*",function(i){return i.data.ProxyARP}]},Relay:{"->":!0,$dhcp:["$parent",function(p){return p.$dhcp.data}],"?":["$dhcp",function(d){return _.has(d,"RelayIP")}],DHCPServerIPAddress:["$dhcp*",function(d){return d.RelayIP?d.RelayIP:""}],CircuitID:["$dhcp*",function(d){return d.RelayAgent?d.RelayAgent.CircuitID:void 0}],RemoteID:["$dhcp*",function(d){return d.RelayAgent?d.RelayAgent.RemoteID:void 0}],SubscriberID:["$dhcp*",function(d){return d.RelayAgent?d.RelayAgent.SubscriberID:void 0}]},DHCPCustomOpts:{"->":["?"],$dhcpd:["$parent",function(p){return p.$dhcp}],"?":["$dhcpd",function(d){return _.has(d.data,"Options")}],"{$raw, $i}":["$dhcpd",function(d){return funcs.newConfig.normalize(d.data.Options)}],__id:["$i*",function(i){return i}],Tag:["$raw*",function(r){return r.Option.toString()}],Force:["$raw*",function(r){return r.Force}],Value:["$raw*",function(r){return r.Value}],Type:["$raw*",function(r){return getOption(r.Option)}]}},DNS:{"->":["$dns","Hosts"],$dns:["$parent",function(p){return p.$dns}],Hosts:{"->":["?"],"?":["$parent",function(p){return _.has(p.$dns.data,"Hosts")}],"{$hosts, $i}":["$parent",function(p){return getHosts(p.$dns.data,"ipv4")}],":":["$i",function(i){return(i+1).toString()}],__Inst:["$hosts*",function(h){return h.__id}],IPAddress:["$hosts*",function(h){return h.IPAddress}],Hostname:["$hosts*",function(h){return h.Hostname}]}}},IPv6:{"->":["$raw","?","$ip","$dhcp","$dns","StaticIP","StaticIPNumberOfEntries","DHCP","DNS"],$raw:["$parent",function(p){return p.$raw}],"?":["$raw",function(r){return!!r.ipv6.ip}],$ip:["$raw",function(r){return r.ipv6.ip}],$dhcp:["$raw",function(r){return r.dhcp}],$dns:["$raw",function(r){return r.ipv6.dns}],__DHCPLink:["$dhcp*",function(d){return d.link}],__DHCPInst:["$dhcp*",function(d){return d.inst}],__IPInst:["$dhcp*",function(d){return d.ipInst}],__MultiIP:!0,DeviceMode:["$root",function(r){return r.$devMode}],StaticIPNumberOfEntries:["StaticIP",function(st){return _.size(st)}],StaticIP:{"->":!0,"{$ip, $i}":["$parent",function(p){return p.$ip}],":":["$i",function(i){return(i+1).toString()}],$arrIpv6:["$ip*",function(ip){return ip.data?ip.data.IPAddress.split("/"):void 0}],Address:["$arrIpv6*",function(arr){return arr[0]}],Prefix:["$arrIpv6*",function(arr){return arr[1]}],AddressingType:["$ip*",function(ip){return ip.data.AddressingType}],__StaticIPLink:["$ip*",function(ip){return ip.link}],GatewayAddress:["$root","AddressingType",function(r,addrType){return getGateway(r.$input,"ipv6",addrType)}]},DHCP:{"->":["$dhcp","$dns","Server"],$dhcp:["$parent",function(p){return p.$dhcp.data}],$dns:["$parent",function(p){return p.$dns}],__DNSInst:["$dns*",function(d){return d.inst}],Server:{"->":["$dhcp","StaticAddress"],$dhcp:["$parent",function(p){return p.$dhcp}],$dns:["$parent",function(p){return p.$dns.data}],AutoconfigurationMode:["$dhcp*",function(d){return"Autoconf"==d.IPv6Mode?"Stateless":"DHCP"==d.IPv6Mode?"Statefull":"Disable"}],MinAddress:["$dhcp*",function(d){return d.StartIPv6?d.StartIPv6.replace(/:/g,""):""}],MaxAddress:["$dhcp*",function(d){return d.EndIPv6?d.EndIPv6.replace(/:/g,""):""}],LeaseTime:["$dhcp*",function(d){return d.Leasev6?d.Leasev6/60:void 0}],DHCPAddressShort:!0,IPv6DefaultRouter:["$dhcp*",function(d){return d.IPv6DefaultRouter}],DNSRelay:["$dns*",function(d){return _.has(d,"Enable")?d.Enable:void 0}],StaticAddressNumberOfEntries:["StaticAddress*",function(st){return _.size(st)}],StaticAddress:{"->":!0,$dhcp:["$parent",function(p){return p.$dhcp}],$hostnames:["$root",function(r){return r.$hostnames}],"?":["$dhcp",function(d){return _.has(d,"Reservation")}],"{$raw, $i}":["$dhcp*",function(d){return getReservedRules(d.Reservation,"ipv6")}],":":["$i",function(i){return(i+1).toString()}],$host:["$hostnames","$raw*",function(h,r){return getHost(h,r.MAC)}],IPAddress:["$raw*",function(r){return r.IPv6||""}],MACAddress:["$raw*",function(r){return r.MAC||""}],Hostname:["$host*","$raw*",function(h,r){return h.Hostname}],LeaseTime:["$raw*",function(r){return r.Lease?r.Lease/60:void 0}],__HostInst:["$host*","$raw*",function(h,r){return h.__Inst}],__Inst:["$raw*",function(r){return r.__inst}]}}},DNS:{"->":["$dns","Hosts"],$dns:["$parent",function(p){return p.$dns}],Hosts:{"->":["?"],"?":["$parent",function(p){return _.has(p.$dns.data,"Hosts")}],"{$hosts, $i}":["$parent",function(p){return getHosts(p.$dns.data,"ipv6")}],":":["$i",function(i){return(i+1).toString()}],__Inst:["$hosts*",function(h){return h.__id}],IPAddress:["$hosts*",function(h){return h.IPAddress}],Hostname:["$hosts*",function(h){return h.Hostname}]}}}}});return pattern.build({$input:input})}},function(module,exports,__webpack_require__){"use strict";function isSupported(input,path){var attr=getAttr(input,path);return _.size(attr)>0}function getAttr(input,path){return funcs.fetchBranch(input,path)}function getAddressingModes(deviceMode){return{access:"readWrite",type:"string","enum":"AccessPoint"==deviceMode?["Static","Dynamic"]:["Static"],"default":"Static"}}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=function(input){var pattern=T({"->":["$input","LAN"],$input:":external",LAN:{"->":["$devMode","IPv4"],$devMode:["$parent",function(p){return p.$input.DeviceMode}],Enable:["$root",function(r){return getAttr(r.$input,"Device.Network.Interface.Bridge.#template.Enable.")}],Name:["$root",function(r){return getAttr(r.$input,"Device.Network.Interface.Bridge.#template.Ifname.")}],IPv4:{"->":!0,$devMode:["$parent",function(p){return p.$devMode}],AddressingMode:{"->":["?"],"?":["$root",function(r){return"AccessPoint"==r.$input.DeviceMode}],access:"readWrite",type:"string","default":"Static","enum":["Static","Dynamic"]},AddressingModeAvailable:["$devMode",function(dm){return getAddressingModes(dm)}],StaticIP:{"->":!0,Address:{access:"readWrite",type:"IPv4Address","default":""},SubnetMask:{access:"readWrite",type:"IPv4Address","default":""},AddnHostname:{access:"readWrite",type:"string","default":"Dlink.local"},GatewayAddress:{"->":["?"],"?":["$root",function(r){return"AccessPoint"==r.$input.DeviceMode}],access:"readWrite",type:"IPv4Address","default":""}},DHCP:{"->":!0,Mode:{access:"readWrite",type:"string","enum":["Disable","Server","Relay"],"default":"Server"},Server:{"->":["StaticAddress"],MinAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.StartIP.")}],MaxAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.EndIP.")}],LeaseTime:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Lease.")}],DNSRelay:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DNS.#template.Enable.")}],StaticAddress:{"->":!0,IPAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.IP.")}],MACAddress:["$root*",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.MAC.")}],Hostname:["$root*",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.Host.")}],LeaseTime:["$root*",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.Lease.")}]},ProxyARP:["$root",function(r){return getAttr(r.$input,"Device.Network.Interface.Bridge.#template.ProxyARP.")}]},Relay:{"->":!0,DHCPServerIPAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.RelayIP.")}],CircuitID:["$root",function(r){return isSupported(r.$input,"Device.Network.Server.DHCP.#template.RelayAgent.CircuitID.")?getAttr(r.$input,"Device.Network.Server.DHCP.#template.RelayAgent.CircuitID."):void 0}],RemoteID:["$root",function(r){return isSupported(r.$input,"Device.Network.Server.DHCP.#template.RelayAgent.RemoteID.")?getAttr(r.$input,"Device.Network.Server.DHCP.#template.RelayAgent.RemoteID."):void 0}],SubscriberID:["$root",function(r){return isSupported(r.$input,"Device.Network.Server.DHCP.#template.RelayAgent.SubscriberID.")?getAttr(r.$input,"Device.Network.Server.DHCP.#template.RelayAgent.SubscriberID."):void 0}]},DHCPCustomOpts:{"->":!0,Tag:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Options.#template.Option.")}],Value:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Options.#template.Value.")}],Force:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Options.#template.Force.")}],Type:{access:"readWrite",type:"string","default":""}}},DNS:{"->":!0,Hosts:{"->":!0,IPAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DNS.#template.Hosts.#template.IPAddress.")}],Hostname:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DNS.#template.Hosts.#template.Hostname.")}]}}},IPv6:{"->":["?"],"?":["$root",function(r){return!!getAttr(r.$input,"Device.Network.IP.#template.IPv6Address.")}],StaticIP:{"->":!0,Address:{access:"readWrite",type:"IPv6Address","default":""},Prefix:{access:"readWrite",type:"string","default":""},GatewayAddress:{"->":["?"],"?":["$root",function(r){return"AccessPoint"==r.$input.DeviceMode}],access:"readWrite",type:"IPv6Address","default":""}},DHCP:{"->":!0,Server:{"->":!0,AutoconfigurationMode:{access:"readWrite",type:"string","enum":["Disable","Stateless","Statefull"],"default":"Statefull"},MinAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.StartIPv6.")}],MaxAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.EndIPv6.")}],LeaseTime:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Leasev6.")}],DNSRelay:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DNS.#template.Enable.")}],StaticAddress:{"->":!0,IPAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.IPv6.")}],MACAddress:["$root*",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.MAC.")}],Hostname:["$root*",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.Host.")}],LeaseTime:["$root*",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.Lease.")}]},IPv6DefaultRouter:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.IPv6DefaultRouter.")}]}},DNS:{"->":!0,Hosts:{"->":!0,IPAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DNS.#template.Hosts.#template.IPAddress.")}],Hostname:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DNS.#template.Hosts.#template.Hostname.")}]}}}}});return input?pattern.build({$input:input}):{}}},function(module,exports,__webpack_require__){"use strict";module.exports={config:__webpack_require__(307)}},function(module,exports,__webpack_require__){"use strict";function getLans(input){return _.map(input,function(data,inst){return{data:data,inst:inst}})}function getInterfaces(lans){return _.map(lans,function(lan){var data=lan.data,params=/Device\.Network\.Interface\.(.*)\.(.*)\./.exec(lan.data.__ifaceLink);return{data:data,type:params[1],inst:params[2]}})}function getDHCP(lans,type){return _.map(lans,function(lan,index){function getInst(ipv4,ipv6,index){return ipv4&&ipv4.__DHCPInst?ipv4.__DHCPInst:ipv6&&ipv6.__DHCPInst?ipv6.__DHCPInst:"new_inst_"+index}var ipv4=lan.data.IPv4?lan.data.IPv4.DHCP:void 0,ipv6=lan.data.IPv6?lan.data.IPv6.DHCP:void 0;return{ipv4:ipv4,ipv6:ipv6,inst:getInst(ipv4,ipv6,index)}})}function getIPs(lans,type){function addIP(result,input,type){input[type]&&_.each(input[type].StaticIP,function(elem,index){elem.__StaticIPLink||(elem.__StaticIPLink="Device.Network.IP."+(input[type].__IPInst?input[type].__IPInst:"1")+"."+type+"Address.new_inst_"+index+".");var params=/Device\.Network\.IP\.(.*)\.(.*)\.(.*)\./.exec(elem.__StaticIPLink),inst=params[1];result[inst]||(result[inst]=[]),result[inst].push({data:elem,type:params[2],inst:params[3]})})}var result={};return _.each(lans,function(lan){addIP(result,lan.data,"IPv4"),addIP(result,lan.data,"IPv6")}),result}function getIPv4Address(input){return input.Address+"/"+funcs.ipv4.mask["short"](input.SubnetMask)}function getIPv6Address(input){return input.Address+"/"+input.Prefix}function getIPv4Mode(input){return"Disable"==input.Mode?"None":"DHCP"}function getIPv6Mode(input){switch(input.AutoconfigurationMode){case"Stateless":return"Autoconf";case"Statefull":return"DHCP";case"Disable":return"None"}}function getDHCPEnabled(mode,v4,v6){if(!mode||"AccessPoint"!=mode)return!0;var v4Mode=v4?getIPv4Mode(v4):"None",v6Mode=v6?getIPv6Mode(v6):"None";return"None"!=v4Mode||"None"!=v6Mode}function getDNS(lans,version){return _.compact(_.map(lans,function(lan){var input=funcs.fetchBranch("IPv4"==version?lan.data.IPv4.DHCP:lan.data.IPv6.DHCP),hostsv4=lan.data.IPv4?funcs.fetchBranch(lan.data.IPv4.DNS):void 0,hostsv6=lan.data.IPv6?funcs.fetchBranch(lan.data.IPv6.DNS):void 0;return input.__DNSInst?{data:input.Server,inst:input.__DNSInst,hostsv4:hostsv4,hostsv6:hostsv6}:void 0}))}function getDNSAP(v4){function addDNS(output,value,inst){output[inst]={IPAddress:value}}var output={};return _.has(v4.DHCP,"DNSAutomatical")&&!v4.DHCP.DNSAutomatical&&(v4.DHCP&&v4.DHCP.DNSServer1&&addDNS(output,v4.DHCP.DNSServer1,v4.DHCP.DNSOrder&&v4.DHCP.DNSOrder[0]?v4.DHCP.DNSOrder[0]:"+1"),v4.DHCP&&v4.DHCP.DNSServer2&&addDNS(output,v4.DHCP.DNSServer2,v4.DHCP.DNSOrder&&v4.DHCP.DNSOrder[1]?v4.DHCP.DNSOrder[1]:"+2")),output}function getGroup(lans){return _.compact(_.map(lans,function(lan){var input=lan.data.IPv4?funcs.fetchBranch(lan.data.IPv4.DHCP):void 0,domainName=lan.data.IPv4?_.values(funcs.fetchBranch(lan.data.IPv4.StaticIP)):void 0;return input.__GroupInst?{domainName:domainName[0].AddnHostname?domainName[0].AddnHostname.toLowerCase():domainName[0].AddnHostname,data:input.Server,inst:input.__GroupInst}:void 0}))}function getRows(sv4,sv6,field){function makeRows(sv,field,type){if(!sv)return[];var sv=filterElems(sv[field],type);return _.values(sv)}function filterElems(reservation,type){return _.each(reservation,function(elem,id){/-$/.test(id)&&delete reservation[id],elem.IPType=type}),reservation}var output=[];return output=output.concat(makeRows(sv4,field,"IPv4")),output=output.concat(makeRows(sv6,field,"IPv6"))}function getReservationIP(staticIP,ips,type){if(!ips)return staticIP;var ip=_.find(ips,{type:type});if(!ip)return staticIP;var subnetFunc="IPv4Address"==type?funcs.ipv4:funcs.ipv6,mask="IPv4Address"==type?ip.data.SubnetMask:ip.data.Prefix,networkIP=subnetFunc.subnet.getNetworkAddress(ip.data.Address,mask);if(subnetFunc.subnet.belongNetwork(networkIP,staticIP,mask))return staticIP;if("IPv4Address"==type){var hostMask=subnetFunc.address.not(mask),host=subnetFunc.subnet.getNetworkAddress(staticIP,hostMask),address=subnetFunc.address.or(networkIP,host);return address}var prefixHex=subnetFunc.prefix.toHex(mask),prefixHost=subnetFunc.prefix.not(prefixHex),fullStaticIP=subnetFunc.address.full(staticIP),host=subnetFunc.address.and(fullStaticIP,prefixHost),address=subnetFunc.address.or(subnetFunc.address.full(networkIP),host);return subnetFunc.address["short"](address)}function getDhcpOption(ds){var opt=[];return ds&&(opt=_.filter(ds,function(st,inst){return/[^-]$/.test(inst)})),opt}function getHosts(dhcps,hostnames){function getInst(mac,hostnames,key){var hostKey=_.findKey(hostnames,function(elem){return mac.toUpperCase()==elem.MAC.toUpperCase()});return hostKey?hostKey:"+"+key}var output=[];return _.each(dhcps,function(elem,id){var dhcpv4=elem.ipv4,dhcpv6=elem.ipv6,serverv4=dhcpv4?dhcpv4.Server:{},serverv6=dhcpv6?dhcpv6.Server:{};if(_.has(serverv4,"StaticAddress")||_.has(serverv6,"StaticAddress")){var rows=getRows(serverv4,serverv6,"StaticAddress");if(rows.length){var hosts=[];_.each(rows,function(row,key){var inst=row.__HostInst?row.__HostInst:getInst(row.MACAddress,hostnames,key),hostIndex=_.findIndex(hosts,function(elem){return elem.__Inst==inst});-1!=hostIndex?"IPv4"==row.IPType?hosts[hostIndex].Hostnamev4=row.Hostname:hosts[hostIndex].Hostnamev6=row.Hostname:hosts.push({MAC:row.MACAddress,__Inst:inst,Hostnamev4:"IPv4"==row.IPType?row.Hostname||"":void 0,Hostnamev6:"IPv6"==row.IPType?row.Hostname||"":void 0})}),output=output.concat(hosts)}}}),output}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=function(input,version){var pattern=T({"->":["$input","$version","Device"],$input:":external",$version:":external",Device:{Network:{"->":["$input","$version","$lans","$ifaces","$dhcpv4","$dns","$group","$hosts","$ips","IP","Interface","Server","Group","Connection"],$input:["$root",function(r){return r.$input}],$version:["$root",function(r){return r.$version}],$lans:["$input",function(i){return getLans(i.LAN)}],$ifaces:["$lans",function(l){return getInterfaces(l)}],$dhcps:["$lans",function(l){return getDHCP(l)}],$dns:["$lans","$version",function(l,v){return getDNS(l,v)}],$ips:["$lans",function(l){return getIPs(l)}],$group:["$lans",function(l){return getGroup(l)}],Group:{"->":["?"],"?":["$parent",function(o){return o.$group.length}],"{$input}":["$parent",function(r){return r.$group}],":":["$input",function(i){return i.inst}],DomainName:["$input",function(i){return i.domainName}]},Connection:{"->":["?","$lans","Static","Staticv6","DHCP"],"?":["$root",function(r){return"AccessPoint"==r.$input.DeviceMode}],$lans:["$parent",function(r){return r.$lans}],Static:{"->":["?"],$v4:["$parent",function(p){return _.filter(p.$lans,function(e){return _.has(e.data,"IPv4")})}],"?":["$v4",function(v4){return!!v4.length}],"{$v4Arr, $inst}":["$v4",function(v4){return v4}],":":["$inst",function(i){return i+1}],Gateway:["$v4Arr",function(v){return"Static"==v.data.IPv4.AddressingMode?v.data.IPv4.StaticIP[1].GatewayAddress:void 0}],IPAddress:["$v4Arr",function(v){return"Static"==v.data.IPv4.AddressingMode?getIPv4Address(v.data.IPv4.StaticIP[1]):void 0}]},Staticv6:{"->":["?"],$v6:["$parent",function(p){return _.filter(p.$lans,function(e){return _.has(e.data,"IPv6")})}],"?":["$v6",function(v6){return!!v6.length}],"{$v6Arr, $inst}":["$v6",function(v6){return v6}],":":["$inst",function(i){return i+1}],Gateway:["$v6Arr",function(v){return v.data.IPv6.StaticIP[1]?v.data.IPv6.StaticIP[1].GatewayAddress:void 0}],IPAddress:["$v6Arr",function(v){return v.data.IPv6.StaticIP[1]?getIPv6Address(v.data.IPv6.StaticIP[1]):void 0}]},DHCP:{"->":["?"],$v4:["$parent",function(p){return _.filter(p.$lans,function(e){return _.has(e.data,"IPv4")})}],"?":["$v4",function(v4){return!!v4.length}],"{$v4Arr, $inst}":["$v4",function(v4){return v4}],":":["$inst",function(i){return i+1}],Enable:["$v4Arr",function(v){return"Dynamic"==v.data.IPv4.AddressingMode}],DNS:["$v4Arr*",function(v){return getDNSAP(v.data.IPv4)}]}},Interface:{"->":["$ifaces","Bridge"],$ifaces:["$parent",function(p){return p.$ifaces}],Bridge:{"->":!0,"{$iface,$i}":["$parent",function(o){return _.filter(o.$ifaces,function(e){return"Bridge"==e.type})}],":":["$iface*",function(i){return i.inst}],Enable:["$iface*",function(o){return o.data.Enable}],Ifname:["$iface*",function(o){return o.data.Name}],ProxyARP:["$iface*",function(o){return o.data.IPv4.DHCP.Server.ProxyARP}]}},IP:{"->":["?","$ip","$i","IPv4Address","IPv6Address"],"?":["$parent",function(o){return _.size(o.$ips)&&"AccessPoint"!=o.$input.DeviceMode}],"{$ip,$i}":["$parent",function(o){return o.$ips}],":":["$i",function(i){return i}],IPv4Address:{"->":["$ip","?"],"{$ip,$i}":["$parent",function(p){return _.filter(p.$ip,function(e){return"IPv4Address"==e.type})}],"?":["$ip",function(o){return!!o}],":":["$ip",function(o){return o?o.inst:void 0}],IPAddress:["$ip",function(o){return getIPv4Address(o.data)}]},IPv6Address:{"->":["$ip","?"],"{$ip,$i}":["$parent",function(p){return _.filter(p.$ip,function(e){return"IPv6Address"==e.type})}],"?":["$ip",function(o){return!!o}],":":["$ip",function(o){return o?o.inst:void 0}],Enable:["$ip",function(o){return o.data.Enable}],IPAddress:["$ip",function(o){return getIPv6Address(o.data)}]}},Server:{"->":["?","$ips","$dhcps","DHCP","DNS"],"?":["$parent",function(o){return o.$dhcps.length||o.$dns.length}],$ips:["$parent",function(p){return p.$ips}],$dhcps:["$parent",function(p){return p.$dhcps}],$dns:["$parent",function(p){return p.$dns}],DHCP:{"->":["?","$ip","$dhcpipv4","$dhcpipv6","$serveripv4","$serveripv6","$relay","Reservation","Options","RelayAgent"],"?":["$parent",function(o){return o.$dhcps.length}],$ip:["$parent",function(r){return _.values(r.$ips)[0]}],"{$dhcp,$i}":["$parent",function(o){return o.$dhcps}],":":["$dhcp*",function($d){return $d.inst}],$dhcpipv4:["$dhcp*",function(d){return d.ipv4}],$dhcpipv6:["$dhcp*",function(d){return d.ipv6}],$serveripv4:["$dhcpipv4*",function(d){return d.Server}],$serveripv6:["$dhcpipv6*",function(d){return d.Server}],$relay:["$dhcpipv4*",function(d){return d.Relay}],$mode:["$root",function(r){return r.$input.DeviceMode}],Enable:["$mode","$dhcpipv4","$serveripv6",function(m,d,s){return getDHCPEnabled(m,d,s)}],IPv4Mode:["$dhcpipv4*",function(d){return getIPv4Mode(d)}],StartIP:["$serveripv4*",function(s){return s.MinAddress}],EndIP:["$serveripv4*",function(s){return s.MaxAddress}],Lease:["$serveripv4*","$dhcpipv4*",function(s,d){return s.LeaseTime&&"Server"==d.Mode?60*s.LeaseTime:void 0}],RelayIP:["$dhcpipv4*","$relay*",function(d,r){return"Relay"==d.Mode?r.DHCPServerIPAddress:""}],StartIPv6:["$serveripv6*",function(s){return"::"+s.MinAddress}],EndIPv6:["$serveripv6*",function(s){return"::"+s.MaxAddress}],Leasev6:["$serveripv6*","$dhcpipv6",function(s,d){return!s.LeaseTime||"Stateless"!=s.AutoconfigurationMode&&"Statefull"!=s.AutoconfigurationMode?void 0:60*s.LeaseTime;
}],IPv6Mode:["$serveripv6*",function(s){return getIPv6Mode(s)}],RelayAgent:{"->":["?"],$dhcpipv4:["$parent",function(p){return p.$dhcpipv4}],$relay:["$parent",function(p){return p.$relay}],"?":["$relay",function(r){return!!r}],CircuitID:["$dhcpipv4*","$relay*",function(d,r){return"Relay"==d.Mode?r.CircuitID:""}],RemoteID:["$dhcpipv4*","$relay*",function(d,r){return"Relay"==d.Mode?r.RemoteID:""}],SubscriberID:["$dhcpipv4*","$relay*",function(d,r){return"Relay"==d.Mode?r.SubscriberID:""}]},Reservation:{"->":["?"],$serveripv4:["$parent",function(p){return p.$serveripv4}],$serveripv6:["$parent",function(p){return p.$serveripv6}],$ip:["$parent",function(p){return p.$ip}],"?":["$serveripv4","$serveripv6",function(sv4,sv6){return _.has(sv4,"StaticAddress")||_.has(sv6,"StaticAddress")}],"{$raw, $i}":["$serveripv4","$serveripv6",function(sv4,sv6){return getRows(sv4,sv6,"StaticAddress")}],":":["$raw*","$i",function(r,i){return r.__Inst||"new_inst_"+i}],Enable:!0,IP:["$raw*","$ip",function(r,ip){return funcs.is.ipv4(r.IPAddress)?getReservationIP(r.IPAddress,ip,"IPv4Address"):""}],IPv6:["$raw*","$ip",function(r,ip){return funcs.is.ipv6(r.IPAddress)?getReservationIP(r.IPAddress,ip,"IPv6Address"):""}],MAC:["$raw*",function(r){return r.MACAddress.toUpperCase()||""}],Lease:["$raw*",function(r){return r.LeaseTime?60*r.LeaseTime:0}]},Options:{"->":!0,$dhcpipv4:["$parent",function(p){return p.$dhcpipv4}],$options:["$dhcpipv4",function(d){return getDhcpOption(d.DHCPCustomOpts)}],"{$raw, $i}":["$options",function(o){return o}],":":["$raw*","$i*",function(r,i){return r.__id?r.__id:"+"+i}],Option:["$raw*",function(r){return Number(r.Tag)}],Value:["$raw*",function(r){return r.Value}],Force:["$raw*",function(r){return r.Force}]},IPv6DefaultRouter:["$serveripv6*",function(s){return"Stateless"==s.AutoconfigurationMode||"Statefull"==s.AutoconfigurationMode?s.IPv6DefaultRouter:void 0}]},DNS:{"->":["?","$input","Hosts"],"?":["$parent",function(o){return o.$dns.length}],"{$input}":["$parent",function(o){return o.$dns}],":":["$input",function(i){return i.inst}],Enable:["$input",function(i){return i.data?i.data.DNSRelay:void 0}],Hosts:{"->":["?"],$hostsipv4:["$parent",function(p){return p.$input.hostsv4}],$hostsipv6:["$parent",function(p){return p.$input.hostsv6}],"?":["$hostsipv4","$hostsipv6",function(hv4,hv6){return _.has(hv4,"Hosts")||_.has(hv6,"Hosts")}],"{$hosts, $i}":["$hostsipv4","$hostsipv6",function(hv4,hv6){return getRows(hv4,hv6,"Hosts")}],":":["$hosts*","$i",function(h,i){return h.__Inst||"new_inst_"+i}],IPAddress:["$hosts*",function(h){return h.IPAddress}],Hostname:["$hosts*",function(h){return h.Hostname}]}}}},Hostnames:{"->":!0,$input:["$root",function(r){return r.$input}],$lans:["$input",function(i){return getLans(i.LAN)}],$dhcps:["$lans",function(l){return getDHCP(l)}],$hostnames:["$input",function(i){return i.Hostnames}],"{$hosts, $i}":["$dhcps","$hostnames",function(d,h){return getHosts(d,h)}],":":["$hosts*",function(h){return h.__Inst}],MAC:["$hosts*",function(h){return h.MAC}],Aliasv4:["$hosts*",function(h){return h.Hostnamev4}],Aliasv6:["$hosts*",function(h){return h.Hostnamev6}]}}});return pattern.build({$input:input,$version:version})}},function(module,exports,__webpack_require__){"use strict";function IPFilter(ipfilter,lan,attributes){function getRules(){function transformRule(rule){return _.has(rule,"action")&&(rule.action=_.find(actionMap,function(e){return e.value==rule.action}).name),_.has(rule,"proto")&&(rule.proto=_.find(protoMap,function(e){return e.value==rule.proto}).name),rule.IPVersion=rule.is_ipv6?"IPv6":"IPv4",rule}var rules=funcs.deepClone(ipfilter);return _.map(rules,transformRule)}function getRule(index){return funcs.deepClone(ipfilter[index])}function getDefaultTemplate(attrs){var template={};return attrs||(attrs=attributes),_.each(attrs,function(obj,key){if(obj.__Template)template[key]=getDefaultTemplate(obj);else{if(!obj.supported||!_.has(obj,"default"))return;template[key]=obj["default"]}}),template}function getActions(){return _.filter(actionMap,function(e){return _.contains(attributes.action["enum"],e.value)})}function getProtocols(){return _.filter(protoMap,function(e){return _.contains(attributes.proto["enum"],e.value)})}function getDirections(){return _.filter(directionMap,function(e){return _.contains(attributes.direction["enum"],e.value)})}function getSourceDirections(version){return _.filter(directionMapDsysinit,function(e){return _.contains(attributes.sourceDirection["enum"+version],e.value)})}function getDestDirections(version){return _.filter(directionMapDsysinit,function(e){return _.contains(attributes.destDirection["enum"+version],e.value)})}function getBiggestID(){var ids=_.pluck(getRules(),"id");return ids.length?_.max(ids)+1:1}function makeRemoveList(indexes){return indexes=indexes.sort().reverse(),_.map(indexes,function(index){return{data:ipfilter[index],pos:index}})}function validation(rule,param){function validationPort(rule,param){function isValidPort(port){function isValidPortRanges(ranges){return _.every(ranges,function(elem){var startPort=elem.split(":")[0],endPort=elem.split(":")[1];return!(!startPort&&!endPort||startPort&&!funcs.is.port(startPort)||endPort&&!funcs.is.port(endPort)||!(_.isUndefined(startPort)||_.isUndefined(endPort)||""!=startPort&&""!=endPort)||startPort&&endPort&&parseInt(startPort)>=parseInt(endPort))})}function isOverlapPortRanges(ranges){function belongRange(range,port){var rangeStartPort=range.split(":")[0],rangeEndPort=range.split(":")[1];return!!(port&&(rangeStartPort||rangeEndPort)&&(rangeStartPort||port==rangeEndPort)&&(rangeEndPort||port==rangeStartPort)&&port>=rangeStartPort&&rangeEndPort>=port)}return _.some(ranges,function(range){var startPort=range.split(":")[0],endPort=range.split(":")[1];return _.some(_.without(ranges,range),function(elem){return!!belongRange(elem,startPort)||!!belongRange(elem,endPort)})})}if(/\s/.test(port))return!1;var portRanges=port.split(",");return!!isValidPortRanges(portRanges)&&!isOverlapPortRanges(portRanges)}function isWrongFormat(port,comparePort){var arrPort=port.split(","),arrComparePort=comparePort.split(",");return arrPort.length!=arrComparePort.length||_.some(arrPort,function(elem,index){return arrPort[index].split(":").length!=arrComparePort[index].split(":").length})}function isWrongNumber(port,comparePort){function getPortRangeNumber(range){var startPort=range.split(":")[0],endPort=range.split(":")[1];return startPort&&endPort?parseInt(endPort)-parseInt(startPort):1}var arrPort=port.split(","),arrComparePort=comparePort.split(",");return _.some(arrPort,function(elem,index){var portNumber=getPortRangeNumber(elem),comparePortNumber=getPortRangeNumber(arrComparePort[index]);return portNumber!=comparePortNumber})}var port=rule[param];if(!port)return null;if(!isValidPort(port))return"ipflt_invalid_port";var comparePort="ports"==param?rule.portd:rule.ports;return comparePort&&isValidPort(comparePort)?isWrongFormat(port,comparePort)?"ipflt_wrong_port_format":isWrongNumber(port,comparePort)?"ipflt_wrong_port_number":null:null}switch(param){case"ports":case"portd":return validationPort(rule,param)}return null}function isUniqueName(rule,index){return _.some(ipfilter,function(elem,inx){return!(!_.isUndefined(index)&&index==inx||elem.name!=rule.name)})}function conflicts(rule,index,isDsysinit){function compareParam(obj1,obj2,param){return!_.has(obj1,param)||!_.has(obj2,param)||obj1[param]==obj2[param]}var comparedFields=["proto","is_ipv6","ips","ipd","ports","portd"];__autoconf.BR2_PACKAGE_ANWEB_DSYSINIT?comparedFields.push("sourceDirection","destDirection","sourceDirIface","destDirIface"):comparedFields.push("direction");var findIndex=_.findIndex(ipfilter,function(elem,inx){return!(!_.isUndefined(index)&&index==inx)&&_.every(comparedFields,_.partial(compareParam,elem,rule))});if(-1==findIndex)return null;var rule=getRule(findIndex);return _.has(rule,"id")?rule.id:rule.name}function accessWillLost(rule,client){function belongSourceRange(){return-1==funcs.ipv4.address.compare(sourceIP[0],network.net)&&1==funcs.ipv4.address.compare(sourceIP[1],network.net)?checkLocalIP():void 0}function checkLocalIP(){if(2==destIP.length){if(-1==funcs.ipv4.address.compare(destIP[0],localIPs[1].Address)&&1==funcs.ipv4.address.compare(destIP[1],localIPs[1].Address))return!0;if(0==funcs.ipv4.address.compare(destIP[0],localIPs[1].Address)||0==funcs.ipv4.address.compare(destIP[1],localIPs[1].Address))return!0}else if(destIP[0]==localIPs[1].Address)return!0}function checkLocalIPs(localIPs,destIP,sourceIP){var result=!1;return _.every(localIPs,function(obj){var localIP=obj.Address;return isBelongIPRange(destIP[0],destIP[1],localIP)&&isLocalRule(rule)&&(result=!0),result}),result}function checkClientIP(clientIP,destIP,sourceIP){return isBelongIPRange(destIP[0],destIP[1],clientIP)&&isAllRange(sourceIP)||isBelongIPRange(sourceIP[0],sourceIP[1],clientIP)&&isAllRange(destIP)}function checkProtocol(){return 2==rule.proto||3==rule.proto?!0:void 0}if(0==rule.state)return!1;if(1!=rule.action)return!1;if(rule.is_ipv6)return!1;if(_.has(rule,"direction")&&3!=rule.direction)return!1;if(_.has(rule,"sourceDirection")&&_.has(rule,"destDirection")&&(3!=rule.sourceDirection||1!=rule.destDirection))return!1;if(checkProtocol())return!1;var localIPs=lan[1].IPv4.StaticIP,clientIP=client.ip,destIP=prepareIP(rule.ipd),sourceIP=prepareIP(rule.ips),network=funcs.ipv4.subnet.getNetwork(localIPs[1].Address,localIPs[1].SubnetMask);return!(!funcs.ipv4.subnet.belongNetwork(network.net,sourceIP[0],network.mask)||!checkLocalIP())||!!checkLocalIPs(localIPs,destIP,sourceIP)||!(!clientIP||!checkClientIP(clientIP,destIP,sourceIP))||2==sourceIP.length&&belongSourceRange()}function isLocalRule(rule){function checkFn(range,ip){return!ip||ip&&funcs.ipv4.subnet.belongNetworkRange(range,ip)}var localIPs=lan[1].IPv4.StaticIP,destIP=prepareIP(rule.ipd),sourceIP=prepareIP(rule.ips);return _.some(localIPs,function(obj){var range=funcs.ipv4.subnet.getNetworkRange(obj.Address,obj.SubnetMask);return checkFn(range,destIP[0])&&checkFn(range,destIP[1])&&checkFn(range,sourceIP[0])&&checkFn(range,sourceIP[1])})}function isBelongIPRange(start,end,ip){return start&&end?funcs.ipv4.subnet.belongNetworkRange({start:start,end:end},ip):start?start==ip:!!end&&end==ip}function prepareIP(ip){if(""==ip)return["0.0.0.0","255.255.255.255"];if(!funcs.is.ipv4Network(ip))return ip.split("-");var arrIP=ip.split("/"),addr=arrIP[0],mask=funcs.ipv4.mask["long"](arrIP[1]),range=funcs.ipv4.subnet.getNetworkRange(addr,mask);return[range.start,range.end]}function isAllRange(ip){return""==ip||"0.0.0.0/0"==ip}function isSupported(param){function getSupported(){var attrs=__flattenAttrs();return _.chain(attrs).keys().filter(function(path){return attrs[path].supported}).value()}return cache.supported||(cache.supported=getSupported()),_.contains(cache.supported,param)}function isRequired(param){function getRequired(){var attrs=__flattenAttrs();return _.chain(attrs).keys().filter(function(path){return attrs[path].required}).value()}return cache.required||(cache.required=getRequired()),_.contains(cache.required,param)}function __flattenAttrs(rootPath){var result={},attrs=rootPath?__getAttrsByPath(rootPath):attributes;return _.each(attrs,function(elem,key){if("__Template"!=key){var path=rootPath?rootPath+"."+key:key;elem.__Template?_.extend(result,__flattenAttrs(path)):result[path]=elem}}),result}function __getAttrsByPath(path){var result=null;return _.each(path.split("."),function(key){result=result?result[key]:attributes[key]}),result}var __autoconf="undefined"!=typeof autoconf?autoconf:{};if(!(this instanceof IPFilter))return new IPFilter(ipfilter,lan,attributes);var ipfilter=funcs.deepClone(ipfilter),lan=funcs.deepClone(lan),attributes=funcs.deepClone(attributes),cache={},actionMap=[{name:"act_allow",value:0},{name:"act_deny",value:1}],protoMap=[{name:"TCP/UDP",value:0},{name:"TCP",value:1},{name:"UDP",value:2},{name:"ICMP",value:3},{name:"all",value:4}],directionMap=[{name:"ipflt_lan_to_wan",value:1},{name:"ipflt_wan_to_lan",value:2},{name:"ipflt_lan_to_fw",value:3},{name:"ipflt_wan_to_fw",value:4}],directionMapDsysinit=[{name:"summary_devmode_router",value:1},{name:"WAN",value:2},{name:"LAN",value:3},{name:"GRE",value:4},{name:"IPsec",value:5},{name:"vpn_server_nav_pptp",value:6},{name:"vpn_server_nav_l2tp",value:7},{name:"openvpn_client",value:8},{name:"openvpn_server",value:9},{name:"ipip_nav",value:10}];return{getRules:getRules,getRule:getRule,getActions:getActions,getProtocols:getProtocols,getDirections:getDirections,getSourceDirections:getSourceDirections,getDestDirections:getDestDirections,getBiggestID:getBiggestID,makeRemoveList:makeRemoveList,validation:validation,conflicts:conflicts,accessWillLost:accessWillLost,isLocalRule:isLocalRule,getDefaultTemplate:getDefaultTemplate,isSupported:isSupported,isRequired:isRequired,isUniqueName:isUniqueName}}var _=__webpack_require__(4),funcs=__webpack_require__(5);funcs.is=__webpack_require__(12),funcs.ipv4=__webpack_require__(13),module.exports=IPFilter},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(310),converter:__webpack_require__(311)}},function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=function(){function getDefaultRule(attrs){var defaultModel=funcs.newConfig.makeDefaultModel(attrs);return defaultModel.Source.Iface="all",defaultModel.Dest.Ports&&(defaultModel.Dest.Ports={1:defaultModel.Dest.Ports}),defaultModel.Source.Ports&&(defaultModel.Source.Ports={1:defaultModel.Source.Ports}),defaultModel}function getProtocolList(allList,possibleList){return _.chain(allList).intersection(possibleList).map(function(proto){return{name:proto,value:proto}}).value()}function getEmptyIfaces(rules){var output=[];return _.each(rules,function(elem){elem.Source.Iface||output.push(elem.Name)}),output.join(", ")}function getUseSourcePorts(allUsePorts,currentRule,index){function filterVserverRule(rule,currentRule,index){var proto=currentRule.Proto,iface=currentRule.Source.Iface;if(("rtp"==rule.Section||"fax"==rule.Section)&&"TCP"==proto)return!0;if(rule.Transport&&"sip"==rule.Section){if("UDP"==rule.Transport&&"TCP"==proto)return!0;if("TCP"==rule.Transport&&"UDP"==proto)return!0}if("vserver"!=rule.Section&&"firewall"!=rule.Section)return!1;if(!_.isUndefined(index)&&rule.Id==index)return!0;if(!_.isUndefined(currentRule.__idLoopDNAT)&&rule.Id==currentRule.__idLoopDNAT)return!0;if("all"!=iface&&"all"!=rule.Iface&&iface!=rule.Iface)return!0;if("TCP/UDP"!=proto&&"TCP/UDP"!=rule.Proto&&proto!=rule.Proto)return!0;if(_.has(currentRule,"ids")){var ids=_.pluck(currentRule.ids,"__id"),loopDnat=_.pluck(currentRule.ids,"__idLoopDNAT");if(_.contains(ids,rule.Id)||_.contains(loopDnat,rule.Id))return!0}return!1}var output=[];return _.each(allUsePorts,function(rule){filterVserverRule(rule,currentRule,index)||output.push({startPort:rule.Ports.Start,endPort:rule.Ports.End})}),output}function isPrivateIP(lans,ip){function getPrivateSubnetRanges(lan){return _.map(lan,function(elem){return""!=elem.Address&&""!=elem.SubnetMask?funcs.ipv4.subnet.getNetworkRange(elem.Address,elem.SubnetMask):void 0})}var ranges=getPrivateSubnetRanges(lans);return _.some(ranges,function(range){return!!_.isUndefined(range)||funcs.ipv4.subnet.belongNetworkRange(range,ip)})}function validation(rule,index,config){function validationName(rule,index){function isUniqName(name){return!_.contains(usedNames(config.Rules,index),name)}var result=[];return isUniqName(rule.Name)||result.push("msg_error_value_is_not_uniq"),result}function validationDestIp(rule){var result=[],ips=funcs.fetchBranch(rule,"Dest.IP.");if(!ips||!ips.length||!ips[0])return result;var ip=ips[0];return funcs.is.ipv4(ip)||result.push("msg_invalid_ipv4"),result}function usedNames(rules,without){var result=[];return _.each(rules,function(elem,index){(_.isUndefined(without)||without!=elem.__id)&&result.push(elem.Name)}),result}return{name:validationName(rule,index),destIp:validationDestIp(rule)}}function ipValidation(addr,type,rule,inx){function getUsedAddrs(rule,inx){return rule?_.chain(rule.Source.IP).filter(function(r,i){return!!_.isUndefined(inx)||i!=inx}).value():[]}var publicIP="public"==type?addr:rule.Source.IP,privateIP="private"==type?addr:rule.Dest.IP[0];if(!funcs.is.ipv4(publicIP.split("/")[0])||!funcs.is.ipv4(privateIP))return null;if("public"==type&&rule){var usedAddrs=getUsedAddrs(rule,inx);if(_.some(_.compact(usedAddrs),function(elem){return addr==elem}))return"msg_ip_address_is_used"}if(_.isEmpty(publicIP)||_.isEmpty(privateIP))return null;if(_.isArray(publicIP)){if(_.some(publicIP,function(ip){ip=ip.split("/");var publicAddr=ip[0],publicMask=ip[1]?ip[1]:"32";if(_.isEmpty(publicAddr))return!1;var publicNetwork=funcs.ipv4.subnet.getNetworkRange(publicAddr,funcs.ipv4.mask["long"](publicMask));return funcs.ipv4.subnet.belongNetworkRange(publicNetwork,privateIP)}))return"ipsec_local_remote_intersect_msg"}else{publicIP=publicIP.split("/");var publicAddr=publicIP[0],publicMask=publicIP[1]?publicIP[1]:"32",publicNetwork=funcs.ipv4.subnet.getNetworkRange(publicAddr,funcs.ipv4.mask["long"](publicMask));if(funcs.ipv4.subnet.belongNetworkRange(publicNetwork,privateIP))return"ipsec_local_remote_intersect_msg"}return null}return{getDefaultRule:getDefaultRule,getProtocolList:getProtocolList,getEmptyIfaces:getEmptyIfaces,getUseSourcePorts:getUseSourcePorts,isPrivateIP:isPrivateIP,validation:validation,ipValidation:ipValidation}}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(input){function prepareRules(input){function getVserversRules(config){var rules=funcs.newConfig.normalize(funcs.fetchBranch(config,rulesPath));return _.chain(rules).map(function(rule,inst){return rule.__inst=inst,rule}).filter(function(rule){return!("DNAT"!=rule.Action&&"DNAT-"!=rule.Action||rule.Dest.Zone!=zonesPath.dest||rule.Source.Zone!=zonesPath.source||!rule.Ports.Dest[1]||-1==!rule.NAT.Port.Start||rule.Source.Iface==lanIface)}).value()}function getNATLoopbackRules(config,vserversRules){var rules=funcs.newConfig.normalize(funcs.fetchBranch(config,rulesPath));return _.map(vserversRules,function(rule){var natLoopDnat=_.findKey(rules,function(c){return!!(c.Source.Zone==zonesPath.dest&&c.Dest.Zone==zonesPath.dest&&"DNAT"==c.Action&&c.Source.Iface==lanIface&&c.Dest&&c.Dest.IPLinks&&c.Dest.IPLinks[1]&&(c.Dest.IPLinks[1].Link==zonesPath.source+"Interfaces."||~c.Dest.IPLinks[1].Link.indexOf("Connection"))&&c.NAT.Address.IPStart==rule.NAT.Address.IPStart&&c.Ports.Dest[1]&&c.Ports.Dest[1].PortStart==rule.Ports.Dest[1].PortStart&&c.Ports.Dest[1].PortEnd==rule.Ports.Dest[1].PortEnd&&c.NAT.Port.PortStart==rule.NAT.Port.PortStart&&c.NAT.Port.PortEnd==rule.NAT.Port.PortEnd)}),natLoopSnat=_.findKey(rules,function(c){var _c$Dest$Address$;return!(c.Source.Zone!=zonesPath.source||c.Dest.Zone!=zonesPath.dest||"SNAT"!=c.Action||c.Dest.Iface!=lanIface||!c.Source.IPLinks[1]||c.Source.IPLinks[1].Link!=lanIface||!c.NAT.IPLink||c.NAT.IPLink.Link!=zonesPath.source+"Interfaces."&&!~c.NAT.IPLink.Link.indexOf("Connection")||(null===(_c$Dest$Address$=c.Dest.Address[1])||void 0===_c$Dest$Address$?void 0:_c$Dest$Address$.IPStart)!=rule.NAT.Address.IPStart||!c.Ports.Dest[1]||c.Ports.Dest[1].PortStart!=rule.NAT.Port.PortStart||c.Ports.Dest[1].PortEnd!=rule.NAT.Port.PortEnd||-1!=c.NAT.Port.PortStart||-1!=c.NAT.Port.PortEnd)}),natProto=natLoopDnat?funcs.newConfig.normalize(rules[natLoopDnat].Proto):void 0;return{vserver:rule,natProto:natProto,natLoopDnat:natLoopDnat,natLoopSnat:natLoopSnat}})}function groupRules(rules){var result=[],groups=[];return rules&&rules.forEach(function(rule){var ruleId=rule.vserver?rule.vserver.__inst:rule.__inst,group=groups[rulesPath+ruleId+"."];result.push(group?[rule].concat(group):rule)}),result}var vserversRules=getVserversRules(input.config);return vserversRules=input.snatFlag?getNATLoopbackRules(input.config,vserversRules):vserversRules,groupRules(vserversRules)}function getProto(proto){var output=[],values=_.map(proto,function(elem){return elem.Value});return _.contains(values,"tcp")&&output.push("TCP"),_.contains(values,"udp")&&output.push("UDP"),output.join("/")}function getRulePorts(rule,type){function getPorts(rule,type){return"NAT.Port"==type?rule.NAT.Port:rule.Ports.Dest[1]}if(!_.isArray(rule))return{1:rule.vserver?getPorts(rule.vserver,type):getPorts(rule,type)};var ports=_.map(rule,function(elem){return elem.vserver?getPorts(elem.vserver,type):getPorts(elem,type)});return ports}function preparePort(ports){ports=funcs.newConfig.normalize(ports);var portString=[];return _.each(ports,function(port){if(port.PortStart&&-1!=port.PortStart){var portElem=port.PortStart.toString();port.PortEnd&&-1!=port.PortEnd&&(portElem+=":"+port.PortEnd.toString()),portString.push(portElem)}}),portString.join(",")}function getPort(port){return-1!=port&&0!=port&&port?port.toString():""}function getStartPort(obj,config){return-1!=obj.PortStart&&0!=obj.PortStart&&obj.PortStart?obj.PortStart.toString():-1!=obj.PortLink&&0!=obj.PortLink&&obj.PortLink?funcs.fetchBranch(config,obj.PortLink).toString():""}function getAddr(addrs){return _.chain(funcs.newConfig.normalize(addrs)).values().map(function(elem){var output="";return elem.IPStart&&(output+=elem.IPStart),output}).value()}function getIface(iface){return iface||"all"}function getUsedSourcePorts(config){function isURLFilterRule(rule){return rule.URLLists&&rule.URLLists.Links&&_.size(funcs.newConfig.normalize(rule.URLLists.Links))}var result=[],rules=funcs.newConfig.normalize(funcs.fetchBranch(config,rulesPath)),redirect=funcs.newConfig.normalize(funcs.fetchBranch(config,redirectPath)),trConfig=funcs.newConfig.normalize(funcs.fetchBranch(config,telnet)),redirectRules=[];return redirect&&(redirectRules=_.map(redirect,function(item){var rules=funcs.newConfig.normalize(item.RulesFirewall);return _.pluck(rules,"Link")}),redirectRules=_.flatten(redirectRules)),autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_52347&&trConfig&&result.push({Section:"TR069",Ports:{Start:trConfig.ConnectionRequestPort}}),_.each(rules,function(rule,id){if(!isURLFilterRule(rule)&&"SNAT"!=rule.Action&&rule.Source.Zone==zonesPath.source&&_.some(rule.CTState,function(elem){return["NEW","ESTABLISHED","RELATED"].includes(elem.Value)})&&!_.contains(redirectRules,rulesPath+id+".")){var input={Section:"firewall",Id:id,Iface:getIface(rule.Source.Iface),Proto:getProto(rule.Proto)},ports=funcs.newConfig.normalize(rule.Ports.Dest);_.each(ports,function(obj){input.Ports={Start:getStartPort(obj,config),End:getPort(obj.PortEnd)},result.push(_.clone(input))})}}),result}function getConns(wan,cfg){var list=[];return _.each(wan,function(obj,key){obj.Connection&&(_.contains(["PPPoEv6","IPv6oE","Bridge"],key)||_.each(obj.Connection,function(elem){"USB"==key&&(elem.Version&&"IPv6"==elem.Version||elem.InterfaceOnly)||list.push(elem)}))}),list}function getLanAddrs(input){var result=[];return _.each(input.LAN,function(elem){_.each(elem.IPv4.StaticIP,function(addr){result.push(addr)})}),result}function getSNATEnable(snatFlag,rules){var rule=_.isArray(rules)?rules[0]:rules;return snatFlag?!_.isEmpty(rule.natLoopDnat)&&!_.isEmpty(rule.natLoopSnat):void 0}function getType(pattern){switch(pattern){case"(VS)Custom":return"custom";case"(VS)HTTP":return"http";case"(VS)HTTPS":return"https";case"(VS)DNS":return"dns";case"(VS)SMTP":return"smtp";case"(VS)POP3":return"pop3";case"(VS)SSH":return"ssh";case"(VS)FTP":return"ftp";case"(VS)SFTP":return"sftp";case"(VS)Telnet":return"telnet";case"(VS)PPTP":return"pptp";case"(VS)PCAnyWhere":return"pcanywhere";case"(VS)VNC":return"vnc";case"(VS)TFTP":return"tftp";case"(VS)RDP":return"rdp";default:return"custom"}}function getVservRules(rule){return _.isArray(rule)?rule[0]:rule}var pattern=T({"->":["$input","Rules","Ifaces","UsedSourcePorts","LAN"],$input:":external",Rules:{"->":["$rule","$ruleVserv","Source","Dest","ids","__obj"],"{$rule, $index}":["$parent",function(p){return prepareRules(p.$input)}],$mainVserv:["$rule*",function(r){return getVservRules(r)}],$ruleVserv:["$mainVserv*",function(mv){return mv.vserver?mv.vserver:mv}],ids:{"->":!0,"{$rules}":["$parent",function(p){return _.isArray(p.$rule)?p.$rule:[p.$rule]}],__id:["$rules*",function(r){return r.vserver?r.vserver.__inst:r.__inst}],__idLoopDNAT:["$rules*",function(r){return r.natLoopDnat}],__idLoopSNAT:["$rules*",function(r){return r.natLoopSnat}]},__id:["$ruleVserv*",function(r){return r.__inst}],__idLoopDNAT:["$mainVserv*",function(r){return r.natLoopDnat}],__idLoopSNAT:["$mainVserv*",function(r){return r.natLoopSnat}],__protoObj:["$ruleVserv*",function(r){return funcs.newConfig.normalize(r.Proto)}],__protoNAT:["$mainVserv*",function(rule){return rule.natProto}],__addrObj:["$ruleVserv*",function(r){return funcs.newConfig.normalize(r.Source.Address)}],__obj:{"->":!0,"{$rules, $id}":["$parent",function(p){return _.isArray(p.$rule)?p.$rule:[p.$rule]}],$vserv:["$rules*",function(r){return r.vserver?r.vserver:r}],":":["$vserv*",function(r){return r.__inst}],__protoObj:["$vserv*",function(r){return funcs.newConfig.normalize(r.Proto)}],__addrObj:["$vserv*",function(r){return funcs.newConfig.normalize(r.Source.Address)}]},Enable:["$ruleVserv*",function(r){return r.Enable}],Name:["$ruleVserv*",function(r){return r.Name}],SNAT:["$parent","$rule*",function(p,r){return getSNATEnable(p.$input.snatFlag,r)}],Proto:["$ruleVserv*",function(r){return getProto(r.Proto)}],Type:["$ruleVserv*",function(r){return getType(r.Pattern)}],Source:{"->":["?","IP","Ports"],$rule:["$parent",function(p){return p.$ruleVserv}],$inputRule:["$parent",function(p){return p.$rule}],"?":["$rule",function(r){return!!r}],Iface:["$rule",function(r){return getIface(r.Source.Iface)}],IP:{"->":!0,$rule:["$parent",function(p){return p.$rule}],"{$addr}":["$rule",function(r){return getAddr(r.Source.Address)}],$return:["$addr",function(a){return a}]},Ports:{"->":!0,$rule:["$parent",function(p){return p.$inputRule}],$ports:["$rule*",function(r){return getRulePorts(r,"DestPort")}],":":"1",Start:["$ports*",function(ports){return preparePort(ports)}],End:""}},Dest:{"->":["?","IP","Ports"],$rule:["$parent",function(p){return p.$ruleVserv}],$inputRule:["$parent",function(p){return p.$rule}],"?":["$rule",function(r){return!!r}],IP:{"->":!0,$rule:["$parent",function(p){return p.$rule}],"{$addr}":["$rule",function(r){return getAddr("DNAT"==r.Action?[r.NAT.Address]:r.Dest.Address)}],$return:["$addr",function(a){return a}]},Ports:{"->":!0,$rule:["$parent",function(p){return p.$inputRule}],":":"1",$ports:["$rule",function(r){return getRulePorts(r,"NAT.Port")}],Start:["$ports*",function(ports){return preparePort(ports)}],End:""}}},UsedSourcePorts:["$input",function(i){return getUsedSourcePorts(i.config)}],Ifaces:{"->":!0,$config:["$parent",function(p){return p.$input.config}],$wan:["$config*",function(config){return wanConverter.cpeToNative.config(config)}],"{$conn}":["$config","$wan",function(cfg,w){return getConns(w,cfg)}],Name:["$conn*",function(c){return c.Name}],Value:["$conn*",function(c){return c.__Link}]},LAN:{"->":!0,$config:["$parent",function(p){return p.$input.config}],$lan:["$config",function(config){return lanConverter.cpeToNative.config(config)}],"{$addr}":["$lan*",function(lan){return getLanAddrs(lan)}],$return:["$addr",function(a){return a}]}});return pattern.build({$input:input})}function nativeToDsysinit(input){function getRules(rules){function getLoopDNAT(rule){var preparedRule={__id:rule.__idLoopDNAT,__protoObj:rule.__protoNAT,__ruleType:"natLoopBack",Action:"DNAT",Name:rule.Name,Type:rule.Type,Source:{Iface:lanIface,Zone:zonesPath.dest,Ports:rule.Source.Ports},Dest:{IP:rule.Dest.IP,Zone:zonesPath.dest,Ports:rule.Dest.Ports},DestLinks:"all"!=rule.Source.Iface?rule.Source.Iface:zonesPath.source+"Interfaces.",Direction:"PREROUTING",Enable:rule.SNAT,Proto:rule.Proto,Table:"NAT"};return preparedRule}function getLoopSNAT(rule){var preparedRule={__id:rule.__idLoopSNAT,__protoObj:rule.__protoNAT,__ruleType:"natLoopBack",Action:"SNAT",Name:rule.Name,Type:rule.Type,Source:{Zone:zonesPath.source,Ports:rule.Dest.Ports},Dest:{IP:rule.Dest.IP,Iface:lanIface,Zone:zonesPath.dest,Ports:rule.Source.Ports},DestLinks:"all"!=rule.Source.Iface?rule.Source.Iface:zonesPath.source+"Interfaces.",Direction:"POSTROUTING",Enable:rule.SNAT,Proto:rule.Proto,Table:"NAT"};return preparedRule}var result=[];return _.each(rules,function(rule){_.has(rule,"ids")?_.each(rule.ids,function(elem){var obj=funcs.deepClone(rule);obj.__id=elem.__id,obj.__idLoopDNAT=elem.__idLoopDNAT,obj.__idLoopSNAT=elem.__idLoopSNAT,rule.__obj&&rule.__obj[elem.__id]&&(obj.__protoObj=rule.__obj[elem.__id].__protoObj,obj.__addrObj=rule.__obj[elem.__id].__addrObj),obj.DestLinks="all"!=rule.Source.Iface?rule.Source.Iface:zonesPath.source+"Interfaces.",result.push(obj),_.has(obj,"SNAT")&&obj.SNAT&&rule.Enable&&(result.push(getLoopDNAT(obj)),result.push(getLoopSNAT(obj)))}):(rule.DestLinks="all"!=rule.Source.Iface?rule.Source.Iface:zonesPath.source+"Interfaces.",result.push(rule),_.has(rule,"SNAT")&&rule.SNAT&&rule.Enable&&(result.push(getLoopDNAT(rule)),result.push(getLoopSNAT(rule))))}),result}function getProto(proto,initProtoObj){var output={},values=[];return/TCP/.test(proto)&&values.push("tcp"),/UDP/.test(proto)&&values.push("udp"),_.each(values,function(value,index){var inst=_.findKey(initProtoObj,function(e){return e.Value==value})||"new_inst_"+index;output[inst]={Value:value}}),output}function getAddrs(addrs,initAddrsObj){var output={};return _.each(addrs,function(value,index){var inst=_.findKey(initAddrsObj,function(e){return e.IPStart==value})||"new_inst_"+index;output[inst]=value}),output}function preparePort(value){return""==value?-1:parseInt(value)}function getPattern(pattern){switch(pattern){case"custom":return"(VS)Custom";case"http":return"(VS)HTTP";case"https":return"(VS)HTTPS";case"dns":return"(VS)DNS";case"smtp":return"(VS)SMTP";case"pop3":return"(VS)POP3";case"ssh":return"(VS)SSH";case"ftp":return"(VS)FTP";case"sftp":return"(VS)SFTP";case"telnet":return"(VS)Telnet";case"pptp":return"(VS)PPTP";case"pcanywhere":return"(VS)PCAnyWhere";case"vnc":return"(VS)VNC";case"tftp":return"(VS)TFTP";case"rdp":return"(VS)RDP";default:return"(VS)Custom"}}var pattern=null,build=null;return pattern=T({"->":!0,$input:":external",Device:{Firewall:{IPv4:{Rules:{"->":["$rule","CTState","Ports","Dest","Source","NAT"],$input:["$root",function(r){return r.$input}],$rules:["$input",function(i){return i.Rules}],"{$rule, $i}":["$rules",function(rs){return getRules(rs)}],":":["$rule*","$i",function(r,i){return r.__id||"new_inst_"+i}],Enable:["$rule*",function(r){return r.Enable}],Name:["$rule*",function(r){return r.Name}],Action:["$rule*",function(r){return r.Action?r.Action:"DNAT"}],CTState:{"->":!0,"?":["$parent",function(parent){var _parent$$rule;return"natLoopBack"!=(null===(_parent$$rule=parent.$rule)||void 0===_parent$$rule?void 0:_parent$$rule.__ruleType)}],1:{Value:"NEW"},2:{Value:"ESTABLISHED"},3:{Value:"RELATED"}},NAT:{"->":["$rule","IPLink","Address","Port"],$rule:["$parent",function(p){return p.$rule}],$action:["$parent",function(p){return p.Action}],Address:{"->":["?"],"?":["$parent",function(p){return"DNAT"==p.$action}],IPStart:["$parent",function(p){return p.$rule.Dest.IP[0]}],IPEnd:""},IPLink:{"->":["$rule"],"?":["$parent",function(p){return"DNAT"!=p.$action}],$rule:["$parent",function(p){return p.$rule}],Link:["$rule*",function(r){return r.DestLinks}]},Port:{"->":["?","$ports"],"?":["$parent",function(p){return!!p.$rule&&"SNAT"!=p.$rule.Action}],$ports:["$parent",function(p){return p.$rule.Dest.Ports[1]}],PortStart:["$ports",function(p){return preparePort(p.Start)}],PortEnd:["$ports",function(p){return preparePort(p.End)}]}},Pattern:["$rule*",function(r){return getPattern(r.Type)}],Proto:["$rule*",function(r){return getProto(r.Proto,r.__protoObj)}],Ports:{"->":["?","$rule","Dest"],"?":["$parent",function(p){return!!p.$rule}],$rule:["$parent",function(p){
return p.$rule}],Dest:{"->":["$ports","1"],$ports:["$parent",function(p){return p.$rule.Source.Ports[1]}],1:{"->":!0,$ports:["$parent",function(p){return p.$ports}],PortStart:["$ports",function(p){return preparePort(p.Start)}],PortEnd:["$ports",function(p){return preparePort(p.End)}]}}},Dest:{"->":["?","$rule","Port","Address","IPLinks"],"?":["$parent",function(p){return!!p.$rule}],$rule:["$parent",function(p){return p.$rule}],$action:["$parent",function(p){return p.Action}],Zone:["$rule*",function(r){return r.Dest.Zone||zonesPath.dest}],Address:{"->":["$rule"],"?":["$parent",function(p){return"DNAT"!=p.$action}],"{$addr, $index}":["$parent",function(p){return p.$rule.Dest.IP}],":":["$index",function(i){return i+1}],IPStart:["$addr",function(a){return a}],IPEnd:""},IPLinks:{"->":["$rule","1"],"?":["$parent",function(p){return"DNAT"==p.$action}],$rule:["$parent",function(p){return p.$rule}],":":1,Link:["$rule*",function(r){return r.DestLinks}]},Iface:["$rule*",function(r){return r.Dest.Iface}]},Direction:["$rule*",function(r){var _r$Direction;return null!==(_r$Direction=r.Direction)&&void 0!==_r$Direction?_r$Direction:"PREROUTING"}],Source:{"->":["?","$rule","Address","IPLinks"],"?":["$parent",function(p){return!!p.$rule}],$rule:["$parent",function(p){return p.$rule}],Iface:["$rule",function(r){return"all"!=r.Source.Iface?r.Source.Iface:""}],Zone:["$rule*",function(r){return r.Source.Zone||zonesPath.source}],Address:{"->":!0,"{$addr, $index}":["$parent",function(p){return getAddrs(_.compact(p.$rule.Source.IP),p.$rule.__addrObj)}],":":["$index",function(i){return i}],IPStart:["$addr",function(a){return a}],IPEnd:""},IPLinks:{"->":["?"],$rule:["$parent",function(p){return p.$rule}],"?":["$rule",function(r){return _.has(r,"Action")&&"SNAT"==r.Action}],1:{Link:lanIface,UseSubnet:!0}}},Table:["$rule*",function(r){var _r$Table;return null!==(_r$Table=r.Table)&&void 0!==_r$Table?_r$Table:"NATFilter"}]}}}}}),build=pattern.build({$input:input})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),wanConverter=__webpack_require__(312),lanConverter=__webpack_require__(302),rulesPath=(__webpack_require__(315),"Device.Firewall.IPv4.Rules."),redirectPath="Device.Services.Redirect.",telnet="Device.Services.TR069.",zonesPath={source:"Device.Firewall.IPv4.Zones.2.",dest:"Device.Firewall.IPv4.Zones.3."},lanIface="Device.Network.Interface.Bridge.1.";module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";module.exports={cpeToNative:__webpack_require__(313),nativeToCpe:__webpack_require__(314)}},function(module,exports,__webpack_require__){"use strict";module.exports={config:__webpack_require__(234)}},function(module,exports,__webpack_require__){"use strict";module.exports={config:__webpack_require__(233)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getPassthroughInst(rootConfig){function convert(inst){if(!Object.keys(inst).length)return{};inst.Status&&delete inst.Status;var hasPPPoE=!!inst.Settings.AllowPPPoE;return inst.Settings={pppoe:hasPPPoE?inst.Settings.AllowPPPoE.Enable:void 0,ipsec:!inst.Settings.BlockIPSec,l2tp:!inst.Settings.BlockL2TP,pptp:!inst.Settings.BlockPPTP},inst}var _serviceRoot$,serviceRoot=funcs.newConfig.instanceObjectToArray(funcs.fetchBranch(rootConfig,paths.passthrough)),inst=convert(null!==(_serviceRoot$=serviceRoot[0])&&void 0!==_serviceRoot$?_serviceRoot$:{});return inst}function getRule(data,identifer){var rule;switch(identifer){case"sip":rule=funcs.fetchBranch(data,paths.settings+"SIP.");break;case"rtsp":rule=funcs.fetchBranch(data,paths.settings+"RTSP.");break;case"nath323":rule=funcs.fetchBranch(data,paths.settings+"NATH323.")}return _.isArray(rule)?rule.length>0?rule[0]:{Enable:!0}:rule?rule:{Enable:!1}}var pattern=T({"->":["$data","netfilter","passThrough","igmp","twinIp"],$data:":external",__deviceMode:["$root",function(r){return funcs.fetchBranch(r.$data,paths.deviceMode)}],igmp:{"->":!0,"?":["$igmp",function(igmp){return Boolean(igmp)}],$igmp:["$root",function(r){var _funcs$fetchBranch;return null!==(_funcs$fetchBranch=funcs.fetchBranch(r.$data,paths.igmp))&&void 0!==_funcs$fetchBranch?_funcs$fetchBranch:void 0}],$fakeIp:[function(){return __autoconf.BR2_PACKAGE_ANWEB_IGMPX_FAKE_IP_REQUEST}],enable:["$igmp*",function(i){return i.Enable}],mode:["$root",function(r){return funcs.fetchBranch(r.$data,paths.deviceMode)}],udpxyEnable:["$root","mode",function(r,m){return"Firewall"!=m&&funcs.fetchBranch(r.$data,paths.udpxy)}],version:["$igmp*",function(i){return i.Version}],zeroSrcAddr:["$igmp*","$fakeIp*",function(igmp){return"0.0.0.0"===igmp.TranslateToAddress}]},mld:{"->":!0,$mld:["$root",function(r){return funcs.fetchBranch(r.$data,paths.mld)}],"?":["$mld",function(m){return!!m}],enabled:["$mld*",function(m){return m.Enable}],version:["$mld*",function(m){return m.Version}]},netfilter:{netfilter:{"->":!0,$rules:["$root",function(r){return r.$data}],$sip:["$rules",function(r){return getRule(r,"sip")}],sip:["$sip",function(s){return s.Enable}],$rtsp:["$rules",function(r){return getRule(r,"rtsp")}],rtsp:["$rtsp",function(r){return r.Enable}],$nath323:["$rules",function(r){return __autoconf.BR2_PACKAGE_ANWEB_NAT_H323?getRule(r,"nath323"):void 0}],nath323:["$nath323*",function(nh){return nh.Enable}]}},passThrough:["$root",function(r){return getPassthroughInst(r.$data)}],twinIp:{"->":["?"],$data:["$root",function(r){return r.$data}],$twinIpSupport:["$root",function(r){return null!=funcs.fetchBranch(r.$data,paths.twinIp)}],$twinIp:["$root",function(r){return funcs.newConfig.normalize(funcs.fetchBranch(r.$data,paths.twinIp))}],$key:["$twinIp",function(tp){return _.size(tp)?_.keys(tp)[0]:void 0}],"?":["$twinIpSupport",function(tps){return!!tps}],$rule:["$twinIp*","$key",function(tp,k){return _.size(tp)?tp[k]:void 0}],__id:["$key*",function(k){return k}],enable:["$rule*",function(r){return!!r&&r.Enable}],mac:["$rule*",function(r){return r?r.ClientMAC:""}],wanGroup:["$rule*",function(r){return r?r.WANGroup:""}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getPassthrough(nativeConfig){function convertSettings(instOriginal){var inst=angular.copy(instOriginal);return inst.Enable=!0,inst.Settings={},"boolean"==typeof instOriginal.Settings.pppoe&&(inst.Settings.AllowPPPoE={Enable:instOriginal.Settings.pppoe}),isFirewallMode||(inst.Settings.BlockIPSec=!instOriginal.Settings.ipsec,inst.Settings.BlockL2TP=!instOriginal.Settings.l2tp,inst.Settings.BlockPPTP=!instOriginal.Settings.pptp),delete inst.__id,inst}var inst=nativeConfig.passThrough,isFirewallMode="Firewall"==nativeConfig.__deviceMode,instConverted=null;return inst&&"__id"in inst?(inst=angular.copy(inst),instConverted=_defineProperty2["default"]({},inst.__id,convertSettings(inst))):void 0}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Network:{Settings:{SIP:{"->":!0,Enable:["$root",function(r){return r.$data.netfilter.netfilter.sip}]},RTSP:{"->":!0,Enable:["$root",function(r){return r.$data.netfilter.netfilter.rtsp}]},NATH323:{"->":["?"],"?":["$root",function(r){return __autoconf.BR2_PACKAGE_ANWEB_NAT_H323}],Enable:["$root",function(r){return r.$data.netfilter.netfilter.nath323}]}}},Services:{"->":!0,IGMPX:{"->":!0,$igmp:["$root",function(r){return r.$data.igmp}],$fakeIp:[function(){return __autoconf.BR2_PACKAGE_ANWEB_IGMPX_FAKE_IP_REQUEST}],Enable:["$igmp*",function(i){return i.enable}],Version:["$igmp*",function(i){return i.version}],TranslateToAddress:["$igmp*","$fakeIp*",function(igmp){return igmp.zeroSrcAddr?"0.0.0.0":""}]},MLDProxy:{"->":!0,$mld:["$root",function(r){return r.$data.mld}],"?":["$mld",function(m){return!!m}],Enable:["$mld*",function(m){return m.enabled}],Version:["$mld*",function(m){return m.version}]},TwinIP:{"->":!0,$data:["$root",function(r){return r.$data}],$twinIp:["$data",function(d){return d.twinIp}],":":["$twinIp*",function(r){return r.enable?r.__id||"new_inst_1":void 0}],Enable:["$twinIp*",function(r){return r.enable}],ClientMAC:["$twinIp*",function(r){return r.mac}],WANGroup:["$twinIp*",function(r){return r.wanGroup}]},Passthrough:["$root",function(r){return getPassthrough(r.$data)}]}}});return pattern.build({$data:data})}var _interopRequireDefault=__webpack_require__(7),_defineProperty2=_interopRequireDefault(__webpack_require__(235)),T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={settings:"Device.Network.Settings.",igmp:"Device.Services.IGMPX.",udpxy:"Device.Services.Udpxy.Enable",mld:"Device.Services.MLDProxy.",twinIp:"Device.Services.TwinIP.",passthrough:"Device.Services.Passthrough.",deviceMode:"Device.DeviceInfo.DeviceMode"},__autoconf="undefined"!=typeof autoconf?autoconf:{};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(315)}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(323)}},function(module,exports,__webpack_require__){"use strict";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2["default"](target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}var _interopRequireDefault=__webpack_require__(7),_defineProperty2=_interopRequireDefault(__webpack_require__(235));!function(){function dsysinitToNative(data,attrs){function getProtocol(pattern,origin){if(pattern&&pattern.indexOf("(RA)")>-1){var protocol=pattern.slice(4);if("Samba"==protocol)return"SMB";if("Telnet"==protocol)return"TELNET";if("Smart"==protocol)return"domoticz_nav";if("ICMP"==protocol)return"ICMP"}switch(origin){case ftpPath:return"FTP";case domoticzPath:return"domoticz_nav";case transmissionPath:return"Transmission";case sshPath:return"SSH";case telnetPath:return"TELNET";case tr069Path:return"TR"}return""}function getSourcePort(port,protocol,rootData,attrs){if(port.PortLink){var portLink=funcs.fetchBranch(rootData,port.PortLink.replace(/\.$/,""));if(portLink)return portLink.toString()}return port.PortStart>-1?port.PortStart.toString():getPortForProtocol(protocol,rootData,attrs)}function getDestPort(port,protocol,rootData,attrs){if(port.PortLink){var portOnLink=funcs.fetchBranch(rootData,port.PortLink.replace(/\.$/,""));return portOnLink&&portOnLink.toString()}return port.PortStart>-1?port.PortStart.toString():getPortForProtocol(protocol,rootData,attrs)}function getPortForProtocol(protocol,rootData,attrs){switch(protocol){case"FTP":return funcs.fetchBranch(rootData,ftpPath+"Port").toString();case"TELNET":return attrs.SUPPORT_TELNET?funcs.fetchBranch(rootData,telnetPath+"Port").toString():null;case"Transmission":return funcs.fetchBranch(rootData,transmissionPath+"RPCPort").toString();case"domoticz_nav":return funcs.fetchBranch(rootData,domoticzPath+"SSLPort").toString();case"SSH":return attrs.SUPPORT_SSH?funcs.fetchBranch(rootData,sshPath+"Port").toString():null;case"ICMP":return"99";case"TR":return funcs.fetchBranch(rootData,tr069Path+"ConnectionRequestPort").toString();default:return""}}function getIface(iface){return iface||"auto"}function getAddr(addrs,ipv6){if(addrs=_.values(funcs.newConfig.normalize(addrs)),ipv6)return addrs[0]&&""!=addrs[0].IPStart?addrs[0].IPStart:"::";var addr=addrs[0]?addrs[0].IPStart.split("/"):[""];return addr[0]&&""!=addr[0]||(addr[0]="0.0.0.0"),addr[0]}function getMask(addrs,v6){if(v6)return"";addrs=_.values(funcs.newConfig.normalize(addrs));var addr=addrs[0]?addrs[0].IPStart.split("/"):[""],mask=addr[1]?funcs.ipv4.mask["long"](addr[1]):""!=addr[0]?funcs.ipv4.mask["long"](0):"0.0.0.0";return mask}function getIPList(addrs){var addrList=funcs.newConfig.normalize(addrs);return _.map(addrList,function(elem,key){return{Addr:elem.IPStart,__id:key}})}function getConns(wan,cfg){var list=[];return _.each(wan,function(obj,key){obj.Connection&&"Bridge"!=key&&_.each(obj.Connection,function(elem){"USB"==key&&elem.InterfaceOnly||list.push(_.extend(elem,{Type:key}))})}),list}function getRaccessRules(firewall,attrs){var result=[],_loop=function(type){var fw=firewall[type],IsIPv6="IPv6"==type,zones=IsIPv6?zonesPath.v6:zonesPath.v4,rules=funcs.newConfig.normalize(fw.Rules),output=[];output=Object.keys(rules).map(function(__id){return _objectSpread(_objectSpread({},rules[__id]),{},{__id:__id,IsIPv6:IsIPv6})}).filter(function(rule){var action=IsIPv6?["DNAT","ACCEPT"]:["DNAT"];return!(!(action.includes(rule.Action)&&rule.Dest.Zone==zones.dest&&rule.Source.Zone==zones.source&&["tcp","icmp","ipv6-icmp"].includes(rule.Proto[1].Value)&&/^\(RA\)/.test(rule.Pattern))||rule.Origin||!rule.Ports.Dest[1]&&"(RA)ICMP"!=rule.Pattern)}),result=result.concat(output)};for(var type in firewall)_loop(type);return result}function getCustomRules(rules){return _.chain(rules).filter(function(rule){return""==rule.Origin&&!/(RA)/.test(rule.Pattern)&&rule.Source.Zone==zonesPath.v4.source&&Object.keys(rule.Ports.Dest).length>1}).map(function(rule){return rule.Section="DNAT"!=rule.Action?"ipfilter":"vservers",rule}).value()}function getUsedSourcePorts(data){var rules=funcs.newConfig.normalize(funcs.fetchBranch(data,rulesPath)),rulesTR69=funcs.newConfig.normalize(funcs.fetchBranch(data,tr069Path)),customRules=getCustomRules(rules),result=[];return _.each(customRules,function(rule){var ports=funcs.newConfig.normalize(rule.Ports.Dest);_.each(ports,function(port){result.push({Section:rule.Section,Ports:{Start:-1!=port.PortStart?port.PortStart:void 0,End:-1!=port.PortEnd?port.PortEnd:void 0}})})}),_.size(rulesTR69)&&result.push({Section:"tr69",Ports:{Start:rulesTR69.ConnectionRequestPort}}),result}var pattern=T({"->":["$data","$attrs","Rules","Ifaces"],$data:":external",$attrs:":external",Rules:{"->":["$rule","Ports"],"{$rule}":["$parent",function(p){return getRaccessRules(funcs.fetchBranch(p.$data,firewallPath),p.$attrs)}],__id:["$rule*",function(r){return r.__id}],Origin:["$rule*",function(r){return r.Origin}],Iface:["$rule*",function(r){return getIface(r.Source.Iface)}],IsIPv6:["$rule*",function(r){return r.IsIPv6}],IsInitIPv6:["$rule*",function(r){return r.IsIPv6}],IPs:["$rule*","$root","IsIPv6",function(r,root,v6){return root.$attrs&&root.$attrs.SUPPORT_MULTI_IP?void 0:getAddr(r.Source.Address,v6)}],Mask:["$rule*","$root","IsIPv6",function(r,root,v6){return root.$attrs&&root.$attrs.SUPPORT_MULTI_IP?void 0:getMask(r.Source.Address,v6)}],IPList:["$rule*","$root",function(r,root){return root.$attrs&&root.$attrs.SUPPORT_MULTI_IP?getIPList(r.Source.Address):void 0}],Ports:{"->":!0,$rule:["$parent",function(p){return p.$rule}],Source:["$rule*","$root",function(r,root){return"(RA)ICMP"!=r.Pattern?getSourcePort(r.Ports.Dest[1],getProtocol(r.Pattern,r.Origin),root.$data,root.$attrs):""}],Dest:["$rule*","$root",function(r,root){return getDestPort(r.NAT.Port,getProtocol(r.Pattern,r.Origin),root.$data,root.$attrs)}]},Protocol:["$rule*",function(r){return getProtocol(r.Pattern,r.Origin)}],Enable:["$rule*",function(r){return r.Enable}],Name:["$rule*",function(r){return r.Name}],__IPVersion:["$rule*",function(r){return r.IsIPv6?"IPv6":"IPv4"}]},Ifaces:{"->":!0,$config:["$parent",function(p){return p.$data}],$wan:["$config*",function(config){return wanConverter.cpeToNative.config(config)}],"{$conn}":["$config","$wan",function(cfg,w){return getConns(w,cfg)}],Name:["$conn*",function(c){return c.Name}],Link:["$conn*",function(c){return c.__Link}],SubLink:["$conn*",function(c){return c.__LinkSub}],Type:["$conn*",function(c){return c.Type}],Version:["$conn*",function(c){return c.Version}]},UsedSourcePorts:["$data",function(d){return getUsedSourcePorts(d)}],AvailIPv6:["$data","$attrs",function(d,a){return!_.isUndefined(d.Device.Firewall.IPv6)&&!a.SUPPORT_KOREA}],maxInst:["$data",function(d){return funcs.fetchBranch(d,"Device.Firewall.IPv4.Rules.max_instance")}]});return pattern.build({$data:data,$attrs:attrs})}function attrsToNative(data){function getProtocols(defined){var protocols=[];return defined.http&&protocols.push({Name:"HTTP",Value:(defined.ertelecom?"8080":defined.http_port)||"80",Source:defined.korea&&"8080",Link:defined.http_port_link}),defined.https&&protocols.push({Name:"HTTPS",Value:defined.https_port||"443",Source:defined.custom_partner&&"8443",Link:defined.https_port_link}),(defined.bcm_rlx||defined.custom_partner||defined.custom_rst)&&protocols.push({Name:"ICMP",Value:"99",Source:""}),defined.ftp&&protocols.push({Name:"FTP",Value:defined.ftp_port?defined.ftp_port:"21",Link:defined.ftp_port_link}),defined.telnet&&protocols.push({Name:"TELNET",Value:defined.telnet_port?defined.telnet_port:"23",Link:defined.telnet_port_link}),defined.samba&&protocols.push({Name:"SMB",Value:"445"}),defined.transmission_port&&protocols.push({Name:"Transmission",Value:defined.transmission_port,Link:defined.transmission_port_link}),defined.domoticz&&!_.isUndefined(defined.domoticz_port)&&protocols.push({Name:"domoticz_nav",Value:defined.domoticz_port,Link:defined.domoticz_port_link}),!defined.ssh||_.isUndefined(defined.ssh_port)||defined.custom_partner||protocols.push({Name:"SSH",Value:defined.ssh_port,Link:defined.ssh_port_link}),defined.custom_partner&&protocols.push({Name:"TR",Value:defined.tr_port,Link:defined.tr_port_link}),protocols}function getSystemPorts(data){var ports=[];return data.SUPPORT_CUSTOM_GOODLINE&&(ports.push("64010"),ports.push("61040")),ports}var pattern=T({"->":["$data","Defined","Protocols","System_ports"],$data:":external",Defined:{"->":!0,$consts:["$parent",function(p){return p.$data}],korea:["$consts",function(c){return c.SUPPORT_KOREA}],ertelecom:["$consts",function(c){return c.SUPPORT_ERTELECOM}],custom_partner:["$consts",function(c){return c.CUSTOM_PARTNER_39065}],custom_rst:["$consts",function(c){return c.CUSTOM_ROSTELECOM_42512}],domoticz:["$consts",function(c){return c.SUPPORT_DOMOTICZ}],telnet:["$consts",function(c){return c.SUPPORT_TELNET}],ssh:["$consts",function(c){return c.SUPPORT_SSH}],http:["$consts",function(c){return c.SUPPORT_HTTP}],https:["$consts",function(c){return c.SUPPORT_HTTPS}],ftp:["$consts",function(c){return c.SUPPORT_FTP}],samba:["$consts",function(c){return c.SUPPORT_SAMBA}],bcm:["$consts",function(c){return c.SUPPORT_BCM}],rlx_modem:["$consts",function(c){return c.SUPPORT_RLX&&c.SUPPORT_MODEMS}],https_support:["$consts",function(c){return c.SUPPORT_HTTPS}],iface_support:["$consts",function(c){return c.SUPPORT_REMOTE_ACCESS_WAN_IFACES||c.SUPPORT_BCM||c.SUPPORT_MODEMS}],has_transmission_rule:["$consts",function(c){return c.hasTorrentRule}],transmission_port:["$consts",function(c){return c.rpcPort}],transmission_port_link:["$consts",function(c){return c.rpcPortLink}],ftp_port:["$consts",function(c){return c.ftpPort}],ftp_port_link:["$consts",function(c){return c.ftpPortLink}],telnet_port:["$consts",function(c){return c.telnetPort}],telnet_port_link:["$consts",function(c){return c.telnetPortLink}],domoticz_port:["$consts",function(c){return c.domoticzPort}],domoticz_port_link:["$consts",function(c){return c.domoticzPortLink}],ssh_port:["$consts",function(c){return c.sshPort}],ssh_port_link:["$consts",function(c){return c.sshPortLink}],tr_port:["$consts",function(c){return c.trPort}],tr_port_link:["$consts",function(c){return c.trPortLink}],http_port:["$consts",function(c){return c.httpPort}],http_port_link:["$consts",function(c){return c.httpPortLink}],https_port:["$consts",function(c){return c.httpsPort}],https_port_link:["$consts",function(c){return c.httpsPortLink}]},Protocols:["Defined",function(d){return getProtocols(d)}],__hasTransmissionRule:["$data",function(d){return d.hasTorrentRule}],__hasDomoticzRule:["$data",function(d){return d.hasDomoticzRule}],SystemPorts:["$data",function(d){return getSystemPorts(d)}],BackupStorage:{disabled:{ipv4:{},ipv6:{Mask:"",Ports:{Source:"80"}}},enabled:{ipv4:{IPs:"0.0.0.0",Mask:"0.0.0.0"},ipv6:{IPs:"::",Mask:"",Ports:{Source:"80"}}}}});return pattern.build({$data:data})}function nativeToDsysinit(data,attrs){function getID(rule){return _.has(rule,"IsInitIPv6")&&rule.IsIPv6!=rule.IsInitIPv6?"+1":rule.__id||"+1"}function getPattern(protocol){if(protocol){var protocol=protocol;return"SMB"==protocol&&(protocol="Samba"),"TELNET"==protocol&&(protocol="Telnet"),"domoticz_nav"==protocol&&(protocol="Smart"),"(RA)"+protocol}}function getAddr(isIPv6,ip,mask){return isIPv6?"::"==ip?{}:{1:{IPStart:ip}}:"0.0.0.0"==ip&&"0.0.0.0"==mask?{}:{1:{IPStart:ip+"/"+funcs.ipv4.mask["short"](mask)}}}function getAddrList(addrs){var result={};return _.each(addrs,function(elem,key){var index=_.has(elem,"__id")?elem.__id:"new_addr_"+key;result[index]={IPStart:elem.Addr}}),result}function getProto(rule){return"ICMP"==rule.Protocol?rule.IsIPv6?{Value:"ipv6-icmp",Type:{1:{Value:127},2:{Value:128}}}:{Value:"icmp"}:{Value:"tcp"}}var pattern=T({"->":["$data","$attrs","Device"],$data:":external",$attrs:":external",Device:{Firewall:{"->":["$data","Rules"],$data:["$root",function(r){return r.$data}],":":["$data",function(d){return d.IsIPv6?"IPv6":"IPv4"}],Rules:{"->":["$rule","Proto","Ports","Dest","NAT","Source"],$rule:["$root",function(r){return r.$data}],":":["$rule*",function(r){return getID(r)}],Enable:["$rule*",function(r){return r.Enable}],Action:["$rule*",function(r){return r.IsIPv6?"ACCEPT":"DNAT"}],Pattern:["$rule*",function(r){return getPattern(r.Protocol)}],CTState:{1:{Value:"NEW"},2:{Value:"ESTABLISHED"},3:{Value:"RELATED"}},Proto:{"->":!0,$rule:["$parent",function(p){return p.$rule}],$proto:["$rule",function(r){return getProto(r)}],":":"1",Value:["$proto*",function(p){return p.Value}],Type:["$proto*",function(p){return p.Type}]},Ports:{"->":["$rule","$port","Dest","Source"],$rule:["$parent",function(p){return p.$rule}],$port:["$parent",function(p){return p.$rule.Ports}],Dest:{"->":["$port","?","1"],$port:["$parent",function(p){return p.$port.Source}],"?":["$parent",function(p){return"ICMP"!=p.$rule.Protocol}],1:{"->":!0,PortStart:["$parent",function(p){return parseInt(p.$port)?parseInt(p.$port):-1}],PortLink:["$parent",function(p){return parseInt(p.$port)?"":p.$port}]}}},Dest:{"->":["$rule","IPLinks"],$rule:["$parent",function(p){return p.$rule}],Zone:["$rule",function(r){return r.IsIPv6?zonesPath.v6.dest:zonesPath.v4.dest}],IPLinks:{"->":["$rule","1"],$iface:["$parent",function(p){return p.$rule.Iface}],$zone:["$parent",function(p){return p.$rule.IsIPv6?zonesPath.v6.source:zonesPath.v4.source}],1:{"->":!0,Link:["$parent",function(p){return"auto"==p.$iface?"".concat(p.$zone,"Interfaces."):p.$iface}]}}},Direction:"PREROUTING",NAT:{"->":["$rule","Address","IPLink"],$rule:["$parent",function(p){return p.$rule}],IPLink:{"->":!0,"?":["$parent",function(p){return!p.$rule.IsIPv6}],Link:"Device.Network.Interface.Bridge.1."},Port:{"->":!0,$rule:["$root",function(r){return r.$data}],PortStart:["$rule",function(r){return"ICMP"!=r.Protocol&&parseInt(r.Ports.Dest)?parseInt(r.Ports.Dest):-1}],PortLink:["$rule",function(r){return"ICMP"==r.Protocol||parseInt(r.Ports.Dest)?"":r.Ports.Dest}]}},Source:{"->":["$rule","Address"],$rule:["$parent",function(p){return p.$rule}],Zone:["$rule",function(r){return r.IsIPv6?zonesPath.v6.source:zonesPath.v4.source}],Iface:["$rule",function(r){return"auto"!=r.Iface?r.Iface:""}],Address:["$rule","$root",function(r,root){return root.$attrs&&root.$attrs.SUPPORT_MULTI_IP?getAddrList(r.IPList):getAddr(r.IsIPv6,r.IPs.toLowerCase(),r.Mask)}]},Name:["$rule*",function(r){return r.Name}],Table:"NATFilter"}}}});return pattern.build({$data:data,$attrs:attrs})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),wanConverter=__webpack_require__(312),rulesPath=(__webpack_require__(324),"Device.Firewall.IPv4.Rules."),firewallPath="Device.Firewall.",zonesPath={v4:{source:"Device.Firewall.IPv4.Zones.2.",dest:"Device.Firewall.IPv4.Zones.1."},destVservers:"Device.Firewall.IPv4.Zones.3.",v6:{source:"Device.Firewall.IPv6.Zones.2.",dest:"Device.Firewall.IPv6.Zones.1."}},ftpPath="Device.Services.FTP.",telnetPath="Device.Services.Telnet.",transmissionPath="Device.Services.Transmission.",domoticzPath="Device.Services.Domoticz.",sshPath="Device.Services.SSH.",tr069Path="Device.Services.TR069.";module.exports={dsysinitToNative:dsysinitToNative,attrsToNative:attrsToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getSNATEnable(rules,snatFlag,enableDefault){return snatFlag?_.isUndefined(rules.NAT1)||_.isUndefined(rules.NAT2)?!_.isUndefined(enableDefault)&&!rules.DMZ.Enable&&enableDefault:rules.NAT1.Enable&&rules.NAT2.Enable:void 0}function getRules(rules){if(rules=funcs.newConfig.normalize(rules),0==_.size(rules))return{DMZ:defaultRule("DNAT")};var dmzRules={};return Object.entries(rules).forEach(function(_ref){var _rule$Dest,_rule$Dest$IPLinks$,_rule$Dest2,_rule$Dest2$IPLinks$,_rule$NAT,_rule$NAT$IPLink,_ref2=_slicedToArray2["default"](_ref,2),key=_ref2[0],rule=_ref2[1],destAddr=funcs.newConfig.normalize("DNAT"==rule.Action?rule.NAT.Address:rule.Dest.Address),sourceAddr=funcs.newConfig.normalize(rule.Source.Address),proto=funcs.newConfig.normalize(rule.Proto),destPorts=funcs.newConfig.normalize(rule.Ports.Dest);_.size(proto)>0||(rule.Source.Zone==zonesPath.wan&&rule.Dest.Zone==zonesPath.lan&&"DNAT"==rule.Action&&(null===(_rule$Dest=rule.Dest)||void 0===_rule$Dest?void 0:null===(_rule$Dest$IPLinks$=_rule$Dest.IPLinks[1])||void 0===_rule$Dest$IPLinks$?void 0:_rule$Dest$IPLinks$.Link)==zonesPath.wan+"Interfaces."&&_.isEmpty(destPorts)&&-1==rule.NAT.Port.PortStart&&0==_.size(sourceAddr)&&"(FW)DMZ"==rule.Pattern&&(dmzRules.DMZ=rule,dmzRules.DMZ.__index=key),rule.Source.Zone==zonesPath.lan&&rule.Dest.Zone==zonesPath.lan&&"DNAT"==rule.Action&&rule.Source.Iface==ifaces.lan&&0==_.size(destPorts)&&-1==rule.NAT.Port.PortStart&&0==_.size(sourceAddr)&&(null===(_rule$Dest2=rule.Dest)||void 0===_rule$Dest2?void 0:null===(_rule$Dest2$IPLinks$=_rule$Dest2.IPLinks[1])||void 0===_rule$Dest2$IPLinks$?void 0:_rule$Dest2$IPLinks$.Link)==zonesPath.wan+"Interfaces."&&(dmzRules.NAT1=rule,dmzRules.NAT1.__index=key),rule.Source.Zone==zonesPath.wan&&rule.Dest.Zone==zonesPath.lan&&"SNAT"==rule.Action&&rule.Dest.Iface==ifaces.lan&&0==_.size(destPorts)&&-1==rule.NAT.Port.PortStart&&1==_.size(destAddr)&&rule.Source.IPLinks[1].Link==ifaces.lan&&(null===(_rule$NAT=rule.NAT)||void 0===_rule$NAT?void 0:null===(_rule$NAT$IPLink=_rule$NAT.IPLink)||void 0===_rule$NAT$IPLink?void 0:_rule$NAT$IPLink.Link)==zonesPath.wan+"Interfaces."&&(dmzRules.NAT2=rule,dmzRules.NAT2.__index=key))}),_.isUndefined(dmzRules.DMZ)?{DMZ:defaultRule("DNAT")}:dmzRules}function defaultRule(action){return"DNAT"==action?{Enable:!1,NAT:{Address:{IPStart:""}}}:{Enable:!1,Dest:{Address:{1:{IPStart:""}}}}}var pattern=T({"->":["$data","dmz","superDmz"],$data:":external",dmz:{"->":!0,$data:["$parent",function(p){return p.$data}],$snatFlag:["$data",function(d){return d.snatFlag}],$snatDefaultEnable:["$data",function(d){return d.snatDefaultEnable}],$dmzRules:["$data",function(d){return getRules(d.data.Device.Firewall.IPv4.Rules)}],enable:["$dmzRules",function(d){return d.DMZ.Enable}],enable_snat:["$data","$dmzRules",function(data,rules){return getSNATEnable(rules,data.snatFlag,data.snatDefaultEnable)}],ip:["$dmzRules",function(d){return d.DMZ.NAT.Address.IPStart}],__indexDMZRule:["$dmzRules",function(d){return _.isUndefined(d.DMZ.__index)?"+1":d.DMZ.__index}],__indexNATLoopback1:["$dmzRules","$snatFlag",function(d,flag){return flag?_.isUndefined(d.NAT1)?"+2":d.NAT1.__index:void 0}],__indexNATLoopback2:["$dmzRules","$snatFlag",function(d,flag){return flag?_.isUndefined(d.NAT2)?"+3":d.NAT2.__index:void 0}]},superDmz:{"->":["?"],$superDmzSupport:["$parent",function(p){return null!=funcs.fetchBranch(p.$data.data,"Device.Services.TwinIP.")}],$superDmz:["$parent",function(p){return funcs.newConfig.normalize(funcs.fetchBranch(p.$data.data,"Device.Services.TwinIP."))}],$key:["$superDmz",function(sdmz){return _.size(sdmz)?_.keys(sdmz)[0]:void 0}],"?":["$superDmzSupport",function(sdmzs){return!!sdmzs}],$rule:["$superDmz","$key",function(sdmz,k){return _.size(sdmz)?sdmz[k]:void 0}],__indexSuperDmz:["$key",function(k){return k?k:"+1"}],enable:["$rule",function(r){return!!r&&r.Enable}],mac:["$rule",function(r){return r?r.ClientMAC:""}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getSuperDmz(sdmzRule){var result={};return _.has(sdmzRule,"__indexSuperDmz")&&sdmzRule.enable&&(result[sdmzRule.__indexSuperDmz]=sdmzRule),result}function getRules(rule){var index,result={};return _.has(rule,"__indexDMZRule")&&rule.enable&&(index=rule.__indexDMZRule,result[index]=getDMZRule(rule)),_.has(rule,"__indexNATLoopback1")&&rule.enable&&rule.enable_snat&&(index=rule.__indexNATLoopback1,result[index]=getNAT1Rule(rule)),_.has(rule,"__indexNATLoopback2")&&rule.enable&&rule.enable_snat&&(index=rule.__indexNATLoopback2,result[index]=getNAT2Rule(rule)),result}function getDMZRule(rule){return{Action:"DNAT",Pattern:"(FW)DMZ",Source:{Iface:"",Zone:zonesPath.wan},Dest:{IPLinks:{1:{Link:zonesPath.wan+"Interfaces."}},Zone:zonesPath.lan},Direction:"PREROUTING",NAT:{Address:{IPStart:rule.ip}},Enable:rule.enable,Table:"NATFilter"}}function getNAT1Rule(rule){return{Action:"DNAT",Pattern:"(FW)DMZ",Dest:{IPLinks:{1:{Link:zonesPath.wan+"Interfaces."}},Zone:zonesPath.lan},Direction:"PREROUTING",NAT:{Address:{IPStart:rule.ip}},Source:{Iface:ifaces.lan,Zone:zonesPath.lan},Enable:rule.enable_snat,Table:"NAT"}}function getNAT2Rule(rule){return{Action:"SNAT",Pattern:"(FW)DMZ",Dest:{Address:{1:{IPStart:rule.ip}},Iface:ifaces.lan,Zone:zonesPath.lan},Direction:"POSTROUTING",NAT:{IPLink:{Link:zonesPath.wan+"Interfaces."}},Source:{IPLinks:{1:{Link:ifaces.lan,UseSubnet:!0}},Zone:zonesPath.wan},Enable:rule.enable_snat,Table:"NAT"}}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Firewall:{IPv4:{"->":!0,Rules:["$root",function(r){return getRules(r.$data.dmz)}]}},Services:{TwinIP:{"->":["?"],$data:["$root",function(r){return r.$data}],$superDmz:["$data",function(d){return d.superDmz}],"?":["$superDmz",function(sd){return!!sd}],"{$rule, $i}":["$superDmz",function(sd){return getSuperDmz(sd)}],":":["$rule*","$i*",function(r,i){return i}],Enable:["$rule*",function(r){return r.enable}],ClientMAC:["$rule*",function(r){return r.mac}],WANGroup:["$rule*",function(r){return wanGroup}]}}}});return pattern.build({$data:data})}var _interopRequireDefault=__webpack_require__(7),_slicedToArray2=_interopRequireDefault(__webpack_require__(226)),T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit};var zonesPath={wan:"Device.Firewall.IPv4.Zones.2.",lan:"Device.Firewall.IPv4.Zones.3."},ifaces={wan:"Device.Network.Interface.Ethernet.2.",lan:"Device.Network.Interface.Bridge.1."},wanGroup="Device.Network.Group.1."},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(326)}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(input){
function getRoutes(config,version){var routePath="Device.Routing."+version+".Routes.",routes=funcs.newConfig.normalize(funcs.fetchBranch(config,routePath));return _.chain(routes).map(function(elem,id){return elem.__version=version,elem.__id=id,elem}).filter(function(elem){return""==elem.Origin&&""!=elem.Destination&&Object.keys(funcs.newConfig.normalize(elem.Table)).length>0}).value()}function getIfaceName(link,config){if(""==link)return"routing_auto_iface";var iface=funcs.fetchBranch(config,link);return iface?iface.Name||iface.Ifname:""}function getSubnetMask(dest){var arrDest=dest.split("/");return arrDest[1]?funcs.ipv4.mask["long"](arrDest[1]):"255.255.255.255"}function getMetric(r){var mainTable=r.Table[1];return mainTable&&mainTable.ForwardingMetric?mainTable.ForwardingMetric:null}function prepareIfaces(ifaces,config){var output=[];output.push({Name:"routing_auto_iface",Value:"auto",Version:"All"});for(var i in ifaces){var iface=ifaces[i],checkSubIface=!1;if(/Device\.Network\.Interface\.Tunnel\.\d+\./.test(iface.Path)){var crossLink=iface.Data.CrossLink;if(crossLink)var conn=funcs.fetchBranch(config,crossLink);if(conn&&conn.BaseInterface&&/Cellular/.test(conn.BaseInterface))continue}if("Bridge"!=iface.Type||iface.Data.CreateInterface){for(var key in ifaces)iface.Path!=ifaces[key].Data.LowerLayer||(checkSubIface=!0);iface.Data.Bridged||-1!=iface.Path.indexOf("Loopback")||checkSubIface||output.push({Name:iface.Name,VLANID:iface.Data.VLANID,Value:iface.Path,CreateInterface:iface.Data.CreateInterface,Version:"All"})}}return output}function getProtocolList(i){var config=input.config,output=[];return funcs.fetchBranch(config,"Device.Routing.IPv4.")&&output.push("IPv4"),funcs.fetchBranch(config,"Device.Routing.IPv6.")&&output.push("IPv6"),output}function getTables(config,type){var tables=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Routing.Tables.")),result=[];_.each(tables,function(elem,key){if(!_.isEmpty(elem.Origin)&&/Group/.test(elem.Origin)){var iface=void 0,lan=void 0,vpn=[],wans=[];if(/Group/.test(elem.Origin)){var group=funcs.fetchBranch(config,elem.Origin);lan=group.LAN;var wanList="IPv4"==type?group.WAN:group.WANv6,vpnList=group.VPN;_.each(funcs.newConfig.normalize(wanList),function(obj){var conn=funcs.fetchBranch(config,obj.Link);/Connection/.test(conn.Interface)&&(conn=funcs.fetchBranch(config,conn.Interface)),wans.push(conn.Interface)});for(var key in vpnList){var conn=funcs.fetchBranch(config,vpnList[key].Link);/Interface/.test(conn.Interface)&&vpn.push(conn.Interface)}}result.push({Link:/Group/.test(elem.Origin)?elem.Origin:"Device.Routing.Tables."+key+".",Name:elem.Name,Origin:elem.Origin,Iface:iface,Lan:lan,Wans:wans,VPN:vpn})}});var mainTable=_.findKey(tables,{Name:"main"});return mainTable&&result.push({Link:"Device.Routing.Tables."+mainTable+".",Name:"main",Origin:""}),result}var pattern=T({"->":["$input","Ifaces","Routes","ProtocolList","TableList"],$input:":external",Routes:{"->":["$rule","Source","Dest"],$config:["$parent",function(p){return p.$input.config}],$routesv4:["$parent",function(p){return getRoutes(p.$input.config,"IPv4")}],$routesv6:["$parent",function(p){return getRoutes(p.$input.config,"IPv6")}],"{$rule}":["$routesv4","$routesv6",function(rv4,rv6){return rv4.concat(rv6)}],__id:["$rule*",function(r){return r.__id}],Enable:["$rule*",function(r){return r.Enable}],Iface:["$rule*",function(r){return r.Interface||"auto"}],IfaceName:["$rule*","$config",function(r,cfg){return getIfaceName(r.Interface,cfg)}],IPVersion:["$rule*",function(r){return r.__version}],InitVersion:["$rule*",function(r){return r.__version}],IPAddress:["$rule*",function(r){return r.Destination?"IPv4"==r.__version?r.Destination.split("/")[0]:r.Destination:""}],SubnetMask:["$rule*",function(r){return"IPv4"==r.__version?getSubnetMask(r.Destination):""}],GatewayAddress:["$rule*",function(r){return r.GatewayIPAddress}],Subnet:["$rule*",function(r){return r.Destination}],Metric:["$rule*",function(r){return getMetric(r)}],Name:["$rule*",function(rule){return rule.Name}],Table:["$rule*",function(r){return r.Table[1]?r.Table[1].Link:null}],Available:["$rule*",function(r){return"Enabled"==r.Status}]},Ifaces:{"->":!0,$config:["$parent",function(p){return p.$input.config}],$ifaces:["$config*",function(config){return ifaceConverter.dsysinitToNative({config:config})}],"{$iface}":["$ifaces","$config",function(ifaces,config){return prepareIfaces(ifaces,config)}],$return:["$iface",function(i){return i}]},ProtocolList:["$input",function(i){return getProtocolList(i)}],TableList:{"->":!0,$config:["$parent",function(p){return p.$input.config}],IPv4:["$config*",function(c){return getTables(c,"IPv4")}],IPv6:["$config*",function(c){return getTables(c,"IPv6")}]}});return pattern.build({$input:input})}function nativeToDsysinit(input){function getDestination(ipversion,addr,mask){var output="";return output+=addr,"255.255.255.255"!=mask&&"IPv4"==ipversion&&(output+="/"+funcs.ipv4.mask["short"](mask)),output}function getID(route,i){return route.InitVersion&&route.IPVersion!=route.InitVersion?"new_inst_"+i:route.__id||"new_inst_"+i}var pattern=T({"->":!0,$input:":external",Device:{Routing:{"->":["?","Routes"],"{$version}":["IPv4","IPv6"],":":["$version",function(v){return v}],$routes:["$root","$version",function(r,v){return _.filter(r.$input.Routes,function(e){return e.IPVersion==v})}],"?":["$routes",function(rs){return!!rs.length}],Routes:{"->":["$route","Table"],"{$route, $index}":["$parent",function(p){return p.$routes}],":":["$route*","$index",function(r,i){return getID(r)}],Enable:["$route*",function(r){return r.Enable}],Name:["$route*",function(rule){return rule.Name}],Interface:["$route*",function(r){return"auto"==r.Iface?"":r.Iface}],Destination:["$route*",function(r){return getDestination(r.IPVersion,r.IPAddress,r.SubnetMask)}],GatewayIPAddress:["$route*",function(r){return r.GatewayAddress}],Table:{"->":["$route","1"],$route:["$parent",function(p){return p.$route}],1:{"->":!0,$route:["$parent",function(p){return p.$route}],ForwardingMetric:["$route",function(r){return r.Metric||0}],Link:["$route",function(r){return r.Table}]}}}}}});return pattern.build({$input:input})}var T=__webpack_require__(35).T,_=__webpack_require__(4),ifaceConverter=__webpack_require__(292),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(328)}},function(module,exports,__webpack_require__){"use strict";var T=__webpack_require__(35).T,funcs=(__webpack_require__(4),__webpack_require__(5));module.exports={dsysinitToNative:function(data){var pattern=T({"->":!0,$data:":external","?":["$sessions",function(s){return!!s}],"{$sessions}":["$data",function(d){return funcs.newConfig.normalize(d.Device.Statistics.Sessions)}],$source:["$sessions*",function(s){return s.Source}],$dest:["$sessions*",function(s){return s.Destination}],sourceIp:["$source*",function(s){return s.IPAddress}],sourcePort:["$source*",function(s){return s.Port}],destIp:["$dest*",function(d){return d.IPAddress}],destPort:["$dest*",function(d){return d.Port}],protocol:["$sessions",function(s){return s.Type.toUpperCase()}],exp_time:["$sessions*",function(s){return s.Timeout}]});return pattern.build({$data:data})}}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(330)}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data){function getStatisticsInfo(data){var stats=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.stats));stats=_.sortBy(stats,"CrossLink");var isAP="AccessPoint"==funcs.fetchBranch(data,"Device.DeviceInfo.DeviceMode"),connections=isAP?{}:getConnectionInfo(data),result={};return _.each(stats,function(elem){result=getExtentInfo(data,elem.Statistics,elem.CrossLink,connections,result,elem.MACAddress)}),result}function isIPv4(ip){return funcs.is.ipv4(ip)}function isIPv6(ip,ipv6){return funcs.is.ipv6Network(ip)||!!ipv6}function getRxTxPacketsInfo(item){return item.PacketsReceived+" / "+item.PacketsSent}function getRxTxErrorInfo(item){return item.ErrorsReceived+" / "+item.ErrorsSent}function getConnectionInfo(data){var connection=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.connection));__autoconf.BR2_PACKAGE_ANWEB_USB_MODEM&&(connection.USB=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.usb))),__autoconf.BR2_PACKAGE_ANWEB_OPENVPN&&(connection.OpenVPNServ=funcs.fetchBranch(data,paths.openvpn));var connectionInfo={};return _.each(connection,function(elem,key){"IPsec"!=key&&(elem=funcs.newConfig.normalize(elem),_.each(elem,function(item,index){if("USB"==key||!/Cellular/.test(item.BaseInterface)&&!/Cellular/.test(item.Interface)){item=funcs.newConfig.normalize(item),item.ConnLink=("USB"==key?paths.usb:"OpenVPNServ"==key?paths.openvpn:paths.connection+key+".")+index+".",item.NeedPortState=isNeedState(item),item.NeedMAC="PPTP"!=key&&"L2TP"!=key&&"OpenVPN"!=key&&"OpenVPNServ"!=key;var number=getIndex(connectionInfo[item.Interface]);if(connectionInfo[item.Interface]||(connectionInfo[item.Interface]={}),"PPPoE"==key||"L2TP"==key){var pppClient=funcs.fetchBranch(data,item.PPPConfiguration);item.isIPv6=["IPv6","Dual"].includes(pppClient.IPStack),item.IPv6Only="IPv6"==pppClient.IPStack;var baseConnection=null,ifaceV6=null;if(item.isIPv6){var dhcpv6=funcs.fetchBranch(data,paths.connection+"DHCPv6.");ifaceV6=_.findWhere(dhcpv6,{Interface:paths.connection+key+"."+index+"."}),baseConnection=paths.connection+"DHCPv6."+_.findKey(dhcpv6,{Interface:paths.connection+key+"."+index+"."})+".",item.ConnectionStatus=item.IPv6Only?ifaceV6.ConnectionStatus:item.ConnectionStatus,item.ConnLink=item.IPv6Only?baseConnection:item.ConnLink,item.ConnectTimeStamp=item.IPv6Only?ifaceV6.ConnectTimeStamp:item.ConnectTimeStamp}}if("USB"==key&&Object.keys(funcs.newConfig.normalize(item.Connections)).length)for(var i in funcs.newConfig.normalize(item.Connections)){var conn=item.Connections[i],connData=funcs.fetchBranch(data,conn.Link),_item=funcs.deepClone(item);_item.ConnectionStatus=connData.ConnectionStatus,_item.ConnectionStatusExt=connData.ConnectionStatusExt,_item.ConnectTimeStamp=connData.ConnectTimeStamp,_item.ConnectionPingErrors=connData.ConnectionPingErrors,_item.ConnLink=conn.Link,_item.isIPv6=/v6/.test(conn.Link),connectionInfo[item.Interface][number++]=_item}else{if("OpenVPNServ"==key&&(item.BaseInterface=item.ListenIP),__autoconf.BR2_PACKAGE_ANWEB_ODU_CONTROL){var dwp=funcs.fetchBranch(data,paths.dwp812),dwpConns=dwp.InternetConnections,dwpType=dwp.IPFamily;if("IP"==dwpType&&item.ConnLink==dwpConns.IPv6)return;if("IPV6"==dwpType&&item.ConnLink==dwpConns.IPv4)return}"PPPoE"!=key&&"L2TP"!=key||!item.isIPv6||item.IPv6Only||(item.isIPv6=!1,connectionInfo[item.Interface][number++]=_.clone(item),item.isIPv6=!0,item.ConnLink=baseConnection,item.ConnectionStatus=ifaceV6.ConnectionStatus,item.ConnectTimeStamp=ifaceV6.ConnectTimeStamp),connectionInfo[item.Interface][number]=_.clone(item)}}}))}),connectionInfo}function getTxRxInfo(statsList,stats,id){return statsList[id].TX=_.isUndefined(statsList[id].TX)?stats.BytesSent:statsList[id].TX+stats.BytesSent,statsList[id].RX=_.isUndefined(statsList[id].RX)?stats.BytesReceived:statsList[id].RX+stats.BytesReceived,statsList[id].PacketsReceived=_.isUndefined(statsList[id].PacketsReceived)?stats.PacketsReceived:statsList[id].PacketsReceived+stats.PacketsReceived,statsList[id].PacketsSent=_.isUndefined(statsList[id].PacketsSent)?stats.PacketsSent:statsList[id].PacketsSent+stats.PacketsSent,statsList[id].ErrorsReceived=_.isUndefined(statsList[id].ErrorsReceived)?stats.ErrorsReceived:statsList[id].ErrorsReceived+stats.ErrorsReceived,statsList[id].ErrorsSent=_.isUndefined(statsList[id].ErrorsSent)?stats.ErrorsSent:statsList[id].ErrorsSent+stats.ErrorsSent,statsList}function getIndex(obj){return _.size(obj)+1}function getExtentInfo(data,stats,link,connections,statsList,currentMac){var result={},iface=funcs.fetchBranch(data,link);if(!iface)return statsList;if(~link.indexOf("WiFi")&&(result="sta"==iface.Type?getEthernetInfo(data,iface,link,connections,currentMac):getWiFiInfo(data,iface,link,currentMac))){var _number=Object.keys(statsList).find(function(k){return statsList[k].Ifname&&result.Ifname&&statsList[k].Ifname==result.Ifname});if(_number)statsList[_number].State="Enabled"==statsList[_number].State||"Enabled"==result.State?"Enabled":"Disabled",statsList=getTxRxInfo(statsList,stats,_number);else if(_.isArray(result))_.each(result,function(res){var count=getIndex(statsList);statsList[count]=res,statsList=getTxRxInfo(statsList,stats,count)});else{var count=getIndex(statsList);statsList[count]=result,statsList=getTxRxInfo(statsList,stats,count)}}if(/Bridge|Ethernet|Tunnel|ATM|PTM|Cellular/.test(link)&&(result=getEthernetInfo(data,iface,link,connections,currentMac),result&&result.length&&_.each(result,function(res){var count=getIndex(statsList);statsList[count]=res,statsList=getTxRxInfo(statsList,stats,count)})),~link.indexOf("Bridge")&&(result=getBridgeInfo(data,iface,link,currentMac))){var number=_.findKey(statsList,{Name:result.Name});if(number)statsList[number].State="Enabled"==statsList[number].State||"Enabled"==result.State?"Enabled":"Disabled",statsList=getTxRxInfo(statsList,stats,number);else{var count=getIndex(statsList);statsList[count]=result,statsList=getTxRxInfo(statsList,stats,count)}}if(~link.indexOf("EoGRE")&&(result=getEoGREInfo(data,iface,link,currentMac))){var count=getIndex(statsList);statsList[count]=result,statsList=getTxRxInfo(statsList,stats,count)}if(~link.indexOf("EoIP")&&(result=getEoIPInfo(data,iface,link,currentMac))){var count=getIndex(statsList);statsList[count]=result,statsList=getTxRxInfo(statsList,stats,count)}return statsList}function getConnStatus(status){var list=funcs.getConstateList();return list[status]}function isNeedState(item){var iface=funcs.fetchBranch(data,item.Interface);return!(/Tunnel/.test(item.Interface)||/Bridge/.test(item.Interface)&&!_.some(iface.Port,function(port){return/Switch/.test(port.LowerLayer)}))}function getStatus(status){switch(status){case"Enabled":return"connected";case"Disabled":return"st_disabled";case"Aborted":return"ipsec_status_aborted";default:return"ipsec_status_connecting"}}function getWiFiInfo(data,iface,link,currentMac){var radioData,apData,result={},radio=funcs.fetchBranch(data,paths.wifiRadio);for(var r in radio){for(var a in radio[r].AccessPoint)if(radio[r].AccessPoint[a].Interface==link){radioData=radio[r],apData=radioData.AccessPoint[a];break}if(apData)break}if(__autoconf.BR2_PACKAGE_ANWEB_WIFI_EASYMESH&&apData){var easymesh=funcs.fetchBranch(data,paths.easymesh),easymeshType=getAPMeshType(radioData,apData,data);if(easymesh.Enable&&!easymeshType)return null}return result.Name=apData&&funcs.fetchBranch(data,"".concat(apData.Profile,".SSID"))||iface.Name,result.Ifname=iface.Name,result.State=iface.Status,result.Band=iface.Support5GHz?"5ghz":"24ghz","Enabled"==result.State&&(result.MAC=_.isUndefined(currentMac)?"-":currentMac||"00:00:00:00:00:00"),result}function getAPMeshType(radio,ap,config){var type,easymesh=funcs.fetchBranch(config,"Device.Services.EasyMesh."),phyIfname=funcs.fetchBranch(radio,"Phy.Ifname"),networkIfname=funcs.fetchBranch(config,"".concat(ap.Interface,".Ifname"));return easymesh&&networkIfname&&phyIfname&&easymesh.Enable&&(32==ap.MultiAPBSSType||phyIfname==networkIfname?type="Basic":64!=ap.MultiAPBSSType&&128!=ap.MultiAPBSSType||(type="Beckhol")),type}function getEthernetInfo(data,iface,link,connections,currentMac){function getInfoIface(data,ifaceConnection,iface){if(ifaceConnection.BaseInterface&&/Group/.test(ifaceConnection.BaseInterface)){var group=funcs.fetchBranch(data,ifaceConnection.BaseInterface+"WAN.");if(!group)return iface;var order=group.order;if(!order||!order[0])return iface;ifaceConnection=funcs.fetchBranch(data,group[order[0]].Link),iface=funcs.fetchBranch(data,ifaceConnection.Interface)}if(ifaceConnection.BaseInterface){if(~ifaceConnection.BaseInterface.indexOf("Interface")){var baseIface=funcs.fetchBranch(data,ifaceConnection.BaseInterface);return baseIface}var parentIfaceConn=funcs.fetchBranch(data,ifaceConnection.BaseInterface);return funcs.fetchBranch(data,parentIfaceConn.Interface)}return iface}function getGateway(data,link,addrType){var routePath=paths.routing+("ipv4"==addrType?"IPv4.":"IPv6.")+"Routes.",routes=funcs.newConfig.normalize(funcs.fetchBranch(data,routePath)),route=_.findWhere(routes,{Interface:link,Destination:"ipv4"==addrType?"0.0.0.0/0":"::/0"});return route?route.GatewayIPAddress:void 0}function getIP(data,addrType,ifaceLink,connLink,conns){!_.isUndefined(conns)&&/USB/.test(connLink)&&(conns=_.pluck(funcs.newConfig.normalize(conns),"Link"));var ipAddrs=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.ip)),connection=funcs.fetchBranch(data,connLink);if(_.has(connection,"UnnumberedIP")&&""!=connection.UnnumberedIP)return funcs.fetchBranch(data,connection.UnnumberedIP);var connIfaceLink=funcs.fetchBranch(data,connLink),layer=/Cellular/.test(ifaceLink)&&connIfaceLink?connIfaceLink.Interface:ifaceLink,ethIP=_.findWhere(ipAddrs,{LowerLayer:layer});if(_.isUndefined(ethIP)&&/USB/.test(connLink)){var usbConns=_.map(conns,function(elem){return funcs.fetchBranch(data,elem).Interface});ethIP=_.find(ipAddrs,function(ip){return _.contains(usbConns,ip.LowerLayer)})}if(!_.isUndefined(ethIP)){var addrs=funcs.newConfig.normalize("ipv4"==addrType?ethIP.IPv4Address:ethIP.IPv6Address);return addrs=_.filter(addrs,function(a){return a.Origin==connLink||_.contains(conns,a.Origin)}),addrs.length?addrs[0]:void 0}}iface.Bridged&&(link=iface.BridgeLink);var ifaceConnection=connections[link];return ifaceConnection?_.map(ifaceConnection,function(ifConn){function isModem(iface){return/Cellular/.test(iface)}function isModemBase(ifConn){if(!/Cellular/.test(ifConn.Interface)&&ifConn.BaseInterface){var conn=funcs.fetchBranch(data,ifConn.BaseInterface);if(conn){if(/Cellular/.test(conn.Interface))return!0;var curWan=funcs.fetchBranch(data,conn.CurrentWAN);if(curWan&&/Cellular/.test(curWan.Interface))return!0}return!1}return!1}function isDSL(conn){function hasDslIface(linkBridge){var bridge=funcs.fetchBranch(data,linkBridge);return _.some(bridge.Port,function(port){return/PTM/.test(port.LowerLayer)||/ATM/.test(port.LowerLayer)})}var iface=conn.BaseInterface||conn.Interface;return-1!=iface.indexOf("ATM")||-1!=iface.indexOf("PTM")||!(-1==iface.indexOf("Bridge")||!hasDslIface(iface))}var result={};result.Name=ifConn.Name||iface.Ifname.toUpperCase();var infoIface=getInfoIface(data,ifConn,iface);if(result.ServiceName=ifConn.ServerAddress||ifConn.LNS,/OpenVPN/.test(ifConn.ConnLink)&&(result.ServerAddr=ifConn.Remote||ifConn.IPAddress),"sta"!=infoIface.Type&&isModem(ifConn.Interface)||(result.ConnStatus=ifConn.ConnectionStatus),/IPIP6|SIT/.test(ifConn.ConnLink)){switch(ifConn.Status){case"Enabled":result.ConnStatus="Connected";break;case"Enabling":result.ConnStatus="Connecting";break;case"Aborted":result.ConnStatus="Disconnected";break;default:result.ConnStatus=ifConn.Status}result.PeerIPv6=ifConn.PeerIPv6}if(/GRE|IPIP|IPIP6|SIT/.test(ifConn.ConnLink)||/VPN.OpenVPN/.test(ifConn.ConnLink)?(result.State=ifConn.Status,result.Status=ifConn.Status):result.State="Connected"==ifConn.ConnectionStatus?"Enabled":"Disabled",ifConn.NeedPortState&&"sta"!=infoIface.Type&&!isModem(ifConn.Interface)&&!isModemBase(ifConn)){var portState=isDSL(ifConn)?getDSLState(data,ifConn):getState(data,infoIface.LowerLayer||infoIface);result.PortState="Enabled"==portState?"on":"off",result.State="on"==result.PortState?result.State:"Disabled"}ifConn.NeedMAC&&(result.MAC=infoIface.MACAddress||currentMac);var connLink=ifConn.ConnLink;if(result=getDns(data,result,connLink,ifConn.Connections),"Enabled"==result.State||/GRE/.test(ifConn.ConnLink)||/IPIP/.test(ifConn.ConnLink)){result.Iface=iface.Ifname;var ifLink=funcs.fetchBranch(data,link+"Statistics");if(result.MTU=funcs.fetchBranch(data,ifLink).MTU,~ifConn.ConnLink.indexOf("Static.")){result.IPv4WithMask=ifConn.IPAddress;var ip=ifConn.IPAddress.split("/");result.IPv4=ip[0],result.Mask=funcs.ipv4.mask["long"](ip[1]),result.GW=ifConn.Gateway}if(~ifConn.ConnLink.indexOf("Staticv6.")&&(result.IPv6WithMask=ifConn.IPAddress,result.IPv6=ifConn.IPAddress,result.GW6=ifConn.Gateway),-1==ifConn.ConnLink.indexOf("Static")){if(!ifConn.isIPv6){var ipv4=getIP(data,"ipv4",link,connLink,ifConn.Connections);if(ipv4){result.IPv4WithMask=ipv4.IPAddress;var ip=ipv4.IPAddress.split("/");result.IPv4=ip[0],result.Mask=funcs.ipv4.mask["long"](ip[1]),ipv4.PeerIPAddress&&""!=ipv4.PeerIPAddress&&(result.GW=ipv4.PeerIPAddress.split("/")[0]),result.GW||(result.GW=getGateway(data,link,"ipv4"))}}if(ifConn.isIPv6||_.isUndefined(ifConn.isIPv6)){var ipv6=getIP(data,"ipv6",link,connLink,ifConn.Connections);ipv6&&(result.IPv6WithMask=ipv6.IPAddress,result.IPv6=ipv6.IPAddress,ipv6.PeerIPAddress&&""!=ipv6.PeerIPAddress&&(result.GW6=ipv6.PeerIPAddress),result.GW6||(result.GW6=getGateway(data,link,"ipv6")))}}if(result.IPv4||result.IPv6||/IPIP6|SIT/.test(ifConn.ConnLink)||/PPPoE/.test(ifConn.ConnLink)&&/Cellular/.test(ifConn.Interface)||(result.State="Disabled",result.ConnStatus="Connected"!=result.ConnStatus?result.ConnStatus:"Connecting"),-1!=ifConn.ConnLink.indexOf("GRE")){result.PeerIP=ifConn.PeerIP;var staticRoutes=funcs.newConfig.normalize(ifConn.StaticRoutes);if(staticRoutes=_.toArray(staticRoutes),staticRoutes.length&&(result.StaticRouteIP=_.first(staticRoutes).Destination),result.StaticRouteGateway=ifConn.VPNPeerIP,result.GREIface=getIfaceName(data,ifConn.IP),"Enabled"!=result.State){result.IPv4WithMask=ifConn.VPNIP;var ip=ifConn.VPNIP.split("/");result.IPv4=ip[0],result.Mask=funcs.ipv4.mask["long"](ip[1])}}if(-1!=ifConn.ConnLink.indexOf("IPIP")){result.PeerIP=ifConn.PeerIP;var staticRoutes=funcs.newConfig.normalize(ifConn.StaticRoutes);if(staticRoutes=_.toArray(staticRoutes),staticRoutes.length&&(result.StaticRouteIP=_.first(staticRoutes).Destination),result.StaticRouteGateway=ifConn.VPNPeerIP,result.IPIPIface=getIfaceName(data,ifConn.LowerLayer),"Enabled"!=result.State&&ifConn.VPNIP){result.IPv4WithMask=ifConn.VPNIP;var ip=ifConn.VPNIP.split("/");result.IPv4=ip[0],result.Mask=funcs.ipv4.mask["long"](ip[1])}}result.DurationS="Enabled"==result.State?ifConn.ConnectTimeStamp:void 0}return result}):void 0}function getDns(data,result,connLink,conns){!_.isUndefined(conns)&&/USB/.test(connLink)&&(conns=_.pluck(funcs.newConfig.normalize(conns),"Link"));var dnsAll=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.dns)),dns=_.findWhere(dnsAll,{Origin:connLink});if(_.isUndefined(dns)&&/USB/.test(connLink)&&(dns=_.find(dnsAll,function(elem){return _.contains(conns,elem.Origin)})),dns){var dnsArray=funcs.newConfig.normalize(dns.Address),dnsOrder=funcs.newConfig.normalize(dns.Address.order);dnsArray[dnsOrder[0]]&&(funcs.is.ipv4(dnsArray[dnsOrder[0]].IPAddress)?result.DNSPrimary=dnsArray[dnsOrder[0]].IPAddress:result.DNSPrimaryV6=dnsArray[dnsOrder[0]].IPAddress),dnsArray[dnsOrder[1]]&&(funcs.is.ipv4(dnsArray[dnsOrder[1]].IPAddress)?result.DNSSecondary=dnsArray[dnsOrder[1]].IPAddress:result.DNSSecondaryV6=dnsArray[dnsOrder[1]].IPAddress)}return result}function getState(data,bridge){var VLANPorts=funcs.newConfig.normalize(bridge.Port),enabled=_.some(VLANPorts,function(port){if(-1==port.LowerLayer.indexOf("Switch"))return!1;var port=funcs.fetchBranch(data,port.LowerLayer);return port&&"Enabled"==port.Status});return enabled?"Enabled":"Disabled"}function getDSLState(data,ifconn){var dsl=funcs.fetchBranch(data,paths.dsl);if(!dsl||!dsl.TrainingState||"N/A"==dsl.Modulation)return"Disabled";var typeDsl=~dsl.Modulation.indexOf("VDSL")?"PTM":"ATM",iface=ifconn.BaseInterface||ifconn.Interface;if(/Bridge/.test(iface)){var bridge=funcs.fetchBranch(data,iface),dslPort=_.find(bridge.Port,function(port){return/PTM/.test(port.LowerLayer)||/ATM/.test(port.LowerLayer)});dslPort&&(iface=dslPort.LowerLayer)}return-1!=iface.indexOf(typeDsl)?"Enabled":"Disabled"}function getIfaceName(data,iface){if(_.isEmpty(iface))return"";var vpnIface=funcs.fetchBranch(data,iface);if(/Group/.test(iface)){var order=vpnIface.WAN.order;if(!order||0==order.length)return"";vpnIface=funcs.fetchBranch(data,vpnIface.WAN[order[0]].Link)}return vpnIface.Name}function getBridgeInfo(data,iface,link,currentMac){function getIP(data,link,type){var ipAddrs=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.ip)),lanIP=_.findWhere(ipAddrs,{LowerLayer:link});if(lanIP){var ipArray="ipv4"==type?lanIP.IPv4Address:lanIP.IPv6Address;return ipArray=_.filter(ipArray,function(e){return"Enabled"==e.Status||"Enabling"==e.Status}),ipArray=_.pluck(funcs.newConfig.normalize(ipArray),"IPAddress"),ipArray.length?"ipv4"==type?ipArray[0]:ipArray:void 0}}var result={},group=_.find(funcs.fetchBranch(data,"Device.Network.Group."),function(g){return g.LAN===link});if(group){if(result.Name=group&&group.Name&&data.isGrouping?group.Name.match("#")?group.Name.split("#")[0]:group.Name:iface.Name||iface.Ifname,result.MAC=_.isEmpty(result.MAC)?currentMac:result.MAC,result.State="Enabled"==iface.Status?"Enabled":"Disabled","Enabled"==result.State){var ipv4=getIP(data,link,"ipv4");ipv4&&(result.IPv4WithMask=ipv4,ipv4=ipv4.split("/"),result.IPv4=ipv4[0],result.Mask=funcs.ipv4.mask["long"](ipv4[1]));var ipv6=getIP(data,link,"ipv6");ipv6&&(result.IPv6=_.clone(ipv6))}return result}}function getEoGREInfo(data,iface,link,currentMac){var result={},vconfigIfaces=funcs.fetchBranch(data,paths.vconfig),vconfigCur=_.find(vconfigIfaces,{LowerLayer:link});return result.Name=iface.Name,result.MAC=vconfigCur?vconfigCur.MACAddress:currentMac,result.State=vconfigCur?vconfigCur.Status:iface.Status,result.Status=vconfigCur?vconfigCur.Status:iface.Status,result.MTU=iface.MTU,result.PeerIP=iface.PeerIP,result.VID=vconfigCur?vconfigCur.VID:void 0,result.GREIface=getIfaceName(data,iface.IP),result}function getEoIPInfo(data,iface,link,currentMac){var result={},vconfigIfaces=funcs.fetchBranch(data,paths.vconfig),vconfigCur=_.find(vconfigIfaces,{LowerLayer:link});return result.Name=iface.Name,result.MAC=vconfigCur?vconfigCur.MACAddress:currentMac,result.State=vconfigCur?vconfigCur.Status:iface.Status,result.Status=vconfigCur?vconfigCur.Status:iface.Status,result.MTU=iface.MTU,result.PeerIP=iface.PeerIP,result.VID=vconfigCur?vconfigCur.VID:void 0,result.GREIface=getIfaceName(data,iface.IP),result}var pattern=T({"->":["?"],$data:":external",$uptime:["$data",function(d){return d.Device.DeviceInfo?d.Device.DeviceInfo.Uptime:void 0}],NeedTime:!0,"{$info}":["$data",function(d){return getStatisticsInfo(d)}],"?":["$info",function(i){return!!i}],Name:["$info*",function(i){return i.Name}],Band:["$info*",function(i){return i.Band}],State:["$info*",function(i){return"Enabled"==i.State?"up":"down"}],RxTxPacket:["$info*","State",function(s,st){return"up"==st?getRxTxPacketsInfo(s):void 0}],RxTxErrors:["$info*","State",function(s,st){return"up"==st?getRxTxErrorInfo(s):void 0}],RX:["$info*",function(s){return s.RX}],TX:["$info*",function(s){return s.TX}],IPv4:["$info*",function(i){return i.IPv4}],IPv4WithMask:["$info*",function(i){return i.IPv4WithMask}],IPv6:["$info*",function(i){return i.IPv6}],IPv6WithMask:["$info*",function(i){return i.IPv6}],IsIPv4:["$info*",function(i){return isIPv4(i.IPv4)}],IsIPv6:["$info*",function(i){return isIPv6(i.IPv4,i.IPv6)}],Mask:["$info*",function(i){return i.Mask}],MTU:["$info*",function(i){return i.MTU}],GW:["$info*",function(i){return i.GW}],GW6:["$info*",function(i){return i.GW6}],MAC:["$info*",function(i){return i.MAC}],DNSPrimary:["$info*",function(i){return i.DNSPrimary}],DNSSecondary:["$info*",function(i){return i.DNSSecondary}],DNSPrimaryV6:["$info*",function(i){return i.DNSPrimaryV6}],DNSSecondaryV6:["$info*",function(i){return i.DNSSecondaryV6}],PortStatus:["$info*",function(i){return i.PortState}],ConnStatus:["$info*",function(i){return getConnStatus(i.ConnStatus)}],ServiceName:["$info*",function(i){return i.ServiceName}],ServerAddr:["$info*",function(i){return i.ServerAddr}],DurationS:["$info*","$uptime",function(i,uptime){return!_.isUndefined(i.DurationS)&&uptime?uptime-i.DurationS:void 0}],PeerIP:["$info*",function(i){return i.PeerIP}],PeerIPv6:["$info*",function(i){return i.PeerIPv6}],StaticRouteIP:["$info*",function(i){return i.StaticRouteIP}],StaticRouteGateway:["$info*",function(i){return i.StaticRouteGateway}],GREIface:["$info*",function(i){return i.GREIface}],IPIPIface:["$info*",function(i){return i.IPIPIface}],VID:["$info*",function(i){return i.VID}],Status:["$info*",function(i){return i.Status?getStatus(i.Status):void 0}]});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),__autoconf="undefined"!=typeof autoconf?autoconf:{},paths={stats:"Device.Statistics.Interface.",bridge:"Device.Network.Interface.Bridge.",dhcp:"Device.Network.Connection.DHCP.1.",dns:"Device.Network.DNS.Current.",routing:"Device.Routing.",ip:"Device.Network.IP.",connection:"Device.Network.Connection.",dsl:"Device.Statistics.xDSL.",vconfig:"Device.Network.Interface.Vconfig.",usb:"Device.USB.Connection.",openvpn:"Device.Network.Server.VPN.OpenVPN.",dwp812:"Device.USB.ODUControl.",wifiRadio:"Device.WiFi.Radio.",easymesh:"Device.Services.EasyMesh."};module.exports={dsysinitToNative:dsysinitToNative}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(332)}},function(module,exports,__webpack_require__){"use strict";var T=__webpack_require__(35).T,_=__webpack_require__(4),path="Device.Statistics.Multicast.Groups.",funcs=__webpack_require__(5);module.exports={dsysinitToNative:function(data){function getIPGroup(groups,ipType){return _.filter(groups,function(elem){var addr="IPv4"==ipType?elem.IPAddress.split("."):funcs.ipv6.address.full(elem.IPAddress).split(":");return elem.AddressFamily==ipType&&""!=elem.InterfaceLink&&("IPv4"==ipType?~elem.InterfaceLink.indexOf("PTM")&&"239"==addr[0]||~elem.InterfaceLink.indexOf("ATM")&&"239"==addr[0]||~elem.InterfaceLink.indexOf("Bridge")&&"224"!=addr[0]:~elem.InterfaceLink.indexOf("Bridge"))})}function getIfaceGroups(ipGroups){var groups=_.groupBy(ipGroups,"InterfaceLink"),ifaceGroups={};return _.each(groups,function(elem,key){var iface=funcs.fetchBranch(data,key);if(iface)if(~key.indexOf("WiFi")){var index=iface.Support24GHz?"WIFI_2.4GHz":"WIFI_5GHz";ifaceGroups[index]=elem}else{if(iface.Bridged)return;~key.indexOf("Bridge")&&(ifaceGroups[iface.Name]=ifaceGroups[iface.Name]?_.union(ifaceGroups[iface.Name],elem):elem),~key.indexOf("PTM")&&(ifaceGroups.PTM=elem),~key.indexOf("ATM")&&(ifaceGroups.ATM=elem)}}),ifaceGroups}function getAddrs(ifaceGroup){var addrs=[];return _.each(ifaceGroup,function(elem){addrs.push(elem.IPAddress)}),addrs}var pattern=T({"->":["$multicast","ipv4","ipv6"],$data:":external","?":["$multicast",function(m){return!!m}],$multicast:["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,path))}],ipv4:{"->":!0,$ipv4:["$parent",function(p){return getIPGroup(p.$multicast,"IPv4")}],"{$ifaceGroup, name}":["$ipv4",function(ip){return getIfaceGroups(ip)}],maddr:["$ifaceGroup",function(ig){return getAddrs(ig)}]},ipv6:{"->":!0,$ipv6:["$parent",function(p){return getIPGroup(p.$multicast,"IPv6")}],"{$ifaceGroup, name}":["$ipv6",function(ip){return getIfaceGroups(ip)}],maddr:["$ifaceGroup",function(ig){return getAddrs(ig)}]}});return pattern.build({$data:data})}}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(334)}},function(module,exports,__webpack_require__){"use strict";var T=__webpack_require__(35).T,_=__webpack_require__(4),paths=__webpack_require__(335).paths,funcs=__webpack_require__(5);module.exports={dsysinitToNative:function(data){function getIPsecInfo(stats,network){var list={};return _.each(network,function(elem,key){list[key]=_.extend(elem,stats[key]);
}),list}function getSubnet(obj){return _.map(funcs.newConfig.normalize(obj),function(elem){return elem.Subnet?elem.Subnet:void 0})}function getConnStatus(conn){return conn.Enable?conn.StopOnFail?"wan_status_cable_disconnected":getStatus(conn.ConnectionStatus):"st_disabled"}function getStatus(status){switch(status.toLowerCase()){case"established":case"connected":case"installed":return"connected";case"disconnected":return"disconnected";default:return"ipsec_status_"+status.toLowerCase()}}var pattern=T({"->":!0,$data:":external",$stats:["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.stats))}],$network:["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.network))}],"{$tunnels}":["$stats","$network",function(s,n){return getIPsecInfo(s,n)}],"?":["$tunnels",function(t){return!!t}],Name:["$tunnels",function(t){return t.Name}],Version:["$tunnels",function(t){return t.Version}],Type:["$tunnels",function(t){return t.IPStack}],ConnectionStatus:["$tunnels",function(t){return getConnStatus(t)}],ParentState:["$tunnels",function(t){return getStatus(_.isEmpty(t.State)?t.Statistic.IKE:t.State)}],ChildState:["$tunnels",function(t){return getStatus(_.isEmpty(t.ChildState)?t.Statistic.CHILD:t.ChildState)}],Right:["$tunnels",function(t){return t.Right}],LeftSubnet:["$tunnels",function(t){return getSubnet(t.LeftSubnet)}],RightSubnet:["$tunnels",function(t){return getSubnet(t.RightSubnet)}],BytesReceived:["$tunnels",function(t){return t.BytesReceived}],BytesSent:["$tunnels",function(t){return t.BytesSent}],PacketsReceived:["$tunnels",function(t){return t.PacketsReceived}],PacketsSent:["$tunnels",function(t){return t.PacketsSent}],ChildRekey:["$tunnels",function(t){return t.ChildRekey}],EstablishedTime:["$tunnels",function(t){return t.EstablishedTime}],ReauthTime:["$tunnels",function(t){return t.ReauthTime}],Mode:["$tunnels",function(t){return t.Type.toUpperCase()}]});return pattern.build({$data:data})}}},function(module,exports){"use strict";module.exports={paths:{stats:"Device.Statistics.IPsec.",network:"Device.Network.Connection.IPsec."}}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(337)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getSSID(link){var apLink=funcs.fetchBranch(data,link);if(apLink){var ap=funcs.fetchBranch(data,apLink.Profile);return ap?ap.SSID:void 0}}function getBand(link){var ap=link.indexOf("AccessPoint");link=link.substring(0,ap);var radio=funcs.fetchBranch(data,link);return radio?radio.OperatingFrequencyBand:void 0}function formMode(value){var value=value.replace(/\//g,""),modes={a:"802.11 A",b:"802.11 B",g:"802.11 G",n:"802.11 N",ac:"802.11 AC",ax:"802.11 AX",bg:"802.11 B/G mixed",gn:"802.11 G/N mixed",bgn:"802.11 B/G/N mixed",bgnac:"802.11 B/G/N mixed + 256QAM",an:"802.11 A/N mixed",acn:"802.11 AC/N mixed",acan:"802.11 AC/A/N mixed",anac:"802.11 A/N/AC mixed",nac:"802.11 N/AC mixed",bgnax:"802.11 B/G/N/AX mixed",anacax:"802.11 A/N/AC/AX mixed"};return modes[value]}function is5G(radio){return radio=funcs.newConfig.normalize(radio),Object.keys(radio).length>1}function getHostname(data,hostMAC){var hostname,ip,clientsDHCP=funcs.fetchBranch(data,paths.dhcpStats),hostnames=funcs.fetchBranch(data,paths.hostnames),client=_.filter(clientsDHCP,function(e){return e.MACAddress==hostMAC});client[0]&&(ip=client[0].IPAddress);var host=_.find(hostnames,function(elem){return elem.MAC&&elem.MAC.toUpperCase()==hostMAC.toUpperCase()});return host&&(hostname=host.Alias||host.Hostname),{Hostname:hostname,IP:ip}}var pattern=T({"->":["$data","EasyMesh","EmTopology","Clients"],$data:":external",Support5G:["$data",function(d){return is5G(funcs.fetchBranch(d,paths.wifiStatistics))}],EasyMesh:["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.easyMesh))}],EmTopology:["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.emTopology))}],Clients:{"->":["?"],"{$radio}":["$root",function(r){return funcs.newConfig.normalize(funcs.fetchBranch(r.$data,paths.wifiStatistics))}],"{$points}":["$radio*",function(r){return funcs.newConfig.normalize(r.AccessPoint)}],"{$devices}":["$points*",function(p){return funcs.newConfig.normalize(p.AssociatedDevice)}],"?":["$devices",function(d){return!!d}],$client:["$root","$devices*",function(r,d){return getHostname(r.$data,d.MACAddress)}],Hostname:["$client*",function(c){return c.Hostname||""}],IPv4:["$client*",function(c){return funcs.is.ipv4(c.IP)?c.IP:void 0}],IPv6:["$client*",function(c){return funcs.is.ipv6(c.IP)?c.IP:void 0}],Link:["$devices*","$points*",function(d,p){return _.isUndefined(d)?void 0:p.CrossLink}],MAC:["$devices*",function(d){return d.MACAddress.toUpperCase()}],Online:["$devices*",function(d){return d.ConnectTime}],Signal:["$devices*",function(d){return d.SignalStrength}],RateUpLink:["$devices*",function(d){return d.LastDataUplinkRate}],RateDownLink:["$devices*",function(d){return d.LastDataDownlinkRate}],RxBytes:["$devices*",function(d){return d.TotalBytesReceived}],TxBytes:["$devices*",function(d){return d.TotalBytesTransmitted}],Active:["$devices*",function(d){return d.Active}],AuthState:["$devices*",function(d){return d.AuthenticationState}],Mode:["$devices*",function(d){return formMode(d.OperatingStandard)}],SignalStrength:["$devices*",function(d){return d.SignalStrength+"%"}],RSSI:["$devices*",function(d){return d.RSSI}],SSID:["$devices*","$points*",function(d,p){return _.isUndefined(d)?void 0:getSSID(p.CrossLink)}],Band:["$devices*","$points*",function(d,p){return _.isUndefined(d)?void 0:getBand(p.CrossLink)}]}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={wifiStatistics:"Device.Statistics.WiFi.Radio.",dhcpStats:"Device.Statistics.DHCPServer.1.Client.",hostnames:"Device.Hostnames.",emTopology:"Device.Statistics.EasyMesh.Topology.",easyMesh:"Device.Services.EasyMesh."};module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(339)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(input){var pattern=T({"->":["$au","Server"],$input:":external",$config:["$input",function(i){return i.config}],$au:["$config",function(cfg){return funcs.fetchBranch(cfg,"Device.Services.Autoupdate.")}],Enable:["$au",function(au){return au.Enable}],IsMultiServer:!0,Server:{"->":!0,"{$raw}":["$parent",function(p){return funcs.newConfig.normalize(p.$au.Server)}],$return:["$raw*",function(r){return r.Address}]},Period:["$au",function(au){return au.Period}],minPeriod:3600,Version:["$au",function(au){return au.FirmwareVersion}],URL:["$au",function(au){return au.FirmwareURL}],MD5:["$au",function(au){return au.FirmwareMD5}],Status:["$au",function(au){return au.FirmwareStatus}]});return pattern.build({$input:input})}function nativeToDsysinit(input){var pattern=T({"->":!0,$input:":external",Device:{Services:{Autoupdate:{"->":["$input","Server"],$input:["$root",function(r){return r.$input}],Enable:["$input",function(i){return i.Enable}],Check:["$input",function(i){return i.Check}],Server:{"->":!0,"{$raw, $index}":["$parent",function(p){return p.$input.Server}],":":["$index",function(i){return(i+1).toString()}],Address:["$raw",function(r){return r}]},Period:["$input",function(i){return i.Enable?i.Period:void 0}]}}}});return pattern.build({$input:input})}var T=(__webpack_require__(4),__webpack_require__(35).T),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";function __pull(){function success(response){tree=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList);var branches=funcs.fetchBranch(tree,pathConfig+".");data=branches}return Promise.all([cpe.GetParameterValues([pathConfig]),cpe.GetParameterAttributes([pathConfig])]).then(success)}function existsLinkInBranches(link){function existsBranch(schedule){return _.some(schedule.Branches,function(branch){return branch.Link&&regExp.test(branch.Link)})}var strRegExp="^"+link.replace(/\./g,"\\.")+"$",regExp=new RegExp(strRegExp);return _.some(data,existsBranch)}function getTree(){return tree}function getAttrs(){return attrs}var tree,attrs,helper=__webpack_require__(341),cpe=__webpack_require__(3),funcs=__webpack_require__(5),pathConfig="Device.System.Scheduler.Config",data=[];module.exports={data:data,pull:__pull,helper:helper,getTree:getTree,getAttrs:getAttrs,existsLink:existsLinkInBranches}},function(module,exports,__webpack_require__){"use strict";function Helper(scheduleRules){function convertRules(){var initRules=funcs.newConfig.normalize(scheduleRules);if(_.keys(initRules).length){var rules={};return _.each(initRules,function(rule,inx){rules[inx]={id:inx,status:getStatus(rule.Active),state:getState(rule.Enable),interval:cronStr.convert("CalendarTable"!=rule.Type?rule.Cron:setCalendarTable(rule.CalendarTable)),duration:funcs.lookTime(rule.Duration),tasks:_.keys(rule.Branches).length-1,cronWithDuration:"CalendarTable"!=rule.Type?rule.Cron+" "+rule.Duration:rule.CalendarTable,name:rule.Name,calendarTable:rule.CalendarTable,type:rule.Type,genInfo:{cron:rule.Cron,duration:rule.Duration,tasks:rule.Branches,calendarTable:rule.CalendarTable,type:rule.Type}}}),rules}return-1}function getState(state){return state?"on":"off"}function getStatus(status){return status?"sched_rule_active":"sched_rule_not_active"}function getRule(initRule,branches,schedule){var result={};return initRule&&(result="CalendarTable"!=initRule.type?{Enable:initRule.enable,Cron:validation.sort(initRule.min)+" "+validation.sort(initRule.hour)+" "+validation.sort(initRule.day)+" "+validation.sort(initRule.month,"month")+" "+validation.sort(initRule.weekDay,"weekDay"),Duration:parseInt(initRule.duration),Name:initRule.name,Type:initRule.type}:{Enable:initRule.enable,Duration:3600,CalendarTable:setBitMask(initRule.calendarTable),Name:initRule.name,Type:initRule.type,Cron:""}),branches&&(result.Branches={},_.each(branches,function(branch,inx){var inxBranch=schedule?_.findKey(schedule.Branches,{Link:branch.Link}):null,index=inxBranch?inxBranch:"new_inst_".concat(inx);result.Branches[index]=branch}),_.isEmpty(result.Branches)&&delete result.Branches),result}function getConfig(rule,config,id){var newConfig=funcs.deepClone(config);if(rule){var ruleId=id?id:"+1";if("+1"==ruleId)funcs.setValue(paths.schedules+ruleId,rule,newConfig);else{for(var keysRule=Object.keys(rule),j=0;j<keysRule.length;j++)"Branches"!=keysRule[j]&&funcs.setValue(paths.schedules+ruleId+"."+keysRule[j],rule[keysRule[j]],newConfig);for(var keysBranch=Object.keys(rule.Branches||{}),i=0;i<keysBranch.length;i++){var ind=keysBranch[i],pathTo=paths.schedules+ruleId+".Branches."+ind,applyObject=rule.Branches[ind];funcs.setValue(pathTo,applyObject,newConfig)}}}return newConfig}function getRemoveBranchConfig(config,schedules,branches){var newConfig=funcs.deepClone(config);return _.each(schedules,function(schedule,inxSchedule){_.each(schedule.Branches,function(branch,inxBranch){-1!==branches.indexOf(branch.Link)&&funcs.cutBranch(newConfig,"".concat(paths.schedules).concat(inxSchedule,".Branches.").concat(inxBranch,"."))})}),newConfig}function getRemoveScheduleConfig(config,items){var newConfig=funcs.deepClone(config);return _.each(items,function(id){funcs.cutBranch(newConfig,paths.schedules+id)}),newConfig}function getUsedBranchSchedules(config,branches){var result={},schedules=funcs.fetchBranch(config,paths.schedules);return schedules&&_.each(schedules,function(schedule,inxSchedule){var scheduleBranchesArr=funcs.newConfig.instanceObjectToArray(schedule.Branches),isHasAllBranches=_.some(branches,function(branch){return _.findWhere(scheduleBranchesArr,{Link:branch})});isHasAllBranches&&(result[inxSchedule]=schedule)}),result}function getDeleteBranchConfig(schedules,selectId){var result={};return _.each(schedules,function(item){(selectId&&selectId!=item.numSchedule||!selectId)&&(resultObj[item.numSchedule]||(resultObj[item.numSchedule]={Branches:{}}),resultObj[item.numSchedule].Branches["-"+item.numBranch]={})}),result}function getDiffRule(oldRule,newRule,attrs){return funcs.newConfig.makeDiff(oldRule,newRule,attrs)}function checkRangeNumbersSchedule(value,start,end,type){function checkRangeNums(start,end,arr){var result=!0;return _.each(arr,function(item){(start>item||item>end)&&(result=!1)}),result}function checkRangeStrings(val,arr){var result=!0;return _.each(val,function(item){var find=_.find(arr,function(str){return str==item.replace(/\s/g,"")});"undefined"==typeof find&&(result=!1)}),result}var regExpNum=/^[0-9]{1,2}(\,\s*[0-9]{1,2})*$/,regExpAnother=/^(\*\/([0-9]{1,2}))$|^(\*)$/,numsComma=regExpNum.exec(value),numsEvery=regExpAnother.exec(value);if(numsComma)return checkRangeNums(start,end,numsComma[0].split(","))?null:"invalid_range";if(numsEvery){var num=numsEvery[0].split("/")[1];return start>num||num>end?" invalid_range":null}if("undefined"!=typeof type&&isNaN(value)){if("m"==type){var arrMonths=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"];return checkRangeStrings(value.split(","),arrMonths)?null:"invalid_range"}if("w"==type){var arrWeek=["sun","mon","tue","wed","thu","fri","sat"];return checkRangeStrings(value.split(","),arrWeek)?null:"invalid_range"}return"invalid_value"}return"invalid_value"}function setBitMask(obj){var weekDays=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],result={};return _.each(weekDays,function(day){result[day]=""}),_.each(obj,function(item){_.each(weekDays,function(day){result[day]+=item[day]?"1":"0"})}),_.each(result,function(item,key){item=item.split("").reverse().join(""),result[key]=item?parseInt(item,2):0}),result}function getSimpleModeCalendar(){for(var calendar=[],i=0;24>i;i++)calendar.push({Mon:!1,Tue:!1,Wed:!1,Thu:!1,Fri:!1,Sat:!1,Sun:!1});return calendar}function setCalendarTable(calendar){var simpleModeCalendar=getSimpleModeCalendar();return _.each(calendar,function(num,inx){if(num){var numToBit=(num>>>0).toString(2);numToBit=numToBit.split("").reverse().join(""),_.each(numToBit,function(bit,i){"1"==bit&&(simpleModeCalendar[i][inx]=!0)})}}),simpleModeCalendar}var paths={schedules:"Device.System.Scheduler.Config."},cronStr=cronToString();return{convertRules:convertRules,convertCronToUserString:cronStr.convert,checkRange:checkRangeNumbersSchedule,getDiffRule:getDiffRule,getRule:getRule,getConfig:getConfig,getRemoveScheduleConfig:getRemoveScheduleConfig,getRemoveBranchConfig:getRemoveBranchConfig,getUsedBranchSchedules:getUsedBranchSchedules,getDeleteBranchConfig:getDeleteBranchConfig,commands:commands,date:cronStr,valid:validation,getDuration:funcs.lookTime,getSimpleModeCalendar:getSimpleModeCalendar,setCalendarTable:setCalendarTable}}var _=__webpack_require__(4),funcs=__webpack_require__(5),cronToString=__webpack_require__(342),commands=__webpack_require__(343),validation=__webpack_require__(344);module.exports=Helper},function(module,exports){"use strict";function cronToString(){function timeDoubleFormat(t){return regExpRange.test(t)?timeDoubleFormat(t.split("-")[0])+"-"+timeDoubleFormat(t.split("-")[1]):1==t.length?"0"+t:t}function getNameMonth(n){if(regExpRange.test(n))return getNameMonth(n.split("-")[0])+" – "+getNameMonth(n.split("-")[1]);if(isNaN(n)){var arrMonthStr={jan:"month_1",feb:"month_2",mar:"month_3",apr:"month_4",may:"month_5",jun:"month_6",jul:"month_7",aug:"month_8",sep:"month_9",oct:"month_10",nov:"month_11",dec:"month_12"};return arrMonthStr[n]}n=rmZero(n);var arrMonthNum=["","month_1","month_2","month_3","month_4","month_5","month_6","month_7","month_8","month_9","month_10","month_11","month_12"];return arrMonthNum[n]}function getWeekDay(n){if(regExpRange.test(n))return getWeekDay(n.split("-")[0])+" – "+getWeekDay(n.split("-")[1]);if(isNaN(n)){var arrWeekDayStr={sun:"sunday",mon:"monday",tue:"tuesday",wed:"wednesday",thu:"thursday",fri:"friday",sat:"saturday"};return arrWeekDayStr[n]}n=rmZero(n);var arrWeekDayNum=["sunday","monday","tuesday","wednesday","thursday","friday","saturday"];return arrWeekDayNum[n]}function rmZero(n){return"0"==n[0]&&n.length>1&&(n=n.slice(1,n.length)),n}function convert(cron,addingSchedules){if(_.isObject(cron)){var str="",weekDays={Mon:"",Tue:"",Wed:"",Thu:"",Fri:"",Sat:"",Sun:""},count=0,limit=0;return _.each(cron,function(item,key){_.each(item,function(day,ind){if(day){if(3>limit){var time=" at "+(10>key?"0"+key:key)+":00, ";weekDays[ind]+=time,limit+=1}count+=1}})}),_.each(weekDays,function(day,key){day&&3>=limit&&(str+=("Tue"==key?"in_on_1 ":"in_on ")+getWeekDay([key.toLowerCase()])+day)}),str&&(str=str.slice(0,-2)),count>limit&&(str+=" more "+(count-limit)+" ..."),str}var findEveryVal,arrCron=cron.split(" "),every=!1,stringForUser="",regEveryVal=/^\*\/([0-9]{1,2})$/,regSeveralVal=/^([0-9]{1,2}|[0-9]{1,2}\s*-\s*[0-9]{1,2})(\,\s*([0-9]{1,2}|[0-9]{1,2}\s*-\s*[0-9]{1,2}))*$/,tmpStr="",tmpArr=[],needSplitMin=regSeveralVal.test(arrCron[0])&&"*"!=arrCron[1],needSplitHour=regSeveralVal.test(arrCron[1]),minArr=needSplitMin?arrCron[0].split(","):[],hourArr=needSplitHour?arrCron[1].split(","):[];if("undefined"==typeof arrCron[3]?(findEveryVal=regEveryVal.exec(arrCron[3]),stringForUser="every_month "):"*"==arrCron[3]?("*"!=arrCron[2]?stringForUser="every_month ":(stringForUser="every_month ","*"!=arrCron[2]&&"*"!=arrCron[1]&&"*"!=arrCron[0]||(stringForUser="")),every=!0):(findEveryVal=regEveryVal.exec(arrCron[3]),tmpArr=arrCron[3].split(","),tmpStr="",_.each(tmpArr,function(item,i){tmpStr+=getNameMonth(item),i!=tmpArr.length-1&&(tmpStr+=", ")}),stringForUser=stringForUser+"at "+tmpStr+" "),"*"==arrCron[2]?every?"*"==arrCron[1]||"*"==arrCron[0]||regEveryVal.test(arrCron[1])||"*"!=arrCron[4]||(stringForUser=" every_day "):"*"!=arrCron[1]&&"*"!=arrCron[0]&&"*"==arrCron[4]&&(stringForUser=" every_day "+stringForUser):"string"==typeof arrCron[2]&&(tmpArr=arrCron[2].split(","),tmpStr="",_.each(tmpArr,function(item,i){tmpStr+=timeDoubleFormat(item),i!=tmpArr.length-1&&(tmpStr+=", ")}),stringForUser=stringForUser+" "+tmpStr+"th "),"*"==arrCron[1]?"*"==arrCron[0]||regEveryVal.test(arrCron[0])||(stringForUser=every?"every_hour":"*"==arrCron[2]&&""!=arrCron[3]?"every_hour "+stringForUser:"every_hour "+stringForUser):(findEveryVal=regEveryVal.exec(arrCron[1]),regSeveralVal.test(arrCron[1])?(tmpArr=arrCron[1].split(","),minArr.length>1&&hourArr.length>=1||minArr.length>=1&&hourArr.length>1||(tmpStr="",_.each(tmpArr,function(item,i){tmpStr+=timeDoubleFormat(item),i!=tmpArr.length-1&&(tmpStr+=", ")}),stringForUser=stringForUser+"at "+tmpStr)):findEveryVal?stringForUser="every_x "+findEveryVal[1]+"st hour "+stringForUser:"*"==arrCron[0]?stringForUser=" between "+timeDoubleFormat(arrCron[1])+":00 and "+timeDoubleFormat(arrCron[1])+":59 "+stringForUser:regEveryVal.test(arrCron[0])&&(stringForUser=" at "+timeDoubleFormat(arrCron[1])+":00 "),every=!1),"*"==arrCron[0]?stringForUser=every?"every_minute":"every_minute "+stringForUser:(findEveryVal=regEveryVal.exec(arrCron[0]),regSeveralVal.test(arrCron[0])&&"*"!=arrCron[1]&&(tmpArr=arrCron[0].split(","),minArr.length>1&&hourArr.length>=1||minArr.length>=1&&hourArr.length>1||(tmpStr="",_.each(tmpArr,function(item,i){tmpStr+=timeDoubleFormat(item),i!=tmpArr.length-1&&(tmpStr+=", ")}),stringForUser=stringForUser+":"+tmpStr))),(minArr.length>1&&hourArr.length>=1||minArr.length>=1&&hourArr.length>1)&&(tmpStr="",_.each(hourArr,function(itemH,i){_.each(minArr,function(itemM,j){tmpStr+=timeDoubleFormat(itemH)+":"+timeDoubleFormat(itemM),i==hourArr.length-1&&j==minArr.length-1||(tmpStr+=", ")})}),stringForUser=stringForUser+"at "+tmpStr),"undefined"==typeof arrCron[4])stringForUser=stringForUser.replace(/\s$/,""),stringForUser="every_week "+stringForUser;else if("*"!=arrCron[4]){stringForUser=stringForUser.replace(/\s$/,""),tmpArr=arrCron[4].split(",");var daysStr="";_.each(tmpArr,function(day,key){daysStr+=("2"==day?"in_on_1 ":"in_on ")+getWeekDay(day)+(key==tmpArr.length-1?"":", ")}),stringForUser=daysStr+" "+stringForUser}return arrCron[5]&&(stringForUser="*"!=arrCron[4]||"*"!=arrCron[2]?stringForUser+" "+convertDurationToUserKnown(arrCron[5])+" ("+getWeekMonthIndexCounter(addingSchedules,cron)+")":stringForUser+" "+convertDurationToUserKnown(arrCron[5])),stringForUser}function convertDurationToUserKnown(duration){if(duration){var days=0,hours=0,sec=0,min=0;duration>=86400&&(days=parseInt(duration/86400),duration%=86400),duration>=3600&&(hours=parseInt(duration/3600),duration%=3600),duration>=60&&(min=parseInt(duration/60),duration%=60),duration>0&&(sec=duration);var tmpDays=days>0?days+":":"";return"on "+tmpDays+timeDoubleFormat(hours.toString())+":"+timeDoubleFormat(min.toString())+":"+timeDoubleFormat(sec.toString())}}function getWeekMonthIndexCounter(addingSchedules,cron){var weeks=[],arrCron="";return _.each(addingSchedules,function(elem){elem.Cron&&(arrCron=elem.Cron.split(" "),"*"==arrCron[4]&&"*"==arrCron[2]||weeks.push(elem.Cron))}),weeks.indexOf(cron.slice(0,cron.lastIndexOf(" ")))+1}var regExpRange=/^(\d{1,2})\s*-\s*(\d{1,2})$/;return{convert:convert,getNameMonth:getNameMonth,getWeekDay:getWeekDay,doubleFormat:timeDoubleFormat}}module.exports=cronToString},function(module,exports,__webpack_require__){"use strict";function commands(){function getCommand(commandsConf,tree,commandType,modemKey){var result=[];return _.each(commandsConf,function(item,idRule){"object"==_typeof2["default"](item)&&_.each(item.Commands,function(cmd,idCommand){var command=funcs.fetchBranch(tree,cmd.Link);if(command.Command==commandType){if(!_.isEmpty(modemKey)&&"exec"==commandType){var args=command.Arguments.split(" "),modemPath="Device.USB.Modem."+modemKey+".";if(!args[0]||!args[1]||"usbmodem_restore"!=args[0]||args[1]!=modemKey&&args[1]!=modemPath||command.Origin!=modemPath)return}result.push({Enable:item.Enable,Cron:item.Cron,Name:item.Name,idRule:idRule,idCommand:idCommand,idCommandLink:getId(cmd.Link)})}})}),!!Object.keys(result).length&&result}function getId(link){var id=link?link.match(/\.\d+\.$/g,""):void 0;return id?id[0].replace(/\./g,""):""}function getConfigCmd(schedule,config,rules,nameCmd,uploadArgs){var newConfig=funcs.deepClone(config),name=schedule.name,cron=schedule.min.split(" ").join("")+" "+schedule.hour.split(" ").join("")+" "+schedule.day.split(" ").join("")+" "+schedule.month.split(" ").join("")+" "+schedule.weekDay.split(" ").join(""),addToExistRule=null,scheduleExist=null,deleteData=null;return rules&&rules.length&&(addToExistRule=_.find(rules,function(rule){return name==rule.Name}),deleteData=getDeleteCmdData(rules,addToExistRule,config)),addToExistRule||_.each(config.Device.System.Scheduler.Commands,function(rule,idSchedule){rule.Name==name&&(scheduleExist=idSchedule)}),setConfig(newConfig,addToExistRule,scheduleExist,deleteData,cron,nameCmd,schedule,uploadArgs),newConfig}function setConfig(config,existRule,scheduleExist,deleteData,cron,nameCmd,schedule,uploadArgs){var pathScheduler="Device.System.Scheduler.Commands",pathCommand="Device.System.Command.",modemPath="Device.USB.Modem."+schedule.args.modem+".",scheduleRule=null,command={Command:nameCmd};schedule.args&&schedule.args.modem?(command.Arguments="usbmodem_restore "+modemPath+" "+schedule.args.restoreCount,command.Origin=modemPath):"upload_config"==nameCmd&&(command.Arguments=uploadArgs),deleteData&&_.each(deleteData,function(data){var deletePath=pathScheduler;data.deleteSchedule?(funcs.cutBranch(config,deletePath+"."+data.idSchedule),funcs.cutBranch(config,pathCommand+data.idCommandLink)):(funcs.cutBranch(config,deletePath+"."+data.idSchedule+".Commands."+data.idCommand),funcs.cutBranch(config,pathCommand+data.idCommandLink))}),existRule||scheduleExist?scheduleExist?(scheduleRule={Link:pathCommand+"new_command"},funcs.setValue(pathScheduler+"."+scheduleExist+".Commands.new_link",scheduleRule,config),funcs.setValue(pathCommand+"new_command",command,config)):(scheduleRule={Name:schedule.name,Cron:cron},funcs.setValue(pathScheduler+"."+existRule.idRule,scheduleRule,config),funcs.setValue(pathCommand+existRule.idCommandLink,command,config)):(scheduleRule={Enable:!0,Cron:cron,Commands:{},Name:schedule.name},scheduleRule.Commands.new_link={Link:pathCommand+"new_command."},funcs.setValue(pathScheduler+".new_schedule",scheduleRule,config),funcs.setValue(pathCommand+"new_command",command,config))}function getDeleteCmdData(rules,existSchedule,config){function mayDeleteSchedule(idSchedule,config){var Commands=funcs.fetchBranch(config,"Device.System.Scheduler.Commands.");return Object.keys(Commands[idSchedule].Commands).length<=2}var deleteData=[],mayDeleteSchedule=mayDeleteSchedule;return _.each(rules,function(rule){if(!existSchedule||existSchedule&&rule.Cron!=existSchedule.Cron){var deleteSchedule=mayDeleteSchedule(rule.idRule,config);deleteData.push({idSchedule:rule.idRule,idCommand:rule.idCommand,deleteSchedule:deleteSchedule,idCommandLink:rule.idCommandLink})}}),deleteData}function getDeleteCmdConfig(config,rules){var newConfig=funcs.deepClone(config),path="Device.System.Scheduler.Commands",pathCommand="Device.System.Command.",deleteData=getDeleteCmdData(rules,null,config);return _.each(deleteData,function(item){item.deleteSchedule?(funcs.cutBranch(newConfig,path+"."+item.idSchedule),funcs.cutBranch(newConfig,pathCommand+item.idCommandLink)):(funcs.cutBranch(newConfig,path+"."+item.idSchedule+".Commands."+item.idCommand),funcs.cutBranch(newConfig,pathCommand+item.idCommandLink))}),newConfig}return{getCommand:getCommand,getConfigCmd:getConfigCmd,getDeleteCmdConfig:getDeleteCmdConfig}}var _interopRequireDefault=__webpack_require__(7),_typeof2=_interopRequireDefault(__webpack_require__(8)),funcs=__webpack_require__(5);module.exports=commands},function(module,exports,__webpack_require__){"use strict";function checkRangeNumbersSchedule(value,start,end,type,date){function checkRangeNums(start,end,arr){var result=!0;return _.each(arr,function(item){regExpRange.exec(item.replace(/\s/g,""))?result=!(Number(item.replace(/\s/g,"").split("-")[0])>=item.replace(/\s/g,"").split("-")[1])&&checkRangeNums(start,end,item.replace(/\s/g,"").split("-")):(start>item||item>end)&&(result=!1)}),result}function checkRangeStrings(val,arr){var result=!0;return _.each(val,function(item){var find=_.find(arr,function(str){return str==item.replace(/\s/g,"")});"undefined"==typeof find&&(result=!1)}),result}var regExpNum=/^([0-9]{1,2}|[0-9]{1,2}\s*-\s*[0-9]{1,2})(\,\s*([0-9]{1,2}|[0-9]{1,2}\s*-\s*[0-9]{1,2}))*$/,regExpAnother=/^(\*\/([0-9]{1,2}))$|^(\*)$/,numsComma=regExpNum.exec(value),numsEvery=regExpAnother.exec(value);if(numsComma)return checkRangeNums(start,end,numsComma[0].split(","))?null:"invalid_range";if(numsEvery){var num=numsEvery[0].split("/")[1];return start>num||num>end?" invalid_range":null}return"undefined"!=typeof type&&!regExpNum.exec(value)&&isNaN(value)?"m"==type?checkRangeStrings(value.split(","),arrMonths)?null:"invalid_range":"w"==type?checkRangeStrings(value.split(","),arrWeek)?null:"invalid_range":"invalid_value":"invalid_value"}function checkCorrectDate(day,month){return"*"!=month&&3==month.length&&isNaN(month)&&(month=getMonthNumberFromName(month)),day=parseInt(day),month=parseInt(month),0>day||day>monthDay[month]?"sched_incorrect_date":null}function getMonthNumberFromName(name){var result=0;return _.each(arrMonths,function(el,i){el==name&&(result=i+1)}),result}function sortParamDate(str,type){function trim(str){return str.replace(/\s/g,"")}function sort(arr,type){function compareNumber(a,b){return a-b}function prepareMouth(str){var index=arrMonths.indexOf(str);return-1!==index?index+1:+str}function prepareWeekDay(str){var index=arrWeek.indexOf(str);return-1!==index?index:+str}return"month"===type?arr=_.map(arr,prepareMouth):"weekDay"===type&&(arr=_.map(arr,prepareWeekDay)),arr=_.uniq(arr),arr.sort(compareNumber)}if(str){var str=trim(str),arr=str.split(","),tempArr=[];if(_.each(arr,function(elem,key){if(regExpRange.exec(elem)){arr[key]=elem.split("-")[0];for(var _i=Number(elem.split("-")[0])+1;_i<=elem.split("-")[1];_i++)arr.push(String(_i))}}),arr.length>1){arr=sort(arr,type);var i=0;tempArr[i]="",_.each(arr,function(elem,key){arr[key+1]==Number(elem)+1?tempArr[i]=tempArr[i]+elem+",":(tempArr[i]=tempArr[i]+elem,i++,tempArr[i]="")}),tempArr.pop(),arr=[],_.each(tempArr,function(elem){var range=elem.split(",");arr.push(range.length>2?range[0]+"-"+range[range.length-1]:elem)}),str=arr.join(",")}return str}}var _=__webpack_require__(4);module.exports={checkRange:checkRangeNumbersSchedule,checkCorrectDate:checkCorrectDate,sort:sortParamDate};var arrMonths=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"],arrWeek=["sun","mon","tue","wed","thu","fri","sat"],regExpRange=/^\d{1,2}\s*-\s*\d{1,2}$/,monthDay={1:31,2:29,3:31,4:30,5:31,6:30,7:31,8:31,9:30,10:31,11:30,12:31}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(324)}},function(module,exports,__webpack_require__){"use strict";function isChanged(){var path,changes=status();for(path in changes)if(!path.indexOf("Device.WiFiMACFilter"))return!0;return!1}function status(){return dms.data?_.extend(funcs.getChanges(dms.data,dms.__initialData),funcs.getChanges(dms.__initialData,dms.data)):{}}function data(){return dms.data?dms.data.Device.WiFiMACFilter:{}}var dms=__webpack_require__(213).get().wifiMacFilter,funcs=__webpack_require__(5),_=__webpack_require__(4);module.exports={pull:dms.pull,push:dms.push,status:status,isChanged:isChanged,data:data,cut:function(inx){return funcs.cutInstance(dms.data.Device.WiFiMACFilter,"Rules."+inx)},set:function(inx,obj){return funcs.setInstance(dms.data.Device.WiFiMACFilter,"Rules."+inx,obj)},add:function(obj){return funcs.addInstance(dms.data.Device.WiFiMACFilter,"Rules",obj)}},dms.isChanged=isChanged,dms.status=status},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports=__webpack_require__(349)},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(input){function getCpu(newCpu,oldCpu){var total=Math.abs(getParam(newCpu,"Total")-getParam(oldCpu,"Total")),busy=Math.abs(getParam(newCpu,"Busy")-getParam(oldCpu,"Busy")),loadCpu=total?Math.round(busy/total*100):0;return 100>loadCpu?loadCpu:"100"}function getParam(input,param){input=funcs.newConfig.normalize(input);var data=_.pluck(input,param),sum=0;return _.each(data,function(elem){sum+=elem}),sum}function getRate(ram){var usedRam=ram.MemTotal-ram.MemFree-ram.Shmem-ram.Buffers,totalRam=ram.MemTotal;return Math.round(usedRam/totalRam*100)}var pattern=T({"->":["$newData","$oldData","cpu","ram"],$input:":external",$newData:["$input",function(i){return funcs.fetchBranch(i.newData,paths.cpu)}],$oldData:["$input",function(i){return funcs.fetchBranch(i.oldData,paths.cpu)}],$ramData:["$input",function(i){return funcs.fetchBranch(i.memory,paths.ram)}],backup:["$input",function(i){return i.newData}],cpu:{"->":!0,$newCpu:["$parent",function(p){return p.$newData}],$oldCpu:["$parent",function(p){return p.$oldData}],cpu:["$newCpu","$oldCpu",function(newCpu,oldCpu){return getCpu(newCpu.Stats,oldCpu.Stats)}],cpuString:["cpu",function(cpu){return cpu+"%"}]},ram:{"->":["$ramData","rate","string"],$ramData:["$parent",function(p){return p.$ramData}],rate:{"->":!0,used:["$parent",function(p){return getRate(p.$ramData)}]},string:{"->":!0,$ram:["$parent",function(p){return p.$ramData}],total:["$ram*",function(r){return 1024*r.MemTotal}],buf:["$ram",function(r){return 1024*r.Buffers}],shared:["$ram",function(r){return 1024*r.Shmem}],free:["$ram",function(r){return 1024*r.MemFree}],used:["$ram",function(r){return 1024*(r.MemTotal-r.Buffers-r.Shmem-r.MemFree)}]}}});return pattern.build({$input:input})}var _=__webpack_require__(4),T=__webpack_require__(35).T,funcs=__webpack_require__(5),paths={
cpu:"Device.Statistics.CPU.",ram:"Device.Statistics.Meminfo."};module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(351)}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data){function getPort(port,attrs){return _.pick(port,function(elem,inx){return elem!=attrs[inx].offValue})}function getOrder(){var order=funcs.fetchBranch(data.value,pathPorts);return order.order}function getSpeed(port){return port.Speed?port.Speed+"M-"+(port.Duplex?"Full":"Half"):"auto"}var pattern=T({"->":["$data","ports"],$data:":external",order:getOrder(),ports:{"->":!0,$data:["$parent",function(p){return p.$data}],$attrs:["$parent",function(p){return funcs.fetchBranch(p.$data.attrs,path+"#template.Statistics.")}],$values:["$parent",function(p){return funcs.newConfig.normalize(funcs.fetchBranch(p.$data.value,path))}],"{$ports}":["$values",function(v){return v}],$port:["$ports","$attrs",function(p,a){return getPort(p.Statistics,a)}],$portInfo:["$data","$ports",function(d,p){return funcs.fetchBranch(d.value,p.CrossLink)}],__id:["$ports",function(o){return/Device\.Switch\.Ports\.(.*)\./.exec(o.CrossLink)[1]}],alias:["$portInfo*",function(pi){return pi.Alias}],status:["$portInfo*",function(pi){return"Enabled"==pi.Status}],Enable:["$portInfo*",function(p){return p.Enable}],IsSFP:["$ports*","$portInfo*",function(ps,pi){return"Fiber"==ps.Media||"10GBase-X"==pi.Standard}],Speed:["$ports*",function(p){return getSpeed(p)}],Autonegotiation:["$ports*",function(p){return p.Autonegotiation}],PreferenceMode:["$ports*",function(p){return p.PreferenceMode}],IsPreferenceModeEnabled:["$ports*","$portInfo*",function(ps,pi){return"Auto"!=pi.PreferenceMode&&1e3==ps.Speed}],FlowControl:["$ports*",function(p){return"Off"!=p.FlowControl&&"Back-pressure"!=p.FlowControl}],MDIX:["$ports*",function(p){return p.MDIX}],BroadcastPacketsReceived:["$port*",function(p){return p.BroadcastPacketsReceived}],BroadcastPacketsSent:["$port*",function(p){return p.BroadcastPacketsSent}],BytesReceived:["$port*",function(p){return p.BytesReceived}],BytesSent:["$port*",function(p){return p.BytesSent}],CRCErroredPackets:["$port*",function(p){return p.CRCErrorsReceived}],Collisions:["$port*",function(p){return p.CollisionsSent}],DiscardPacketsReceived:["$port*",function(p){return p.DiscardPacketsReceived}],DiscardPacketsSent:["$port*",function(p){return p.DiscardPacketsSent}],DropEvents:["$port*",function(p){return p.DropPacketsReceived}],ErrorsReceived:["$port*",function(p){return p.ErrorsReceived}],ErrorsSent:["$port*",function(p){return p.ErrorsSent}],ExcessiveCollisions:["$port*",function(p){return p.ExcessiveCollisionsSent}],Fragments:["$port*",function(p){return p.FragmentationErrorPacketsReceived}],Jabbers:["$port*",function(p){return p.JabbersPacketsReceived}],LateCollisions:["$port*",function(p){return p.LateCollisionsSent}],MulticastPacketsReceived:["$port*",function(p){return p.MulticastPacketsReceived}],MulticastPacketsSent:["$port*",function(p){return p.MulticastPacketsSent}],OversizePackets:["$port*",function(p){return p.OversizePacketsReceived}],Packets1024to1518Bytes:["$port*",function(p){return p.Packets1024To1518BytesReceived}],Packets128to255Bytes:["$port*",function(p){return p.Packets128To255BytesReceived}],Packets256to511Bytes:["$port*",function(p){return p.Packets256To511BytesReceived}],Packets512to1023Bytes:["$port*",function(p){return p.Packets512To1023BytesReceived}],Packets64Bytes:["$port*",function(p){return p.Packets64BytesReceived}],Packets65to127Bytes:["$port*",function(p){return p.Packets65To127BytesReceived}],PacketsReceived:["$port*",function(p){return p.PacketsReceived}],PacketsSent:["$port*",function(p){return p.PacketsSent}],PauseFramesReceived:["$port*",function(p){return p.PauseFramesReceived}],PauseFramesSent:["$port*",function(p){return p.PauseFramesSent}],UndersizePackets:["$port*",function(p){return p.UndersizePacketsReceived}],UnicastPacketsReceived:["$port*",function(p){return p.UnicastPacketsReceived}],UnicastPacketsSent:["$port*",function(p){return p.UnicastPacketsSent}],UnknownProtoPacketsReceived:["$port*",function(p){return p.UnknownProtoPacketsReceived}],InPortUtilization:["$port*",function(p){return p.InboundPortUtilization}],OutPortUtilization:["$port*",function(p){return p.OutboundPortUtilization}],BidirectPortUtilization:["$port*",function(p){return p.BidirectPortUtilization}],LinkPortUptime:["$port*",function(p){return p.LinkPortUptime}],CurrentRxSpeed:["$port*",function(p){return p.CurrentRxSpeed?p.CurrentRxSpeed/1e6:void 0}],CurrentTxSpeed:["$port*",function(p){return p.CurrentTxSpeed?p.CurrentTxSpeed/1e6:void 0}]}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),path="Device.Statistics.Port.",pathPorts="Device.Switch.Ports.";module.exports={dsysinitToNative:dsysinitToNative}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(353)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getIfaces(data){var supportedTypes=["DHCP","DHCPv6","PPTP","L2TP","PPPoE","Static","Staticv6"],connPath="Device.Network.Connection.",usbConnPath="Device.USB.Connection.",bridgePath="Device.Network.Interface.Bridge.",groupPath="Device.Network.Group.",conns=funcs.newConfig.normalize(funcs.fetchBranch(data,connPath)),groups=funcs.newConfig.normalize(funcs.fetchBranch(data,groupPath)),usbConns=funcs.newConfig.normalize(funcs.fetchBranch(data,usbConnPath)),bridges=funcs.newConfig.normalize(funcs.fetchBranch(data,bridgePath)),result=[],links=[],_loop=function(conn){if(supportedTypes.find(function(type){return type==conn}))for(var _inx in funcs.newConfig.normalize(conns[conn]))links.push(connPath+conn+"."+_inx+".")};for(var conn in conns)_loop(conn);for(var inx in usbConns)links.push(usbConnPath+inx+".");return _.each(bridges,function(br,inx){if(br.CreateInterface&&br.ForceBridge){var name=1==inx?"LAN":br.Name;result.push({name:name,value:bridgePath+inx+"."})}}),Object.keys(groups).forEach(function(inx){var groupLinks=[groupPath+inx+".WAN.",groupPath+inx+".WANv6.",groupPath+inx+".VPN."];groupLinks.forEach(function(link){Object.values(funcs.newConfig.normalize(funcs.fetchBranch(data,link))).forEach(function(conn){var ifaceLink=conn.Link,iface=funcs.fetchBranch(data,ifaceLink);if(iface&&(void 0==iface.Name&&(iface=funcs.fetchBranch(data,iface.Interface)),links.find(function(supportedLink){return supportedLink==ifaceLink}))){var connection={value:ifaceLink,name:getIfaceName(ifaceLink,iface)};result.some(function(conn){return conn.value==connection.value})||result.push(connection)}})})}),result.push({name:"wan_auto",value:""}),result}function getIfaceName(link,ifaceConfig){var splitLink=link.split("."),connType=splitLink[3];return"DHCPv6"==connType&&(ifaceConfig.Interface.includes("PPPoE")||ifaceConfig.Interface.includes("L2TP"))&&isDual(ifaceConfig,connType)?ifaceConfig.Name+" (IPv6)":"PPPoE"!=connType&&"L2TP"!=connType||!isDual(ifaceConfig,connType)?ifaceConfig.Name:ifaceConfig.Name+" (IPv4)"}function isDual(conn,connType){if("DHCPv6"==connType){var iface=conn.Interface,flags=funcs.fetchBranch(data,funcs.fetchBranch(data,iface).PPPConfiguration);if(flags&&"Dual"==flags.IPStack)return!0}if("PPPoE"==connType||"L2TP"==connType){var _flags=funcs.fetchBranch(data,conn.PPPConfiguration);if(_flags&&"Dual"==_flags.IPStack)return!0}return!1}function getCurrentIface(tr,ifaces){var iface=_.findWhere(ifaces,{value:tr.Iface});return iface&&iface.name?iface.name:""}var pattern=T({"->":["$data","$ifaces","$tr","tr69","tmp"],$data:":external",$tr:["$data",function(d){return d.Device.Services.TR069}],requiredUrl:!1,tr69:{"->":!0,$tr:["$parent",function(p){return p.$tr}],$manageServer:["$tr",function(tr){return tr.ManagementServer}],Enable:["$tr",function(tr){return tr.Enable}],iface:["$tr",function(tr){return tr.Iface}],AcsURL:["$manageServer",function(ms){return ms.URL}],AcsUser:["$manageServer",function(ms){return ms.Username}],AcsPwd:["$manageServer",function(ms){return ms.Password}],InformEnable:["$manageServer",function(ms){return ms.PeriodicInformEnable}],InformInterval:["$manageServer",function(ms){return ms.PeriodicInformInterval}],InformTime:["$manageServer",function(ms){return ms.PeriodicInformTime}],ConnReqUser:["$manageServer",function(ms){return ms.ConnectionRequestUsername}],ConnReqPwd:["$manageServer",function(ms){return ms.ConnectionRequestPassword}],ConnReqPort:["$tr",function(tr){return tr.ConnectionRequestPort}],ConnReqPath:["$tr",function(tr){return tr.ConnectionRequestPath}],DSCPMark:["$tr",function(tr){return tr.DSCPMARK}],DHCPURL:["$manageServer",function(ms){return ms.DHCPOptionEnable}]},ifaces:["$data",function(d){return getIfaces(d)}],$ifaces:["ifaces",function(i){return i}],ifacesList:["ifaces",function(i){return _.pluck(i,"name")}],tmp:{"->":!0,iface:["$parent",function(p){return getCurrentIface(p.$tr,p.ifaces)}]},isStun:!1});return pattern.build({$data:data})}function nativeToDsysinit(data){function getIface(tmpIface,ifaces){var iface=_.findWhere(ifaces,{name:tmpIface});return iface.value}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Services:{TR069:{"->":["$tr","ManagementServer"],$tr:["$root",function(r){return r.$data.tr69}],$ifaces:["$root",function(r){return r.$data.ifaces}],$tmpIface:["$root",function(r){return r.$data.tmp.iface}],ConnectionRequestPath:["$tr",function(tr){return tr.ConnReqPath}],ConnectionRequestPort:["$tr",function(tr){return tr.ConnReqPort}],Enable:["$tr",function(tr){return tr.Enable}],Iface:["$tmpIface","$ifaces",function(tmp,ifaces){return getIface(tmp,ifaces)}],DSCPMARK:["$tr",function(tr){return tr.DSCPMark}],ManagementServer:{"->":!0,$tr:["$parent",function(p){return p.$tr}],ConnectionRequestPassword:["$tr",function(tr){return tr.ConnReqPwd}],ConnectionRequestUsername:["$tr",function(tr){return tr.ConnReqUser}],URL:["$tr",function(tr){return tr.AcsURL}],Username:["$tr",function(tr){return tr.AcsUser}],Password:["$tr",function(tr){return tr.AcsPwd}],PeriodicInformEnable:["$tr",function(tr){return tr.InformEnable}],PeriodicInformInterval:["$tr",function(tr){return tr.InformInterval}],DHCPOptionEnable:["$tr",function(tr){return tr.DHCPURL}]}}}}});return pattern.build({$data:data})}var _=__webpack_require__(4),T=__webpack_require__(35).T,funcs=(__webpack_require__(313),__webpack_require__(5));module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(355)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function fetchFirstInstField(mode,upnp,data,field){var ret=void 0;return"Firewall"!=mode&&Object.keys(upnp).length>0&&(ret=funcs.fetchBranch(data,path+"1."+field)),ret}function getStatsLink(data,upnp,deviceMode){if("Firewall"!=deviceMode&&!_.isEmpty(upnp)){var upnp_fetched=funcs.fetchBranch(data,path+"1.");return null!==upnp_fetched?upnp_fetched.Statistics:void 0}}function getState(state){switch(state){case"Enabled":return"on";case"Aborted":return"off";case"Disabled":return"off";case"Enabling":return"pending";case"Disabling":return"pending"}}var pattern=T({"->":["?","$data","$upnp","$mode","Rules","Leases"],$data:":external",$upnp:["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(data,path))}],Mode:["$data",function(d){return funcs.fetchBranch(d,modePath)}],Enable:["$data","$upnp","Mode",function(data,upnp,mode){return fetchFirstInstField(mode,upnp,data,"Enable")}],IPStack:["$data","$upnp","Mode",function(data,upnp,mode){return fetchFirstInstField(mode,upnp,data,"IPStack")}],__index:["$data","$upnp","Mode",function(data,upnp,mode){return"Firewall"==mode||_.isEmpty(upnp)?void 0:"1"}],IfaceType:["Mode",function(mode){return"Firewall"!=mode?"wan_group":void 0}],WANGroup:["Mode",function(mode){return"Firewall"!=mode?"Device.Network.Group.1.":void 0}],$mode:["Mode",function(m){return m}],Leases:{"->":["?","IPv4","IPv6"],$mode:["$parent",function(p){return p.$mode}],$upnp:["$parent",function(p){return p.$upnp}],"?":["$mode","$upnp",function(m,upnp){return"Firewall"!=m&&!_.isEmpty(upnp)}],$data:["$parent",function(p){return p.$data}],$statsLink:["$data","$upnp","$mode",function(d,upnp,m){return getStatsLink(d,upnp,m)}],$portMapping:["$data","$statsLink",function(d,l){return funcs.fetchBranch(d,l)}],IPv4:{"->":!0,$portMapping:["$parent",function(p){return p.$portMapping.Leases}],"{$leases}":["$portMapping",function(pm){return pm&&pm.IPv4?funcs.newConfig.normalize(pm.IPv4):[]}],Protocol:["$leases*",function(l){return l.Proto}],InternalPort:["$leases*",function(l){return l.InternalPort}],ExternalPort:["$leases*",function(l){return l.ExternalPort}],InternalAddr:["$leases*",function(l){return l.InternalIPAddress}],Description:["$leases*",function(l){return l.Description}]},IPv6:{"->":!0,$portMapping:["$parent",function(p){return p.$portMapping.Leases}],"{$leases}":["$portMapping",function(pm){return pm&&pm.IPv6?funcs.newConfig.normalize(pm.IPv6):[]}],Protocol:["$leases*",function(l){return l.Proto}],InternalPort:["$leases*",function(l){return l.InternalPort}],ExternalPort:["$leases*",function(l){return l.ExternalPort}],InternalAddr:["$leases*",function(l){return l.InternalIPAddress}],UID:["$leases*",function(l){return l.UID}]}},Rules:{"->":["?","$rules","NATPMP","UPnP","PCP","Permissions","Leases"],"?":["$parent",function(p){return"Firewall"==p.$mode&&!_.isEmpty(p.$upnp)}],"{$rules, __index}":["$parent",function(p){return funcs.newConfig.normalize(funcs.fetchBranch(p.$data,path))}],AllowPrivateWANSubnet:["$rules",function(r){return r.AllowPrivateWANSubnet}],DefaultPolicy:["$rules*",function(r){return r.DefaultPolicy}],Enable:["$rules*",function(r){return r.Enable}],NATPMP:{"->":!0,$rules:["$parent",function(p){return p.$rules}],Enable:["$rules*",function(r){return r.NATPMP.Enable}]},ExternalInterface:["$rules*",function(r){return r.ExternalInterface}],InternalInterface:["$rules*",function(r){return r.InternalInterface}],PCP:{"->":!0,$rules:["$parent",function(p){return p.$rules}],MaxLifeTime:["$rules*",function(r){return r.PCP.MaxLifetime}],MinLifeTime:["$rules*",function(r){return r.PCP.MinLifetime}]},UPnP:{"->":!0,$rules:["$parent",function(p){return p.$rules}],Enable:["$rules*",function(r){return r.UPnP.Enable}],SecureMode:["$rules*",function(r){return r.UPnP.SecureMode}]},WANGroup:["$rules*",function(r){return r.WANGroup}],IfaceType:["WANGroup",function(wg){return""==wg?"iface":"wan_group"}],Permissions:{"->":!0,$rules:["$parent",function(p){return p.$rules}],"{$permissions, $i}":["$rules*",function(r){return funcs.newConfig.normalize(r.Permissions)}],__id:["$i",function(i){return i}],ExternalPortStart:["$permissions*",function(p){return-1!=p.ExternalPortStart?p.ExternalPortStart:""}],ExternalPortEnd:["$permissions*",function(p){return-1!=p.ExternalPortEnd?p.ExternalPortEnd:""}],InternalPortStart:["$permissions*",function(p){return-1!=p.InternalPortStart?p.InternalPortStart:""}],InternalPortEnd:["$permissions*",function(p){return-1!=p.InternalPortEnd?p.InternalPortEnd:""}],InternalAddress:["$permissions*",function(p){return p.InternalAddress}],Policy:["$permissions*",function(p){return p.Policy}]},Leases:{"->":["?","IPv4","IPv6"],$data:["$root",function(r){return r.$data}],$rules:["$parent",function(p){return p.$rules}],$statsLink:["$rules*",function(r){return r.Statistics}],$portMapping:["$data","$statsLink*",function(d,l){return funcs.fetchBranch(d,l)}],"?":["$portMapping*",function(pm){return pm&&_.has(pm,"Leases")}],IPv4:{"->":!0,$portMapping:["$parent",function(p){return p.$portMapping}],"{$leases, $i}":["$portMapping*",function(pm){return funcs.newConfig.normalize(pm.Leases.IPv4)}],Protocol:["$leases*",function(l){return l.Proto}],InternalPort:["$leases*",function(l){return l.InternalPort}],ExternalPort:["$leases*",function(l){return l.ExternalPort}],InternalAddr:["$leases*",function(l){return l.InternalIPAddress}],Description:["$leases*",function(l){return l.Description}]},IPv6:{"->":!0,$portMapping:["$parent",function(p){return p.$portMapping}],"{$leases, $i}":["$portMapping*",function(pm){return funcs.newConfig.normalize(pm.Leases.IPv6)}],Protocol:["$leases*",function(l){return l.Proto}],InternalPort:["$leases*",function(l){return l.InternalPort}],ExternalPort:["$leases*",function(l){return l.ExternalPort}],InternalAddr:["$leases*",function(l){return l.InternalIPAddress}],UID:["$leases*",function(l){return l.UID}]}},State:["$rules*",function(r){return getState(r.Status)}],IPStack:["$rules*",function(r){return r.IPStack}],StateText:["$rules*",function(r){return r.Status}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({"->":["$data","Device"],$data:":external",Device:{Services:{DynamicPortMapping:{"->":["$rule","NATPMP","PCP","UPnP","Permissions"],$rule:["$root",function(r){return r.$data}],":":["$rule*",function(r){return r.__index||"new_inst_1"}],AllowPrivateWANSubnet:["$rule",function(r){return r.AllowPrivateWANSubnet}],Enable:["$rule",function(r){return r.Enable}],IPStack:["$rule",function(r){return r.IPStack}],DefaultPolicy:["$rule",function(r){return r.DefaultPolicy}],NATPMP:{"->":!0,$rule:["$parent",function(p){return p.$rule.NATPMP}],Enable:["$rule*",function(r){return r.Enable}]},PCP:{"->":!0,$rule:["$parent",function(p){return p.$rule.PCP}],MaxLifetime:["$rule*",function(r){return r.MaxLifeTime}],MinLifetime:["$rule*",function(r){return r.MinLifeTime}]},UPnP:{"->":!0,$rule:["$parent",function(p){return p.$rule.UPnP}],Enable:["$rule*",function(r){return r.Enable}],SecureMode:["$rule*",function(r){return r.SecureMode}]},WANGroup:["$rule",function(r){return"wan_group"==r.IfaceType?r.WANGroup:""}],ExternalInterface:["$rule",function(r){return r.ExternalInterface}],InternalInterface:["$rule",function(r){return r.InternalInterface}],Permissions:{"->":["?"],$rules:["$parent",function(p){return p.$rule}],"?":["$rules",function(r){return"Firewall"==r.Mode}],"{$permissions, $i}":["$rules",function(r){return r.Permissions}],":":["$permissions*","$i*",function(p,i){return p.__id||"new_inst_"+i}],ExternalPortStart:["$permissions*",function(p){return Number(p.ExternalPortStart)||-1}],ExternalPortEnd:["$permissions*",function(p){return Number(p.ExternalPortEnd)||-1}],InternalPortStart:["$permissions*",function(p){return Number(p.InternalPortStart)||-1}],InternalPortEnd:["$permissions*",function(p){return Number(p.InternalPortEnd)||-1}],InternalAddress:["$permissions*",function(p){return p.InternalAddress}],Policy:["$permissions*",function(p){return p.Policy}]}}}}});return pattern.build({$data:data})}function attrs(attrs,data){function getList(arr){return _.map(arr,function(value){return{name:value,value:value}})}function getWanGroup(){var group=funcs.newConfig.instanceObjectToArray(funcs.newConfig.normalize(funcs.fetchBranch(data,networkPath+"Group."))),result=[{name:"st_not_selected",value:""}];return result=result.concat(group.map(function(item){var path="".concat(networkPath,"Group.").concat(item.__id,".");return{name:ifaceHelper.getNameByPath(path),value:path}}))}function getIfaces(){var group=funcs.newConfig.normalize(funcs.fetchBranch(data,networkPath+"Group.")),result={InternalInterface:[{name:"st_not_selected",value:""}],ExternalInterface:{"":[{name:"st_not_selected",value:""}]}};return _.each(group,function(wanGr,key){result.InternalInterface=result.InternalInterface.concat(getIntIface(wanGr)),_.has(result.ExternalInterface,wanGr.LAN)||(result.ExternalInterface[wanGr.LAN]=[{name:"st_not_selected",value:""}]),result.ExternalInterface[wanGr.LAN]=result.ExternalInterface[wanGr.LAN].concat(getExtIface(wanGr))}),result}function getIntIface(wanGr){var iface=funcs.fetchBranch(data,wanGr.LAN);return[{name:iface.Name||iface.Ifname,value:wanGr.LAN}]}function getExtIface(wanGr){var wans=funcs.newConfig.normalize(wanGr.WAN),result=[];return result=result.concat(_.map(wans,function(elem,key){if(-1==elem.Link.indexOf("IPsec")&&-1==elem.Link.indexOf("GRE")){var link=funcs.fetchBranch(data,elem.Link).Interface,iface=funcs.fetchBranch(data,link);return{name:iface.Name||iface.Ifname,value:elem.Link}}}))}var ifaceHelper=new Interface(data),pattern=T({"->":!0,$attrs:":external",$attrPort:["$attrs",function(a){return funcs.fetchBranch(a,path+"#template.")}],DefaultPolicy:["$attrPort",function(a){return getList(a.DefaultPolicy["enum"])}],IfaceType:["$attrPort",function(a){return getList(["iface","wan_group"])}],WANGroup:["$attrs",function(a){return getWanGroup()}],IPStack:["$attrs",function(a){return funcs.newConfig.getOptionsForSelectFromEnumAttrs(a,path,"IPStack")}],Ifaces:["$attrs",function(a){return getIfaces()}]});return pattern.build({$attrs:attrs})}function defaultRule(attrs,isFirewallMode){var pattern=T({"->":["?","$rule","NATPMP","UPnP","PCP","Permissions"],$attrs:":external",$rule:["$attrs",function(a){return funcs.fetchBranch(a,path+"#template.")}],DefaultPolicy:["$rule*",function(r){return r.DefaultPolicy["default"]}],Enable:["$rule*",function(r){return r.Enable["default"]}],IPStack:"IPv4",AllowPrivateWANSubnet:["$rule*",function(r){return r.AllowPrivateWANSubnet["default"]}],NATPMP:{"->":!0,$rule:["$parent",function(p){return p.$rule}],Enable:["$rule*",function(r){return r.NATPMP.Enable["default"]}]},ExternalInterface:["$rule*",function(r){return r.ExternalInterface["default"]}],InternalInterface:["$rule*",function(r){return r.InternalInterface["default"]}],PCP:{"->":!0,$rule:["$parent",function(p){return p.$rule}],MaxLifeTime:["$rule*",function(r){return r.PCP.MaxLifetime["default"]}],MinLifeTime:["$rule*",function(r){return r.PCP.MinLifetime["default"]}]},UPnP:{"->":!0,$rule:["$parent",function(p){return p.$rule}],Enable:["$rule*",function(r){return r.UPnP.Enable["default"]}],SecureMode:["$rule*",function(r){return r.UPnP.SecureMode["default"]}]},WANGroup:["$rule*",function(r){return r.WANGroup["default"]}],IfaceType:["WANGroup",function(wg){return""!=wg||isFirewallMode?"wan_group":"iface"}],Permissions:{"->":!0,$rule:["$parent",function(p){return isFirewallMode?void 0:p.$rule}],"{$permissions, $i}":["$rule*",function(r){return funcs.newConfig.normalize(r.Permissions["#attr"]["default"])}],__id:["$i",function(i){return i}],ExternalPortStart:["$permissions*",function(p){return-1!=p.ExternalPortStart?p.ExternalPortStart:""}],ExternalPortEnd:["$permissions*",function(p){return-1!=p.ExternalPortEnd?p.ExternalPortEnd:""}],InternalPortStart:["$permissions*",function(p){return-1!=p.InternalPortStart?p.InternalPortStart:""}],InternalPortEnd:["$permissions*",function(p){return-1!=p.InternalPortEnd?p.InternalPortEnd:""}],InternalAddress:["$permissions*",function(p){return p.InternalAddress}],Policy:["$permissions*",function(p){return p.Policy}]}});return pattern.build({$attrs:attrs})}var _=__webpack_require__(4),T=__webpack_require__(35).T,funcs=__webpack_require__(5),Interface=__webpack_require__(236),path="Device.Services.DynamicPortMapping.",modePath="Device.DeviceInfo.DeviceMode",networkPath="Device.Network.";module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit,defaultRule:defaultRule,attrs:attrs}},function(module,exports,__webpack_require__){"use strict";function isChanged(protocol){var path,changes=status();for(path in changes)if(!path.indexOf("Device.DNS."+protocol))return!0;return!1}function status(){return dms.data?_.extend(funcs.getChanges(dms.data,dms.__initialData),funcs.getChanges(dms.__initialData,dms.data)):{}}function data(){return dms.data?dms.data.Device.DNS:{}}var dms=__webpack_require__(213).get().dns,funcs=__webpack_require__(5),_=__webpack_require__(4);module.exports={pull:dms.pull,push:dms.push,status:status,isChanged:isChanged,data:data},dms.isChanged=isChanged,dms.status=status},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(359)}},function(module,exports,__webpack_require__){"use strict";module.exports={config:__webpack_require__(360)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(config){function getLANPorts(config,ports,wifi){function getWiFiName(config,link){var radio=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.WiFi.Radio."));for(var i in radio){var radioElem=radio[i];for(var j in funcs.newConfig.normalize(radioElem.AccessPoint)){var apElem=radioElem.AccessPoint[j];if(apElem.Interface==link)return funcs.fetchBranch(config,apElem.Profile+"SSID")}}}var lans=[];for(var i in ports){var elem=ports[i];if(/^LAN/.test(elem.Alias)){var obj={Name:elem.Alias,Link:"Device.Switch.Ports.".concat(i,"."),Inst:i,Enable:elem.Enable,IsWan:!1,IsWiFi:!1};lans.push(obj)}}for(var i in wifi){var elem=wifi[i];if("ap"==elem.Type&&!vlanHelper.isHideEasyMesh("Device.Network.Interface.WiFi.".concat(i,"."),config)){var obj={Name:getWiFiName(config,"Device.Network.Interface.WiFi.".concat(i,".")),Link:"Device.Network.Interface.WiFi.".concat(i,"."),Inst:i,Enable:elem.Enable,IsWan:!1,IsWiFi:!0};lans.push(obj)}}return lans}function getNamesConns(config,inxBridge){var result=[],pathBridge=paths.bridges+inxBridge+".",allConns=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.conns));return _.each(allConns,function(groupConns){groupConns=funcs.newConfig.normalize(groupConns),_.each(groupConns,function(conn){conn.Interface!=pathBridge&&conn.BaseInterface!=pathBridge||result.push(conn.Name)})}),result}function getLinksWanPorts(ports){var result=[];return _.each(ports,function(port,key){port.Upstream&&result.push(paths.ports+key+".")}),result}function getVlanID(bridge){return 0!==bridge.VLANID?bridge.VLANID:null}function getPorts(ports){var ports=funcs.newConfig.normalize(ports),result={};return _.each(ports,function(port,key){result[key]=port}),result}function getBridgeType(bridge,linksWanPorts,key){if("1"==key)return"lan";var hasWANPort=_.find(bridge.Port,function(port){return _.some(linksWanPorts,function(switchPort){return switchPort==port.LowerLayer})});return hasWANPort?hasWANPort.Tagged?"wan_tag":"wan":null}function getInxBridge(link,bridges,wanPortLinks){var inxBridge=_.findKey(bridges,function(br){var ports=funcs.newConfig.normalize(br.Port);return _.some(ports,function(p){return p.LowerLayer==link&&!p.Tagged})&&_.some(ports,function(p){return _.find(wanPortLinks,function(wan){return wan==p.LowerLayer})})});return 1==inxBridge?null:inxBridge?inxBridge:null}function getLinkWanPort(bridge,linksWanPorts){if(bridge.upstream)var wanPort=_.find(bridge.Port,function(port){return _.some(linksWanPorts,function(switchPort){return switchPort==port.LowerLayer&&!port.Tagged})});else var wanPort=_.find(bridge.Port,function(port){return _.some(linksWanPorts,function(switchPort){return switchPort==port.LowerLayer})});return wanPort?wanPort.LowerLayer:null}var pattern=T({"->":["$ports","$wifi","sources","lanPorts"],$config:":external",$bridges:["$config",function(c){return funcs.newConfig.normalize(funcs.fetchBranch(c,paths.bridges))}],$ports:["$config",function(c){return funcs.newConfig.normalize(funcs.fetchBranch(c,paths.ports))}],$wifi:["$config",function(c){return funcs.newConfig.normalize(funcs.fetchBranch(c,paths.wifi))}],$linksWanPorts:["$ports",function(ps){return getLinksWanPorts(ps)}],sources:{"->":["$bridge"],"{$bridge, $key}":["$parent",function(p){return p.$bridges}],":":["$key",function(k){return k}],__inst:["$key",function(o){return o}],type:["$bridge","$parent","$key",function(br,p,k){return getBridgeType(br,p.$linksWanPorts,k)}],vid:["$bridge",function(br){return getVlanID(br)}],wanPort:["$bridge","$parent",function(br,p){return getLinkWanPort(br,p.$linksWanPorts)}],enabled:["$bridge",function(br){return br.Enable}],name:["$bridge",function(br){return br.Name}],upstream:["$bridge",function(br){return br.Upstream}],Port:["$bridge",function(br){return getPorts(br.Port)}],createInterface:["$bridge",function(br){return br.CreateInterface}],__conns:["$parent","$key",function(p,key){return getNamesConns(p.$config,key)}]},lanPorts:{"->":!0,"{$port}":["$root",function(r){return getLANPorts(r.$config,r.$ports,r.$wifi)}],__link:["$port*",function(o){return o.Link}],__inst:["$port*",function(o){return o.Inst}],name:["$port*",function(p){return p.Name}],alias:["$port*",function(p){return p.Name}],bridge:["__link","$parent",function(linkPort,p){return getInxBridge(linkPort,p.$bridges,p.$linksWanPorts)}],isSelected:["$port*",function(p){return p.Enable}],upstream:["$port*",function(p){return p.Upstream}],isWan:["$port*",function(p){return p.IsWan}],isWifi:["$port*",function(p){return p.IsWiFi}]}});return pattern.build({$config:config})}function nativeToDsysinit(config,diffLanPorts,isBackup){function getBridges(sources,switchPorts,diffLanPorts,isBackup){var result=funcs.deepClone(sources),arrUpstreamPorts=_.pluck(_.filter(switchPorts,function(port){return port.upstream}),"__link");return _.each(switchPorts,function(switchPort,inx){var inxPort,inxBridge=_.findKey(result,function(br){return inxPort=_.findKey(br.Port,function(p){return!p.Tagged&&p.LowerLayer==switchPort.__link})});if(inxBridge){if(inxBridge==switchPort.bridge||"1"==inxBridge&&null==switchPort.bridge||null==switchPort.bridge&&isBackup)return;if(funcs.cutBranch(result,"".concat(inxBridge,".Port.").concat(inxPort)),"1"!=inxBridge){var deleteBridge=!_.some(result[inxBridge].Port,function(p){return p.LowerLayer});deleteBridge&&funcs.cutBranch(result,"".concat(inxBridge))}var keyBridge=switchPort.bridge?switchPort.bridge:1,tagPort=_.findKey(result[keyBridge].Port,function(p){return p.LowerLayer==switchPort.__link&&p.Tagged});tagPort?funcs.setValue("".concat(keyBridge,".Port.").concat(tagPort,".Tagged"),!1,result):(funcs.setValue("".concat(keyBridge,".Port.new_port_").concat(inx,".LowerLayer"),switchPort.__link,result),funcs.setValue("".concat(keyBridge,".Port.new_port_").concat(inx,".Tagged"),!1,result)),result[keyBridge].isNew&&(_.find(result[keyBridge].Port,function(p){return p.LowerLayer==result[keyBridge].wanPort})||(funcs.setValue("".concat(keyBridge,".Port.new_wan_port_").concat(inx,".LowerLayer"),result[keyBridge].wanPort,result),funcs.setValue("".concat(keyBridge,".Port.new_wan_port_").concat(inx,".Tagged"),!0,result)))}else if(switchPort.bridge){var keyBridge=switchPort.bridge?switchPort.bridge:1;funcs.setValue("".concat(keyBridge,".Port.new_port_").concat(inx,".LowerLayer"),switchPort.__link,result),funcs.setValue("".concat(keyBridge,".Port.new_port_").concat(inx,".Tagged"),!1,result)}else diffLanPorts&&diffLanPorts[inx]&&!diffLanPorts[inx].bridge&&result&&result[1]&&(funcs.setValue("1.Port.lan_port_".concat(inx,".LowerLayer"),switchPorts[inx].__link,result),funcs.setValue("1.Port.lan_port_".concat(inx,".Tagged"),!1,result))}),_.each(result,function(br,key,inx){if("wan_tag"==br.type){var isPort=!_.some(br.Port,function(port){return port.LowerLayer});isPort&&(funcs.setValue("".concat(key,".Port.new_wan_port_").concat(inx,".LowerLayer"),result[key].wanPort,result),funcs.setValue("".concat(key,".Port.new_wan_port_").concat(inx,".Tagged"),!0,result));var adsf=_.findKey(br.Port,function(port){return port.Tagged&&port.LowerLayer!=br.wanPort&&_.some(arrUpstreamPorts,function(swPort){return swPort==port.LowerLayer})});adsf&&funcs.setValue("".concat(key,".Port.").concat(adsf,".LowerLayer"),br.wanPort,result)}}),result}var pattern=T({"->":["$config","$diffLanPorts","$isBackup","Device"],$config:":external",$diffLanPorts:":external",$isBackup:":external",Device:{Network:{Interface:{Bridge:{"->":!0,"{$bridge, $key}":["$root",function(r){return getBridges(r.$config.sources,r.$config.lanPorts,r.$diffLanPorts,r.$isBackup)}],":":["$bridge","$key",function(br,k){return br.__inst?br.__inst:"new_bridge_".concat(k)}],Enable:["$bridge",function(br){return br.enabled}],Name:["$bridge",function(br){return br.name;
}],CreateInterface:["$bridge",function(br){return!!br.__inst&&br.createInterface}],VLANID:["$bridge",function(br){return br.vid?br.vid:0}],Port:["$bridge",function(br){return br.Port}]}}}}});return pattern.build({$config:config,$diffLanPorts:diffLanPorts,$isBackup:isBackup})}var _=__webpack_require__(4),T=__webpack_require__(35).T,funcs=__webpack_require__(5),vlanHelper=__webpack_require__(250),paths={ports:"Device.Switch.Ports.",bridges:"Device.Network.Interface.Bridge.",conns:"Device.Network.Connection.",wifi:"Device.Network.Interface.WiFi."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(371)}},function(module,exports,__webpack_require__){"use strict";var _interopRequireDefault=__webpack_require__(7),_slicedToArray2=_interopRequireDefault(__webpack_require__(226));!function(){function dsysinitToNative(){function settings(data){var pattern=T({"->":!0,$data:":external",$yd:["$data",function(d){return getFirstInstance(d)}],$dhcp:["$yd","$data",function(yd,d){return getDHCP(yd.Interface,d)}],_dnsRelay:["$dhcp",function(d){return d.dnsRelay}],_dhcpInst:["$dhcp",function(d){return d.inst}],__id:["$yd",function(yd){return yd.id}],enabled:["$yd",function(yd){return yd.Enable||!1}],"default":["$yd",function(yd){return getMode(yd.DefaultMode)}],"interface":["$yd",function(yd){return yd.Interface}]});return pattern.build({$data:data})}function rules(data){var pattern=T({"->":["$data","$yd","rules","clients","settings"],$data:":external",$yd:["$data",function(d){return getFirstInstance(d)}],__id:["$yd",function(yd){return yd.id}],rules:{"->":!0,$yd:["$parent",function(p){return p.$yd}],"{$rule, $id}":["$yd",function(yd){return funcs.newConfig.normalize(yd.Device)}],host:["$rule*",function(r){return r.Name}],mac:["$rule*",function(r){return r.MACAddress}],mode:["$rule*",function(r){return getMode(r.Mode)}],__id:["$id*",function(id){return id}]},clients:{"->":!0,"{$clients}":["$parent",function(p){return getClients(p.$data)}],flags:["$clients*",function(c){return c.Flags}],hostname:["$clients*",function(c){return c.Hostname}],ip:["$clients*",function(c){return c.IPAddress}],mac:["$clients*",function(c){return c.MACAddress.toUpperCase()}],port:["$clients*",function(c){return c.Port}],rule:["$root","$clients*",function(r,c){return getClientRule(r.rules,c)}]},settings:{"->":!0,$yd:["$parent",function(p){return p.$yd}],$dhcp:["$yd","$parent",function(yd,p){return getDHCP(yd.Interface,p.$data)}],_dnsRelay:["$dhcp*",function(d){return d.dnsRelay}],_dhcpInst:["$dhcp*",function(d){return d.inst}],__id:["$yd",function(yd){return yd.id}],enabled:["$yd",function(yd){return yd.Enable||!1}],"default":["$yd",function(yd){return getMode(yd.DefaultMode)}],"interface":["$yd",function(yd){return yd.Interface}]}});return pattern.build({$data:data})}function getDHCP(iface,data){for(var dhcps=funcs.fetchBranch(data,paths.dhcp),ret={inst:1,dnsRelay:void 0},_i=0,_Object$entries=Object.entries(dhcps);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray2["default"](_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];iface&&iface==value.Interface?ret.inst=key:null}return ret.dnsRelay=dhcps[ret.inst].DHCPv4.DNSRelay&&dhcps[ret.inst].DHCPv6.DNSRelay,ret}function getFirstInstance(data){var ydns=funcs.fetchBranch(data,paths.ydns),firstInst=Object.keys(ydns)[0],ret={};return"max_instance"!==firstInst?(ret=ydns[firstInst],ret.id=firstInst):ret={id:"+"+(ydns[firstInst]+1),DefaultMode:"Basic",Enable:!1},ret}function getClients(data){function filterWANClients(clients,data){return _.filter(clients,function(client){if(""==client.Port||""==client.Interface)return!1;var iface=funcs.fetchBranch(data,client.Interface);return-1!=client.Interface.indexOf("Bridge")&&!iface.Upstream||!!iface&&iface.Bridged})}function checkLinkLocal(ip){if(funcs.is.ipv4(ip))return!0;var addr=funcs.ipv6.address.full(ip),splitAddr=addr.split(":");return"fe80"!=splitAddr[0].toLowerCase()}var clients=funcs.fetchBranch(data,paths.clients);return clients=funcs.newConfig.normalize(clients),clients=filterWANClients(clients,data),_.filter(clients,function(e){return("reachable"==e.Flags||"delay"==e.Flags||"stale"==e.Flags)&&""!=e.IPAddress&&checkLinkLocal(e.IPAddress)})}function getMode(mode){switch(mode){case"Family":return"child";case"Safe":return"safe";case"Basic":return"off"}}function getClientRule(rules,client){return rules&&rules.length?_.find(rules,function(r){return r.mac.toUpperCase()==client.MACAddress.toUpperCase()}):void 0}return{settings:settings,rules:rules}}function nativeToDsysinit(){function settings(data){var pattern=T({"->":["$data","Device"],$data:":external",Device:{Services:{YandexDNS:{"->":!0,":":["$root",function(r){return r.$data.__id}],$data:["$root",function(r){return r.$data}],Enable:["$data",function(d){return d.enabled}],DefaultMode:["$data",function(d){return getMode(d["default"])}],Interface:["$data",function(d){return d["interface"]}]}},Network:{"?":["$root",function(r){return r.$data.enabled&&!r.$data._dnsRelay}],Server:{DHCP:{"->":["$data","$ind","DHCPv4","DHCPv6"],"?":["$data",function(d){return d.enabled&&!d._dnsRelay}],":":["$data",function(d){return d._dhcpInst}],$data:["$root",function(r){return r.$data}],DHCPv4:{DNSRelay:!0},DHCPv6:{DNSRelay:!0}}}}}});return pattern.build({$data:data})}function rules(data){var pattern=T({"->":["$data","Device"],$data:":external",Device:{Services:{YandexDNS:{"->":!0,":":["$root",function(r){return r.$data.__id}],Device:{"->":!0,"{$rules, $key}":["$root",function(r){return r.$data.rules}],":":["$rules*","$key*",function(r,k){return r.__id?r.__id:"+"+k}],Name:["$rules*",function(r){return r.host}],MACAddress:["$rules*",function(r){return r.mac}],Mode:["$rules*",function(r){return getMode(r.mode)}]}}}}});return pattern.build({$data:data})}function getMode(mode){switch(mode){case"child":return"Family";case"safe":return"Safe";case"off":return"Basic"}}return{settings:settings,rules:rules}}function attrsToNative(){function settings(data){function getMode(mode){switch(mode){case"Basic":return"off";case"Safe":return"safe";case"Family":return"child"}}function getLabel(value){switch(value){case"Basic":return"yadns_protection_off_mode";case"Safe":return"yadns_safe_mode";case"Family":return"yadns_child_mode"}}var pattern=T({"->":!0,$data:":external","{$yd}":["$data",function(d){return funcs.fetchBranch(d,paths.ydns+"#template.DefaultMode.enum.")}],value:["$yd*",function(yd){return getMode(yd)}],label:["$yd*",function(yd){return getLabel(yd)}]});return pattern.build({$data:data})}return{settings:settings}}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={ydns:"Device.Services.YandexDNS.",clients:"Device.Statistics.Neighbours.",dhcp:"Device.Network.Server.DHCP."};module.exports={dsysinitToNative:dsysinitToNative(),nativeToDsysinit:nativeToDsysinit(),attrsToNative:attrsToNative()}}()},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(376)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getBandInfo(data,band){var bandInfo=_.find(data,{Band:band});if(bandInfo){var index=_.findKey(data,{Band:band});return bandInfo.Inx=index,bandInfo}}var pattern=T({"->":["$data","roaming"],$data:":external",roaming:{"->":!0,$data:["$parent",function(p){return funcs.fetchBranch(p.$data,path)}],$24:["$data",function(d){return getBandInfo(d.Bandwidth,"2.4GHz")}],$5:["$data",function(d){return getBandInfo(d.Bandwidth,"5GHz")}],$multicast:["$data",function(d){return d.Multicast}],__inx24:["$24*",function(b){return b.Inx}],quality_limit:["$24*",function(b){return b.QualityLimit}],kick_quality_limit:["$24*",function(b){return b.KickQualityLimit}],quality_width:["$24*",function(b){return b.QualityWidth}],max_timeout:["$24*",function(b){return b.ScannerLifetime}],__inx5:["$5*",function(b){return b.Inx}],quality_limit_5g:["$5*",function(b){return b.QualityLimit}],kick_quality_limit_5g:["$5*",function(b){return b.KickQualityLimit}],quality_width_5g:["$5*",function(b){return b.QualityWidth}],max_timeout_5g:["$5*",function(b){return b.ScannerLifetime}],enable:["$data",function(d){return d.Enable}],portno:["$data",function(d){return d.Port}],mc_switch:["$multicast",function(m){return m.Enable}],mc_ttl:["$multicast",function(m){return m.TTL}],mc_groupaddr:["$multicast",function(m){return m.GroupAddress}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getBandwidth(data){var result={};return _.has(data,"__inx24")&&(result[data.__inx24]={KickQualityLimit:data.kick_quality_limit,QualityLimit:data.quality_limit,QualityWidth:parseInt(data.quality_width),ScannerLifetime:data.max_timeout}),_.has(data,"__inx5")&&(result[data.__inx5]={KickQualityLimit:data.kick_quality_limit_5g,QualityLimit:data.quality_limit_5g,QualityWidth:parseInt(data.quality_width_5g),ScannerLifetime:data.max_timeout_5g}),_.size(result)?result:void 0}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Services:{Roamd:{"->":["$data","Multicast"],$data:["$root",function(r){return r.$data}],Enable:["$data",function(d){return d.enable}],Port:["$data",function(d){return d.portno}],Multicast:{"->":!0,$data:["$parent",function(p){return p.$data}],Enable:["$data",function(d){return d.mc_switch}],TTL:["$data",function(d){return d.mc_ttl}],GroupAddress:["$data",function(d){return d.mc_groupaddr}]},Bandwidth:["$data",function(d){return getBandwidth(d)}]}}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),path="Device.Services.Roamd.";module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(381)}},function(module,exports,__webpack_require__){"use strict";module.exports={dsysinitToNative:__webpack_require__(382),nativeToDsysinit:__webpack_require__(383)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(config){function getIfaceName(data,type){return"DHCPv6"==type&&(data.Interface.includes("PPPoE")||data.Interface.includes("L2TP"))&&isDual(data,type)?data.Name+" (IPv6)":"PPPoE"!=type&&"L2TP"!=type||!isDual(data,type)?data.Name:data.Name+" (IPv4)"}function isDual(data,type){if("DHCPv6"==type){var iface=fetch(data.Interface),flags=fetch(iface.PPPConfiguration);if(flags&&"Dual"==flags.IPStack)return!0}if("PPPoE"==type||"L2TP"==type){var _flags=fetch(data.PPPConfiguration);if(_flags&&"Dual"==_flags.IPStack)return!0}return!1}function getIfaceType(iface,type,key){return"L2TP"!=type&&"PPTP"!=type||!iface.BaseInterface||iface.BaseInterface.includes("Connection")?"IPIP6"==type&&!out.isFirewallMode&&isVPN(type,key)?"vpn":_.contains(["GRE","IPIP","IPsec","OpenVPN"],type)?"vpn":"wan":"vpn"}function isVPN(type,key){var ifacePath="Device.Network.Connection.".concat(type,".").concat(key,".");return!!_.find(groups,function(group){return group.VPN&&_.find(group.VPN,function(elem){return elem.Link==ifacePath})})}function fetchNetworkIfaces(ifaceType){var path="Device.Network.Interface.".concat(ifaceType,".");for(var key in fetch(path)){var e=fetch(path)[key],isDsl=["ATM","PTM"].includes(ifaceType),_path=path+key+".",retObj={key:key,type:ifaceType.toLowerCase(),name:e.Name,upstream:!1,busy:out.__busyIfaces.includes(_path),uses:[]};isDsl&&(retObj.LinkType=e.LinkType,retObj.upstream=!0),out.ifaces[_path]=retObj}}function getName(name){return name.split("#")[0]}function getType(name){return name.split("#")[1]||"nat"}function getLastKey(path){var re=/\.(\d+)\.$/;return re.test(path)?re.exec(path)[1]:null}function getZoneName(path){if(!path||!/^Device\.Firewall\.(IPv4|IPv6)\.Zones\./.test(path))return null;var zone=fetch(path);return zone?zone.Name:null}function isBridgeLink(link){return!!link&&/^Device\.Network\.Interface\.Bridge\./.test(link)}function fetch(path){var data=funcs.fetchBranch(config,path);return _.isObject(data)?funcs.newConfig.normalize(data):data}function checkPPPoEv6(conn,type){if("PPPoE"!==type)return!0;var _ipFlags=fetch(conn.PPPConfiguration),isValid="IPv6"!=_ipFlags.IPStack;return isValid}var out={ifaces:{},groups:[],isFirewallMode:null,__groups:[],__bridgeList:[],__ipList:[],__masqList:[],__dhcpList:[],__zoneList:[],__policyList:[],__ruleList:[],__busyIfaces:[]},groups=funcs.newConfig.normalize(fetch("Device.Network.Group."));if(out.isFirewallMode="Firewall"==config.Device.DeviceInfo.DeviceMode,_.each(fetch("Device.Network.Connection."),function(conns,type){_.each(funcs.newConfig.normalize(conns),function(data,key){data.Interface&&/^Device\.Network\.Interface\./.test(data.Interface)&&out.__busyIfaces.push(data.Interface),data.BaseInterface&&/^Device\.Network\.Interface\./.test(data.BaseInterface)&&out.__busyIfaces.push(data.BaseInterface),((data.Interface||""==data.Interface)&&!data.Interface.includes("Cellular")&&checkPPPoEv6(data,type)||_.contains(["GRE","IPIP","IPsec","OpenVPN"],type))&&(out.ifaces["Device.Network.Connection.".concat(type,".").concat(key,".")]={key:key,ipv4:_.contains(["DHCP","L2TP","PPPoE","PPTP","Static","IPIP6"],type),ipv6:_.contains(["DHCPv6","Staticv6","SIT"],type),type:getIfaceType(data,type,key),name:getIfaceName(data,type),upstream:!0,uses:[]})})}),_.each(fetch("Device.Switch.Ports."),function(port,key){var path="Device.Switch.Ports.".concat(key,".");out.ifaces[path]={key:key,type:"eth",name:port.Alias,upstream:port.Upstream,busy:out.__busyIfaces.includes(path),uses:[]}}),_.each(fetch("Device.Network.Interface.Bridge."),function(br,key){var portKey,ret,path="Device.Network.Interface.Bridge.".concat(key,"."),isIfaceAPort=function(i){return/^Device\.Switch\.Ports\./.test(i)},switches=fetch("Device.Switch.Ports."),isKeyValid=!!out.isFirewallMode||1!=key,type1=br.Upstream,type2=isKeyValid&&!br.Upstream&&br.CreateInterface,isBridgeValid=type1||type2,switchPort=type2?_.find(br.Port,function(o){return o.LowerLayer}):"";for(var k in funcs.newConfig.normalize(br.Port)){var iface=br.Port[k].LowerLayer;if(type1)for(var i in funcs.newConfig.normalize(switches))switches[i].Upstream&&iface.split(".")[3]==i&&isIfaceAPort(iface)&&(switchPort=iface);else type2&&(portKey=k,isIfaceAPort(iface)&&(br.VLANID?br.Port[k].Tagged&&(switchPort=iface):switchPort=iface))}isBridgeValid&&(ret={key:key,type:"br",name:br.Name,upstream:br.Upstream,port:switchPort,vid:br.VLANID,busy:out.__busyIfaces.includes(path),uses:[]},portKey&&(ret.portKey=portKey),out.ifaces[path]=ret)}),["WiFi","ATM","PTM","Vconfig","EoGRE","EoIP","L2TPv3"].forEach(function(e){return fetchNetworkIfaces(e)}),__autoconf.BR2_PACKAGE_ANWEB_USB_MODEM&&_.each(fetch("Device.USB.Connection."),function(usb,key){var path="Device.USB.Connection."+key+".";out.ifaces[path]={key:key,type:"usb",name:usb.Name,upstream:!0,ipv4:["IPv4","Dual"].includes(usb.IPStack),ipv6:["IPv6","Dual"].includes(usb.IPStack),uses:[]}}),_.each(fetch("Device.Network.Group."),function(group,key){var result={key:key,name:getName(group.Name),type:getType(group.Name),isDefault:"1"==key,ifaces:[],bridgeKey:getLastKey(group.LAN),gwif4:null,gwif6:null,LAN:group.LAN};if(_.each(funcs.newConfig.normalize(group.WAN),function(wan,key){var gwif=group.WAN[group.WAN.order[0]];gwif.Link&&gwif.Link==wan.Link&&(result.gwif4=gwif.Link);var objIface={key:key,iface:wan.Link};out.isFirewallMode&&(objIface.dest="WAN"),result.ifaces.push(objIface)}),_.each(funcs.newConfig.normalize(group.WANv6),function(wan,key){var gwif=group.WANv6[group.WANv6.order[0]];if(gwif.Link&&gwif.Link==wan.Link&&(result.gwif6=gwif.Link),!_.find(result.ifaces,function(iface){return iface.iface==wan.Link})){var objIface={key:key,iface:wan.Link};out.isFirewallMode&&(objIface.dest="WAN"),result.ifaces.push(objIface)}}),out.isFirewallMode&&_.each(funcs.newConfig.normalize(group.VPN),function(vpn,key){result.ifaces.push({key:key,iface:vpn.Link,dest:"VPN"})}),group.LAN){var br=fetch(group.LAN);_.each(funcs.newConfig.normalize(br.Port),function(port,key){br.Upstream&&!port.Tagged&&fetch(port.LowerLayer).Upstream&&/^Device\.Switch\.Ports\./.test(port.LowerLayer)||result.ifaces.push({key:key,tag:port.Tagged,iface:port.LowerLayer})}),br.Upstream&&result.ifaces.push({iface:group.LAN})}out.groups.push(result),out.__groups.push({key:key,type:getType(group.Name)})}),_.each(fetch("Device.Network.Interface.Bridge."),function(br,key){var group=out.groups.find(function(o){return o.bridgeKey==key}),ports=[];_.each(funcs.newConfig.normalize(br.Port),function(port,key){ports.push({key:key,iface:port.LowerLayer,tag:port.Tagged})}),out.__bridgeList.push({key:key,vid:br.VLANID,upstream:br.Upstream,groupKey:group?group.key:null,ports:ports})}),_.each(fetch("Device.Network.IP."),function(ip,key){var bridgeKey=/\.Bridge\./.test(ip.LowerLayer)?getLastKey(ip.LowerLayer):null,group=out.groups.find(function(group){return null!==bridgeKey&&group.bridgeKey===bridgeKey});out.__ipList.push({key:key,groupKey:group?group.key:null,bridgeKey:bridgeKey,ipv4Key:"1",ipv4:ip.IPv4Address[1]?ip.IPv4Address[1].IPAddress:null})}),_.each(fetch("Device.Firewall.IPv4.Policy."),function(policy,key){out.__policyList.push({key:key,ipv4:!0,dst:policy.Dest,dstKey:getLastKey(policy.Dest),dstName:getZoneName(policy.Dest),src:policy.Source,srcKey:getLastKey(policy.Source),srcName:getZoneName(policy.Source)})}),_.each(fetch("Device.Firewall.IPv6.Policy."),function(policy,key){out.__policyList.push({key:key,ipv6:!0,dst:policy.Dest,dstKey:getLastKey(policy.Dest),dstName:getZoneName(policy.Dest),src:policy.Source,srcKey:getLastKey(policy.Source),srcName:getZoneName(policy.Source)})}),_.each(fetch("Device.Firewall.IPv4.Zones."),function(zone,key){var ifaces=[];_.each(funcs.newConfig.normalize(zone.Interfaces),function(iface,key){var bridgeKey=isBridgeLink(iface.Path)?getLastKey(iface.Path):null,group=out.groups.find(function(o){return o.bridgeKey&&o.bridgeKey==bridgeKey});ifaces.push({key:key,path:iface.Path,groupKey:group?group.key:null})}),out.__zoneList.push({key:key,ipv4:!0,name:zone.Name,ifaces:ifaces})}),_.each(fetch("Device.Firewall.IPv6.Zones."),function(zone,key){var ifaces=[];_.each(funcs.newConfig.normalize(zone.Interfaces),function(iface,key){var bridgeKey=isBridgeLink(iface.Path)?getLastKey(iface.Path):null,group=out.groups.find(function(o){return o.bridgeKey&&o.bridgeKey==bridgeKey});ifaces.push({key:key,path:iface.Path,groupKey:group?group.key:null})}),out.__zoneList.push({key:key,ipv6:!0,name:zone.Name,ifaces:ifaces})}),_.each(fetch("Device.Firewall.IPv4.Rules."),function(rule,key){var bridgeKey,group;/^Device\.Network\.Server\.DHCP\./.test(rule.Origin)&&(bridgeKey=getLastKey(fetch(rule.Origin).Interface),group=out.groups.find(function(o){return o.bridgeKey==bridgeKey})),"MASQUERADE"==rule.Action&&out.__masqList.push({key:key,ipv4:!0,groupKey:group?group.key:null,bridgeKey:bridgeKey,dstIface:rule.Dest.Iface,srcIface:rule.Source.Iface}),out.__ruleList.push({key:key,ipv4:!0,groupKey:group?group.key:null,bridgeKey:bridgeKey})}),_.each(fetch("Device.Firewall.IPv6.Rules."),function(rule,key){var bridgeKey=getLastKey(rule.Source.Iface),group=out.groups.find(function(o){return o.bridgeKey==bridgeKey});"MASQUERADE"==rule.Action&&out.__masqList.push({key:key,ipv6:!0,groupKey:group?group.key:null,bridgeKey:bridgeKey,dstIface:rule.Dest.Iface,srcIface:rule.Source.Iface}),out.__ruleList.push({key:key,ipv6:!0,groupKey:group?group.key:null,bridgeKey:bridgeKey})}),_.each(fetch("Device.Network.Server.DHCP."),function(dhcp,key){var bridgeKey=getLastKey(dhcp.Interface),group=out.groups.find(function(o){return o.bridgeKey==bridgeKey});out.__dhcpList.push({key:key,groupKey:group.key,bridgeKey:bridgeKey,DHCPv4:dhcp.DHCPv4,DHCPv6:dhcp.DHCPv6})}),out.isFirewallMode){var fetchVpnIfaces=function(ifaceType){var path="Device.Network.Server.VPN.".concat(ifaceType,".");for(var key in fetch(path)){var e=fetch(path)[key],_path=path+key+".",retObj={key:key,type:"vpn",name:e.Name,upstream:!0,busy:out.__busyIfaces.includes(_path),uses:[]};out.ifaces[_path]=retObj}};["L2TP","OpenVPN","PPTP"].forEach(function(e){return fetchVpnIfaces(e)})}return _.each(out.groups,function(group){group.ifaces=_.sortBy(group.ifaces,function(o){return out.ifaces[o.iface].name}),_.each(group.ifaces,function(obj){out.ifaces[obj.iface].uses.push(group.key)})}),__autoconf.BR2_PACKAGE_ANWEB_LOAD_BALANCING&&(out.loadBalancing=funcs.newConfig.normalize(fetch("Device.Network.LoadBalancing."))),out}var _=__webpack_require__(4),funcs=__webpack_require__(5),__autoconf="undefined"!=typeof autoconf?autoconf:{};module.exports=dsysinitToNative},function(module,exports,__webpack_require__){"use strict";function nativeToDsysinit(inputRaw){function normalizeDefaultGroup(data){var def=_.find(data.groups,function(o){return o.isDefault}),busy=_.chain(data.groups).reject(function(o){return o.isDefault}).pluck("ifaces").flatten().pluck("iface").value(),free=_.chain(data.ifaces).keys().reject(function(o){return"wan"!=data.ifaces[o].type&&"usb"!=data.ifaces[o].type&&"vpn"!=data.ifaces[o].type&&data.ifaces[o].upstream}).reject(function(o){return"br"==data.ifaces[o].type}).difference(busy).value(),defIfaces=_.chain(def.ifaces).pluck("iface").value(),toAdd=(_.chain(data.__bridgeList).filter(function(o){return o.groupKey}).pluck("ports").flatten().pluck("iface").value(),_.difference(free,defIfaces)),toDel=_.intersection(busy,defIfaces);return def.ifaces=_.reject(def.ifaces,function(item){return _.contains(toDel,item.iface)}),_.each(toAdd,function(iface){def.ifaces.push({iface:iface})}),data}var out={},isFirewallMode=inputRaw.isFirewallMode,input=isFirewallMode?inputRaw:normalizeDefaultGroup(inputRaw);_.each(input.__ipList,function(ip){ip.groupKey||funcs.setValue("Device.Network.IP.".concat(ip.key),{},out)}),_.each(input.__masqList,function(masq){var group=input.groups.find(function(o){return o.key==masq.groupKey}),masqData={Source:{Iface:group&&group.bridgeKey?"Device.Network.Interface.Bridge.".concat(group.bridgeKey,"."):"Device.Network.Interface.Bridge.1.",IPLinks:{1:{Link:group&&group.bridgeKey?"Device.Network.Interface.Bridge.".concat(group.bridgeKey,"."):"Device.Network.Interface.Bridge.1."}}}};isFirewallMode||funcs.setValue("Device.Firewall.".concat(masq.ipv4?"IPv4":"IPv6",".Rules.").concat(masq.key),masqData,out)}),_.each(input.__dhcpList,function(dhcp){dhcp.groupKey||(funcs.setValue("Device.Network.Server.DHCP.".concat(dhcp.key,".DHCPv4"),{},out),funcs.setValue("Device.Network.Server.DHCP.".concat(dhcp.key,".DHCPv6"),{},out))}),_.each(input.__zoneList,function(zone){"bridge"!=zone.name&&(funcs.setValue("Device.Firewall.".concat(zone.ipv4?"IPv4":"IPv6",".Zones.").concat(zone.key),{},out),zone.ifaces.forEach(function(iface){!isFirewallMode&&iface.groupKey||funcs.setValue("Device.Firewall.".concat(zone.ipv4?"IPv4":"IPv6",".Zones.").concat(zone.key,".Interfaces.").concat(iface.key),{},out)}))}),_.each(input.__bridgeList,function(bridge){var isGroupExist=Object.values(input.groups).some(function(group){return group.key==bridge.groupKey});funcs.setValue("Device.Network.Interface.Bridge.".concat(bridge.key),{},out),bridge.groupKey&&!isGroupExist&&(funcs.setValue("Device.Network.Interface.Bridge.".concat(bridge.key,".ForceBridge"),!1,out),Object.values(input.__zoneList).forEach(function(zone){Object.values(zone.ifaces).forEach(function(iface){iface.path=="Device.Network.Interface.Bridge.".concat(bridge.key,".")&&funcs.cutBranch(out,"Device.Firewall.".concat(zone.ipv4?"IPv4":"IPv6",".Zones.").concat(zone.key,".Interfaces.").concat(iface.key))})}))}),_.each(input.__policyList,function(policy){funcs.setValue("Device.Firewall.".concat(policy.ipv4?"IPv4":"IPv6",".Policy.").concat(policy.key),{},out)}),_.each(input.__ruleList,function(rule){rule.groupKey&&!input.groups.some(function(o){return o.key==rule.groupKey})||funcs.setValue("Device.Firewall.".concat(rule.ipv4?"IPv4":"IPv6",".Rules.").concat(rule.key),{},out)});var wan4Zone=input.__zoneList.find(function(o){return o.ipv4&&"wan"==o.name}),wan4ZoneLink="Device.Firewall.IPv4.Zones.".concat(wan4Zone.key,"."),wan6Zone=input.__zoneList.find(function(o){return o.ipv6&&"wan"==o.name}),wan6ZoneLink="Device.Firewall.IPv6.Zones.".concat(wan6Zone.key,"."),busyIPs=input.__dhcpList.map(function(o){return o.DHCPv4?o.DHCPv4.StartIP:void 0});return _.each(input.groups,function(group,i){var isNewGroup=!group.key,bridgeExists=input.__ipList.find(function(o){return"Device.Network.Interface.Bridge.".concat(o.bridgeKey,".")==group.ifaces[0].iface});isNewGroup&&bridgeExists&&(bridgeExists.groupKey=bridgeExists.groupKey?bridgeExists.groupKey:bridgeExists.key,group.key=bridgeExists.key,group.bridgeKey=bridgeExists.bridgeKey);var groupLink=isNewGroup?"Device.Network.Group.new_group_".concat(i,"."):"Device.Network.Group.".concat(group.key,"."),bridgeLink="Device.Network.Interface.Bridge.".concat(group.bridgeKey,"."),vlan=group.ifaces.find(function(o){return"br"==input.ifaces[o.iface].type});vlan&&(bridgeLink=vlan.iface);var ipAddr,ipAddrStart,ipAddrEnd,ip=input.__ipList.find(function(o){return o.groupKey&&o.groupKey==group.key}),ipLink=ip?"Device.Network.IP.".concat(ip.key,"."):"Device.Network.IP.new_ip_".concat(i,"."),dhcp=input.__dhcpList.find(function(o){return o.groupKey&&o.groupKey==group.key}),dhcpLink=dhcp?"Device.Network.Server.DHCP.".concat(dhcp.key,"."):"Device.Network.Server.DHCP.new_dhcp_".concat(i,"."),lan4Zone=input.__zoneList.find(function(o){return o.ipv4&&"lan"==o.name}),lan4ZoneLink="Device.Firewall.IPv4.Zones.".concat(lan4Zone.key,"."),lan6Zone=input.__zoneList.find(function(o){return o.ipv6&&"lan"==o.name}),lan6ZoneLink="Device.Firewall.IPv6.Zones.".concat(lan6Zone.key,"."),wan4Order=[],wan6Order=[];if(!dhcp&&("nat"==group.type||"local"==group.type))for(var n=1;255>n;n++)if(!busyIPs.some(function(o){return o.includes("192.168.".concat(n,"."))})){ipAddr="192.168.".concat(n,".1/24"),ipAddrStart="192.168.".concat(n,".100"),ipAddrEnd="192.168.".concat(n,".199"),busyIPs.push(ipAddrStart);break}isNewGroup&&bridgeExists&&(bridgeExists.ipv4=ipAddr);var groupData={LAN:bridgeLink,WAN:{},WANv6:{}};isFirewallMode&&(groupData.VPN={});var bridgeData={};if(group.isDefault||(groupData.Name=group.name+"#"+group.type),(isNewGroup||""==group.LAN)&&(bridgeData.ForceBridge=!0),isNewGroup||group.isDefault||_.find(group.ifaces,function(o){return o.iface==group.LAN})||funcs.setValue("".concat(group.LAN),{ForceBridge:!1},out),("nat"==group.type||"local"==group.type)&&!isFirewallMode){var lan4Rule=lan4Zone.ifaces.find(function(o){return o.path&&o.path==bridgeLink}),lan4RuleLink=lan4Rule?"".concat(lan4ZoneLink,"Interfaces.").concat(lan4Rule.key,"."):"".concat(lan4ZoneLink,"Interfaces.new_fw4_lan_").concat(i,"."),lan6Rule=lan6Zone.ifaces.find(function(o){return o.path&&o.path==bridgeLink}),lan6RuleLink=lan6Rule?"".concat(lan6ZoneLink,"Interfaces.").concat(lan6Rule.key,"."):"".concat(lan6ZoneLink,"Interfaces.new_fw6_lan_").concat(i,"."),lan4RuleData={Path:bridgeLink},lan6RuleData={Path:bridgeLink};funcs.setValue(lan4RuleLink,lan4RuleData,out),funcs.setValue(lan6RuleLink,lan6RuleData,out)}if("nat"!=group.type||isFirewallMode||group.ifaces&&_.each(group.ifaces,function(item){var needAddIfaceToWan4Zone=!(_.find(wan4Zone.ifaces,function(iface){return iface.path==item.iface})||/v6/.test(item.iface)||/SIT/.test(item.iface)||/GRE/.test(item.iface)||/IPIP/.test(item.iface)||/IPsec/.test(item.iface)||/OpenVPN/.test(item.iface)),needAddIfaceToWan6Zone=!_.find(wan6Zone.ifaces,function(iface){return iface.path==item.iface})&&(/v6/.test(item.iface)||/SIT/.test(item.iface));if(needAddIfaceToWan4Zone&&/^Device\.Network\.Connection\./.test(item.iface)){var connLinkv4="".concat(wan4ZoneLink,"Interfaces.new_fw4_conn_").concat(i,"."),connv4Data={Path:item.iface};funcs.setValue(connLinkv4,connv4Data,out)}if(needAddIfaceToWan6Zone&&/^Device\.Network\.Connection\./.test(item.iface)){var connLinkv6="".concat(wan6ZoneLink,"Interfaces.new_fw6_conn_").concat(i,"."),connv6Data={Path:item.iface};funcs.setValue(connLinkv6,connv6Data,out)}}),"nat"==group.type||"local"==group.type){var ipData={Enable:!0,LowerLayer:bridgeLink,IPv4Address:_defineProperty2["default"]({},ip?ip.ipv4Key:"new_ip_".concat(i),{Enable:!0,IPAddress:ip?ip.ipv4:ipAddr})};group.isDefault||(ipData.Name=group.name+"#"+group.type),funcs.setValue(ipLink,ipData,out)}if("nat"==group.type||"local"==group.type){var dhcpData={Enable:!0,Interface:bridgeLink};dhcp||(dhcpData.DHCPv4={StartIP:ipAddrStart,EndIP:ipAddrEnd},dhcpData.DHCPv6={Mode:"Autoconf",Lease:300}),funcs.setValue(dhcpLink,dhcpData,out)}if(_.each(group.ifaces,function(obj,n){var info=input.ifaces[obj.iface];if("wan"==info.type||"usb"==info.type||isFirewallMode&&"vpn"==info.type){var key=obj.key?obj.key:"new_wan_".concat(i,"_").concat(n);(!isFirewallMode||isFirewallMode&&"WAN"==obj.dest)&&(info.ipv4&&(wan4Order.push({iface:obj.iface,key:key}),groupData.WAN[key]={Link:obj.iface}),info.ipv6&&(wan6Order.push({iface:obj.iface,key:key}),groupData.WANv6[key]={Link:obj.iface})),isFirewallMode&&"VPN"==obj.dest&&(groupData.VPN[key]={Link:obj.iface});var masq=input.__masqList.filter(function(o){return o.dstIface==obj.iface});!isFirewallMode&&masq.length>0&&masq.forEach(function(rule){funcs.setValue("Device.Firewall.".concat(rule.ipv4?"IPv4":"IPv6",".Rules.").concat(rule.key,".Source.Iface"),bridgeLink,out),funcs.setValue("Device.Firewall.".concat(rule.ipv4?"IPv4":"IPv6",".Rules.").concat(rule.key,".Source.IPLinks.1.Link"),bridgeLink,out)})}}),"nat"==group.type){var sortFn=function(a,b,gw){return(b==gw|0)-(a==gw|0)};groupData.WAN.order=wan4Order.sort(function(a,b){return sortFn(a.iface,b.iface,group.gwif4)}).map(function(o){return o.key}),groupData.WANv6.order=wan6Order.sort(function(a,b){return sortFn(a.iface,b.iface,group.gwif6)}).map(function(o){return o.key})}funcs.setValue(groupLink,groupData,out),funcs.setValue(bridgeLink,bridgeData,out)}),_.each(input.loadBalancing,function(item,i){var groups=funcs.fetchBranch(out,"Device.Network.Group."),balanceLink="Device.Network.LoadBalancing."+i+".";_.find(groups,function(group){return group.LAN==item.LAN})&&funcs.setValue(balanceLink,item,out)}),out}var _interopRequireDefault=__webpack_require__(7),_defineProperty2=_interopRequireDefault(__webpack_require__(235)),_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=nativeToDsysinit},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(385)}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data){var pattern=T({"->":["$data","Filter"],$data:":external",$adblock:["$data",function(d){return funcs.fetchBranch(d,path)}],$usb:["$data",function(d){return _.has(d.Device,"USB")?d.Device.USB.Storage:void 0}],Enabled:["$adblock",function(ab){return ab.Enable}],Path:["$adblock","$usb",function(ab,usb){return usb?ab.Path.replace("/mnt",""):"/tmp"}],TMPPath:["$adblock","$usb",function(ab,usb){return"/tmp"==ab.Path||!usb}],ValidPath:["$adblock",function(ab){return!!_.isEmpty(ab.Path)||ab.ValidPath}],Filter:{"->":!0,"{$item, $key}":["$parent",function(p){
return funcs.newConfig.normalize(p.$adblock.Filter)}],__instance:["$key*",function(k){return k}],URL:["$item*",function(i){return i.URL}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getPath(path){if(""==path||"/tmp"==path)return path;var hasMNT=path.match(/^\/mnt\//,"")||path.match(/^mnt\//,"");return hasMNT?"/"==path[0]?path:"/"+path:(path="/mnt/"+path,path.replace("//","/"))}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Services:{AdBlock:{"->":["$data","Filter"],$data:["$root",function(r){return r.$data}],Enable:["$data",function(d){return d.Enabled}],Path:["$data",function(d){return d.Enabled?getPath(d.Path):void 0}],Filter:{"->":!0,"{$filter, $key}":["$parent",function(p){return p.$data.Filter}],":":["$filter*","$key*",function(f,k){return f.__instance?f.__instance:"+"+k}],Enable:["$filter*",function(f){return!0}],URL:["$filter*",function(f){return f.URL}]}}}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),path="Device.Services.AdBlock.";module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";var dms=__webpack_require__(213).get().wifiShaping;__webpack_require__(5),__webpack_require__(4),module.exports={pull:dms.pull,push:dms.push,getData:dms.getData,getNetworks:dms.getNetworks,wasModified:dms.wasModified}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(389)}},function(module,exports,__webpack_require__){"use strict";!function(){"use_strict";function dsysinitToNative(data){function getState(data,tunnel){var result={};if(!tunnel.Enable)return{state:"off",stateText:"wifi_wds_mode_disabled"};if(""==tunnel.LowerLayer)switch(tunnel.Status){case"Enabled":return{state:"on",stateText:"ipsec_status_enabled"};case"Enabling":case"Disabling":return{state:"pending",stateText:"ipsec_status_enabling"};case"Disabled":case"Aborted":return{state:"off",stateText:"wifi_wds_mode_disabled"}}var iface="";if(~tunnel.LowerLayer.indexOf("Connection"))iface=tunnel.LowerLayer;else{var group=funcs.fetchBranch(data,tunnel.LowerLayer),order=group.WAN.order;iface=order&&order[0]?group.WAN[order[0]].Link:""}if(""!=iface){var conn=funcs.fetchBranch(data,iface);if(_.has(conn,"StopOnFail")&&conn.StopOnFail)return result.state="disconnected",result.stateText=/\.WiFi\./.test(conn.Interface)?"wan_status_wifi_disconnect":/\.Cellular\./.test(conn.BaseInterface)||conn.Binding&&_.has(conn.Binding,"Modem")?"wan_status_usb_disconnected":"wan_status_cable_disconnected",result;if(_.has(conn,"ConnectionStatusExt")&&!_.isEmpty(conn.ConnectionStatusExt))return result.state="off",result.stateText="Unknown"==conn.ConnectionStatusExt?"ipsec_status_unknown":"wan_status_ppp_"+conn.ConnectionStatusExt.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase(),result}switch(tunnel.Status){case"Enabled":return{state:"on",stateText:"ipsec_status_enabled"};case"Enabling":case"Disabling":return{state:"pending",stateText:"ipsec_status_enabling"};case"Disabled":case"Aborted":return{state:"off",stateText:"disconnected"}}}function getConnsList(data){function getConns(conns,usbConns,types,groups){var wanGroup=[];_.each(funcs.newConfig.normalize(groups),function(elem){_.each(funcs.newConfig.normalize(elem.WAN),function(obj){wanGroup.push(obj.Link)}),__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_42512&&_.each(funcs.newConfig.normalize(elem.VPN),function(obj){wanGroup.push(obj.Link)})}),wanGroup=_.unique(wanGroup);var output=[];return _.each(types,function(type){var path=paths.conns+type+".",input=funcs.newConfig.normalize(conns[type]);input&&_.each(input,function(elem,inst){var fullPath=path+inst+".",isUsbConn=elem.Interface&&~elem.Interface.indexOf("Cellular")||elem.BaseInterface&&~elem.BaseInterface.indexOf("Cellular");_.contains(wanGroup,fullPath)&&!isUsbConn&&output.push({name:elem.Name,iface:elem.BaseInterface?elem.BaseInterface:elem.Interface,value:fullPath})})}),_.each(usbConns,function(elem,inx){var path=paths.usbConns+inx+".";elem.InterfaceOnly||"IPv6"==elem.IPStack||output.push({name:elem.Name,iface:elem.BaseInterface?elem.BaseInterface:elem.Interface,value:path})}),output}function getGroups(data){var groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.groups));return _.map(groups,function(elem,key){return{name:"wan_group "+key,value:paths.groups+key+"."}})}var devMode=funcs.fetchBranch(data,paths.devMode),conns=funcs.fetchBranch(data,paths.conns),groups=funcs.fetchBranch(data,paths.groups),usbConns=funcs.fetchBranch(data,paths.usbConns);usbConns=funcs.newConfig.normalize(usbConns);var types=["DHCP","Static","PPPoE","L2TP","PPTP"],result=getConns(conns,usbConns,types,groups);return result=result.concat("Firewall"!=devMode?{name:"default_gateway",value:paths.groups+"1."}:getGroups(data))}function getGroupsList(data){var groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.groups));return _.map(groups,function(group,key){return{name:group.Name.split("#")[0],lan:group.LAN,value:paths.groups+key+"."}})}function getBridgeInfo(config,inst,vconfig){var result={},link=vconfig?paths.vconfig+vconfig.id+".":paths.eogre+inst+".",bridges=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.bridge));return _.some(bridges,function(bridge,inxBridge){var ports=funcs.newConfig.normalize(bridge.Port),inxPort=_.findKey(ports,function(port){return port.LowerLayer==link});inxPort&&(result={inxBridge:inxBridge,inxPort:inxPort,name:bridge.Name})}),_.size(result)?result:void 0}function getVconfig(data,id){var vconfigList=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.vconfig));if(vconfigList){var curVconfig=_.findKey(vconfigList,{LowerLayer:paths.eogre+id+"."});if(curVconfig){var result=vconfigList[curVconfig];return result.id=curVconfig,result}}}function getInxBridges(config){var bridges=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.bridge));return _.map(bridges,function(bridge,inxBridge){return{inxBridge:inxBridge}})}var pattern=T({"->":["$data","Tunnels"],$data:":external",Conns:["$data",function(d){return getConnsList(d)}],Groups:["$data",function(d){return getGroupsList(d)}],Tunnels:{"->":!0,$data:["$parent",function(p){return p.$data}],"{$tunnel, $i}":["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.eogre))}],__id:["$i*",function(i){return i}],Name:["$tunnel*",function(t){return t.Name}],LowerLayer:["$tunnel*",function(t){return t.LowerLayer}],Remote:["$tunnel*",function(t){return t.Remote}],Enable:["$tunnel*",function(t){return t.Enable}],Upstream:["$tunnel*",function(t){return t.Upstream}],MTU:["$tunnel*",function(t){return t.MTU}],$state:["$data","$tunnel*",function(d,t){return getState(d,t)}],State:["$state*",function(s){return s.state}],StateText:["$state*",function(s){return s.stateText}],$vconfig:["$data","$i*",function(d,i){return getVconfig(d,i)}],Tag:["$vconfig*",function(vc){return!_.isUndefined(vc)}],TagID:["$vconfig*",function(vc){return vc.VID}],TagLink:["$vconfig*",function(vc){return vc.id}],$bridge:["$data","$i*","$vconfig",function(d,i,vc){return getBridgeInfo(d,i,vc)}],__inxBridge:["$bridge*",function(b){return b.inxBridge}],__inxBridgeName:["$bridge*",function(b){return b.name}],__inxPort:["$bridge*",function(b){return b.inxPort}]},__inxsBridges:["$data",function(d){return getInxBridges(d)}]});return pattern.build({$data:data})}function nativeToDsysinit(data){function getLowerLayerBridge(tunnel){var isNew=_.isUndefined(tunnel.__id);return isNew?tunnel.Tag?paths.vconfig+"new_inst.":paths.eogre+"new_inst.":tunnel.Tag?tunnel.TagLink?paths.vconfig+tunnel.TagLink+".":paths.vconfig+"new_inst.":paths.eogre+tunnel.__id+"."}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Network:{Interface:{"->":!0,EoGRE:{"->":!0,"{$tunnel, $i}":["$root",function(r){return r.$data.Tunnels}],":":["$tunnel*","$i*",function(t,i){return t.__id?t.__id:"new_inst"}],Enable:["$tunnel*",function(t){return t.Enable}],Upstream:["$tunnel*",function(t){return t.Upstream}],Name:["$tunnel*",function(t){return t.Name}],LowerLayer:["$tunnel*",function(t){return t.LowerLayer}],Remote:["$tunnel*",function(t){return t.Remote}],MTU:["$tunnel*",function(t){return t.MTU}]},Vconfig:{"->":!0,"{$tunnel, $i}":["$root",function(r){return _.filter(r.$data.Tunnels,function(e){return e.Tag})}],":":["$tunnel*",function(t){return t.TagLink?t.TagLink:"new_inst"}],Enable:["$tunnel*",function(t){return t.Enable}],Upstream:["$tunnel*",function(t){return t.Upstream}],Name:["$tunnel*",function(t){return t.Name}],LowerLayer:["$tunnel*",function(t){return paths.eogre+(t.__id?t.__id:"new_inst")+"."}],VID:["$tunnel*",function(t){return t.TagID}]},Bridge:{"->":["$bridge","Port"],"{$bridge}":["$root",function(r){return r.$data.__inxsBridges}],":":["$bridge*",function(i){return i.inxBridge}],Port:{"->":["$bridge","$inxBridge","$tunn","LowerLayer"],$bridge:["$parent",function(p){return p.$bridge}],$inxBridge:["$bridge",function(b){return b.inxBridge}],"{$tunn}":["$root","$inxBridge*",function(r,iBr){return _.filter(r.$data.Tunnels,function(tunn){return tunn.__inxBridge==iBr})}],":":["$tunn*",function(t){return t.__inxPort}],LowerLayer:["$tunn*",function(t){return getLowerLayerBridge(t)}]}}}}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),__autoconf="undefined"!=typeof autoconf?autoconf:{},paths={conns:"Device.Network.Connection.",eogre:"Device.Network.Interface.EoGRE.",groups:"Device.Network.Group.",bridge:"Device.Network.Interface.Bridge.",vconfig:"Device.Network.Interface.Vconfig.","switch":"Device.Switch.Switches.",iface:"Device.Network.Interface.",usbConns:"Device.USB.Connection."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(395),converter:__webpack_require__(396)}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";var _interopRequireDefault=__webpack_require__(7),_slicedToArray2=_interopRequireDefault(__webpack_require__(226));!function(){function dsysinitToNative(data){function getIPAddress(ip){return ip?ip.split("/")[0]:""}function getSubnetMask(ip){return ip?funcs.ipv4.mask["long"](ip.split("/")[1]):""}function getStatus(state){switch(state){case"Enabled":return"on";case"Aborted":case"Disabled":return"off";case"Enabling":case"Disabling":return"pending"}}function getStatusText(state){switch(state){case"Disabled":return"wifi_mac_mode_disabled";default:return"ipsec_status_"+state.toLowerCase()}}function getZone(fw){if(fw){var zones=funcs.newConfig.normalize(fw.Zones),zoneKey=_.findKey(zones,{Type:"ipv4",Name:"coovachilli"});return zoneKey}}function getPolicy(fw,zoneId){if(fw&&zoneId){var policys=funcs.newConfig.normalize(fw.Policy),wanZoneId=_.findKey(fw.Zones,{Name:"wan"}),zonePath=paths.fw+"Zones.",policyKey=_.findKey(policys,{Source:zonePath+zoneId+".",Dest:zonePath+wanZoneId+"."});return policyKey}}function getZoneInterface(fw,zoneId,id){if(fw&&zoneId){var zoneIfaces=funcs.newConfig.normalize(fw.Zones[zoneId].Interfaces),chilliPath=paths.chilli+id+".",key=_.findKey(zoneIfaces,{Path:chilliPath});return key}}function getMasq(fw,id){if(fw){var masqs=funcs.newConfig.normalize(fw.Rules),chilliPath=paths.chilli+id+".",key=_.findKey(masqs,function(elem){return elem.Source.Iface==chilliPath});return key}}function getPingRule(fw,id){if(fw){var rules=funcs.newConfig.normalize(fw.Rules),chilliPath=paths.chilli+id+".",key=_.findKey(rules,function(elem){var proto=funcs.newConfig.normalize(elem.Proto);return elem.Source.Iface==chilliPath&&elem.Dest.Zone==paths.fw+"Zones.1."&&_.size(proto)>0&&proto[1]&&"icmp"==proto[1].Value});return key}}var pattern=T({"->":["$chilli","$fw","fwZone","Servers"],$data:":external",$chilli:["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.chilli))}],$fw:["$data",function(d){return funcs.fetchBranch(d,paths.fw)}],fwZone:["$fw*",function(fw){return getZone(fw)}],fwPolicy:["$fw*","fwZone*",function(fw,z){return getPolicy(fw,z)}],Servers:{"->":["$server","Radius","MACAuth","UAM"],"{$server, $i}":["$parent",function(p){return p.$chilli}],__id:["$i*",function(i){return i}],Enable:["$server*",function(s){return s.Enable}],DHCPLease:["$server*",function(s){return s.DHCPLease}],LogLevel:["$server*",function(s){return s.LogLevel}],Iface:["$server*",function(s){return s.Interface}],NetworkIP:["$server*",function(s){return getIPAddress(s.NetworkPrefix)}],NetworkMask:["$server*",function(s){return getSubnetMask(s.NetworkPrefix)}],Status:["$server*",function(s){return getStatus(s.Status)}],StatusText:["$server*",function(s){return getStatusText(s.Status)}],MACAuth:{"->":!0,$server:["$parent",function(p){return p.$server?p.$server.MACAuthentication:void 0}],Enable:["$server*",function(s){return s.Enable}],Password:["$server*",function(s){return s.Password}],Suffix:["$server*",function(s){return s.Suffix}]},Radius:{"->":!0,$server:["$parent",function(p){return p.$server?p.$server.RADIUS:void 0}],AccountingPort:["$server*",function(s){return s.AccountingPort}],AuthPort:["$server*",function(s){return s.AuthenticationPort}],PrimaryServer:["$server*",function(s){return s.PrimaryServer}],SecondaryServer:["$server*",function(s){return s.SecondaryServer}],Secret:["$server*",function(s){return s.Secret}],NASID:["$server*",function(s){return s.NASID}],LocationID:["$server*",function(s){return s.LocationID}]},UAM:{"->":!0,$server:["$parent",function(p){return p.$server?p.$server.UAM:void 0}],AuthPort:["$server*",function(s){return s.AuthPort}],Homepage:["$server*",function(s){return s.Homepage}],NoChallenge:["$server*",function(s){return s.NoChallenge}],Server:["$server*",function(s){return s.Server}],Secret:["$server*",function(s){return s.Secret}],WalledGarden:["$server*",function(s){return s.WalledGarden}]},fwZoneInterfaces:["$parent","$i*",function(p,i){return getZoneInterface(p.$fw,p.fwZone,i)}],fwMasq:["$parent","$i*",function(p,i){return getMasq(p.$fw,i)}],Ping:["$parent","$i*",function(p,i){return getPingRule(p.$fw,i)}],PingEnable:["Ping",function(p){return!_.isUndefined(p)}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getNetworkPrefix(data){return data.NetworkIP+"/"+funcs.ipv4.mask["short"](data.NetworkMask)}function getZone(data){function getIfaces(data){var output={};return _.each(data.Servers,function(elem,key){var ifaceId=elem.fwZoneInterfaces?elem.fwZoneInterfaces:"new_inst_"+key;output[ifaceId]={Path:paths.chilli+(elem.__id?elem.__id:"new_inst_"+key)+"."}}),output}if(!data.Servers.length)return{};var result={},zoneId=data.fwZone?data.fwZone:"new_zone";return result[zoneId]={Type:"ipv4",Name:"coovachilli",Interfaces:getIfaces(data)},result}function getRules(nativeConfig){function getRuleMasq(server,id){var _nativeConfig$fwZone,_server$__id,_server$__id2;return{Enable:server.Enable,Name:"Chilli_".concat(id,"_Masq"),Action:"MASQUERADE",Dest:{Zone:paths.fw+"Zones.2.",Iface:server?"Device.Network.Group.1.":void 0},Source:{Zone:paths.fw+"Zones."+(null!==(_nativeConfig$fwZone=nativeConfig.fwZone)&&void 0!==_nativeConfig$fwZone?_nativeConfig$fwZone:"new_zone")+".",Iface:server?paths.chilli+(null!==(_server$__id=server.__id)&&void 0!==_server$__id?_server$__id:"new_inst_"+id)+".":void 0,IPLinks:{1:{Link:server?paths.chilli+(null!==(_server$__id2=server.__id)&&void 0!==_server$__id2?_server$__id2:"new_inst_"+id)+".":void 0,UseSubnet:!0}}},Direction:"POSTROUTING",Table:"NAT"}}function getRulePing(server,id){var _nativeConfig$fwZone2,_server$__id3;return{Enable:server.Enable,Action:"ACCEPT",Name:"Chilli_".concat(id,"_Ping"),Proto:{1:{Value:"icmp"}},Pattern:"ICMP",Dest:{Zone:paths.fw+"Zones.1."},Source:{Zone:paths.fw+"Zones."+(null!==(_nativeConfig$fwZone2=nativeConfig.fwZone)&&void 0!==_nativeConfig$fwZone2?_nativeConfig$fwZone2:"new_zone")+".",Iface:server?paths.chilli+(null!==(_server$__id3=server.__id)&&void 0!==_server$__id3?_server$__id3:"new_inst_"+id)+".":void 0},Direction:"NONE",Table:"Filter"}}if(!nativeConfig.Servers.length)return{};var rules={};return Object.entries(nativeConfig.Servers).forEach(function(_ref){var _server$fwMasq,_server$Ping,_ref2=_slicedToArray2["default"](_ref,2),id=_ref2[0],server=_ref2[1],masqId=null!==(_server$fwMasq=server.fwMasq)&&void 0!==_server$fwMasq?_server$fwMasq:"new_FwRule_Masq_0",ping=server.PingEnable?null!==(_server$Ping=server.Ping)&&void 0!==_server$Ping?_server$Ping:"new_FwRule_Ping_0":void 0;rules[masqId]=getRuleMasq(server,id),ping&&(rules[ping]=getRulePing(server,id))}),rules}function getPolicy(data){if(!data.Servers.length)return{};var result={},policyId=data.fwPolicy?data.fwPolicy:"new_policy",zoneId=data.fwZone?data.fwZone:"new_zone";return result[policyId]={Policy:"ACCEPT",Dest:paths.fw+"Zones.2.",Source:paths.fw+"Zones."+zoneId+"."},result}var pattern=T({"->":["$data","Device"],$data:":external",Device:{"->":!0,Network:{Server:{Chilli:{"->":["$server","MACAuthentication","RADIUS","UAM"],"{$server, $i}":["$root",function(r){return r.$data.Servers}],":":["$server*","$i*",function(s,i){return s.__id?s.__id:"new_inst_"+i}],DHCPLease:["$server*",function(s){return s.DHCPLease}],Enable:["$server*",function(s){return s.Enable}],Interface:["$server*",function(s){return s.Iface}],LogLevel:["$server*",function(s){return s.LogLevel}],NetworkPrefix:["$server*",function(s){return getNetworkPrefix(s)}],MACAuthentication:{"->":!0,$server:["$parent",function(p){return p.$server?p.$server.MACAuth:void 0}],Enable:["$server*",function(s){return s.Enable}],Password:["$server*",function(s){return s.Password}],Suffix:["$server*",function(s){return s.Suffix}]},RADIUS:{"->":!0,$server:["$parent",function(p){return p.$server?p.$server.Radius:void 0}],PrimaryServer:["$server*",function(s){return s.PrimaryServer}],SecondaryServer:["$server*",function(s){return s.SecondaryServer}],Secret:["$server*",function(s){return s.Secret}],AccountingPort:["$server*",function(s){return s.AccountingPort}],AuthenticationPort:["$server*",function(s){return s.AuthenticationPort}],NASID:["$server*",function(s){return s.NASID}]},UAM:{"->":!0,$server:["$parent",function(p){return p.$server?p.$server.UAM:void 0}],AuthPort:["$server*",function(s){return s.AuthPort}],Secret:["$server*",function(s){return s.Secret}],NoChallenge:["$server*",function(s){return s.NoChallenge}],Server:["$server*",function(s){return s.Server}],Homepage:["$server*",function(s){return s.Homepage}],WalledGarden:["$server*",function(s){return s.WalledGarden.replace(/\s+/g,"")}]}}}},Firewall:{IPv4:{"->":!0,Zones:["$root",function(r){return getZone(r.$data)}],Policy:["$root",function(r){return getPolicy(r.$data)}],Rules:["$root",function(r){return getRules(r.$data)}]}}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={chilli:"Device.Network.Server.Chilli.",iface:"Device.Network.Interface.",group:"Device.Network.Group.",fw:"Device.Firewall.IPv4."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(398)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getKey(modem){var modemId=modem?modem.match(/\.\d+\.$/g,""):void 0;return modemId?Number(modemId[0].replace(/\./g,"")):""}var pattern=T({"->":["$data","$dwp","NetInfo"],$data:":external",$dwp:["$data",function(d){return funcs.fetchBranch(d,paths.dwp)}],$uptime:["$data",function(d){return funcs.fetchBranch(d,paths.uptime)}],Enable:["$dwp",function(d){return d.Enable}],RemoteAddress:["$dwp",function(d){return d.RemoteAddress}],RemotePort:["$dwp",function(d){return d.RemotePort}],APN:["$dwp",function(d){return d.APN}],Status:["$dwp",function(d){return d.Status}],Always:["$dwp",function(d){return d.Always}],Connect:["$dwp",function(d){return d.Connect}],IPFamily:["$dwp",function(d){return d.IPFamily}],$inetConn:["$dwp","$data",function(dwp,d){return funcs.fetchBranch(d,dwp.InternetConnection)}],ConnectionTime:["$uptime*","$inetConn*",function(u,ic){return u&&!_.isUndefined(ic.ConnectTimeStamp)?u-ic.ConnectTimeStamp:void 0}],SystemUptime:["$dwp",function(d){return d.Uptime}],NetInfo:{"->":["$activeSIM","PIN"],$data:["$parent",function(p){return p.$data}],$dwp:["$parent",function(p){return p.$dwp}],Mode:["$dwp",function(d){return d.Mode}],LTEBand:["$dwp",function(d){return d.LTEBand+(d.ScellBand&&!_.isEmpty(d.ScellBand)?", "+d.ScellBand:"")}],PSState:["$dwp",function(d){return d.PSState}],TxPower:["$dwp",function(d){return d.TxPower}],CellID:["$dwp",function(d){return d.CellID}],RSRP:["$dwp",function(d){return d.RSRP}],RSRQ:["$dwp",function(d){return d.RSRQ}],RSSI:["$dwp",function(d){return d.RSSI}],SINR:["$dwp",function(d){return d.SINR}],TAC:["$dwp",function(d){return d.TAC}],Modem:["$dwp",function(d){return d.Modem}],ModemKey:["$dwp",function(d){return getKey(d.Modem)}],Network:["$dwp",function(d){return d.SystemMode+(d.ScellBand&&!_.isEmpty(d.ScellBand)?"+":"")}],PRxMRSRP:["$dwp",function(d){return d.PRxMRSRP&&d.PRxMRSRP.split(",")[0]}],PRxDRSRP:["$dwp",function(d){return d.PRxDRSRP&&d.PRxDRSRP.split(",")[0]}],SRxMRSRP:["$dwp",function(d){return d.SRxMRSRP&&d.SRxMRSRP.split(",")[0]}],SRxDRSRP:["$dwp",function(d){return d.SRxDRSRP&&d.SRxDRSRP.split(",")[0]}],PccRxMRSSI:["$dwp",function(d){return d.PccRxMRSSI&&d.PccRxMRSSI.split(",")[0]}],PccRxDRSSI:["$dwp",function(d){return d.PccRxDRSSI&&d.PccRxDRSSI.split(",")[0]}],SccRSSI:["$dwp",function(d){return d.SccRSSI&&d.SccRSSI.split(",")[0]}],SccRxDRSSI:["$dwp",function(d){return d.SccRxDRSSI&&d.SccRxDRSSI.split(",")[0]}],$modem:["$data","$dwp",function(data,d){return""!=d.Modem?funcs.fetchBranch(data,d.Modem):void 0}],IMEI:["$modem*",function(m){return m.IMEI}],Model:["$modem*",function(m){return m.Model}],Revision:["$modem*",function(m){return m.Revision}],Vendor:["$modem*",function(m){return m.Vendor}],ActiveSIM:["$modem*",function(m){return m.ActiveSIM}],$activeSIM:["$modem*",function(m){return m.SIM[m.ActiveSIM]}],IMSI:["$activeSIM*",function(s){return s.IMSI}],PIN:{"->":!0,$pin:["$parent",function(p){return p.$activeSIM?p.$activeSIM.PIN:void 0}],Status:["$pin*",function(p){return p.Status}],Locked:["$pin*",function(p){return p.Locked}],PIN:["$pin*",function(p){return p.PINLeft}],PUK:["$pin*",function(p){return p.PUKLeft}]},Operator:["$modem*",function(m){return m.Cell.Operator}]}});return pattern.build({$data:data})}var _=__webpack_require__(4),T=__webpack_require__(35).T,funcs=__webpack_require__(5),paths={dwp:"Device.USB.ODUControl.",uptime:"Device.DeviceInfo.Uptime"};module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(402)}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data,attrs){function getVrrp(data,attrs){var vrrpSettings=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.vrrp)),vrrpAttrs=attrs?funcs.fetchBranch(attrs,paths.vrrp+"#template."):{},result={};if(_.size(vrrpSettings)){var key=Object.keys(vrrpSettings).shift();result=vrrpSettings[key],result.inst=key;var ipaddr=getIPAddrInfo(vrrpSettings[key].IPAddresses);ipaddr&&(result.instIP=ipaddr.inst,result.IPAddress=ipaddr.ip)}else _.each(vrrpAttrs,function(elem,key){if(_.has(elem,"default"))if("Interface"==key){var ifaces=getIfaces(data);result[key]=ifaces[0].link}else result[key]=elem["default"];else"IPAddresses"==key&&(result.IPAddress="")});return result}function getIfaces(data){var devMode=funcs.fetchBranch(data,paths.devMode),result=[];if("Firewall"==devMode)result=getInterfacesFirewall(data);else{var dhcp=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.dhcp));_.each(dhcp,function(elem){_.isEmpty(elem.Interface)||result.push({name:funcs.fetchBranch(data,elem.Interface).Name,link:elem.Interface})})}return result}function getInterfacesFirewall(data){function _mapInterfaces(startPath,type){var path=startPath+type+".",input=funcs.fetchBranch(data,path);return input=funcs.newConfig.normalize(input),_.map(input,function(iface,inst){return{name:iface.Name||iface.Ifname||null,link:path+inst+"."}})}var inputIfaces=funcs.fetchBranch(data,paths["interface"]),interfaces=_.chain(inputIfaces).pick("Bridge").map(function(e,type){return _mapInterfaces(paths["interface"],type)}).flatten().value();return interfaces}function getIPAddr(ip){if(_.isEmpty(ip))return"";var addr=ip.split("/");return addr[0]?addr[0]:""}function getMask(ip){if(_.isEmpty(ip))return"";var addr=ip.split("/");return addr[1]?funcs.ipv4.mask["long"](addr[1]):""}function getIPAddrInfo(addrs){var addrKey=_.findKey(addrs,function(a){return!_.isEmpty(a.IPAddress)}),result={};return result.inst=addrKey,result.ip=addrs[addrKey].IPAddress,result}function getConns(data){function getGroups(data){var gr=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.group)),result=[];for(var i in gr){var obj={link:paths.group+i+".",type:"group",name:1==Object.keys(gr).length?"default_gateway":"wan_group "+i};result.push(obj)}return result}function getConns(data){var connList=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.connection)),groupList=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.group)),result=[],supportedTypes=["DHCP","PPTP","L2TP","PPPoE","Static"],links=[],_loop=function(conn){if(supportedTypes.find(function(type){return type==conn}))for(var _inx in funcs.newConfig.normalize(connList[conn]))links.push(paths.connection+conn+"."+_inx+".")};for(var conn in connList)_loop(conn);var connUsbList=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.usbConns));for(var inx in connUsbList){var _conn=connUsbList[inx];_conn.InterfaceOnly||"IPv6"==_conn.IPStack||links.push("".concat(paths.usbConns).concat(inx,"."))}return Object.keys(groupList).forEach(function(inx){var groupLinks=[paths.group+inx+".WAN.",paths.group+inx+".VPN."];groupLinks.forEach(function(link){Object.values(funcs.newConfig.normalize(funcs.fetchBranch(data,link))).forEach(function(conn){var ifaceLink=conn.Link,iface=funcs.fetchBranch(data,ifaceLink);if(iface&&(void 0==iface.Name&&(iface=funcs.fetchBranch(data,iface.Interface)),links.find(function(supportedLink){return supportedLink==ifaceLink}))){var connection={link:ifaceLink,name:getIfaceName(ifaceLink,iface)};result.some(function(conn){return conn.link==connection.link})||result.push(connection)}})})}),result}function getIfaceName(link,ifaceConfig){var splitLink=link.split("."),connType=splitLink[3];return"DHCPv6"==connType&&(ifaceConfig.Interface.includes("PPPoE")||ifaceConfig.Interface.includes("L2TP"))&&isDual(ifaceConfig,connType)?ifaceConfig.Name+" (IPv6)":"PPPoE"!=connType&&"L2TP"!=connType||!isDual(ifaceConfig,connType)?ifaceConfig.Name:ifaceConfig.Name+" (IPv4)"}function isDual(conn,connType){if("DHCPv6"==connType){var iface=conn.Interface,flags=funcs.fetchBranch(data,funcs.fetchBranch(data,iface).PPPConfiguration);if(flags&&"Dual"==flags.IPStack)return!0}if("PPPoE"==connType||"L2TP"==connType){var _flags=funcs.fetchBranch(data,conn.PPPConfiguration);if(_flags&&"Dual"==_flags.IPStack)return!0}return!1}var groups=getGroups(data),conns=getConns(data);return groups.concat(conns)}var pattern=T({"->":["$data","$vrrp","Settings","Ifaces"],$data:":external",$attrs:":external",$vrrp:["$data","$attrs",function(d,a){return getVrrp(d,a)}],Settings:{"->":!0,$vrrp:["$parent",function(p){return p.$vrrp}],inst:["$vrrp",function(v){return v.inst}],AdvertisementInterval:["$vrrp",function(v){return v.AdvertisementInterval}],Auth:["$vrrp",function(v){return v.Auth}],Enable:["$vrrp",function(v){return v.Enable}],HandleVirtualMAC:["$vrrp",function(v){return v.HandleVirtualMAC}],HexKey:["$vrrp",function(v){return v.HexKey}],Interface:["$vrrp",function(v){return v.Interface}],PreemptionMode:["$vrrp",function(v){return v.PreemptionMode}],Priority:["$vrrp",function(v){return v.Priority}],State:["$vrrp",function(v){return v.State}],Status:["$vrrp",function(v){return v.Status}],VRID:["$vrrp",function(v){return v.VRID}],instIP:["$vrrp",function(v){return v.instIP}],IPAddress:["$vrrp",function(v){return getIPAddr(v.IPAddress)}],Mask:["$vrrp",function(v){return getMask(v.IPAddress)}],CurrentPriority:["$vrrp",function(v){return v.CurrentPriority}],ObjectTrackingEnable:["$vrrp",function(v){return v.ObjectTrackingEnable}],ObjectTrackingLink:["$vrrp",function(v){return v.ObjectTrackingLink}]},Ifaces:{"->":!0,"{$interface}":["$parent",function(p){return getIfaces(p.$data)}],name:["$interface*",function(l){return l.name}],value:["$interface*",function(l){return l.link}]},Conns:{"->":!0,"{$conns}":["$parent",function(p){return getConns(p.$data)}],name:["$conns*",function(c){return c.name}],value:["$conns*",function(c){return c.link}]}});return pattern.build({$data:data,$attrs:attrs})}function nativeToDsysinit(data){var pattern=T({"->":["$data","Device"],$data:":external",Device:{Services:{VRRP:{"->":["$vrrp","IPAddresses"],$vrrp:["$root",function(r){return r.$data}],":":["$vrrp",function(v){return v.inst?v.inst:"new_inst"}],AdvertisementInterval:["$vrrp",function(v){return v.AdvertisementInterval}],Auth:["$vrrp",function(v){return v.Auth}],Enable:["$vrrp",function(v){return v.Enable}],HandleVirtualMAC:["$vrrp",function(v){return v.HandleVirtualMAC}],HexKey:["$vrrp",function(v){return"none"!=v.Auth?v.HexKey:void 0}],Interface:["$vrrp",function(v){return v.Interface}],PreemptionMode:["$vrrp",function(v){return v.PreemptionMode}],Priority:["$vrrp",function(v){return v.Priority}],VRID:["$vrrp",function(v){return v.VRID}],IPAddresses:{"->":!0,$vrrp:["$parent",function(p){return p.$vrrp}],":":["$vrrp",function(v){return v.instIP?v.instIP:"new_ip"}],IPAddress:["$vrrp",function(v){return v.IPAddress+"/"+funcs.ipv4.mask["short"](v.Mask)}]},ObjectTrackingEnable:["$vrrp",function(v){return v.ObjectTrackingEnable}],ObjectTrackingLink:["$vrrp",function(v){return v.ObjectTrackingEnable?v.ObjectTrackingLink:""}]}}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={vrrp:"Device.Services.VRRP.",connection:"Device.Network.Connection.","interface":"Device.Network.Interface.",dhcp:"Device.Network.Server.DHCP.",devMode:"Device.DeviceInfo.DeviceMode",group:"Device.Network.Group.",usbConns:"Device.USB.Connection."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(404)}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data,attrs){function getVersions(){var result=["IPv4"];return __autoconf.BR2_PACKAGE_ANWEB_IPV6&&result.push("IPv6"),result}function getConnectionsList(data,version){var output=[],group=funcs.fetchBranch(data,paths.group+"1."),wanGroups="IPv4"==version?group.WAN:group.WANv6,orders=wanGroups.order;for(var inx in orders){var inst=orders[inx],link=wanGroups[inst].Link,connCheck=wanGroups[inst].ConnectivityCheckEnable,conn=funcs.fetchBranch(data,link);output.push({Name:conn&&conn.Name?conn.Name:"",Value:inst,Order:inx,Check:connCheck})}return output}var pattern=T({"->":["$data","$attrs","$connCheck","ConnCheck","Connections"],$data:":external",$attrs:":external",$connCheck:["$data",function(d){return funcs.fetchBranch(d,paths.connCheck)}],$failover:["$data",function(d){
return funcs.fetchBranch(d,paths.group+"1.")}],FailoverEnable:["$failover*",function(f){return f.FailoverEnable}],ConnCheck:{"->":["$connCheck","Hosts","MinMax"],$connCheck:["$parent",function(p){return p.$connCheck}],Enable:["$connCheck*",function(cc){return cc.Enable}],PingRetries:["$connCheck*",function(cc){return cc.PingRetries}],PingTimeout:["$connCheck*",function(cc){return cc.PingTimeout/1e3}],RecheckTimeout:["$connCheck*",function(cc){return cc.RecheckTimeout}],Hosts:{"->":!0,$connCheck:["$parent",function(p){return p.$connCheck}],"{$raw, $inx}":["$connCheck*",function(cc){return funcs.newConfig.normalize(cc.Destination)}],__inx:["$inx*",function(i){return i}],Value:["$raw*",function(r){return r.Host}]},TimeSystem:"ms",MinMax:{"->":!0,RecheckTimeout:{"->":!0,$attrs:["$root",function(r){return r.$attrs}],$minmax:["$attrs",function(a){return funcs.newConfig.makeMinMaxModel(a.Device.Network.ConnectivityCheck)}],min:["$minmax",function(m){return m.RecheckTimeout.min}],max:101},PingTimeout:{min:1,max:10},PingRetries:{min:1,max:10}}},Connections:{"->":!0,$data:["$parent",function(p){return p.$data}],"{$version}":getVersions(),":":["$version",function(v){return v}],$return:["$data","$version*",function(d,v){return getConnectionsList(d,v)}]}});return pattern.build({$data:data,$attrs:attrs})}function nativeToDsysinit(data){function getWANGroup(data,type){var output={order:[]},conns=data.Connections[type];return conns.forEach(function(element){var inst=element.Value;output.order.push(inst),"IPv4"==type&&(output[inst]={ConnectivityCheckEnable:element.Check})}),output}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Network:{"->":!0,ConnectivityCheck:{"->":["$data","$connCheck","Destination"],$data:["$root",function(r){return r.$data}],$connCheck:["$data",function(d){return d.ConnCheck}],Enable:["$data","$connCheck",function(d,cc){return d.FailoverEnable}],PingTimeout:["$data","$connCheck",function(d,cc){return d.FailoverEnable?1e3*cc.PingTimeout:void 0}],RecheckTimeout:["$data","$connCheck",function(d,cc){return d.FailoverEnable?cc.RecheckTimeout:void 0}],PingRetries:["$data","$connCheck",function(d,cc){return d.FailoverEnable?cc.PingRetries:void 0}],Destination:{"->":!0,$data:["$parent",function(p){return p.$data}],$connCheck:["$parent",function(p){return p.$connCheck}],"{$raw, $i}":["$data","$connCheck",function(d,cc){return cc.Hosts}],":":["$raw*","$i*",function(r,i){return r.__inx?r.__inx:"new_inst_"+i}],Host:["$raw*",function(r){return r.Value}]}},Group:{1:{"->":["$data","WAN","WANv6"],$data:["$root",function(r){return r.$data}],FailoverEnable:["$data",function(d){return d.FailoverEnable}],ConnectivityCheckEnable:["$data",function(d){return d.FailoverEnable}],WAN:{"->":!0,$data:["$parent",function(p){return p.$data}],$return:["$data",function(d){return getWANGroup(d,"IPv4")}]},WANv6:{"->":["?"],"?":!!__autoconf.BR2_PACKAGE_ANWEB_IPV6,$data:["$parent",function(p){return p.$data}],$return:["$data",function(d){return getWANGroup(d,"IPv6")}]}}}}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,funcs=__webpack_require__(5),__autoconf="undefined"!=typeof autoconf?autoconf:{},paths={conns:"Device.Network.Connection.",connCheck:"Device.Network.ConnectivityCheck.",group:"Device.Network.Group.",usb:"Device.USB.Connection."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(408)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getIfacesList(data){function getIfaces(data,type){var output=[];return output=output.concat(getWANGroups(data)),output=output.concat(getConns(data,type))}function getWANGroups(data){var output=[],groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.group));for(var i in groups){var path=paths.group+i+".";output.push({Value:path,Name:1==Object.keys(groups).length?"default_gateway":"wan_group "+i,Type:"group"})}return output}function getConns(data,type){function isValidType(connType,ipType){return!(/GRE|IPIP6|IPsec|NAT64|OpenVPN|SIT/.test(connType)||"v4"==ipType&&/v6/.test(connType)||"v6"==ipType&&!/v6|PPPoE/.test(connType))}function isValidUSBType(conn,ipType){return"v6"==ipType?["IPv6","Dual"].includes(conn.IPStack):"IPv6"!==conn.IPStack}function checkPPPoEType(data,conn,type){var settings=funcs.fetchBranch(data,conn.PPPConfiguration);return!(!settings||"v4"==type&&"IPv6"==settings.IPStack||"v6"==type&&"IPv4"==settings.IPStack)}var output=[],groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.group)),wans="v4"==type?groups[1].WAN:groups[1].WANv6;return _.each(funcs.newConfig.normalize(wans),function(elem,key){var iface=funcs.fetchBranch(data,elem.Link);if(iface){if(_.isEmpty(iface.Name)&&(iface=funcs.fetchBranch(data,iface.Interface)),!/Device\.USB\.Connection/.test(elem.Link))var connType=elem.Link.split(".")[3];var conn=funcs.fetchBranch(data,elem.Link);(connType&&isValidType(connType,type)||isValidUSBType(conn,type))&&("PPPoE"!=connType||checkPPPoEType(data,conn,type))&&output.push({Value:elem.Link,Name:iface.Name||iface.Ifname,Type:"conn"})}}),output}return{v4:getIfaces(data,"v4"),v6:getIfaces(data,"v6")}}var pattern=T({"->":["$data","Settings","Ifaces"],$data:":external",Settings:{"->":["$twamp","Addresses","Ports"],$twamp:["$root",function(r){return funcs.fetchBranch(r.$data,paths.twamp)}],Enable:["$twamp",function(t){return t.Enable}],ControlPort:["$twamp",function(t){return t.ControlPort}],IPStack:["$twamp",function(t){return t.IPStack}],Interface:["$twamp",function(t){return t.Interface}],Mode:["$twamp",function(t){return t.Mode}],ReflectorTimeout:["$twamp",function(t){return t.ReflectorTimeout}],ServerTimeout:["$twamp",function(t){return t.ServerTimeout}],Status:["$twamp",function(t){return t.Status}],Addresses:{"->":!0,"{$addrs, $i}":["$parent",function(p){return funcs.newConfig.normalize(p.$twamp.Allowed.Addresses)}],IPStart:["$addrs*",function(a){return a.IPStart}],IPEnd:["$addrs*",function(a){return a.IPEnd}],Type:["$addrs*",function(a){return-1!=a.IPStart.indexOf("/")?"net":"addrs"}],inst:["$i*",function(i){return i}]},Ports:{"->":!0,"{$ports, $i}":["$parent",function(p){return funcs.newConfig.normalize(p.$twamp.Allowed.Ports)}],PortStart:["$ports*",function(p){return p.PortStart}],PortEnd:["$ports*",function(p){return-1!=p.PortEnd?p.PortEnd:""}],inst:["$i*",function(i){return i}]}},Ifaces:{"->":["$ifaces","IPv4","IPv6"],$ifaces:["$root",function(r){return getIfacesList(r.$data)}],IPv4:{"->":!0,"{$conns}":["$parent",function(p){return p.$ifaces.v4}],Value:["$conns*",function(c){return c.Value}],Name:["$conns*",function(c){return c.Name}],Type:["$conns*",function(c){return c.Type}]},IPv6:{"->":!0,"{$conns}":["$parent",function(p){return p.$ifaces.v6}],Value:["$conns*",function(c){return c.Value}],Name:["$conns*",function(c){return c.Name}],Type:["$conns*",function(c){return c.Type}]}}});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({"->":!0,$data:":external",Device:{Services:{TWAMPServer:{"->":["$twamp","Allowed"],$twamp:["$root",function(r){return r.$data}],Enable:["$twamp",function(t){return t.Enable}],ControlPort:["$twamp",function(t){return t.ControlPort}],IPStack:["$twamp",function(t){return t.IPStack}],Interface:["$twamp",function(t){return t.Interface}],Mode:["$twamp",function(t){return t.Mode}],ReflectorTimeout:["$twamp",function(t){return t.ReflectorTimeout}],ServerTimeout:["$twamp",function(t){return t.ServerTimeout}],Allowed:{"->":["$twamp","Addresses","Ports"],$twamp:["$parent",function(p){return p.$twamp}],Addresses:{"->":!0,"{$addr, $i}":["$parent",function(p){return p.$twamp.Addresses}],":":["$addr*","$i*",function(a,i){return a.inst?a.inst:"new_addr_"+i}],IPStart:["$addr*",function(a){return a.IPStart}],IPEnd:["$addr*",function(a){return"addrs"==a.Type?a.IPEnd:""}]},Ports:{"->":!0,"{$port, $i}":["$parent",function(p){return p.$twamp.Ports}],":":["$port*","$i*",function(p,i){return p.inst?p.inst:"new_port_"+i}],PortStart:["$port*",function(p){return p.PortStart}],PortEnd:["$port*",function(p){return p.PortEnd&&""!=p.PortEnd?p.PortEnd:-1}]}}}}}});return pattern.build({$data:data})}var T=__webpack_require__(35).T,funcs=__webpack_require__(5),_require=__webpack_require__(6),paths=(_require.getIfaces,{twamp:"Device.Services.TWAMPServer.",conns:"Device.Network.Connection.",group:"Device.Network.Group."});module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports){module.exports=function(){}}]);