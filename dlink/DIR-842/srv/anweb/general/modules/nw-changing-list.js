"use strict";!function(){var nw=angular.module(regdep("nw-changing-list"),[]);nw.directive("nwChangingList",["translate","funcs",function(translate,funcs){return{restrict:"A",template:function(elem,attr){var label='<div class="{{getLabelClass()}} label">\n								{{label '.concat(_.has(attr,"nwNoTranslate")?"":"| translate",'}}\n								<font color="red" ng-show="required && !disabled && list.length">*</font>\n							</div>'),fields='<div\n							class="input_with_action"\n							ng-repeat="value in list | limitTo:limit track by $index"\n						>\n							<div\n								nw-field\n								nw-required="required"\n								nw-disabled="disabled"\n							>\n								<input\n									type="text"\n									'.concat(function(property){return property?'ng-model="list[$index][property]" ':'ng-model="list[$index]" '}(attr.nwChangingListProperty),'\n									nw-type="{{type}}"\n									').concat("url"==attr.nwChangingListType?"nw-url":"","\n									").concat("url"==attr.nwChangingListType&&attr.nwChangingListTypeProtocols?"nw-url-protocols='{{ protocols }}'":"nw-url-protocols='http, https'","\n									").concat("url"==attr.nwChangingListType&&_.has(attr,"nwChangingListNotCyrillic")?"nw-url-not-cyrillic":"",'\n									placeholder="{{placeholder | translate}}"\n									nw-set-focus="{{focus === true}}"\n									nw-custom-valid="validation(value, $index)"\n								>\n							</div>\n							<div\n								svg-icon="delete_icon"\n								class="input_action"\n								ng-if="showRemoveButton()"\n								ng-click="removeRow($index)"\n							></div>\n						</div>');return'<div class="changing_list">\n						'.concat(label,"\n						").concat('<div\n							class="empty"\n							ng-if="!list.length"\n						>\n							<div\n								class="note"\n							>\n								<span ng-bind="\'changing_list_empty\' | translate"></span>\n								<span ng-if="default"> ({{"by_default" | translate}} {{default}})</span>\n							</div>\n						</div>',"\n						").concat(fields,"\n						").concat('<div class="button_block right">\n							<input\n								type="button"\n								ng-disabled="disabledAddRow()"\n								ng-click="addRow()"\n								value="{{\'act_add\' | translate}}"\n								class="colored flat"\n							>\n						</div>',"\n					</div>")},scope:{label:"@nwChangingListLabel",labelClass:"@nwChangingListLabelClass",placeholder:"@nwChangingListPlaceholder",type:"@nwChangingListType",list:"=nwChangingList",defNewRow:"=nwChangingListDefaultNewRow",limit:"@nwChangingListLimit",disabled:"=nwChangingListDisabled",property:"@nwChangingListProperty","default":"@nwChangingListDefault",conType:"=nwChangingListContype",protocols:"=nwChangingListProtocols"},link:function($scope,$element,$attrs){var needUniq=_.has($attrs,"nwChangingListUniq"),notEmpty=_.has($attrs,"nwChangingListNotEmpty"),notCyrillic=_.has($attrs,"nwChangingListNotCyrillic"),conType=$scope.conType;$scope.addRow=function(){$scope.focus=!0;var obj,defNewRow=$scope.defNewRow?_.clone($scope.defNewRow):"";$scope.property&&(obj={},obj[$scope.property]=defNewRow,defNewRow=_.clone(obj)),$scope.list.push(defNewRow)},$scope.removeRow=function(index){$scope.list.splice(index,1)},$scope.disabledAddRow=function(){return $scope.list&&($scope.list.length>=$scope.limit||$scope.disabled)},$scope.$watch("conType",function(newValue){conType=newValue}),$scope.validation=function(value,index){if(needUniq&&!function(value,without){var checkList=_.clone($scope.list);return!_.isUndefined(without)&&without<checkList.length&&checkList.splice(without,1),checkList[0]&&_.has(checkList[0],"Address")&&(checkList=_.pluck(checkList,"Address")),!_.contains(_.compact(checkList),value)}(value,index))return"msg_error_value_is_not_uniq";if(notCyrillic&&function(value){return/[а-яА-Я]/.test(value)}(value))return"msg_invalid_not_cyrillic_char";if(conType){if("IPv4"==conType&&!funcs.is.ipv4(value))return"msg_invalid_ipv4";if("IPv6"==conType&&!funcs.is.ipv6(value))return"msg_invalid_ipv6";if("Dual"==conType&&!funcs.is.ipv4(value)&&!funcs.is.ipv6(value))return"msg_invalid_ip"}return null},$scope.getLabelClass=function(){return $scope.labelClass?$scope.labelClass:"card-title"},$scope.showRemoveButton=function(){var result;return result=$scope.disabled?!1:notEmpty?$scope.list.length>1:!0},$attrs.$observe("nwChangingList",function(){_.isArray($scope.list)||($scope.list=[]),!_.size($scope.list)&&notEmpty&&$scope.list.push("")}),$attrs.$observe("@nwChangingListLimit",function(){$scope.limit=$scope.limit||100}),$attrs.$observe("nwChangingListRequired",function(value){$scope.required=_.isUndefined(value)?!1:""===value?!0:!!value})}}}])}();