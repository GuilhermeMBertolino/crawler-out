"use strict";function oneWayRequest($q,$rs,$timeout,devinfo){return function(opts){function clean(){$timeout.cancel(minTimer),$timeout.cancel(maxTimer),$rs.deviceMonitorConfig.initThresholds(),$rs.deviceMonitorConfig.initPolling({hostname:opts.newHost}),unsubscribeDeviceAvailableAgain&&unsubscribeDeviceAvailableAgain(),devinfo.resumeAll(),d=null}var d=$q.defer();opts||(opts={});var unsubscribeDeviceAvailableAgain,maxTime=opts.maxTime||3e4,minTime=opts.minTime||3e3;$rs.deviceMonitorConfig.setApplyingThresholds(),$rs.deviceMonitorConfig.initPolling({interval:700,timeout:500,hostname:opts.newHost}),devinfo.suspendAll();var res={},minTimer=$timeout(function(){var moveon=!0;opts.onMinTime&&(moveon=opts.onMinTime(res)),moveon?$rs.deviceMonitor.availability?(res.status="AvailableOnMinTime",d.resolve(res),clean()):unsubscribeDeviceAvailableAgain=$rs.$on("device_available_again",function(){res.status="AvailableBeforeMaxTime",d.resolve(res),clean()}):(res.status="CanceledOnMinTime",d.resolve(res),clean())},minTime),maxTimer=$timeout(function(){res.status="MaxTimeIsOver",d.reject(res),clean()},maxTime);return opts.req&&opts.req.then(function(data){d&&(res.data=data,data&&data.__cancel&&(d.resolve(res),clean()))})["catch"](function(error){d&&(res.status="RequestError",res.error=error,d.reject(res),clean())}),d.promise}}angular.module(regdep("one-way-request"),[]).factory("oneWayRequest",["$q","$rootScope","$timeout","devinfo",oneWayRequest]);