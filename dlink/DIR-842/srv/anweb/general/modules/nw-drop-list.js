"use strict";!function(){var nw=angular.module(regdep("nw-drop-list"),[]);nw.directive("nwDropList",["$compile","$parse",function($compile,$parse){function link($scope,$element,$attrs,$ctrl){function init(){function isDisabled(){return $element.attr("disabled")}$nwDropBtn=angular.element(templateBtn),$parent.addClass("nw-drop-list-wrap"),$parent.prepend($nwDropBtn),$nwDropBtn.bind("mousedown",function($event){return $event.preventDefault(),!1}),$nwDropBtn.bind("click",function(){var result=$scope.$eval($attrs.nwDropListOptions);$scope[key].list=angular.isFunction(result)?result():result,isDroplistCompiled[key]?null:addDroplist(prepareData()),fillLocalList($element[0].value,!0),changeShowState(!isActive)}),$element.bind("focus",function($event){$scope.$broadcast("element.active")}),$element.bind("blur",function($event){$scope.$broadcast("element.leave")}),$element.bind("keydown",function($event){0!=isActive&&$event.keyCode==KEY_CODE.TAB&&($scope.$broadcast("element.leave"),$scope.$apply())}),$scope.$on("drop-list.active",function(){isActive=!0,$nwDropBtn.addClass("nw-drop-list-btn--active")}),$scope.$on("drop-list.leave",function(){isActive=!1,$nwDropBtn.removeClass("nw-drop-list-btn--active")}),$scope.$on("drop-list.isEmpty",function($event,value){value?$nwDropBtn.addClass("nw-drop-list-btn--hide"):$nwDropBtn.removeClass("nw-drop-list-btn--hide")}),$scope.$watch(isDisabled,function(value){value?$nwDropBtn.addClass("nw-drop-list-btn--disabled"):$nwDropBtn.removeClass("nw-drop-list-btn--disabled")})}function fillLocalList(value,isFullListNeeded){$scope[key].list?null:prepareData();var list=$scope[key].list;value?isFullListNeeded?updateListOptions(highlighOption(list,value)):updateSearchResults(value):(updateListOptions(highlighOption(list)),changeShowState(!0))}function updateSearchResults(value){var list=$scope[key].list;$scope[key].results="fuzzy"==$attrs.nwDropListSearchType?fuzzySearch(list,value,extractOptions):strictSearch(list,value,extractOptions);var results=$scope[key].results;results.length?(value?updateListOptions(highlighOption(results,value)):null,changeShowState(!0)):(updateListOptions(list),changeShowState(!1))}function highlighOption(l,v){function makeOptionFirst(l,n){var el=l[n];if(void 0===el)return r;var newList=l.filter(function(e){return e!==el&&void 0!==e.value});return newList.unshift(el),newList}var n,val=v?v:"",r=l.map(function(e,i){return e.title==val?(n=i,e.bold=val,delete e.title):e.bold&&e.bold!==val?(e.title=e.bold,delete e.bold):e.bold&&e.bold==val&&(n=i),e});return makeOptionFirst(r,n)}function updateListOptions(data){data&&($scope[key].info=data)}function fuzzySearch(list,value,extractOptions){var fuzzyResults=fuzzy.filter(value,list,extractOptions),fuzzyMatches=fuzzyResults.map(function(el){return el.original});return fuzzyMatches}function strictSearch(list,value,extractOptions){var res=list.filter(function(e){var r=new RegExp(".*("+value.toLowerCase()+").*"),el=extractOptions.extract(e).toLowerCase();return el.match(r)?e:void 0});return res.length||value.length?res:list}function formDroplistTemplate(v){var str="<div nw-drop-list-core nw-drop-list-core-value="+$attrs.ngModel+" nw-drop-list-core-options="+v+" nw-drop-list-core-on-change="+$attrs.nwDropListOnChange+" ";return $attrs.hasOwnProperty("nwDropListBottom")&&(str+="nw-drop-list-core-bottom=true"),str+="></div>"}function execInParentScope(a){var p=$parse(a),e=p($scope.$parent);return e()}function execIfExists(f){var r;return f?r=execInParentScope(f):null,r}function prepareData(){try{getDataByExec()}catch(e){getDataFromScope(),key=$attrs.nwDropListOptions.split(".")[0]}finally{pathToOptions=key+".info"}}function getDataByExec(){$scope[key].list=execIfExists($attrs.nwDropListOptions),$attrs.nwDropListExtractOptions?extractOptions=execIfExists($attrs.nwDropListExtractOptions):null}function getDataFromScope(){if($scope[key].list=$scope.$eval($attrs.nwDropListOptions),$attrs.nwDropListExtractOptions)try{extractOptions=execIfExists($attrs.nwDropListExtractOptions)}catch(e){extractOptions=$scope.$eval($attrs.nwDropListExtractOptions)}}function changeShowState(state){$scope.$broadcast("drop-list-btn.change-active",state)}function addDroplist(){$nwDropList=angular.element($compile(formDroplistTemplate(pathToOptions))($scope)),$parent.append($nwDropList),isDroplistCompiled[key]=!0}var $nwDropBtn,$nwDropList,$parent=$element.parent(),templateBtn='<i class="nw-drop-list-btn"></i>',isActive=!1;num++;var key="results_"+num;$scope[key]={info:[],results:[]},init(),$scope.$watch($attrs.ngModel,function(value,oldVal){value===oldVal||document.activeElement!=$element[0]||$element[0].disabled||"UTC"===value||"UTC"===oldVal||(isActive?null:changeShowState(!0),isDroplistCompiled[key]?null:addDroplist(prepareData()),fillLocalList(value))})}var pathToOptions,KEY_CODE={TAB:9},num=0,extractOptions={extract:function(e){return e.value}},isDroplistCompiled={};return{restrict:"A",require:"ngModel",link:link}}]),nw.directive("nwDropListCore",["$window","$document",function($window,$document){function link($scope,$element,$attrs){function isShow(){return $scope.isListActive&&($scope.isElementActive||$scope.workOnList)}function isEmpty(){return!$scope.options.length}function updateShowList(value){isEmpty()||($scope.bottom?($element.removeClass("nw-drop-list-top"),$element.addClass("nw-drop-list-bottom")):($element.removeClass("nw-drop-list-bottom"),$element.addClass("nw-drop-list-top")),value?($element.addClass("nw-drop-list--show"),$scope.$emit("drop-list.active"),correctElementScroll()):($element.removeClass("nw-drop-list--show"),$scope.$emit("drop-list.leave"),$scope.isListActive=!1))}function updateListState(value){value?$element.addClass("nw-drop-list--hide"):$element.removeClass("nw-drop-list--hide"),$scope.$emit("drop-list.isEmpty",value)}function updateValue($event,option){$event.preventDefault(),$scope.onChange&&$scope.onChange(option),$scope.value=option.value,$scope.isListActive=!1}function correctElementScroll(){function getScrollTop(){return $window.scrollY||$document[0].documentElement.scrollTop||$document[0].body.scrollTop}var body=$document[0].body,container=$element[0],bodyCords=body.getBoundingClientRect(),containerCords=container.getBoundingClientRect(),bodyBottom=bodyCords.bottom-bodyCords.top,containerBottom=containerCords.bottom;if(containerBottom>bodyBottom){var scrollTop=getScrollTop(),scrollHeight=containerBottom-bodyBottom+20;"scrollTopAnimated"in $document?$document.scrollTopAnimated(scrollTop+scrollHeight):$window.scrollTo(0,scrollTop+scrollHeight)}}$scope.isListActive=!1,$scope.workOnList=!1,$scope.isElementActive=!1,$scope.updateValue=updateValue,$scope.$on("drop-list-btn.change-active",function($event,value){$scope.isListActive=value,value&&($scope.isElementActive=!0)}),$scope.$on("element.active",function(){$scope.isElementActive=!0}),$scope.$on("element.leave",function(){$scope.isElementActive=!1}),$element.bind("mousedown touchstart",function(){$scope.workOnList=!0}),$element.bind("mouseup touchend",function(){$scope.workOnList=!1}),$scope.$watch(isShow,updateShowList),$scope.$watch(isEmpty,updateListState)}var template='<div tabindex="-1" class="nw-drop-list nw-drop-list-top" ><div class="nw-drop-list__item" ng-class="{\'nw-drop-list__item--active\': active.check($index) }"ng-click="updateValue($event, option)" ng-repeat="option in options" ><span class="nw-drop-list__item-bold" ng-bind="option.bold"></span><span class="nw-drop-list__item-title" ng-bind="option.title"></span> <span class="nw-drop-list__item-subtitle" ng-bind="option.subtitle"></span></div></div>';return{restrict:"A",replace:!0,template:template,scope:{value:"=nwDropListCoreValue",options:"=nwDropListCoreOptions",onChange:"=nwDropListCoreOnChange",bottom:"=nwDropListCoreBottom"},link:link}}])}();