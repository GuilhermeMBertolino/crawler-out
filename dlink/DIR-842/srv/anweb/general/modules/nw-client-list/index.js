"use strict";!function(){var nw=angular.module(regdep("nw-client-list"),["devinfo"]);nw.directive("nwClientList",["$compile","funcs","nwClientListUtil",function($compile,funcs,util){function link($scope,$element,$attrs,$ctrl){function initDropList(){addDropList(),util.pull($element.attr("nw-client-list-source")).then(function(result){$scope[key].clients=result.clients,$scope[key].iface=result.iface,$scope[key].wifiAPData=result.wifiAPData,updateClientsInfo()})}function addDropList(){$attrs.$set("nwClientList","false"),$element.attr("nw-drop-list",""),$element.attr("nw-drop-list-options",key+".info"),$attrs.hasOwnProperty("nwClientListBottom")&&$element.attr("nw-drop-list-bottom",""),$attrs.nwClientListOnChange&&$element.attr("nw-drop-list-on-change",$attrs.nwClientListOnChange),$compile($element)($scope)}function hasDropList(){return _.has($attrs,"nwDropList")&&_.has($attrs,"nwDropListOptions")}function updateClientsInfo(){if($scope[key].clients){var clients=util.prepareClientsList($scope[key].clients,$scope[key].version,$scope[key].direction,$scope[key].exclude,$scope[key].filterFn);$scope[key].info=formClientsInfo(clients,$attrs.nwClientListType,$scope[key].iface,$scope[key].band,$scope[key].wifiAPData)}}function formClientsInfo(clients,clientType,iface,band,wifiAPData){function formatItem(format,elem,item){item.value=elem[format.value],item.title=elem[format.title],("host"==format.title||"hostname"==format.title)&&(item.title=punycode.toUnicode(item.title));var subtitle,subtitleArr=[];elem[format.subtitle1]&&(subtitle=elem[format.subtitle1],("host"==format.subtitle1||"hostname"==format.subtitle1)&&(subtitle=punycode.toUnicode(subtitle)),subtitleArr.push(subtitle)),elem[format.subtitle2]&&(subtitle=elem[format.subtitle2],("host"==format.subtitle2||"hostname"==format.subtitle2)&&(subtitle=punycode.toUnicode(subtitle)),subtitleArr.push(subtitle)),item.subtitle=subtitleArr.join("/")}function getFormat(type){"mac"==type?type="mac:host/ip":type&&"ip"!=type||(type="ip:host/mac");var format={},arr1=type.split(":");format.value=arr1[0],format.title=arr1[0];var arr2=arr1[1].split("/");return format.subtitle1=arr2[0],format.subtitle2=arr2[1],format}var format=getFormat(clientType),items=[];if(!format.value)return items;for(var i in clients){var client=clients[i];if(client.mac&&(client.mac=client.mac.toUpperCase()),client[format.value]){var item={raw:client};formatItem(format,client,item),items.push(item)}}return items=util.filterClientsInfo(items,format,iface,band,wifiAPData),items.sort(function(e){return"ipv4"==$scope[key].versionFirst?is.ipv4(e.raw.ip)?-1:1:is.ipv6(e.raw.ip)?-1:1}).filter(function(e,i,a){return a.findIndex(function(_e){return _e.value==e.value})==i})}if("false"!=$attrs.nwClientList){clientListNumber++;var key="clientList_"+clientListNumber;$scope[key]={info:[],exclude:[],clients:null,version:null,versionFirst:"ipv4",direction:null,filterFn:null,band:null},hasDropList()||initDropList(),$attrs.$observe("nwClientListVersion",function(value){$scope[key].version!=value&&($scope[key].version=value,updateClientsInfo())}),$attrs.$observe("nwClientListVersionFirst",function(value){$scope[key].versionFirst=value}),$attrs.$observe("nwClientListDirection",function(value){$scope[key].direction!=value&&($scope[key].direction=value,updateClientsInfo())}),$attrs.$observe("nwClientListExclude",function(value){value&&($scope[key].exclude=$scope.$eval(value),updateClientsInfo())}),$attrs.$observe("nwClientListFilterFn",function(value){value&&($scope[key].filterFn=$scope.$eval(value),updateClientsInfo())}),$attrs.$observe("nwClientListBand",function(value){value&&($scope[key].band=$scope.$eval(value),updateClientsInfo())})}}var is=funcs.is;return{restrict:"A",require:"ngModel",link:link}}]);var clientListNumber=0;nw.directive("nwClientListCore",["nwClientListUtil",function(util){function link($scope,$element,$attrs,$model){function setValue(value){value&&(value=punycode.toUnicode(value)),$model.$setViewValue(value),$model.$render()}util.pull("all").then(function(result){var model,knownClients=result.clients,clientMac=$attrs.nwClientListCoreMac?$attrs.nwClientListCoreMac:null,clientIp=$attrs.nwClientListCoreIp?$attrs.nwClientListCoreIp:null,clientHostname=$attrs.ngModel?$attrs.ngModel:null;model=$attrs.nwClientListCoreIp?clientIp:clientMac,$scope.$watchCollection("["+model+", "+clientHostname+"]",function(newVal,oldVal){var client,oldModel=oldVal&&oldVal[0]?oldVal[0].toLowerCase():null,newModel=newVal&&newVal[0]?newVal[0].toLowerCase():null,oldHostname=oldVal&&oldVal[1]?oldVal[1]:null,newHostname=newVal&&newVal[1]?newVal[1]:null;if(model===clientMac&&(client=newVal&&newVal[0]?util.findClient(knownClients,newModel,"mac"):null),model===clientIp&&(client=newVal&&newVal[0]?util.findClient(knownClients,newModel,"ip"):null),client){if(newModel==oldModel)return;setValue(util.getHostname(client))}else newVal&&newHostname&&setValue(newHostname!=oldHostname&&""!=newHostname||newModel!=oldModel?newHostname:oldHostname)})})}return{restrict:"A",link:link,require:"ngModel"}}])}();