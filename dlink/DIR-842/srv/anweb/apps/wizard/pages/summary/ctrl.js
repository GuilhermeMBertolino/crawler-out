"use strict";function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _iterableToArray(iter){return"undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"]?Array.from(iter):void 0}function _arrayWithoutHoles(arr){return Array.isArray(arr)?_arrayLikeToArray(arr):void 0}function _arrayLikeToArray(arr,len){var i,arr2;for((null==len||len>arr.length)&&(len=arr.length),i=0,arr2=new Array(len);len>i;i++)arr2[i]=arr[i];return arr2}angular.module("wizard").controller("wizardSummaryCtrl",["$scope","$rootScope","$state","$stateParams","profiles","devinfo","translate","regions","dataShare","stepManager","profileInspector","$timeout","$injector",function($scope,$rootScope,$state,$stateParams,profiles,devinfo,translate,regions,dataShare,stepManager,profile,$timeout){function seviceToHuman(service){if(!service)return"";switch(service.toLowerCase()){case"":return"";case"iptv":return"IPTV";case"voip":return"VoIP";default:return"IPTV+VoIP"}}function addFileLine(s,v,simple){v||(v=""),simple?($scope.summaryFile&&($scope.summaryFile+="\r\n"),$scope.summaryFile+=translate(s)):""==s?$scope.summaryFile+=translate(s)+": "+v:($scope.summaryFile&&($scope.summaryFile+="\r\n"),$scope.summaryFile+=translate(s)+": "+v)}function addFileFields(fields){_.each(fields,function(field){field.hide||addFileLine(field.name,field.value)})}function addFileBR(){$scope.summaryFile+="\r\n"}function getDestinationAddress(conn){var destAddr;return conn&&"DSL.ATM"==conn.MediaType?(destAddr=conn.Media.DSL.ATM.DestinationAddress,[{name:"VPI",value:destAddr.split("/")[0]},{name:"VCI",value:destAddr.split("/")[1]}]):[]}function onData(info){info&&(devinfo.unsubscribe("version|net",onData),$scope.summary=$scope.compileSummary($scope.nativeData,info))}function getConnectionUsername(conn){return conn.Username&&""!=conn.Username?conn.Username:null}function getConnectionPassword(conn){return conn.WithoutAuth?null:"PROTECTED-ad2f4833"!=conn.Password?conn.Password:"*****"}function getPPPoEName(conn){if(conn.UnnumberedIP)return"wan_pppoe_unnum";var isPPPoA="DSL.ATM"==conn.MediaType&&"PPPoA"==conn.Media.DSL.ATM.LinkType;return isPPPoA?"PPPoA":"PPPoE"}$scope.stepData=stepManager.getData(),$scope.device,$scope.applying=!1,profile.set($scope.nativeData);var originToHuman={Auto:"wan_ipv6_auto_configured",AutoConfigured:"wan_ipv6_auto_configured",AutoConfiguredByDHCPv6:"wan_ipv6_auto_configured_by_dhcp_v6",AutoConfiguredBySlaac:"wan_ipv6_auto_configured_by_slaac"},manualProfile=dataShare.get("ManualProfile"),isApMode="ap"===manualProfile.$DeviceMode.Mode,isClient="Client"===manualProfile.$InterfaceStep.WiFiMode,isRepeater="Repeater"===manualProfile.$InterfaceStep.WiFiMode,isWDS="WDS"===manualProfile.$InterfaceStep.WiFiMode,isWISPRepeater="WISPRepeater"===manualProfile.$InterfaceStep.WiFiMode,isWDSInBridge=isWDS&&"Bridge"==manualProfile.$WiFiWdsStep.Mode,isEasyMeshAgent=manualProfile.$InterfaceStep.MeshEnable&&"slave"==manualProfile.$InterfaceStep.MeshRole,deviceSection={name:"dcc_smr_device",fields:[]},modes={Router:"dcc_mod_router",WISPRepeater:"dcc_mod_wisp_repeater",AP:"dcc_mod_access_point",Repeater:"dcc_mod_repeater",Client:"dcc_mod_client",WDS:"WDS",USB:"dcc_mod_router"};$scope.summaryFile="",$scope.lanPorts=_.clone($rootScope.gLanPorts),$scope.gReversPortNames||$scope.lanPorts.reverse(),$scope.region=dataShare.get("FoundRegion"),$scope.compileSummary=function(_native,info){$scope.summaryFile="";var group,connInfo,dongleName,service,conn,dynIp,username,password,name,modemName,isATM,isIPoA,hidePing,fields,origin,IPv4,StaticIP,WDS,isOpen,sorted,timeZone,wanVID=null,macClone=null;regions.byID(_native.RegionID);var result=[],wanConnection=_.chain(_native.Config.WAN).values().pluck("Connection").compact().pluck("1").compact().first().value();if(!wanConnection&&info.ipv4gw&&/mobileinet/.test(info.ipv4gw.contype)&&(group={name:"connection",fields:[]},group.fields.push({name:"dcc_interface_type_step",value:translate(info.ipv4gw.contype)}),result.push(group),info.ipv4gw.__usb_data&&(connInfo={name:"wan_modem",fields:[{name:"username",value:info.ipv4gw.__usb_data.username},{name:"password",value:info.ipv4gw.__usb_data.password,hide:!info.ipv4gw.__usb_data.password},{name:"APN",value:info.ipv4gw.__usb_data.apn}]},result.push(connInfo),addFileLine("dcc_interface_type_step",translate(info.ipv4gw.contype)),addFileBR(),addFileLine("wan_modem",!1,!0),addFileLine("username",info.ipv4gw.__usb_data.username),info.ipv4gw.__usb_data.password&&addFileLine("password",info.ipv4gw.__usb_data.password),addFileLine("APN",info.ipv4gw.__usb_data.apn),addFileBR())),wanConnection&&"Ethernet"!=wanConnection.MediaType){var group={name:"connection",fields:[]};switch(wanConnection.MediaType){case"Dongle":dongleName="mobileinet",group.fields.push({name:"dcc_interface_type_step",value:translate(dongleName)});break;case"WiFi":group.name=""}result.push(group)}if(wanConnection&&("DSL.PTM"==wanConnection.MediaType&&wanConnection.VLAN.Enable&&(wanVID=wanConnection.VLAN.ID),_native.Config.VLAN&&(service=_.find(_.pairs(_native.Config.VLAN.services),function(pair){return"internet"==_.first(pair)}),service&&_.last(service).vid&&(wanVID=_.last(service).vid)),wanConnection.VLAN&&wanConnection.VLAN.Enable&&(wanVID=wanConnection.VLAN.ID),wanConnection&&manualProfile.$InternetStep&&(macClone=manualProfile.$InternetStep.Mac)),$scope.gFirstData&&$scope.gFirstData.Password?(addFileLine("username","admin"),addFileLine("password",$scope.gFirstData.Password)):_native.Config.SystemPassword&&(addFileLine("username",_native.Config.SystemPassword.Login),addFileLine("password",_native.Config.SystemPassword.Password)),_native.Config.LAN&&_native.Config.LAN[1].IPv4?"Dynamic"==_native.Config.LAN[1].IPv4.AddressingMode?addFileLine("dcc_smr_devip","".concat(translate("lan_addressing_mode_dynamic")," (").concat(translate("dcc_smr_devip_desc")," ").concat(_native.Config.LAN[1].IPv4.StaticIP[1].Address,")")):addFileLine("dcc_smr_devip",_native.Config.LAN[1].IPv4.StaticIP[1].Address):addFileLine("dcc_smr_devip",info.lan[0].ip),addFileBR(),_native.Config.WAN){if(profile.isViewFound(/Config.WAN.Bridge.Connection.1./)&&(conn=_native.Config.WAN.Bridge.Connection[1],result.push({name:"Bridge",fields:[{name:"VLAN ID",value:wanVID,hide:!wanVID},{name:"mac_address",value:macClone,hide:!macClone},{name:"Ping",value:conn.Flags?translate(conn.Flags.Ping?"yes":"no"):"",hide:!conn.Flags}].concat(_toConsumableArray(getDestinationAddress(conn)))}),addFileLine("Bridge"),wanVID&&addFileLine("VLAN ID",wanVID),macClone&&addFileLine(translate("mac_address"),macClone),conn.Flags&&addFileLine("Ping",translate(conn.Flags.Ping?"yes":"no"))),profile.isViewFound(/Config.WAN.PPTP.Connection.1./)){dynIp=_native.Config.WAN.IPv4oE.Connection[2],dynIp&&(result.push({name:"dynip",fields:[{name:"VLAN ID",value:wanVID,hide:!wanVID},{name:"mac_address",value:macClone,hide:!macClone},{name:"IGMP",value:dynIp.Flags?translate(dynIp.Flags.IGMP?"yes":"no"):"",hide:!dynIp.Flags}]}),addFileLine(translate("dynip")),wanVID&&addFileLine("VLAN ID",wanVID),macClone&&addFileLine(translate("mac_address"),macClone),dynIp.Flags&&addFileLine("IGMP",translate(dynIp.Flags.IGMP?"yes":"no")),addFileBR());var conn=_native.Config.WAN.PPTP.Connection[1];username=getConnectionUsername(conn),password=getConnectionPassword(conn),result.push({name:conn.ActualType,fields:[{name:"username",value:username,hide:!username},{name:"password",value:password,hide:!password},{name:"wan_ppp_no_auth",value:translate("yes"),hide:!conn.WithoutAuth},{name:"wan_vpn_service_name",value:conn.ServiceName},{name:"VLAN ID",value:wanVID,hide:!wanVID||!0},{name:"Ping",value:conn.Flags?translate(conn.Flags.Ping?"yes":"no"):"",hide:!conn.Flags}].concat(_toConsumableArray(getDestinationAddress(conn)))}),addFileLine(conn.ActualType),conn.Username&&""!=conn.Username&&addFileLine("username",conn.Username),password&&addFileLine("password",password),conn.WithoutAuth&&addFileLine("wan_ppp_no_auth",translate("yes")),addFileLine("wan_vpn_service_name",conn.ServiceName),conn.Flags&&addFileLine("Ping",translate(conn.Flags.Ping?"yes":"no")),profile.isViewFound(/Config.WAN.IPv4oE.Connection.1./)&&addFileBR()}if(profile.isViewFound(/Config.WAN.PPPoE.Connection.1./)){var dynIp=_native.Config.WAN.IPv4oE&&_native.Config.WAN.IPv4oE.Connection[2];dynIp&&(result.push({name:"dynip",fields:[{name:"VLAN ID",value:wanVID,hide:!wanVID},{name:"mac_address",value:macClone,hide:!macClone},{name:"IGMP",value:dynIp.Flags?translate(dynIp.Flags.IGMP?"yes":"no"):"",hide:!dynIp.Flags}]}),addFileLine(translate("dynip")),wanVID&&addFileLine("VLAN ID",wanVID),macClone&&addFileLine(translate("mac_address"),macClone),dynIp.Flags&&addFileLine("IGMP",translate(dynIp.Flags.IGMP?"yes":"no")),addFileBR());var conn=_native.Config.WAN.PPPoE.Connection[1];name=getPPPoEName(conn);var username=getConnectionUsername(conn),password=getConnectionPassword(conn);result.push({name:translate(name),fields:[{name:"username",value:username,hide:!username},{name:"password",value:password,hide:!password},{name:"wan_ppp_no_auth",value:translate("yes"),hide:!conn.WithoutAuth},{name:"wan_service_name",value:conn.ServiceName,hide:!conn.ServiceName},{name:"VLAN ID",value:wanVID,hide:!wanVID},{name:"ip_address",value:conn.UnnumberedIP?conn.UnnumberedIP.Address:null,hide:_.isUndefined(conn.UnnumberedIP)},{name:"subnet_mask",value:conn.UnnumberedIP?conn.UnnumberedIP.SubnetMask:null,hide:_.isUndefined(conn.UnnumberedIP)},{name:"mac_address",value:macClone,hide:!macClone},{name:"Ping",value:conn.Flags?translate(conn.Flags.Ping?"yes":"no"):"",hide:!conn.Flags}].concat(_toConsumableArray(getDestinationAddress(conn)))}),addFileLine(translate(name)),conn.Username&&""!=conn.Username&&addFileLine("username",conn.Username),password&&addFileLine("password",password),conn.WithoutAuth&&addFileLine("wan_ppp_no_auth",translate("yes")),conn.ServiceName&&addFileLine("wan_service_name",conn.ServiceName),wanVID&&addFileLine("VLAN ID",wanVID),macClone&&addFileLine(translate("mac_address"),macClone),conn.Flags&&addFileLine("Ping",translate(conn.Flags.Ping?"yes":"no")),profile.isViewFound(/Config.WAN.IPv4oE.Connection.1./)&&addFileBR()}if(profile.isViewFound(/Config.WAN.PPPoEDual.Connection.1./)){var conn=_native.Config.WAN.PPPoEDual.Connection[1],username=getConnectionUsername(conn),password=getConnectionPassword(conn);result.push({name:"PPPoE Dual Stack",fields:[{name:"username",value:username,hide:!username},{name:"password",value:password,hide:!password},{name:"wan_ppp_no_auth",value:translate("yes"),hide:!conn.WithoutAuth},{name:"wan_service_name",value:conn.ServiceName,hide:!conn.ServiceName},{name:"dcc_ipv6by",value:translate(originToHuman[conn.Origin])},{name:"VLAN ID",value:wanVID,hide:!wanVID},{name:"mac_address",value:macClone,hide:!macClone},{name:"Ping",value:conn.Flags?translate(conn.Flags.Ping?"yes":"no"):"",hide:!conn.Flags}].concat(_toConsumableArray(getDestinationAddress(conn)))}),addFileLine("PPPoE Dual Stack"),conn.Username&&""!=conn.Username&&addFileLine("username",conn.Username),password&&addFileLine("password",password),conn.WithoutAuth&&addFileLine("wan_ppp_no_auth",translate("yes")),conn.ServiceName&&addFileLine("wan_service_name",conn.ServiceName),addFileLine("dcc_ipv6by",translate(originToHuman[conn.Origin])),wanVID&&addFileLine("VLAN ID",wanVID),macClone&&addFileLine(translate("mac_address"),macClone),conn.Flags&&addFileLine("Ping",translate(conn.Flags.Ping?"yes":"no"))}if(profile.isViewFound(/Config.WAN.PPPoEv6.Connection.1./)){var conn=_native.Config.WAN.PPPoEv6.Connection[1],username=getConnectionUsername(conn),password=getConnectionPassword(conn);result.push({name:"IPv6 PPPoE",fields:[{name:"username",value:username,hide:!username},{name:"password",value:password,hide:!password},{name:"wan_ppp_no_auth",value:translate("yes"),hide:!conn.WithoutAuth},{name:"wan_service_name",value:conn.ServiceName,hide:!conn.ServiceName},{name:"dcc_ipv6by",value:translate(originToHuman[conn.Origin])},{name:"VLAN ID",value:wanVID,hide:!wanVID},{name:"mac_address",value:macClone,hide:!macClone},{name:"Ping",value:conn.Flags?translate(conn.Flags.Ping?"yes":"no"):"",hide:!conn.Flags}].concat(_toConsumableArray(getDestinationAddress(conn)))}),addFileLine("IPv6 PPPoE"),conn.Username&&""!=conn.Username&&addFileLine("username",conn.Username),password&&addFileLine("password",password),conn.WithoutAuth&&addFileLine("wan_ppp_no_auth",translate("yes")),conn.ServiceName&&addFileLine("wan_service_name",conn.ServiceName),addFileLine("dcc_ipv6by",translate(originToHuman[conn.Origin])),wanVID&&addFileLine("VLAN ID",wanVID),macClone&&addFileLine(translate("mac_address"),macClone),conn.Flags&&addFileLine("Ping",translate(conn.Flags.Ping?"yes":"no"))}if(profile.isViewFound(/Config.WAN.3G.Connection.1./)){var conn=_native.Config.WAN["3G"].Connection[1],username=getConnectionUsername(conn),password=getConnectionPassword(conn);modemName="wan_modem",result.push({name:modemName,fields:[{name:"username",value:username,hide:!username},{name:"password",value:password,hide:!password},{name:"APN",value:conn.APN},{name:"wan_dial_number",value:conn.DialNumber},{name:"VLAN ID",value:wanVID,hide:!wanVID},{name:"Ping",value:conn.Flags?translate(conn.Flags.Ping?"yes":"no"):"",hide:!conn.Flags}]}),addFileLine("3G"),conn.Username&&""!=conn.Username&&addFileLine("username",conn.Username),password&&addFileLine("password",password),addFileLine("APN",conn.APN),addFileLine("wan_dial_number",conn.DialNumber),wanVID&&addFileLine("VLAN ID",wanVID),conn.Flags&&addFileLine("Ping",translate(conn.Flags.Ping?"yes":"no"))}if(profile.isViewFound(/Config.WAN.LTE.Connection.1./)){var conn=_native.Config.WAN.LTE.Connection[1],username=getConnectionUsername(conn),password=getConnectionPassword(conn),modemName="wan_modem";result.push({name:modemName,fields:[{name:"username",value:username,hide:!username},{name:"password",value:password,hide:!password},{name:"APN",value:conn.APN},{name:"VLAN ID",value:wanVID,hide:!wanVID},{name:"Ping",value:conn.Flags?translate(conn.Flags.Ping?"yes":"no"):"",hide:!conn.Flags}]}),addFileLine("LTE"),conn.Username&&""!=conn.Username&&addFileLine("username",conn.Username),password&&addFileLine("password",password),addFileLine("APN",conn.APN),wanVID&&addFileLine("VLAN ID",wanVID),conn.Flags&&addFileLine("Ping",translate(conn.Flags.Ping?"yes":"no"))}if(profile.isViewFound(/Config.WAN.IPv4oE.Connection.1./)&&!profile.isViewFound(/Config.WAN.IPv6oE.Connection.1./)){var conn=_native.Config.WAN.IPv4oE.Connection[1];isATM="DSL.ATM"==conn.MediaType,isIPoA=isATM&&"IPoA"==conn.Media.DSL.ATM.LinkType,hidePing=profile.isViewFound(/Config.WAN.PPPoE.Connection.1./)||profile.isViewFound(/Config.WAN.PPTP.Connection.1./),"Static"==conn.AddressingType?(fields=[{name:"ip_address",value:conn.StaticIPAddress0},{name:"subnet_mask",value:conn.StaticIPSubnetMask0},{name:"wan_gateway_ip",value:conn.GatewayIPAddress}],fields.push({name:"dcc_dns",value:conn.DNSServer1}),fields=fields.concat([{name:"VLAN ID",value:wanVID,hide:!wanVID},{name:"mac_address",value:macClone,hide:!macClone},{name:"IGMP",value:conn.Flags?translate(conn.Flags.IGMP?"yes":"no"):"",hide:!conn.Flags},{name:"Ping",value:conn.Flags?translate(conn.Flags.Ping?"yes":"no"):"",hide:!conn.Flags||hidePing}]),fields=fields.concat(getDestinationAddress(conn)),result.push({name:isIPoA?"IPoA":"statip",fields:fields}),addFileLine(isIPoA?"IPoA":translate("statip")),addFileLine("ip_address",conn.StaticIPAddress0),addFileLine("subnet_mask",conn.StaticIPSubnetMask0),addFileLine("wan_gateway_ip",conn.GatewayIPAddress),addFileLine("dcc_dns",conn.DNSServer1)):(result.push({name:"dynip",fields:[{name:"VLAN ID",value:wanVID,hide:!wanVID},{name:"mac_address",value:macClone,hide:!macClone},{name:"IGMP",value:conn.Flags?translate(conn.Flags.IGMP?"yes":"no"):"",hide:!conn.Flags},{name:"Ping",value:conn.Flags?translate(conn.Flags.Ping?"yes":"no"):"",hide:!conn.Flags||profile.isViewFound(/Config.WAN.PPPoE.Connection.1./)}].concat(_toConsumableArray(getDestinationAddress(conn)))}),addFileLine(translate("dynip"))),wanVID&&addFileLine("VLAN ID",wanVID),macClone&&addFileLine(translate("mac_address"),macClone),conn.Flags&&(addFileLine("IGMP",translate(conn.Flags.IGMP?"yes":"no")),hidePing||addFileLine("Ping",translate(conn.Flags.Ping?"yes":"no")))}if(profile.isViewFound(/Config.WAN.IPv6oE.Connection.1./)&&!profile.isViewFound(/Config.WAN.IPv4oE.Connection.1./)){var conn=_native.Config.WAN.IPv6oE.Connection[1];if("Static"==conn.Origin)result.push({name:"statipv6",fields:[{name:"ip_address",value:conn.StaticIPAddress0},{name:"prefix",value:conn.Prefix},{name:"wan_gateway_ip",value:conn.GatewayIPAddress},{name:"dcc_dns",value:conn.DNSServer1,hide:!conn.DNSServer1},{name:"VLAN ID",value:wanVID,hide:!wanVID},{name:"Ping",value:conn.Flags?translate(conn.Flags.Ping?"yes":"no"):"",hide:!conn.Flags}].concat(_toConsumableArray(getDestinationAddress(conn)))}),addFileLine(translate("statipv6")),addFileLine("ip_address",conn.StaticIPAddress0),addFileLine("prefix",conn.Prefix),addFileLine("wan_gateway_ip",conn.GatewayIPAddress),conn.DNSServer1&&addFileLine("dcc_dns",conn.DNSServer1);else{var conn=_native.Config.WAN.IPv6oE.Connection[1];origin=translate(originToHuman[conn.Origin]),result.push({name:"dynipv6",fields:[{name:"dcc_ipv6by",value:origin},{name:"VLAN ID",value:wanVID,hide:!wanVID},{name:"mac_address",value:macClone,hide:!macClone},{name:"Ping",value:conn.Flags?translate(conn.Flags.Ping?"yes":"no"):"",hide:!conn.Flags}].concat(_toConsumableArray(getDestinationAddress(conn)))}),addFileLine(translate("dynipv6")),addFileLine("dcc_ipv6by",origin)}wanVID&&addFileLine("VLAN ID",wanVID),macClone&&addFileLine(translate("mac_address"),macClone),conn.Flags&&addFileLine("Ping",translate(conn.Flags.Ping?"yes":"no"))}if(profile.isViewFound(/Config.WAN.IPv4oE.Connection.1./)&&profile.isViewFound(/Config.WAN.IPv6oE.Connection.1./)){var conn=_native.Config.WAN.IPv4oE.Connection[1],isATM="DSL.ATM"==conn.MediaType,isIPoA=isATM&&"IPoA"==conn.Media.DSL.ATM.LinkType;result.push({name:"wan_ipoe_dual",fields:[{name:"VLAN ID",value:wanVID,hide:!wanVID},{name:"mac_address",value:macClone,hide:!macClone},{name:"IGMP",value:conn.Flags?translate(conn.Flags.IGMP?"yes":"no"):"",hide:!conn.Flags},{name:"Ping",value:conn.Flags?translate(conn.Flags.Ping?"yes":"no"):"",hide:!conn.Flags}].concat(_toConsumableArray(getDestinationAddress(conn)))}),addFileLine(translate("wan_ipoe_dual")),wanVID&&addFileLine("VLAN ID",wanVID),macClone&&addFileLine(translate("mac_address"),macClone),conn.Flags&&(addFileLine("IGMP",translate(conn.Flags.IGMP?"yes":"no")),addFileLine("Ping",translate(conn.Flags.Ping?"yes":"no")))}addFileFields(getDestinationAddress(conn)),addFileBR()}if(_native.Config.LAN&&(IPv4=_native.Config.LAN[1].IPv4,IPv4&&IPv4.StaticIP)){StaticIP=IPv4.StaticIP[1];var fields=[];"Dynamic"==IPv4.AddressingMode?fields.push({name:"dynip",value:translate("yes")}):(fields.push({name:"ip_address",value:StaticIP.Address}),fields.push({name:"subnet_mask",value:StaticIP.SubnetMask}),fields.push({name:"lan_gw_ip",value:StaticIP.GatewayAddress})),StaticIP.AddnHostname&&fields.push({name:"hostname",value:StaticIP.AddnHostname}),fields=_.filter(fields,function(e){return!!e.value}),result.push({name:"LAN",fields:fields}),addFileLine("LAN"),addFileFields(fields),addFileBR()}if(isWDS){WDS=_native.Config.WiFi.WDS,isOpen="None"==WDS.EncryptionType;var fields=[{name:"wifi_wds_mode",value:translate("wifi_wds_mode"+WDS.Mode)},{name:"wifi_wds_encrypt",value:isOpen?"Open":WDS.EncryptionType},{name:"wifi_wds_key",value:WDS.EncryptionKey,hide:isOpen}];_.each(WDS.Mac,function(mac,key){fields.push({name:"wifi_wds_mac",value:mac,hide:!mac,position:key})}),result.push({name:"WDS",fields:fields}),addFileLine("WDS"),addFileFields(fields),addFileBR()}if(_native.Config.EtherWAN&&(_.isEmpty(_native.Config.EtherWAN.Port)?addFileLine("dcc_inet_port","Internet"):addFileLine("dcc_inet_port",translate("port")+_native.Config.EtherWAN.Port.replace(/[a-zA-Z]+/,"")),addFileBR()),_native.Config.WiFi&&!isClient&&!isWDSInBridge&&!isEasyMeshAgent){_.each(_native.Config.WiFi.Radio,function(radio){if("2.4GHz"==radio.OperatingFrequencyBand)band=translate("24ghz"),testData=$rootScope.gWifiChangeTest24;else var band=translate("5ghz"),testData=$rootScope.gWifiChangeTest5;var band,testData,security,guestWiFi,ap=radio.AccessPoint[1],wifi={name:"Wi-Fi "+band,fields:[{name:"dcc_smr_enable",value:translate(radio.Enable?"yes":"no")}]};radio.Enable&&$rootScope.rootIsWIFIClient&&!_.isUndefined(testData)&&!_.isEqual(testData,radio)&&(wifi.warn=translate("dcc_smr_wifi_warn")),radio.Enable&&ap&&(security=ap.Security,wifi.fields.push({name:"SSID",value:ap.SSID}),addFileLine("Wi-Fi "+band),addFileLine("dcc_smr_ssid",ap.SSID),"None"==security.ModeEnabled?wifi.fields.push({name:"dcc_smr_encrypt",value:translate("wifi_not_encr")}):(wifi.fields.push({name:"dcc_smr_encrypt",value:security.ModeEnabled}),security.ModeEnabled.indexOf("Personal")&&(wifi.fields.push({name:"password",value:"PROTECTED-ad2f4833"!=security.PreSharedKey?security.PreSharedKey:"*****"}),addFileLine("password","PROTECTED-ad2f4833"!=security.PreSharedKey?security.PreSharedKey:"*****")))),result.push(wifi);var guestAp=radio.AccessPoint[2];if(guestAp){guestWiFi={name:"Wi-Fi "+band+" ("+translate("guest")+")",fields:[{name:"dcc_smr_enable",value:translate(radio.Enable?"yes":"no")}]};var security=guestAp.Security;guestWiFi.fields.push({name:"SSID",value:guestAp.SSID}),addFileLine("dcc_smr_guest_ssid",guestAp.SSID),"None"==security.ModeEnabled?guestWiFi.fields.push({name:"dcc_smr_encrypt",value:translate("wifi_not_encr")}):(guestWiFi.fields.push({name:"dcc_smr_encrypt",value:security.ModeEnabled}),security.ModeEnabled.indexOf("Personal")&&(guestWiFi.fields.push({name:"password",value:"PROTECTED-ad2f4833"!=security.PreSharedKey?security.PreSharedKey:"*****"}),addFileLine("dcc_smr_guest_pass","PROTECTED-ad2f4833"!=security.PreSharedKey?security.PreSharedKey:"*****"))),guestAp.BandwidthRestricted&&(guestWiFi.fields.push({name:"wifi_client_shaping_nav",value:guestAp.BandwidthRestricted+" "+translate("units_mbps")}),addFileLine("wifi_client_shaping_nav",guestAp.BandwidthRestricted)),guestAp.MaxAssociatedDevices&&(guestWiFi.fields.push({name:"wifi_max_clients",value:guestAp.MaxAssociatedDevices}),addFileLine("wifi_max_clients",guestAp.MaxAssociatedDevices)),result.push(guestWiFi)}addFileBR()});var password}if(_native.Config.VLAN&&$scope.showPortPanel()||$scope.nativeData.Config.GroupingInterfaces){var service=_native.Config.VLAN&&_native.Config.VLAN.services;$scope.nativeData.Config.GroupingInterfaces&&!service&&(service={},_.each($scope.services,function(elem){service[elem.service]={},service[elem.service].vid=elem.vid})),fields=[],addFileLine("dcc_smr_services"),sorted=_.sortBy($scope.services,function(s){return s.name}),_.each(sorted,function(port){var portInfo,alias,service;port.service&&(portInfo=_.findWhere($scope.rootAvailPorts,{name:port.name}),alias=portInfo&&portInfo.alias||port.name,service=seviceToHuman(port.service),fields.push({name:alias,value:service}),addFileLine(alias,service))}),_.has(service,"iptv")&&service.iptv.vid&&(fields.push({name:seviceToHuman("iptv")+" VLAN ID",value:service.iptv.vid}),addFileLine(seviceToHuman("iptv")+" VLAN ID",service.iptv.vid)),_.has(service,"voip")&&service.voip.vid&&(fields.push({name:seviceToHuman("voip")+" VLAN ID",value:service.voip.vid}),addFileLine(seviceToHuman("voip")+" VLAN ID",service.voip.vid)),_.has(service,"iptv_voip")&&service.iptv_voip.vid&&(fields.push({name:seviceToHuman("iptv_voip")+" VLAN ID",value:service.iptv_voip.vid}),addFileLine(seviceToHuman("iptv_voip")+" VLAN ID",service.iptv_voip.vid)),result.push({name:"dcc_smr_services",fields:fields}),addFileBR()}return deviceSection.fields=[{name:"summary_model",value:info.modelName}],deviceSection.fields.push({name:"dcc_smr_software_version",value:info.version}),deviceSection.fields.push({name:"dcc_smr_serial",value:info.serialNumber,hide:!info.serialNumber}),isApMode||deviceSection.fields.push(profile.containLAN()?{name:"IP",value:_native.Config.LAN[1].IPv4.StaticIP[1].Address}:{name:"IP",value:_.first(info.lan).ip}),manualProfile&&manualProfile.$InterfaceStep.WiFiMode&&(deviceSection.fields.push({name:"mode",value:translate(modes[manualProfile.$InterfaceStep.WiFiMode])}),addFileLine("mode",translate(modes[manualProfile.$InterfaceStep.WiFiMode]))),(isClient||isRepeater||isWISPRepeater)&&(deviceSection.fields.push({name:"dcc_smr_client",value:manualProfile.$WifiClientStep.SSID}),addFileLine("dcc_smr_client",manualProfile.$WifiClientStep.SSID)),result.push(deviceSection),profile.containLAN()&&(result.push({name:"LAN",fields:[{name:"ip_address",value:_native.Config.LAN[1].IPv4.StaticIP[1].Address},{name:"subnet_mask",value:_native.Config.LAN[1].IPv4.StaticIP[1].SubnetMask}]}),addFileLine("LAN"),addFileLine("ip_address",_native.Config.LAN[1].IPv4.StaticIP[1].Address),addFileLine("subnet_mask",_native.Config.LAN[1].IPv4.StaticIP[1].SubnetMask),addFileBR()),_native.Config.SystemPassword&&_.size(_native.Config.SystemPassword.Password)&&result.push({name:"dcc_smr_syspass",fields:[{name:"username",value:_native.Config.SystemPassword.Login},{name:"password",value:_native.Config.SystemPassword.Password,hidden:!0}]}),_native.Config.SystemTime&&(_native.Config.SystemTime.TimeZone||_native.Config.SystemTime.LocalTimeZone)&&(timeZone=_native.Config.SystemTime.LocalTimeZone,result.push({name:translate("dcc_timezone")+": "+timeZone,fields:[]})),result},$scope.services=function(config){var services;return config.VLAN?config.VLAN.groups.all:config.GroupingInterfaces?(services=[],_.each(config.GroupingInterfaces,function(group){var name=group.create.name;_.each(group.create.lans,function(port){services.push({name:port,service:name.toLowerCase(),vid:group.create.vid})})}),services):void 0}($scope.nativeData.Config),$scope.apply=function(){if(!$scope.applying){$scope.applying=!0;var _native2=$scope.nativeData;return _native2.Config.rootIsWIFIClient=$rootScope.rootIsWIFIClient?1:0,isApMode&&!confirm(translate("dcc_ap_will_lost"))?void($scope.applying=!1):void function(){function applyError(){stepManager.action("apply",{error:!0}),$scope.showOverlay(!1)}function getDuration(res){return 200==res.status&&res.data.result?res.data.result.duration:null}$scope.showOverlay(!0),_native2.Config.VoIP&&_native2.Config.VoIP.__Skip&&delete _native2.Config.VoIP,profiles.apply(_native2).then(function(res){getDuration(res)?($rootScope.gApplyDuration=getDuration(res),$timeout(function(){stepManager.action("apply"),$scope.showOverlay(!1)},5e3),$rootScope.dlinkMobileApp.isUserInMobileApp()&&$rootScope.dlinkMobileApp.wizardCompleted&&$rootScope.dlinkMobileApp.wizardCompleted(_native2)):applyError()})["catch"](applyError)}()}},$scope.customPrevStep=function(){dataShare.isSet("ManualProfile")?stepManager.action("prev",{fromManual:!0}):$stateParams.prev?$state.go($stateParams.prev):stepManager.action("prev",{})},$scope.summary=[],devinfo.onceAndSubscribe("version|net",onData)}]);