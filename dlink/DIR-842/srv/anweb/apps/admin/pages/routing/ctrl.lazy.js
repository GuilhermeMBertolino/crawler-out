"use strict";function ctrlFn($scope,util,ngDialog,funcs,$state,snackbars,translate,navShared){function init(overlayId){function success(){routing.config=util.getConfig(),__backupHwIpv6Route=angular.copy(routing.config.hwIPv6Route)}function error(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})}function finallyCb(){overlayId&&overlay.stop(overlayId),$scope.$emit("pageload"),routing.isActivate=!0}util.pull().then(success)["catch"](error)["finally"](finallyCb)}function applyRule(rule,id){function success(){snackbars.add("msg_apply_success"),init(overlayId)}function error(){overlay.stop(overlayId),$state.go("error",{code:"msg_push_error",message:"msg_error_desc"})}var overlayId=overlay.start();util.applyRule(rule,id).then(success)["catch"](error)}function isEnabled(item){return item.Enable&&item.Available?!0:!1}function openDialog(item,id,isNew){ngDialog.open({template:"/admin/dialogs/routing_form/dialog.tpl.html",className:"ddns_dialog",controller:"RoutingDialogCtrl",resolve:funcs.getLazyResolve("/admin/dialogs/routing_form/ctrl.lazy.js","RoutingDialogCtrl"),data:{config:routing.config,id:id,isNew:isNew},scope:$scope}).closePromise.then(function(data){data.value&&_.isObject(data.value)&&applyRule(data.value,isNew?null:item.__id)})}$scope.routing={config:null,isActivate:!1,add:function(){openDialog(null,null,!0)},edit:function(item,key){openDialog(item,key,!1)},remove:function(items,keys){function success(){snackbars.add("msg_rpc_remove_success"),init(overlayId)}function error(){overlay.stop(overlayId),$state.go("error",{code:"msg_remove_error",message:"msg_rpc_remove_error"})}var overlayId=overlay.start();util.removeRules(items).then(success)["catch"](error)},applyHwRoute:function(){function success(){snackbars.add("msg_apply_success"),init(overlayId)}function error(){overlay.stop(overlayId),$state.go("error",{code:"msg_push_error",message:"msg_error_desc"})}var overlayId=overlay.start();util.applyHwRoute(routing.config.hwIPv6Route).then(success)["catch"](error)},hwIPv6WasModifed:function(){return __backupHwIpv6Route&&!funcs.deepEqual(__backupHwIpv6Route,routing.config.hwIPv6Route)},isEmptyRules:function(){return routing.config&&0==routing.config.Routes.length},getIpAddrWithMask:function(item){return"IPv6"==item.IPVersion?item.IPAddress:item.IPAddress+"/"+funcs.ipv4.mask["short"](item.SubnetMask)},getMiniInfo:function(item){var info=[];return info.push(item.GatewayAddress?item.GatewayAddress+", ":item.IfaceName+", "),item.Metric&&info.push(translate("metric")+" "+item.Metric+", "),info.push(isEnabled(item)?translate("st_enabled"):translate("st_disabled")),info.join("")},getGateway:function(item){return item.GatewayAddress?item.GatewayAddress:"-"},getStatus:function(item){return item.Enable?item.Available?"on":"off":"disconnected"},getTableName:function(item){var tables=routing.config.TableList[item.IPVersion],table=_.find(tables,function(t){return t.Link==item.Table});return table?table.Name:"-"},getPageTitle:function(){var key=navShared.isRoutingSectionNeeded?"routing_static_nav":"routing_nav";return translate(key)}};var routing=$scope.routing,overlay=$scope.overlay.circular,__backupHwIpv6Route=null;init(),$scope.getIfaceKey=function(name){return"routing_auto_iface"==name?translate("auto"):name}}angular.module("app").controllerProvider.register("RoutingCtrl",["$scope","routingUtil","ngDialog","funcs","$state","snackbars","translate","navShared",ctrlFn]);