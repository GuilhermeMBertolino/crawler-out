"use strict";!function(){angular.module("app").directive("topologyNode",["funcs","RecursionHelper",function(funcs,RecursionHelper){return{restrict:"E",require:"^^topology",scope:{topologyRoot:"=",topologyRootKey:"=",topologyData:"=",topologyOnClientClick:"=",topologyOnNodeClick:"="},template:'<div>\n                <div class="caption" ng-class="{ \'childs\': hasChilds() }" ng-click="topologyOnNodeClick(topologyRootKey)">\n                    <svg svg-icon="features"></svg> <span class="topology-title">{{ topologyRoot.Name ? topologyRoot.Name : topologyRoot.MACAddress }}</span>\n                </div>\n                <div class="stations" ng-repeat="(key, item) in getStations()" ng-click="topologyOnClientClick(item, topologyRootKey, key)">\n                    <svg svg-icon="human"></svg> <span class="topology-title">{{ item.Hostname ? ((item.Hostname | punycode) + \' (\' + item.MACAddress + \')\') : item.MACAddress }}</span>\n                </div>\n                <div class="topology-node" ng-repeat="(key, item) in getChilds()">\n                    <topology-node topology-root="getNode(item)" topology-root-key="item.Key" topology-data="topologyData" topology-on-client-click="topologyOnClientClick" topology-on-node-click="topologyOnNodeClick"></topology-node>\n                </div>\n            </div>',compile:function(element){return RecursionHelper.compile(element,function($scope){$scope.getStations=function(){return funcs.newConfig.normalize($scope.topologyRoot.StationInfo)},$scope.getChilds=function(){var childDevices=funcs.newConfig.normalize($scope.topologyRoot.ChildDevices);for(var key in childDevices){var linkArr=childDevices[key].Link.split(".");childDevices[key].Key=linkArr&&linkArr[linkArr.length-2]}return childDevices},$scope.getNode=function(item){return funcs.fetchBranch($scope.topologyData,item.Link)},$scope.hasChilds=function(){return $scope.topologyRoot.ChildDevices.max_instance>0}})}}}]).directive("topology",["funcs",function(funcs){return{restrict:"AE",scope:{topology:"=",topologyOnClientClick:"&",topologyOnNodeClick:"&"},template:'<topology-node class="topology" topology-root="rootNode()" topology-root-key="rootNodeKey()" topology-data="topology" topology-on-client-click="topologyOnClientClick()" topology-on-node-click="topologyOnNodeClick()"></div>',link:function($scope){function getItems(){return funcs.fetchBranch($scope.topology,"Device.Statistics.EasyMesh.Topology.")}$scope.rootNode=function(){var items=getItems();return items[items.max_instance]},$scope.rootNodeKey=function(){var items=getItems();return items.max_instance}},controller:function($scope){$scope.showDeviceInfo=function(item){$scope.topologyOnClientClick({item:item})}}}}])}();