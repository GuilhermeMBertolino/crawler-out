"use strict";!function(){angular.module("app").controllerProvider.register("wifiEasymeshCtrl",["$scope","$state","$timeout","funcs","ngDialog","wifiEasyMeshUtil","translate","cookie",function($scope,$state,$timeout,funcs,ngDialog,util,translate,cookie){function activate(overlayId){function success(){if(easymesh.data=util.getData(),updateDeviceState(easymesh.data.mesh),getWifiWarn(easymesh.data),""==easymesh.data.info.DeviceName){var last4DigitsOfMac=easymesh.data.info.FactoryMACAddress.replace(/:/g,"").slice(-4).toUpperCase();return util.setDeviceName("".concat("router"==easymesh.mode?"Controller":"Agent","-").concat(last4DigitsOfMac)).then(activate)}easymesh.isActivate=!0,util.subscribe(function(topology){easymesh.topology=topology,addClientsInfo(easymesh.topology),updateDeviceState(funcs.fetchBranch(topology,"Device.Services.EasyMesh."))},$scope),$scope.$emit("pageload")}function error(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})}function finallyCb(){overlayId&&overlay.stop(overlayId)}util.pull().then(success)["catch"](error)["finally"](finallyCb)}function addClientsInfo(){var pathTopology="Device.Statistics.EasyMesh.Topology.",pathNeighbours="Device.Statistics.Neighbours.",objTopology=funcs.newConfig.normalize(funcs.fetchBranch(easymesh.topology,pathTopology)),objNeighbours=funcs.newConfig.normalize(funcs.fetchBranch(easymesh.topology,pathNeighbours));_.each(objTopology,function(elem){var stationInfo=funcs.newConfig.normalize(elem.StationInfo);_.each(stationInfo,function(client){var neighbour=_.find(objNeighbours,function(item){return client.MACAddress.toUpperCase()==item.MACAddress.toUpperCase()});neighbour&&(client.Hostname=neighbour.Hostname)})})}function updateDeviceState(status){status&&"Enabled"==status.Status?"ConnectionReady"==status.DeviceState?(easymesh.status.status="on",easymesh.status.text="st_enabled"):(easymesh.status.status="pending",easymesh.status.text="st_waiting"):(easymesh.status.status="disconnected",easymesh.status.text="st_disabled")}function getWifiWarn(data){var wifiApNav=$scope.pageDetails.wifiAP[1],href24=wifiApNav.url.split("?")[0]+"?freq=2.4GHz&inx=1",name24=translate("wifi_easymesh_wpa2psk_warn_part2_24"),href5=wifiApNav.url.split("?")[0]+"?freq=5GHz&inx=1",name5=translate("wifi_easymesh_wpa2psk_warn_part2_5");$scope.wpa2pskWarn24=translate("wifi_easymesh_wpa2psk_warn_part1",{link:"<a href='"+href24+"'>"+name24+".</a>",trustAsHtml:!0}),$scope.wpa2pskWarn5=translate("wifi_easymesh_wpa2psk_warn_part1",{link:"<a href='"+href5+"'>"+name5+".</a>",trustAsHtml:!0})}var overlay=$scope.overlay.circular,easymesh={mode:cookie.get("device_mode"),data:null,status:{},topology:null,isActivate:!1,apply:function(){if(!$scope.form.$invalid){var overlayId=overlay.start();util.push().then(function(needReload){needReload?window.location.reload():activate(overlayId)})["catch"](function(){overlay.stop(overlayId),$state.go("error",{code:"msg_push_error",message:"msg_error_desc"})})}},connect:function(){if(!easymesh.wasModified()||confirm(translate("wifi_easymesh_alert_cfg"))){var overlayId=overlay.start();util.connect()["finally"](function(){overlay.stop(overlayId)})}},reconfigure:function(){confirm(translate("wifi_easymesh_alert_dcc"))&&(document.location="/wizard/index-wizard.html")},topologyOnClientClick:function(item,nodeKey,staKey){function getClientInfo(){var obj=funcs.fetchBranch(easymesh.topology,path),objNeighbours=funcs.fetchBranch(easymesh.topology,"Device.Statistics.Neighbours.");return _.each(objNeighbours,function(elem){obj&&obj.MACAddress&&elem.MACAddress&&elem.MACAddress.toUpperCase()==obj.MACAddress.toUpperCase()&&(funcs.is.ipv4(elem.IPAddress)&&(obj.IPv4=elem.IPAddress),funcs.is.ipv6(elem.IPAddress)&&(obj.IPv6=elem.IPAddress),obj.Hostname=elem.Hostname)}),obj&&obj.MACAddress==item.MACAddress&&(item=obj),item}var path="Device.Statistics.EasyMesh.Topology.".concat(nodeKey,".StationInfo.").concat(staKey,".");ngDialog.open({template:"/admin/dialogs/easymesh_device/dialog.tpl.html",controller:"EasyMeshDeviceCtrl",resolve:funcs.getLazyResolve("/admin/dialogs/easymesh_device/ctrl.lazy.js","EasyMeshDeviceCtrl"),data:{getClientInfo:getClientInfo}})},topologyOnNodeClick:function(key){$state.go("^.info",{key:key})},isTopologyAvail:function(){var stats=util.getStatData();return stats&&stats.Device.Statistics.EasyMesh.Topology.max_instance},isConnectionReady:function(){var stats=util.getStatData();return stats&&"ConnectionReady"==stats.Device.Services.EasyMesh.DeviceState},getBackhaulOptions:function(){var optionsName={"2G":"wifi_easymesh_backhaul_24ghz","5G":"wifi_easymesh_backhaul_5ghz"};return util.getOptions("Backhaul").map(function(o){return{Name:optionsName[o],Value:o}})},onEnable:function(enable){var backup=util.getBackup();enable&&!backup.mesh.Enable&&util.wasMultiAP().then(function(needMuliAPWarn){var needShapingWarn=util.wasShapingRule(),needMacWarn=util.wasMacRule(),alertMess="";console.log("needMuliAPWarn",needMuliAPWarn),console.log("needShapingWarn",needShapingWarn),console.log("needMacWarn",needMacWarn),(needMuliAPWarn||needShapingWarn||needMacWarn)&&(alertMess=translate("wifi_easymesh_alert_del_part1")+" ",needMuliAPWarn&&(alertMess+=translate("wifi_easymesh_alert_del_ap"),(needShapingWarn||needMacWarn)&&(alertMess+=", ")),needShapingWarn&&(alertMess+=translate("wifi_easymesh_alert_del_shaping"),needMacWarn&&(alertMess+=", ")),needMacWarn&&(alertMess+=translate("wifi_easymesh_alert_del_mac")),alertMess=alertMess+" "+translate("wifi_easymesh_alert_del_part2")),""!=alertMess&&alert(alertMess)})},wasModified:util.wasModified,needDisabled:function(){return!$scope.easymesh.wasModified()||$scope.easymesh.data.wifiAuthInfo.needShow24GhzWpa2pskWarn||$scope.easymesh.data.wifiAuthInfo.needShow5GhzWpa2pskWarn},getDeviceModes:function(){return util.getDeviceModes()}};$scope.easymesh=easymesh,activate()}])}();