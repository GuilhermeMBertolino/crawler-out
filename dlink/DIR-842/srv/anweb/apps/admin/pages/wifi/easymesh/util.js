"use strict";!function(){angular.module("app").service("wifiEasyMeshUtil",["funcs","cpe","devinfo","translate",function(funcs,cpe,devinfo){function getData(){return{mesh:funcs.fetchBranch(config,paths.mesh),info:funcs.fetchBranch(config,paths.info),wifi:funcs.fetchBranch(config,paths.info),roamd:funcs.fetchBranch(config,paths.roamd),wifiAuthInfo:getWifiAuthInfo(config)}}function getStatData(){return stats}function wasModified(){return!angular.equals(config,backup)}function wasPulled(){return!!config}function getWifiAuthInfo(config){var result={},radio=_.omit(funcs.fetchBranch(config,paths.radio),"max_instance");return _.each(radio,function(elem){var apPath=elem.AccessPoint[1].Profile,ap=funcs.fetchBranch(config,apPath);"2.4GHz"==elem.SupportedFrequencyBands&&"WPA2PSK"!=ap.Security.ModeEnabled&&(result.needShow24GhzWpa2pskWarn=!0),"5GHz"==elem.SupportedFrequencyBands&&"WPA2PSK"!=ap.Security.ModeEnabled&&(result.needShow5GhzWpa2pskWarn=!0)}),result}function changeWifiSettings(config){var radio=_.omit(funcs.fetchBranch(config,paths.radio),"max_instance");return _.each(radio,function(elem,inx){var mainApPath=elem.AccessPoint[1].Profile,mainAp=funcs.fetchBranch(config,mainApPath),advPath=paths.radio+inx+".Advanced.",adv=funcs.fetchBranch(config,advPath);mainAp.MaxAssociatedDevices=0,mainAp.SSIDAdvertisementEnabled=!0,mainAp.IsolationEnable=!1,mainAp.BandwidthRestrict=0,void 0!=adv.DropMulticast&&(adv.DropMulticast=!1);var accessPoint=_.omit(elem.AccessPoint,"max_instance");_.each(accessPoint,function(item){var apPath=item.Profile,ap=funcs.fetchBranch(config,apPath);ap.StationBandwidth&&_.each(ap.StationBandwidth,function(elem,inx){delete ap.StationBandwidth[inx]}),ap.MACFilter&&(_.each(ap.MACFilter,function(elem,inx){delete ap.MACFilter[inx]}),ap.AccessPolicy="Disable")})}),config}var config=null,backup=null,attrs=null,stats=null,paths={mesh:"Device.Services.EasyMesh.",info:"Device.DeviceInfo.",stat:"Device.Statistics.EasyMesh.Topology.",statNeighbours:"Device.Statistics.Neighbours.",devStat:"Device.Services.EasyMesh.DeviceState",meshStat:"Device.Services.EasyMesh.Status",radio:"Device.WiFi.Radio.",ap:"Device.WiFi.APProfile.",radio1ap:"Device.WiFi.Radio.1.AccessPoint.",radio2ap:"Device.WiFi.Radio.2.AccessPoint.",roamd:"Device.Services.Roamd.",deviceModes:"Device.DeviceInfo.DeviceMode."};return{pull:function(){function success(response){return config=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),backup=funcs.deepClone(config),Promise.resolve()}function error(){return Promise.reject()}var _paths=[paths.info,paths.mesh,paths.radio,paths.ap,paths.deviceModes];return _paths.push(paths.roamd),Promise.all([cpe.GetParameterValues(_paths),cpe.GetParameterAttributes(_paths)]).then(success,error)},push:function(){function success(response){return Promise.resolve(needReload)}function error(){return Promise.reject()}var mesh=funcs.fetchBranch(config,paths.mesh);mesh&&mesh.Enable&&(config=changeWifiSettings(config));var diff=funcs.newConfig.makeDiff(backup,config,attrs);if(_.isEmpty(diff))return Promise.resolve();var enable=funcs.fetchBranch(diff,"".concat(paths.mesh,"Enable")),needReload=null!==enable&&void 0!==enable;return cpe.ApplyDifference(diff).then(success,error)},connect:function(){return cpe.SetParameterValues([{Name:"Device.Services.EasyMesh.ConnectPBC",Value:!0}])},getData:getData,getBackup:function(){return{mesh:funcs.fetchBranch(backup,paths.mesh),info:funcs.fetchBranch(backup,paths.info)}},getStatData:getStatData,subscribe:function(cb,$scope){function prepareData(response){response&&(stats=funcs.deepExtend(response[paths.stat],response[paths.devStat],response[paths.meshStat],response[paths.statNeighbours]),cb&&cb(stats))}devinfo.onceAndSubscribe("".concat(paths.stat,"|").concat(paths.devStat,"|").concat(paths.meshStat,"|").concat(paths.statNeighbours),prepareData,$scope)},wasModified:wasModified,wasPulled:wasPulled,wasMultiAP:function(){function success(response){var config=funcs.buildTree(response.result.ParameterList),radio1ap=funcs.fetchBranch(config,paths.radio1ap),radio2ap=funcs.fetchBranch(config,paths.radio2ap);return radio1ap&&_.size(funcs.newConfig.normalize(radio1ap))>1||radio2ap&&_.size(funcs.newConfig.normalize(radio2ap))>1}var _paths=[paths.radio1ap];return _paths.push(paths.radio2ap),cpe.GetParameterValues(_paths).then(success)},wasShapingRule:function(){var radio=_.omit(funcs.fetchBranch(config,paths.radio),"max_instance"),needWarn=!1;return _.each(radio,function(elem,inx){if(!needWarn){var accessPoint=_.omit(elem.AccessPoint,"max_instance");_.each(accessPoint,function(item){var apPath=item.Profile,ap=funcs.fetchBranch(config,apPath);if(ap.StationBandwidth){var stBw=_.omit(ap.StationBandwidth,"max_instance");_.size(stBw)>0&&(needWarn=!0)}})}}),needWarn},wasMacRule:function(){var radio=_.omit(funcs.fetchBranch(config,paths.radio),"max_instance"),needWarn=!1;return _.each(radio,function(elem,inx){if(!needWarn){var accessPoint=_.omit(elem.AccessPoint,"max_instance");_.each(accessPoint,function(item){var apPath=item.Profile,ap=funcs.fetchBranch(config,apPath);if(ap.MACFilter){var macFlt=_.omit(ap.MACFilter,"max_instance");_.size(macFlt)>0&&(needWarn=!0)}})}}),needWarn},getOptions:function(param){return funcs.fetchBranch(attrs,"".concat(paths.mesh).concat(param,".enum."))||[]},getDeviceModes:function(){return funcs.fetchBranch(attrs,paths.deviceModes)["enum"]},setDeviceName:function(newName){return cpe.SetParameterValues([{Name:"Device.DeviceInfo.DeviceName",Value:newName}])}}}])}();