"use strict";angular.module("app").controllerProvider.register("portStatsCtrl",["$scope","statsPortsUtil","$state","translate",function($scope,util,$state,translate){function onInfoLoaded(data){$scope.portStats=data&&data.ports||[],$scope.preload=data.preload,$scope.$emit("pageload")}$scope.units=autoconf.BR2_PACKAGE_ANWEB_SWITCH?"B":"MB";var currentState=$state.current.name.split(".");currentState.pop(),currentState=currentState.join("."),util.preload().then(function(){util.subscribeInfo(onInfoLoaded,$scope)}),$scope.showDetails=function(port){console.log(currentState+".portDetails"),$state.go(currentState+".portDetails",{portAlias:encodeURIComponent(port.alias)})},$scope.format=function(value){return"MB"==$scope.units?Math.floor(value/1048576):value},$scope.checkBytes=function(item){return $scope.format(item.BytesSent)||$scope.format(item.BytesReceived)?$scope.format(item.BytesSent)+" / "+$scope.format(item.BytesReceived)+" "+translate("units_"+$scope.units):Number(item.PacketsReceived)||Number(item.PacketsSent)?item.PacketsSent+" / "+item.PacketsReceived:void 0},$scope.hasParam=function(param){return _.every($scope.portStats,function(elem){return _.has(elem,param)})},$scope.getStatus=function(port){if(_.isUndefined(port.status))return"-";var status=translate(port.status?"stats_ports_connected":"stats_ports_disconnected");return status},$scope.getMDIX=function(port){return"Unsupported"==port.MDIX?translate("stats_ports_unsupported"):port.MDIX},$scope.getAutonegotiation=function(port){var autonegotiation=translate(port.Autonegotiation?"st_enabled":"st_disabled");return port.Autonegotiation&&port.IsPreferenceModeEnabled&&("Master"==port.PreferenceMode||"Slave"==port.PreferenceMode)&&(autonegotiation+=" ("+port.PreferenceMode+")"),autonegotiation}}]);