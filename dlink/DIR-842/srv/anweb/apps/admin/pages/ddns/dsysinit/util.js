"use strict";!function(){angular.module("app").service("ddnsUtil",["funcs","device","cpe","cookie",function(funcs,device,cpe,cookie){function makeHelper(){return new device.ddns.Helper(config)}function getIfacesForSelect(){return ifaceHelper.getIfacesForSelect(["v4","v6"])}var attrs,config={},converter=device.ddns.converter,ifaceHelper=null,isFirewallMode=autoconf.BR2_PACKAGE_ANWEB_FIREWALL_SHOREWALL&&"Firewall"==cookie.get("device_mode"),__initConfig=null,paths={ddns:"Device.Services.DDNS.",anweb:"Device.Services.Anweb.",iface:"Device.Network.Interface.",conn:"Device.Network.Connection.",usbConn:"Device.USB.Connection.",wanGroup:"Device.Network.Group.",deviceInfo:"Device.DeviceInfo.",pppClientSettings:"Device.Network.Settings.PPPClient."},requestPaths=[paths.ddns,paths.anweb,paths.iface,paths.conn,paths.wanGroup,paths.deviceInfo,paths.pppClientSettings];return{pull:function(){function success(response){var data=funcs.buildTree(response[0].result.ParameterList);return data.custom=getCustomProviders(),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),__initConfig=funcs.deepClone(data),isFirewallMode&&(ifaceHelper=new device["interface"](__initConfig)),config=converter.dsysinitToNative(data),Promise.resolve()}function error(){return Promise.reject()}function getCustomProviders(){var result=[];return result}return Promise.all([cpe.GetParameterValues(requestPaths),cpe.GetParameterAttributes([paths.ddns])]).then(success,error)},apply:function(settings,index){function getPath(data){var path=paths.ddns+"Instances."+(_.isUndefined(data.Instance)?"+1":data.Instance);return path}var data=converter.nativeToDsysinit(settings),initRule=funcs.fetchBranch(__initConfig,getPath(settings)+".");initRule=initRule?funcs.setValue(getPath(settings),initRule,{}):{};var diff=funcs.newConfig.makeDiff(initRule,data,attrs);return _.isEmpty(diff)?Promise.resolve():cpe.ApplyDifference(diff)},makeHelper:makeHelper,remove:function(items,keys){var indexes=_.pluck(items,"Instance"),removeDiff={};return _.each(indexes,function(index){removeDiff[index]={Enable:!1},removeDiff["-"+index]={}}),removeDiff=funcs.setValue(paths.ddns+"Instances",removeDiff,{}),cpe.ApplyDifference(removeDiff)},wasActivate:function(){return!1},getIfacesForSelect:getIfacesForSelect,getIfaceHelper:function(){return ifaceHelper},isFirewallMode:isFirewallMode}}])}();