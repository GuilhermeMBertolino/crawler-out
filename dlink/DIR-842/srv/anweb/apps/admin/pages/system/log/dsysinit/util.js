"use strict";!function(){angular.module("app").service("sysLogUtil",["funcs","device","cpe","devinfo",function(funcs,device,cpe,devinfo){function getLevels(){return attrsNative.Levels}function getDestinationList(){return attrsNative.Destination}function getSettings(){return config||{}}var config=null,backup=null,attrs=null,attrsNative=null,constants={syslog:"Device.Services.Syslog.",usb_info:"Device.USB.Storage."},converterSyslog=device.systemLog.converterSyslog,converterUsb=device.systemLog.converterUsbInfo;return{pullSettings:function(){function success(response){var data=funcs.buildTree(response[0].result.ParameterList);return attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),backup=funcs.deepClone(data),config=converterSyslog.dsysinitToNative(data,autoconf.BR2_PACKAGE_ANWEB_STORAGE),attrsNative=converterSyslog.attrsToNative(attrs),config.Log2USB?cpe.FileBrowser("/mnt/"+config.Log2USB.Directory)["catch"](function(){return config.Log2USB.InvalidPath=!0,Promise.resolve()}):void 0}return Promise.all([cpe.GetParameterValues([constants.syslog]),cpe.GetParameterAttributes([constants.syslog])]).then(success)},apply:function(config){var config=converterSyslog.nativeToDsysinit(config),diff=funcs.newConfig.makeDiff(backup,config,attrs),split=funcs.newConfig.splitDiff(diff);return _.isEmpty(split[1])?Promise.resolve():cpe.ApplyDifference(split[1])},updateUsbStorage:function(subscribeFunc,$scope){function initCallback(res){prepareData(res),devinfo.subscribe(constants.usb_info,prepareData,$scope),$scope.$emit("pageload")}function prepareData(res){if(res&&res[constants.usb_info]){var data=converterUsb.dsysinitToNative(res[constants.usb_info]);subscribeFunc(data)}}devinfo.once(constants.usb_info).then(initCallback)},unmountUsb:function(device){var path=constants.usb_info+device.__id+".Umount";return cpe.Execute(path,void 0)},updateLog:function(){return cpe.Upload("Log").then(function(res){var log=funcs.fetchBranch(res,"result.Result."),output=log&&log.length?log.join("\n"):"";return Promise.resolve(output)})},needExt:function(){return!0},getLevels:getLevels,getDestinationList:getDestinationList,getSettings:getSettings}}])}();