"use strict";!function(){angular.module("app").controllerProvider.register("SysAutoProvCtrl",["$scope","$state","autoProvUtil","funcs","devinfo",function($scope,$state,util,funcs){function activate(){function success(){autoprov.data=util.getConfig(),autoprov.dataStatus={},autoprov.dataStatus.ProvisionStatus=util.getConfig().ProvisionStatus,__backupData=funcs.deepClone(autoprov.data),autoprov.isActivate=!0,$scope.$emit("pageload")}function error(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})}util.pull().then(success)["catch"](error)["finally"](stopOverlay)}function stopOverlay(){overlayId&&($scope.overlay.circular.stop(overlayId),overlayId=null)}function updateStatus(){function success(){var statusData=util.getStatus();autoprov.data.ProvisionStatus=statusData.ProvisionStatus,stopOverlay()}util.updateStatus().then(success)}$scope.autoprov={isActivate:!1,data:null,apply:function(){function error(response){stopOverlay(),$state.go("error",{code:"msg_push_error",message:"msg_error_desc"})}$scope.form.$invalid||(overlayId=$scope.overlay.circular.start(),util.apply(autoprov.data).then(activate)["catch"](error))},getProtocolTypeList:function(){return[{name:"TFTP",value:"tftp"},{name:"HTTP",value:"http"}]},checkStatus:function(){overlayId=$scope.overlay.circular.start(),util.checkStatus().then(updateStatus)},getProvStatus:function(status){return"autoprov_"+status.toLowerCase()},wasModified:function(){return __backupData&&!_.isEqual(_.omit(__backupData,"ProvisionStatus"),_.omit(autoprov.data,"ProvisionStatus"))},checkServer:function(server){if(funcs.is.ipv4(server)){var arr=server.split(".");return arr[3]&&"0"==arr[3]?"msg_invalid_ip":null}return null}};var autoprov=$scope.autoprov,__backupData=null,overlayId=null;activate()}])}();