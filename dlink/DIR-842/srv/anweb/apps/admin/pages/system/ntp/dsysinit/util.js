"use strict";!function(){angular.module("app").service("systemNtpUtil",["cpe","devinfo","device","funcs",function(cpe,devinfo,device,funcs){function makeHelper(){return new device.systemTime.Helper(config,attrs)}function getTimezonesList(){return timezonesList}function prepareZonesList(data){return _.map(data,function(zone,index){return{index:index,name:zone.TimeZone,offset:zone.Offset}})}var timezonesList,config=null,attrs=null,__initConfig=null,paths=device.systemTime.constants.paths;return{pull:function(){function success(response){return config=response[0].result.Config,attrs=response[1].result.Datamodel,timezonesList=prepareZonesList(funcs.buildTree(response[2].result.ParameterList).Zones),__initConfig=funcs.deepClone(config),Promise.resolve()}var pathsList=[paths.time,paths.ntp];return Promise.all([cpe.GetConfig(pathsList,!0),cpe.GetDatamodel(pathsList,!0),cpe.Execute("View.TimeZoneList.",void 0)]).then(success)},apply:function(config){var diff=funcs.newConfig.makeDiff(__initConfig,config,attrs);return _.isEmpty(diff)?Promise.resolve():cpe.ApplyDifference(diff)},subscribeTime:function(cb,$scope){devinfo.subscribe(paths.time,function(response){if(response&&response[paths.time]){var time=funcs.fetchBranch(response[paths.time],paths.time);cb&&cb(time)}},$scope)},makeHelper:makeHelper,getTimezonesList:getTimezonesList,prepareZonesList:prepareZonesList,proceedListForSelect:function(list){var tmp=_.map(list,function(e){return{value:e.name,title:e.name}});return _.sortBy(tmp,"title")}}}])}();