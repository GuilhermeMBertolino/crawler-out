"use strict";function _createForOfIteratorHelper(o,allowArrayLike){var i,F,it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length)return it&&(o=it),i=0,F=function(){},{s:F,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e){throw _e},f:F};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function(){it=it.call(o)},n:function(){var step=it.next();return normalCompletion=step.done,step},e:function(_e2){didErr=!0,err=_e2},f:function(){try{normalCompletion||null==it["return"]||it["return"]()}finally{if(didErr)throw err}}}}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){var i,arr2;for((null==len||len>arr.length)&&(len=arr.length),i=0,arr2=new Array(len);len>i;i++)arr2[i]=arr[i];return arr2}!function(){angular.module("app").factory("wanPage",["$injector","cpe","device","devinfo","funcs","navShared","wanPageCommon",function($injector,cpe,device,devinfo,funcs,navShared,wanPageCommon){function convertData(config,attrs){config.OnlyInternalModems=!autoconf.BR2_PACKAGE_ANWEB_STORAGE,config.hasL2TPv3=!!autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MTS_29548,config.hasDualLAN=wanPageCommon.supportDualLAN;var data=device.wan.dsysinitToNative(config,attrs);return data.__checksum=wanPageCommon.checksum(JSON.stringify(data)),data.__flatConnList=wanPageCommon.flattenConnections(data),data.__flatIfaceList=wanPageCommon.flattenIfaces(data),data}function pushDiffCreate(diffs,connsData,workModel){function getNativeModel(dataConns,workModel){var data=funcs.deepClone(workModel),conns=wanPageCommon.flattenConnections(dataConns);for(var i in conns){var c=conns[i];c.__New&&funcs.setValue(c.__Path,c,data)}var model={Device:{WAN:data}};return model}function checkRIPEnabled(diff){if(!diff.Device||!diff.Device.Routing||!diff.Device.Routing.RIP)return diff;var hasNetworks=!1;for(var i in diff.Device.Routing.RIP.Networks)/-/.test(i)||(hasNetworks=!0);return hasNetworks&&funcs.setValue("Device.Routing.RIP.Enable",!0,diff),diff}function splitModemDiffs(diffCreate,newConfig,diffs,connLink){var modem={};if(funcs.setValue("Device.USB.Modem",diffCreate.Device.USB.Modem,modem),_.size(modem)){if(funcs.cutBranch(diffCreate,"Device.USB.Modem"),newConfig.Device.USB&&newConfig.Device.USB.Connection&&connLink){var editConn=funcs.fetchBranch(newConfig,connLink);editConn&&editConn.Binding&&funcs.setValue(connLink+"Binding.Modem",editConn.Binding.Modem,diffCreate)}diffs.push(modem),_.size(diffCreate.Device)&&diffs.push(diffCreate)}else diffs.push(diffCreate)}function addFwToDiff(newConfig,connData,initConfig){function addRule(conn,connType){var link={};if(!conn.__New&&"USB"!=connType)return newConfig;switch(link.instance=conn.__Link.split(".").at(-2),connType){case"IPv6oE":link.path="Static"==conn.Origin?paths.connection+"Staticv6.":paths.connection+"DHCPv6.";break;case"PPPoEv6":case"PPPoEDual":link.path=paths.connection+"DHCPv6.",link.instance="new_conn_DHCPv6_"+conn.__subConnInst;break;case"PPTP":"L2TPDUAL"==conn.ActualType&&(link.path=paths.connection+"DHCPv6.",link.instance="new_conn_DHCPv6_"+conn.__subConnInst);break;case"USB":"IPv4"==conn.Version||conn.__SupportRule||(link.path=paths.usb+"Connection.")}return link.path?firewallShared.firewallAutoConfig(newConfig,link.path+link.instance,"ipv6",["RulesSupportOrigin"]):newConfig}function addMasq(conn,connType){switch(connType){case"IPv6oE":case"PPPoEv6":case"IPIP6":case"SIT":return newConfig;default:return firewallShared.firewallAutoConfig(newConfig,conn.__Link,conn.Version||"IPv4",["Masquerade"])}}function addToZoneAndGroup(conn,connType,version){var wanZone=".Zones.2.Interfaces.new_iface_".concat(version,".Path."),link={};switch(connType){case"PPPoEv6":case"PPPoEDual":link.path=paths.connection+"DHCPv6.",link.instance="new_conn_DHCPv6_"+conn.__subConnInst;break;case"PPTP":"L2TPDUAL"==conn.ActualType&&(link.path=paths.connection+"DHCPv6.",link.instance="new_conn_DHCPv6_"+conn.__subConnInst)}return link.path&&"IPv6"==version?(funcs.setValue(paths.group+"1.WANv6.new_wan_link.Link.",link.path+link.instance+"."||conn.__Link,newConfig),funcs.setValue(paths.firewall+version+wanZone,link.path+link.instance+".",newConfig)):"L2TPOVERIPSEC"==conn.ActualType?(funcs.setValue(paths.group+"1.VPN.new_wan_link.Link.",conn.BaseConnectionIPSec,newConfig),funcs.setValue(paths.group+"1.WAN.new_wan_link.Link.",conn.__Link,newConfig),funcs.setValue(paths.firewall+version+wanZone,conn.__Link,newConfig)):(funcs.setValue(paths.group+"1."+("IPv4"==version?"WAN":"WANv6")+".new_wan_link.Link.",conn.__Link,newConfig),funcs.setValue(paths.firewall+version+wanZone,conn.__Link,newConfig))}function getConn(connType){return Object.values(connData[connType].Connection)[0]}function getIPVersion(conn,connType){switch(connType){case"IPv4oE":case"PPPoE":case"IPIP6":return"IPv4";case"IPv6oE":case"PPPoEv6":case"SIT":return"IPv6";case"PPPoEDual":return"Dual";case"USB":return conn.Version;case"PPTP":return"L2TPDUAL"==conn.ActualType?"Dual":"IPv4";default:return}}var connType=Object.keys(connData)[0],conn=getConn(connType),version=getIPVersion(conn,connType);if(conn.firewallAutoConfig){var config=funcs.deepClone(__initConfig);funcs.setValue("Device.Firewall.",funcs.fetchBranch(__initConfig,paths.firewall),initConfig),funcs.setValue("Device.Network.Group.",funcs.fetchBranch(__initConfig,paths.group),initConfig),funcs.setValue("Device.Firewall.",funcs.fetchBranch(config,paths.firewall),newConfig),funcs.setValue("Device.Network.Group.",funcs.fetchBranch(config,paths.group),newConfig),newConfig=addMasq(conn,connType),"Dual"==version?(newConfig=addToZoneAndGroup(conn,connType,"IPv4"),newConfig=addToZoneAndGroup(conn,connType,"IPv6")):newConfig=addToZoneAndGroup(conn,connType,version)}return newConfig=addRule(conn,connType)}var initConfig=device.wan.nativeToDsysinit(__initNativeModel),nativeModel=getNativeModel(connsData,workModel),newConfig=device.wan.nativeToDsysinit(nativeModel);isFirewallMode&&(newConfig=addFwToDiff(newConfig,connsData,initConfig));var diffCreate=funcs.newConfig.makeDiff(initConfig,newConfig,__attrs,__storageObj);if(diffCreate=checkRIPEnabled(diffCreate),diffCreate.Device&&diffCreate.Device.USB&&diffCreate.Device.USB.Modem){var connLink;if(connsData.USB&&connsData.USB.Connection){var conn=_.find(connsData.USB.Connection,function(c){return!c.__New});conn&&(connLink=conn.__Link)}splitModemDiffs(diffCreate,newConfig,diffs,connLink)}else diffs.push(diffCreate)}function pushDiffsRemove(diffs,pathsConns,workModel,isConflict,onlyDeps){if(onlyDeps){var links=getDelLinks(pathsConns,workModel,isConflict,!0);return void(links.deps.length&&pushDelDiff(diffs,links.deps))}var links=getDelLinks(pathsConns,workModel,isConflict);pushDisabledConnsDiff(diffs,links),links.deps.length&&pushDelDiff(diffs,links.deps),pushDisabledServisesDiff(diffs,links),links.conns.length&&pushDelDiff(diffs,links.conns),links.connSettings.length&&pushDelDiff(diffs,links.connSettings)}function getDelLinks(pathsConns,nativeModel,isConflict,onlyRules){function getSubConnLink(inputConn){var links=[];return inputConn.__LinkSub&&links.push(inputConn.__LinkSub),links}function getLinksConns(inputConn){var links=[inputConn.__Link];if(isFirewallMode)return links;inputConn.__LinkSub&&links.push(inputConn.__LinkSub);var linksDepsConns=conns.filter(function(conn){return conn.__LowerConnection==inputConn.__Link}).map(function(conn){return conn.__Link});linksDepsConns.length&&(links=links.concat(linksDepsConns),_.each(linksDepsConns,function(link){var linkDepsConnsDeps=conns.filter(function(conn){return conn.__LowerConnection==link}).map(function(conn){return conn.__Link});linkDepsConnsDeps&&(links=links.concat(linkDepsConnsDeps))}));var l2tp=links.filter(function(link){return-1!=link.indexOf("L2TP")});if(l2tp.length)for(var i in l2tp){var conn=conns.find(function(conn){return conn.__Link==l2tp[i]});if(conn.__IPsecInst){var path="Device.Network.Connection.IPsec."+conn.__IPsecInst+".";links.find(function(link){return link==path})||links.push("Device.Network.Connection.IPsec."+conn.__IPsecInst+".")}"L2TPDUAL"==conn.ActualType&&conn.__LinkSub&&links.push(conn.__LinkSub)}return links}function getDeps(inputLinks,listIgnore,onlyRules){function filterFn(link){var listСascadeDel=["Device.Network.DNS.Current.","Device.Network.Group.","Device.Network.IP.","Device.Routing.IPv4.Routes.","Device.Routing.IPv4.Rules.","Device.Routing.IPv6.Routes.","Device.Routing.IPv6.Rules.","Device.Routing.Tables.","Device.Statistics.Routing.","Device.USB.Modem.","Device.Network.Server.DHCP."];listIgnore&&(listСascadeDel=listСascadeDel.concat(listIgnore));var fwRules=["Device.Firewall.IPv4.Rules.","Device.Firewall.IPv6.Rules."];listСascadeDel=listСascadeDel.concat(fwRules);for(var i in listСascadeDel)if(-1!=link.indexOf(listСascadeDel[i]))return!1;return-1!=link.indexOf("".concat(paths.network,"Connection."))?!1:-1!=link.indexOf("".concat(paths.usb,"Connection."))?!1:-1!=link.indexOf("".concat(paths.network,"Interface.EoGRE."))||-1!=link.indexOf("".concat(paths.network,"Interface.EoGRE."))?!1:-1!=link.indexOf("".concat(paths.network,"Interface.EoIP."))||-1!=link.indexOf("".concat(paths.network,"Interface.EoIP."))?!1:-1!=link.indexOf(paths.udpxy)?!1:-1!=link.indexOf("".concat(paths.network,"Server.VPN."))?!1:-1!=link.indexOf("Device.Services.VRRP.")?!1:-1!=link.indexOf("Device.Services.TWAMPServer.")?!1:-1!=link.indexOf("Connection.OpenVPN")?!1:-1!=link.indexOf("Device.Services.IPerf3.")?!1:!0}var allDepLinks=getAllDeps(inputLinks,onlyRules),links=allDepLinks.filter(filterFn);return links}function getAllDeps(links,onlyRules){var posLinks=__links.filter(function(objLink){return onlyRules?/Device\.Firewall\.IPv\d\.Rules\.\d/.test(objLink.Position)&&links.includes(objLink.Link):links.includes(objLink.Link)}).map(function(objLink){return objLink.Position}),depLinks=posLinks.map(function(link){return-1!=link.indexOf("Server.DHCP.")?link:link.replace(/(\.\d+\.)[a-zA-Z.]+$/,function(match,p1){return p1})});return depLinks}function getConnSettings(connsLinks){var links=[];for(var i in connsLinks){var conn=conns.find(function(conn){return conn.__Link==connsLinks[i]});conn&&conn.__LinkConfiguration&&links.push(conn.__LinkConfiguration)}return links}function getLinksDisabled(connsLinks){var links=[],allDepLinks=getAllDeps(connsLinks),removedIPsecConns=connsLinks.filter(function(link){return-1!=link.indexOf("Connection.IPsec.")}),IPSecConns=allDepLinks.filter(function(link){if(-1==link.indexOf("Connection.IPsec."))return!1;for(var i in removedIPsecConns){var linkConn=removedIPsecConns[i];if(-1!=link.indexOf(linkConn))return!1}return!0});IPSecConns.length&&(links=links.concat(IPSecConns));var greConns=allDepLinks.filter(function(link){return-1!=link.indexOf("Connection.GRE.")});greConns.length&&(links=links.concat(greConns));var ipipConns=allDepLinks.filter(function(link){return-1!=link.indexOf("Connection.IPIP.")});ipipConns.length&&(links=links.concat(ipipConns));var EoGREIfaces=allDepLinks.filter(function(link){return-1!=link.indexOf("Interface.EoGRE.")});EoGREIfaces.length&&(links=links.concat(EoGREIfaces));var EoIPIfaces=allDepLinks.filter(function(link){return-1!=link.indexOf("Interface.EoIP.")});EoIPIfaces.length&&(links=links.concat(EoIPIfaces));var udpxy=allDepLinks.find(function(link){return-1!=link.indexOf(paths.udpxy)});udpxy&&(links=links.concat(udpxy));var serversVPN=allDepLinks.filter(function(link){return-1!=link.indexOf("".concat(paths.network,"Server.VPN."))});serversVPN.length&&(links=links.concat(serversVPN));var usbConns=connsLinks.filter(function(link){return-1!=link.indexOf("USB.Connection.")});usbConns.length&&(links=links.concat(usbConns));var dhcps=allDepLinks.filter(function(link){return-1!=link.indexOf("Server.DHCP.")});dhcps.length&&(links=links.concat(dhcps));var vrrps=allDepLinks.filter(function(link){return-1!=link.indexOf("Services.VRRP")});vrrps.length&&(links=links.concat(vrrps));var twamps=allDepLinks.filter(function(link){return-1!=link.indexOf("Services.TWAMPServer")});twamps.length&&(links=links.concat(twamps));var openVpnClient=allDepLinks.filter(function(link){return-1!=link.indexOf("Connection.OpenVPN")});openVpnClient.length&&(links=links.concat(openVpnClient));var ipRef3=allDepLinks.filter(function(link){return-1!=link.indexOf("Services.IPerf3")});return ipRef3.length&&(links=links.concat(ipRef3)),links}var links={deps:[],disabled:[],conns:[],connSettings:[],subConns:[]},conns=wanPageCommon.flattenConnections(nativeModel);if(onlyRules){for(var i in pathsConns){var conn=conns.find(function(conn){return conn.__Path==pathsConns[i]});if(conn){var depLinksConns=getDeps([conn.__Link],null,!0);depLinksConns.length&&(links.deps=links.deps.concat(depLinksConns))}}return links}for(var i in pathsConns){var conn=conns.find(function(conn){return conn.__Path==pathsConns[i]}),linksConns=getLinksConns(conn);links.conns=links.conns.concat(linksConns);var depLinksConns=getDeps(linksConns);depLinksConns.length&&(links.deps=links.deps.concat(depLinksConns));var connSettings=getConnSettings(linksConns);connSettings.length&&(links.connSettings=links.connSettings.concat(connSettings));var subConn=getSubConnLink(conn);subConn.length&&(links.subConns=links.subConns.concat(subConn));var disabled=getLinksDisabled(linksConns);if(disabled.length&&(links.disabled=links.disabled.concat(disabled)),-1!=conn.__Path.indexOf("USB")&&conn.Interface){var cellular=conn.Interface,cellularDeps=getDeps([cellular],["Device.Network.IP."]);cellularDeps.length&&(links.deps=links.deps.concat(cellularDeps))}}return links}function pushDelDiff(diffs,links){var newConfig=funcs.deepClone(__initConfig);for(var i in links){var tmp=funcs.fetchBranch(newConfig,links[i]);tmp&&(_.isObject(tmp)?funcs.cutBranch(newConfig,links[i]):funcs.setValue(links[i],"",newConfig))}var diff=funcs.newConfig.makeDiff(__initConfig,newConfig,__attrs,__storageObj);if(diff.Device&&diff.Device.Network&&diff.Device.Network.Connection&&diff.Device.Network.Connection.IPIP6)for(var i in diff.Device.Network.Connection.IPIP6)funcs.cutBranch(diff,"Device.Network.Connection.IPIP6."+i+".Interface");if(diff.Device&&diff.Device.Network&&diff.Device.Network.Connection&&diff.Device.Network.Connection.SIT)for(var i in diff.Device.Network.Connection.SIT)funcs.cutBranch(diff,"Device.Network.Connection.SIT."+i+".Interface");if(diff.Device&&diff.Device.Network&&diff.Device.Network.IP)for(var _i in diff.Device.Network.IP)if(parseInt(_i)<0)diff.Device.Network.IP[_i].IPv4Address&&(diff.Device.Network.IP[_i].IPv4Address={}),diff.Device.Network.IP[_i].IPv6Address&&(diff.Device.Network.IP[_i].IPv6Address={}),delete diff.Device.Network.IP[_i].LowerLayer;else{for(var g in diff.Device.Network.IP[_i].IPv4Address)diff.Device.Network.IP[_i].IPv4Address[g]={};for(var _g in diff.Device.Network.IP[_i].IPv6Address)diff.Device.Network.IP[_i].IPv6Address[_g]={}}var i;Object.keys(diff).length&&diffs.push(diff)}function resetRoutingDnsLinks(diffs,pathsConns,nativeModel){var output={};_.each(pathsConns,function(path){var conn=funcs.fetchBranch(nativeModel,path);conn.Interface&&_.each(__links,function(link){if((conn.Interface==link.Link||conn.__Link==link.Link)&&/Device\.Routing/.test(link.Position)&&(funcs.setValue(link.Position,"",output),/Device\.Routing\.IPv\d\.Routes\.\d+\./.test(link.Position))){var RoutesEnableLink=link.Position.replace(/(Device\.Routing\.IPv\d\.Routes\.\d+\.)(.*)/g,"$1Enable");funcs.setValue(RoutesEnableLink,!1,output)}conn.Connections&&_.each(funcs.newConfig.normalize(conn.Connections),function(c){if(c.Link==link.Link&&/Device\.Network\.Server\.DHCP\.\d+\.DHCPv\d\.DNSSource/.test(link.Position)){funcs.setValue(link.Position,"",output);var DNSModeLink=link.Position.replace("DNSSource","DNSMode");funcs.setValue(DNSModeLink,"Default",output)}})})}),_.size(output)&&diffs.push(output)}function pushDisabledConnsDiff(diffs,links){var newConfig=funcs.deepClone(__initConfig);for(var i in links.conns){var link=links.conns[i];(-1!=link.indexOf("Device.Network.Connection.DHCP")||-1!=link.indexOf("USB.Connection."))&&funcs.setValue("".concat(link,"Enable"),!1,newConfig)}var diff=funcs.newConfig.makeDiff(__initConfig,newConfig,__attrs,__storageObj);Object.keys(diff).length&&diffs.push(diff)}function pushDisabledServisesDiff(diffs,links){function isClearedRIP(deps){var pathNetworksRIP="Device.Routing.RIP.Networks.",networksRIP=funcs.newConfig.instanceObjectToArray(funcs.fetchBranch(__initConfig,pathNetworksRIP));if(0==networksRIP.length)return!1;var removeNetworksRIP=deps.filter(function(link){return-1!=link.indexOf(pathNetworksRIP)});return networksRIP.length==removeNetworksRIP.length}function getInxsClearedLoadBalancing(deps){var pathLoadBalancing="".concat(paths.network,"LoadBalancing."),loadBalancing=funcs.newConfig.normalize(funcs.fetchBranch(__initConfig,pathLoadBalancing)),inxs=[];for(var i in loadBalancing){var instLB=loadBalancing[i],initWans=funcs.newConfig.normalize(instLB.WAN),removeWansLB=deps.filter(function(link){return-1!=link.indexOf("".concat(pathLoadBalancing).concat(i,".WAN."))});Object.keys(initWans).length-removeWansLB.length<2&&inxs.push(i)}return inxs}var newConfig=funcs.deepClone(__initConfig);isClearedRIP(links.deps)&&funcs.setValue("".concat(paths.rip,"Enable"),!1,newConfig);var disabledIPSec=links.disabled.filter(function(link){return-1!=link.indexOf("Connection.IPsec.")});if(disabledIPSec.length)for(var i in disabledIPSec){var link=disabledIPSec[i];funcs.setValue("".concat(link,"Enable"),!1,newConfig),funcs.setValue("".concat(link,"Left"),"Device.Network.Group.1.",newConfig)}var disabledGRE=links.disabled.filter(function(link){return-1!=link.indexOf("Connection.GRE.")});if(disabledGRE.length)for(var i in disabledGRE){var link=disabledGRE[i];funcs.setValue("".concat(link,"Enable"),!1,newConfig),funcs.setValue("".concat(link,"LowerLayer"),"",newConfig)}var disabledIPIP=links.disabled.filter(function(link){return-1!=link.indexOf("Connection.IPIP.")});if(disabledIPIP.length)for(var i in disabledIPIP){var link=disabledIPIP[i];funcs.setValue("".concat(link,"Enable"),!1,newConfig),funcs.setValue("".concat(link,"LowerLayer"),"",newConfig)}var disabledEoGRE=links.disabled.filter(function(link){return-1!=link.indexOf("Interface.EoGRE.")});if(disabledEoGRE.length)for(var i in disabledEoGRE){var link=disabledEoGRE[i];funcs.setValue("".concat(link,"Enable"),!1,newConfig),funcs.setValue("".concat(link,"LowerLayer"),"",newConfig)}var disabledEoIP=links.disabled.filter(function(link){return-1!=link.indexOf("Interface.EoIP.")});if(disabledEoIP.length)for(var i in disabledEoIP){var link=disabledEoIP[i];funcs.setValue("".concat(link,"Enable"),!1,newConfig),funcs.setValue("".concat(link,"LowerLayer"),"",newConfig)}links.disabled.find(function(link){return-1!=link.indexOf(paths.udpxy)})&&(funcs.setValue("".concat(paths.udpxy,"Enable"),!1,newConfig),funcs.setValue("".concat(paths.udpxy,"IfaceWan"),"",newConfig));var inxs=getInxsClearedLoadBalancing(links.deps);if(inxs.length)for(var i in inxs)funcs.setValue("".concat(paths.network,"LoadBalancing.").concat(inxs[i],".Enable"),!1,newConfig);var serversVPN=links.disabled.filter(function(link){return-1!=link.indexOf("".concat(paths.network,"Server.VPN."))});if(serversVPN.length)for(var i in serversVPN){var linkServer=serversVPN[i];funcs.setValue("".concat(linkServer,"Enable"),!1,newConfig),funcs.setValue("".concat(linkServer,"ListenIP"),"Device.Network.Group.1.",newConfig)}var dhcps=links.disabled.filter(function(link){return-1!=link.indexOf("Server.DHCP.")});if(dhcps.length)for(var i in dhcps){var link=dhcps[i];funcs.setValue("".concat(link),"",newConfig);var dhcpLink=link.replace(/(\.\d+\.)\w+$/,function(match,p1){return p1});funcs.setValue("".concat(dhcpLink),"",newConfig),funcs.setValue(dhcpLink.replace("DNSSource","DNSMode"),"Default",newConfig)}var vrrps=links.disabled.filter(function(link){return-1!=link.indexOf("Services.VRRP.")});if(vrrps.length)for(var i in vrrps){var link=vrrps[i];funcs.setValue("".concat(link,"ObjectTrackingLink"),"Device.Network.Group.1.",newConfig)}var twamps=links.disabled.filter(function(link){return-1!=link.indexOf("Services.TWAMPServer")});if(twamps.length)for(var i in twamps){var link=twamps[i];funcs.setValue("".concat(link),"Device.Network.Group.1.",newConfig)}var openVpnClient=links.disabled.filter(function(link){return-1!=link.indexOf("Connection.OpenVPN")});if(openVpnClient.length)for(var i in openVpnClient){var link=openVpnClient[i];funcs.setValue("".concat(link,"BaseInterface"),"Device.Network.Group.1.",newConfig),funcs.setValue("".concat(link,"Enable"),!1,newConfig)}var ipRef3=links.disabled.filter(function(link){return-1!=link.indexOf("Services.IPerf3")});if(ipRef3.length)for(var i in ipRef3){var link=ipRef3[i];funcs.setValue("".concat(link),"",newConfig)}var diff=funcs.newConfig.makeDiff(__initConfig,newConfig,__attrs,__storageObj);Object.keys(diff).length&&diffs.push(diff)}function getLinksForReconnect(paths,all){var links=[];for(var i in paths){var conn=wanPageCommon.getByPath(paths[i],all);conn.__LinkSub&&conn.__IPsecInst||links.push(conn.__Link),conn.__LinkSub&&links.push(conn.__LinkSub)}return links}function getNativeModelForSwitchPBR(valuePBR){var nativeModel=funcs.deepClone(__initNativeModel);return nativeModel.Device.WAN.PBREnable=valuePBR,nativeModel}function checkUniqueName(value,link,connections){if(link&&link.includes("USB"))return connections.filter(function(conn){return conn.__Link!=link}).every(function(conn){return conn.Name!=value});if(selector){if(link&&(delete selector[link+"Name"],link.includes("PPPoE")||link.includes("L2TP"))){var conn=connections.find(function(conn){return conn.__Link==link&&void 0!=conn.__LinkSub});void 0!=conn&&delete selector[conn.__LinkSub+"Name"]}return Object.values(selector).every(function(name){return name!=value})}}var paths={connection:"Device.Network.Connection.",connectionSelector:"Device.Network.Connection.{*}.{*}.Name",ddns:"Device.Services.DDNS.Instances.",devinfo:"Device.DeviceInfo.",ethernet:"Device.Network.Interface.Ethernet.",firewall:"Device.Firewall.",group:"Device.Network.Group.",ifaceStats:"Device.Statistics.Interface.",igmp:"Device.Services.IGMPX.",ipsec:"Device.Services.IPsec.",links:"Links.",mld:"Device.Services.MLDProxy.",network:"Device.Network.",rip:"Device.Routing.RIP.",ripv6:"Device.Routing.RIPng.",routing:"Device.Routing.*.Routes.","switch":"Device.Switch.",ntp:"Device.Services.NTP.",tr:"Device.Services.TR069.",udpxy:"Device.Services.Udpxy.",usb:"Device.USB.",voip:"Device.Voip.",xdsl:"Device.xDSL.",xdslStats:"Device.Statistics.xDSL.",wakeonlan:"Device.Services.WakeOnLAN."},pullPathsAttrs=[paths.ddns,paths.devinfo,paths.firewall,paths.ifaceStats,paths.igmp,paths.ipsec,paths.mld,paths.network,paths.rip,paths.ripv6,paths.routing,paths["switch"],paths.ntp,paths.tr,paths.udpxy,paths.usb,paths.voip,paths.xdsl,paths.xdslStats,paths.wakeonlan],dataChecksum=null,__initNativeModel=null,__initConfig=null,__attrs=null,selector=null,__links=null,__storageObj={num:0,mapLinks:{}},isFirewallMode=navShared.isFirewallMode,firewallShared=null,depsChecker=null,pullPathsConfig=pullPathsAttrs.concat(paths.links);return{availableTypesForBaseIPIP6:function(){return[{name:"dynipv6",value:"dynipv6"},{name:"statipv6",value:"statipv6"}]},availableTypesForBasePPTP:function(){function add(type){types.push({name:type,value:type})}var types=[];return add("dynip"),add("statip"),types},availableTypesForBaseSIT:function(){function add(type){types.push({name:type,value:type})}var types=[];return add("dynip"),add("statip"),add("pppoe"),add("pptp"),add("l2tp"),types},checkLinksDeps:function(paths,nativeModel){var delLinks=getDelLinks(paths,nativeModel),deps=delLinks.conns.concat(delLinks.subConns);return depsChecker.getDepsByLinks(deps)},checkUniqueName:checkUniqueName,depsChecker:depsChecker,getGroupName:function(data,conn){var groups=funcs.newConfig.normalize(funcs.fetchBranch(__initConfig,paths.group)),group=_.find(groups,function(group){return group.CurrentWAN==conn.__Link||group.CurrentWANv6==conn.__Link});return group&&group.Name?group.Name.split("#")[0]:""},getGwifList:function(conns,type){var nameField="ipv4"==type?"__LinkGroupv4":"__LinkGroupv6";return conns.filter(function(conn){return conn[nameField]&&-1!=conn[nameField].indexOf("Device.Network.Group.1.")})},getHiddenDeps:function(paths,nativeModel){var delLinks=getDelLinks(paths,nativeModel),hiddenDeps=delLinks.connSettings.concat(delLinks.subConns);return hiddenDeps},getIfacePtmByVlan:function(data,conn){function filterCb(iface){return iface.__Link==ifaceConn.__Link?!1:0==vlan.Enable&&"0"==iface.__VID?!0:vlan.Enable&&iface.__VID==vlan.ID&&iface.__VPR==vlan.Priority?!0:!1}var ifacesPtm=Object.values(data.Media.DSL.PTM.Link),ifaceConn=conn.Media.DSL.PTM,vlan=conn.VLAN,iface=ifacesPtm.find(filterCb);return iface?iface.Name:null},getStatusText:function(data,conn){var connectionType=wanPageCommon.getTypeLangKey(conn,conn.__Type);return"l2tpoveripsec"==connectionType&&conn.__IPsecConnStatus&&"Connected"!=conn.__IPsecConnStatus?conn.__IPsecConnStatus:conn.Enable?conn.StatusExt?conn.StatusExt:conn.StopOnFail?"CableDisconnected":conn.Status:"Disabled"},isSimpleConfig:function(conns){var pppoeConn=conns.find(function(e){return"PPPoE"==e.__Type}),ipoeConn=conns.find(function(e){return"IPv4oE"==e.__Type});if(pppoeConn&&ipoeConn&&pppoeConn.DefaultGateway)return!0;var pptpConn=conns.find(function(e){return"PPTP"==e.__Type});if(pptpConn){var base=conns.find(function(e){return"Device.WAN.".concat(e.__Path)==pptpConn.BaseConnection});if(base&&!pptpConn.AutomaticalConnection&&pptpConn.DefaultGateway)return!0}return!1},pull:function(){return Promise.all([cpe.GetConfig(pullPathsConfig,!0),cpe.GetDatamodel(pullPathsAttrs,!0),cpe.Select(paths.connectionSelector)]).then(function(response){var config=response[0].result.Config;__initConfig=funcs.deepClone(config);var attrs=response[1].result.Datamodel;__attrs=funcs.deepClone(attrs),selector=response[2].result.Selected;var data=convertData(config,attrs);return __links=Object.values(config.Links),dataChecksum=data.__checksum,__initNativeModel={Device:{WAN:funcs.deepClone(data)}},data})},push:function(connsData,conflicts,workModel){function appplyConnections(){var diffs=[];conflicts.length&&pushDiffsRemove(diffs,conflicts,workModel,!0),pushDiffCreate(diffs,connsData,workModel);if(connsData.USB&&connsData.USB.Connection){var con=_.find(connsData.USB.Connection,function(c){return c.InterfaceOnly===!0});con&&pushDiffsRemove(diffs,[con.__Path],workModel,!1,!0)}return cpe.ApplyDifference(diffs)}return appplyConnections()},reconnect:function(paths,all){function setStatus(links,status){function makeApplyValues(links,status){var output={};for(var i in links)funcs.setValue(links[i],{Status:status},output);return funcs.splitTree(output)}return cpe.SetParameterValues(makeApplyValues(links,status))}var links=getLinksForReconnect(paths,all);return setStatus(links,"Disabling").then(function(_){return setStatus(links,"Enabling")})},remove:function(pathsConns,nativeModel,depsToDel){var diffs=[];if(isFirewallMode){var connsDiff={},delLinks=getDelLinks(pathsConns,nativeModel),configLinks=delLinks.conns.concat(delLinks.subConns,delLinks.connSettings);if(configLinks.forEach(function(e){connsDiff=funcs.newConfig.delLastMuiltiObjByPath(e,connsDiff)}),diffs.unshift(connsDiff),depsToDel){var depsDiff=depsChecker.getDepsDelDiff(depsToDel);diffs.unshift(depsDiff)}return cpe.ApplyDifference(diffs)}resetRoutingDnsLinks(diffs,pathsConns,nativeModel),pushDiffsRemove(diffs,pathsConns,nativeModel);return cpe.ApplyDifference(diffs)},setGwif:function(path,all,ipv6){var paramList=[],conn=wanPageCommon.getByPath(path,all),wanVersion=ipv6?"WANv6":"WAN",groups=funcs.newConfig.normalize(funcs.fetchBranch(__initConfig,paths.group));for(var inxGroup in groups){var wanGroup=funcs.newConfig.normalize(groups[inxGroup][wanVersion]);for(var inxWan in wanGroup){var linkWan=wanGroup[inxWan].Link;if((linkWan==conn.__Link||linkWan==conn.__LinkSub||linkWan==conn.Interface)&&paramList.push([{Name:"".concat(paths.group).concat(inxGroup,".").concat(wanVersion,".").concat(inxWan,".index"),Value:0}]),"USB"==conn.__Type)for(var inxIface in conn.__LinkIface)linkWan==conn.__LinkIface[inxIface]&&paramList.push([{Name:"".concat(paths.group).concat(inxGroup,".").concat(wanVersion,".").concat(inxWan,".index"),Value:0}])}}return Promise.all(paramList.map(function(param){return cpe.SetParameterValues(param)}))},subscribe:function(handler,$scope){var areas=pullPathsConfig.join("|");devinfo.subscribe(areas,function(response){if(response){var config=pullPathsConfig.reduce(function(memo,path){return funcs.deepExtend(memo,response[path])},{});__initConfig=funcs.deepClone(config),__links=Object.values(config.Links);var data=convertData(config);data.__checksum!=dataChecksum&&(dataChecksum=data.__checksum,handler(data))}},$scope)},switchPBR:function(value){var initConfig=device.wan.nativeToDsysinit(__initNativeModel),nativeModel=getNativeModelForSwitchPBR(value),newConfig=device.wan.nativeToDsysinit(nativeModel),diff=funcs.newConfig.makeDiff(initConfig,newConfig,__attrs,__storageObj);return cpe.ApplyDifference(diff)},updateVlan:function(vlan,media){if(vlan){if(media.__VID<1||!media.__VID)return vlan.Enable=!1,vlan.ID=void 0,void(vlan.Priority=0);vlan.Enable=!0,vlan.ID=media.__VID,vlan.Priority=media.__VPR}},wanUsedInHttpaccess:function(data,conn){return _.contains(data.RaccessRules.Ifaces,conn.__Link)},wanUsedInNotDefaultGroup:function(data,conn){return conn.__LinkGroupv4&&-1==conn.__LinkGroupv4.indexOf("Device.Network.Group.1.")||conn.__LinkGroupv6&&-1==conn.__LinkGroupv6.indexOf("Device.Network.Group.1.")?!0:!1},wanUsedInReserve:function(data,conn){return conn.IsFailover?!0:!1},wanUsedInTr69:function(data,conn){var tr69=data.TR069;if(!tr69)return!1;if(conn.__Link==tr69.Iface)return!0;if("Dongle"==conn.MediaType)for(var i in conn.Connections){var linkConn=conn.Connections[i].Link;if(linkConn==tr69.Iface)return!0;if(-1!=linkConn.indexOf("DHCPv6")&&conn.__LinkSub==tr69.Iface)return!0}return!1},wanUsedInVoIP:function(data,conn){if(!data.VoIP)return!1;var linkVoIP=data.VoIP.XDLinkNetworkConnection;if(!linkVoIP)return!1;if(linkVoIP==conn.__Link)return!0;if("Dongle"==conn.MediaType)for(var i in conn.Connections){var linkConn=conn.Connections[i].Link;if(linkConn==linkVoIP)return!0}return!1},getFirewallAutoConfigNote:function(type,scope){return firewallShared.getFirewallAutoConfigNote(type,scope)}}}])}();