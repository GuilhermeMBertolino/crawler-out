"use strict";angular.module("app").controller("WanAddCtrl",["$scope","$state","wanPage","wanPageCommon","pageDetails","ngDialog","translate","$q","navShared",function($scope,$state,wanPage,wanPageCommon,pageDetails,ngDialog,translate,$q,navShared){function getAvailableTypes(priv){return"IPIP6"==priv.mainConn.__Type?wanPage.availableTypesForBaseIPIP6():"SIT"==priv.mainConn.__Type?wanPage.availableTypesForBaseSIT():wanPage.availableTypesForBasePPTP()}function completeConnectionData(conn,simple){var baseConnArr,baseConns,baseConnsv6,deferred=$q.defer();if("PPTP"==conn.__Type||"IPv4oE"==conn.__Type&&"L2TPv3"==conn.MediaType||"IPIP6"==conn.__Type||"SIT"==conn.__Type)baseConnArr=["IPv4oE","USB"],"SIT"==conn.__Type&&baseConnArr.push("PPTP","PPPoE"),baseConns=wanPageCommon.flattenConnections(priv.data,!1,baseConnArr).filter(function(e){return!e.InterfaceOnly}).map(function(e){return{data:e}}),baseConnsv6=wanPageCommon.flattenConnections(priv.data,!1,["IPv6oE"]).map(function(e){return{data:e}}),ngDialog.open({template:"dialogs/wan_additional_connection/pptp/dialog.tpl.html",controller:"WanAdditionalConnectionPPTPDialogCtrl",scope:$scope,data:{useAuto:"SIT"==conn.__Type?!1:priv.data.UseAutomaticalPPTP,connections:simple?[]:"IPIP6"==conn.__Type?baseConnsv6:baseConns,type:conn.__Type},trapFocus:!1,preserveFocus:!1,closeByEscape:!1}).closePromise.then(function(result){setTimeout(function(){var privBaseConn,baseConn;result&&result.value&&("new"==result.value.mode||"auto"==result.value.mode&&"IPIP6"==conn.__Type&&!result.value.connection||"SIT"==conn.__Type&&!result.value.connection?("IPv4oE"==conn.__Type&&deferred.resolve({action:"continue"}),privBaseConn="IPIP6"==conn.__Type?"dynipv6":"dynip",priv.baseConn=wanPageCommon.getNewConnTempl(priv.data,privBaseConn),priv.mainConn=conn,priv.mainConn.BaseConnection="Device.WAN.".concat(priv.baseConn.__Path),"IPIP6"==conn.__Type&&"auto"==result.value.mode&&(conn.AutomaticalConnection=!0),deferred.resolve({action:"new",role:"base",contype:privBaseConn,availableTypes:"IPIP6"==conn.__Type?wanPage.availableTypesForBaseIPIP6():"SIT"==conn.__Type?wanPage.availableTypesForBaseSIT():wanPage.availableTypesForBasePPTP()})):"auto"==result.value.mode&&"IPIP6"!=conn.__Type?(conn.AutomaticalConnection=!0,deferred.resolve({action:"continue"})):("select"==result.value.mode||"auto"==result.value.mode&&"IPIP6"==conn.__Type&&null!=result.value.connection)&&(("PPTP"==conn.__Type||"IPIP6"==conn.__Type||"SIT"==conn.__Type)&&(baseConn=result.value.connection.data,priv.baseConn=baseConn,priv.mainConn=conn,priv.mainConn.BaseConnection="Device.WAN.".concat(baseConn.__Path)),"IPIP6"==conn.__Type&&"auto"==result.value.mode&&(conn.AutomaticalConnection=!0),deferred.resolve({action:"continue"})))},0)});else if("PPPoE"==conn.__Type&&simple){var baseConns=wanPageCommon.flattenConnections(priv.data,!1,["IPv4oE"]).map(function(e){return{data:e}});ngDialog.open({template:"dialogs/wan_additional_connection/pppoe/dialog.tpl.html",controller:"WanAdditionalConnectionPPPoEDialogCtrl",scope:$scope,closeByEscape:!1}).closePromise.then(function(result){setTimeout(function(){priv.mainConn.DefaultGateway=!0,"accept"==result.value?(priv.baseConn=wanPageCommon.getNewConnTempl(priv.data,"dynip"),deferred.resolve({action:"new",role:"base",contype:"dynip",availableTypes:[{name:"dynip",value:"dynip"},{name:"statip",value:"statip"}]})):"skip"==result.value&&deferred.resolve({action:"continue"})},0)})}else deferred.resolve({action:"continue"});return deferred.promise}function setFlagIGMP(data,allConns,conflicts){var conn,contype,list=wanPageCommon.flattenConnections(data);for(var i in list)conn=list[i],contype=wanPageCommon.getContype(conn,conn.__Type),conn.Flags.IGMP=wanPageCommon.getFlagIGMP(contype,allConns,conflicts)}var isFirewallMode=navShared.isFirewallMode,priv={baseStateName:$state.current.name,connStateName:$state.current.name+".conn",contype:function(){return $state.params.contype?$state.params.contype:"dynip"}(),dataToConvert:{}};wanPage.pull().then(function(data){return priv.data=data,priv.mainConn=wanPageCommon.getNewConnTempl(data,priv.contype),$state.go(priv.connStateName,{data:priv.data,conn:priv.mainConn,_contype:priv.contype,role:"main"})}).then(function(){$scope.$emit("pageload")})["catch"](function(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})}),$scope.$on("contypeChange",function($event,contype,role){"main"==role?$state.params.contype?$state.go(priv.baseStateName,{contype:contype}):(priv.mainConn=wanPageCommon.getNewConnTempl(priv.data,contype),$state.go(priv.connStateName,{data:priv.data,conn:priv.mainConn,_contype:contype,role:"main"})):"base"==role&&(priv.baseConn=wanPageCommon.getNewConnTempl(priv.data,contype),priv.mainConn.BaseConnection="Device.WAN.".concat(priv.baseConn.__Path),$state.go(priv.connStateName,{data:priv.data,conn:priv.baseConn,_contype:contype,availableTypes:getAvailableTypes(priv),role:"base"}))}),$scope.$on("pagesubmit",function($event,conn,simple){wanPageCommon.getOrCreateByPath(conn.__Path,priv.dataToConvert,conn),completeConnectionData(conn,simple).then(function(result){var conflicts,overlay,types=["PPPoE","PPPoEv6","PPPoEDual","PPPoA","PPTP","3G","LTE","IPoA","Bridge","USB","IPIP6","SIT"],connections=Object.keys(priv.dataToConvert);_.find(connections,function(c){return _.contains(types,c)});var hideWAN=$scope.customRules.HideWanConnectionsList,flattenAll=wanPageCommon.flattenConnections(priv.data),hiddenConns=flattenAll.filter(function(c){return hideWAN?-1!=hideWAN.indexOf(c.Name):void 0}),trconn=$scope.customRules.DenyEditingTRConnection?flattenAll.find(function(conn){return wanPage.wanUsedInTr69(priv.data,conn)}):void 0;if(((null===trconn||void 0===trconn?void 0:trconn.__Type)==conn.__Type||hiddenConns.length&&hiddenConns.find(function(el){return el.__Type==conn.__Type}))&&("IPv4oE"==conn.__Type||"IPv6oE"==conn.__Type))return priv.dataToConvert={},alert(translate("wan_no_interfaces_available"));if(conflicts=simple?flattenAll.map(function(e){return e.__Path}):isFirewallMode?[]:wanPageCommon.getConflictingConnections(conn,priv.data).map(function(e){return e.__Path}),conflicts.length&&setFlagIGMP(priv.dataToConvert,priv.data.__flatConnList,conflicts),!conflicts.length||simple||isFirewallMode||confirm(translate("wan_overwriting_wan_connection_warning"))){if("continue"==result.action)return overlay=$scope.overlay.circular.start(),conn.ActiveSIM&&conn.ModemId&&priv.data.Modems&&priv.data.Modems[conn.ModemId]&&priv.data.Modems[conn.ModemId].ActiveSIM!=conn.ActiveSIM&&(priv.data.Modems[conn.ModemId].ActiveSIM=parseInt(conn.ActiveSIM)),wanPage.push(priv.dataToConvert,conflicts,priv.data).then(function(){return wanPageCommon.goToWanMainState()})["catch"](function(error){return error?void $state.go("error",{code:"msg_push_error",message:"msg_error_desc",state:pageDetails.wanInfo[0].state}):wanPageCommon.goToWanMainState()})["finally"](function(){$scope.overlay.circular.stop(overlay)});"new"==result.action&&$state.go(priv.connStateName,{data:priv.data,conn:priv.baseConn,_contype:result.contype,availableTypes:result.availableTypes,role:result.role}).then(function(){$scope.$emit("pageload")})}else priv.dataToConvert={},priv.mainConn=wanPageCommon.getNewConnTempl(priv.data,priv.contype),$state.go(priv.connStateName,{data:priv.data,conn:priv.mainConn,_contype:priv.contype,role:"main"})})})}]);