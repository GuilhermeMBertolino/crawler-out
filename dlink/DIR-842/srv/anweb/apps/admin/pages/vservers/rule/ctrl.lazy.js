"use strict";!function(){angular.module("app").controllerProvider.register("VserversRuleCtrl",["$injector","$scope","$rootScope","$state","translate","history","funcs","vserversUtil","vserversTemplate","$q","device",function($injector,$scope,$rootScope,$state,translate,history,funcs,util,template,$q,device){function isScheduleExists(rule){var deferred=$q.defer();return device.schedule.pull().then(function(error){if(error)return void deferred.reject(error);var indexesLink=[vservers.rule.__id];$scope.useSchedule=scheduler.isExists("vserversEnable",indexesLink),deferred.resolve()}),deferred.promise}function getTypesList(){var types=_.map(__backupTemplates,function(elem){return{name:elem.Name,value:elem.Type}});return types}function getProtocolList(){function getPosProtocols(){var type=vservers.rule.Type||"custom",templ=_.find(__backupTemplates,function(e){return e.Type==type});return templ&&templ.ProtocolList?templ.ProtocolList:["TCP","UDP","TCP/UDP"]}if(!vservers.config)return[];var allProtocols=["TCP","UDP","TCP/UDP"],posProtocols=getPosProtocols();return helper.getProtocolList(allProtocols,posProtocols)}function wasModified(){if(!vservers.rule)return!1;for(var ruleItem in vservers.rule)if("Source"==ruleItem){for(var sourceItem in vservers.rule.Source)if("IP"==sourceItem){if(!_.isEqual(_.compact(vservers.rule.Source.IP),__backupRule.Source.IP))return!0}else if(!_.isEqual(vservers.rule.Source[sourceItem],__backupRule.Source[sourceItem]))return!0}else if(!_.isEqual(vservers.rule[ruleItem],__backupRule[ruleItem]))return!0;return!1}function __updateUseSourcePorts(newValues){var rule=vservers.rule;if(rule){var curIndex=_.isUndefined(__index)?void 0:__index.toString();vservers.useSourcePorts=helper.getUseSourcePorts(vservers.config.UsedSourcePorts,rule,curIndex),vservers.useSourcePorts=_.filter(vservers.useSourcePorts,function(elem){return!(""==elem.startPort&&""==elem.endPort)})}}if($injector.has("scheduler"))var scheduler=$injector.get("scheduler");$scope.vservers={isActivate:!1,action:null,rule:null,useSourcePorts:null,apply:function(){function success(){$state.go(currentState+".info")}function error(){$state.go("error",{code:"msg_push_error",message:"msg_error_desc"})}function finallyCb(){overlayId&&overlay.stop(overlayId)}if($scope.form.$valid){var overlayId=overlay.start();vservers.rule.Source.IP.length>1&&(vservers.rule.Source.IP=_.compact(vservers.rule.Source.IP)),util.applyRule(vservers.rule,__index).then(success)["catch"](error)["finally"](finallyCb)}},remove:function(){function success(){history.setCleanLastHistory(!0),$state.go(currentState+".info")}function error(){$state.go("error",{code:"msg_push_error",message:"msg_error_desc"})}function finallyCb(){overlayId&&overlay.stop(overlayId)}if(confirm(translate("vservers_rule_remove_warning"))){var overlayId=overlay.start();$rootScope.$emit("unsavedStop",!0),util.removeRules([vservers.rule]).then(success)["catch"](error)["finally"](finallyCb)}},addSourceIp:function(){vservers.rule.Source.IP.push(""),vservers.sourceIpfocus=!0},removeSourceIp:function(ip,inx){vservers.rule.Source.IP.splice(inx,1)},validation:function(newValue,param){var rule=vservers.rule;if(!rule)return null;var errors=helper.validation(rule,__index,vservers.config)[param];if("public"==param){var ipValidation=vservers.ipValidation(newValue,"private");ipValidation&&errors.push(ipValidation)}return errors.length?errors[0]:null},isDisabled:function(param){var rule=vservers.rule;if(!rule)return!1;switch(param){case"Source.Iface":return rule.SNAT}return!1},changeType:function(type){var input=_.find(__backupTemplates,function(e){return e.Type==type});input&&(_.extend(vservers.rule.Source.Ports,input.Source.Ports),_.extend(vservers.rule.Dest.Ports,input.Dest.Ports),input.Dest.IP&&_.extend(vservers.rule.Dest.IP,input.Dest.IP),"255.255.255.255"==vservers.rule.Dest.IP[0]&&(vservers.rule.Dest.IP[0]=""),vservers.rule.Proto=input.ProtocolList[0])},changeParam:function(param,value){if(!vservers.rule)return null;switch(param){case"SNAT":value&&(vservers.rule.Source.Iface="all")}},getTypesList:getTypesList,getInterfaceList:function(){var output=[];return vservers.config?(output.push({Name:translate("all"),Value:"all"}),output=output.concat(vservers.config.Ifaces)):output},getProtocolList:getProtocolList,filterPrivateList:function(elem){return elem?helper.isPrivateIP(vservers.config.LAN,elem.ip):!1},wasModified:wasModified,showUseSourcePorts:function(){return _.chain(vservers.useSourcePorts).sortBy(function(elem){return parseInt(elem.startPort)}).map(function(elem){return elem.startPort&&elem.endPort?elem.startPort+" - "+elem.endPort:elem.startPort?elem.startPort:elem.endPort?elem.endPort:void 0}).uniq().compact().join(", ")},getDescSourceBusyPorts:function(){return"vservers_source_busy_ports"},ipValidation:function(addr,type,inx){return helper.ipValidation(addr,type,vservers.rule,inx)}};var helper,vservers=$scope.vservers,overlay=$scope.overlay.circular,__index=_.isUndefined($state.params.inx)?void 0:parseInt($state.params.inx),__backupRule=null,__backupTemplates=null,currentState=$state.current.name.split(".");currentState.pop(),currentState=currentState.join("."),function(overlayId){function success(){helper=util.makeHelper(),vservers.config=util.getConfig(),_.isUndefined(__index)?(vservers.rule=util.getDefaultRule(),vservers.action="add"):(vservers.rule=_.find(vservers.config.Rules,function(r){return r.__id==__index}),vservers.action="edit"),__backupRule=angular.copy(vservers.rule),__backupTemplates=angular.copy(template)}function error(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})}function finallyCb(){overlayId&&overlay.stop(overlayId),$scope.$emit("pageload"),vservers.isActivate=!0}util.pull().then(success).then(function(){return $injector.has("scheduler")?isScheduleExists():Promise.resolve()})["catch"](error)["finally"](finallyCb)}(),$scope.$watch("vservers.rule.Source.Iface",__updateUseSourcePorts),$scope.$watch("vservers.rule.Proto",__updateUseSourcePorts)}])}();