"use strict";!function(){angular.module("app").controllerProvider.register("UrlFilterFormCtrl",["$injector","$scope","$state","translate","urlfilterUtil","funcs","devinfo","ngDialog","$q","device",function($injector,$scope,$state,translate,util,funcs,devinfo,ngDialog,$q,device){function isScheduleExists(rule){var deferred=$q.defer();return device.schedule.pull().then(function(error){if(error)return void deferred.reject(error);var indexesLink=[urlfilter.config.__id];$scope.useSchedule=scheduler.isExists("urlfilterEnable",indexesLink),deferred.resolve()}),deferred.promise}function defaultRule(){var rule={};return rule.url="",rule}function removeRuleDns(rule,inx){updateRule("remove",null,inx)}function updateRule(action,rule,inx){switch(rule&&(rule=angular.fromJson(angular.toJson(rule))),action){case"add":helper.addRule(rule);break;case"set":helper.setRule(rule,inx);break;case"remove":helper.removeRuleDNS(inx)}urlfilter.list=helper.getList()}function wasModified(){return!_.isEqual(__initConfig,urlfilter.config)}function showDialog(options){function startDialog(options){return ngDialog.open({template:"/admin/dialogs/urlfilter_client_form/dialog.tpl.html",controller:"UrlFilterClientFormDialogCtrl",scope:$scope,data:options})}function closeDialog(result){result&&result.value&&(void 0!=result.value.id?("save"==result.value.action&&(urlfilter.clientsList[result.value.id]=result.value.rule),"remove"==result.value.action&&(delete urlfilter.clientsList[result.value.id],urlfilter.clientsList=_.compact(urlfilter.clientsList))):urlfilter.clientsList.push(result.value.rule),helper.updateClientsList(urlfilter.clientsList))}startDialog(options).closePromise.then(closeDialog)}function showTemplDialog(options){function startDialog(options){return ngDialog.open({template:"dialogs/urlfilter_addr_form/dialog.tpl.html",controller:"UrlFilterAddrFormDialogCtrl",scope:$scope,data:options})}function closeDialog(result){result&&result.value&&(void 0!=result.value.id?("save"==result.value.action&&(urlfilter.list[result.value.id]=result.value.rule),"remove"==result.value.action&&removeRuleDns(result.value.rule,[result.value.id])):urlfilter.list.push(result.value.rule),helper.updateAddrsList(urlfilter.list))}startDialog(options).closePromise.then(closeDialog)}function onDeleteTemplate(item,inx){_.each(inx,function(num){helper.removeRuleDNS(inx)}),urlfilter.list=helper.getList()}function updateConfig(backupConfig){backupConfig[instance]=urlfilter.config,urlfilter.config=backupConfig}if($injector.has("scheduler"))var scheduler=$injector.get("scheduler");$scope.urlfilter={isActivate:!1,isFirewallMode:"Firewall"===util.deviceMode,config:null,list:null,apply:function(){function success(){$scope.overlay.circular.stop(overlayId),$state.go("^.list")}function error(){$scope.overlay.circular.stop(overlayId),overlayId=null,$state.go("error",{code:"msg_push_error",message:"msg_error_desc"})}function isValid(){function clientExists(){var mac=[];return _.each(backupConfig,function(filter){filter.__id!=urlfilter.config.__id&&"Black"==filter.clients_mode&&_.each(filter.clients_list,function(client){_.find(urlfilter.config.clients_list,function(i){return i.mac==client.mac?mac.push(i.mac):void 0})})}),mac}var allowExists=_.find(backupConfig,function(i,inx){return"White"==i.clients_mode&&inx!=instance}),groupExists=_.find(backupConfig,function(i,inx){return i.wanGroup==urlfilter.config.wanGroup&&inx!=instance}),clientsBlock=clientExists();return"Black"==urlfilter.config.clients_mode&&0==urlfilter.clientsList.length?void alert(translate("wan_clients_list_empty")):"White"==urlfilter.config.clients_mode&&allowExists&&groupExists?void alert(translate("urlflt_dns_clients_allow_exists")):"Black"==urlfilter.config.clients_mode&&clientsBlock.length>0?void alert(translate("wifi_mac_used")):!0}if($scope.form.$valid){var backupConfig=util.makeHelper().getConfig();if(wasModified()&&isValid()){overlayId=$scope.overlay.circular.start(),updateConfig(backupConfig);var settings=util.needPrepareSettings()?helper.prepareSettings(funcs.deepClone(urlfilter)):funcs.deepClone(urlfilter);util.push(settings,instance).then(success)["catch"](error)}}},addRule:function(){var rule=defaultRule();$scope.urlfilter.focus=!0,updateRule("add",rule)},setRule:function(rule,inx){updateRule("set",rule,inx)},removeRule:function(inx){updateRule("remove",null,inx)},removeRuleDns:removeRuleDns,getTypesList:function(){var result=[];return result.push({name:"urlflt_type_exlude",value:"Exclude"}),result.push({name:"urlflt_type_include",value:"Include"}),result},getClientModeList:function(){var result=[{name:"urlflt_dns_client_mode_black",value:"Black"},{name:"urlflt_dns_client_mode_white",value:"White"}];return result},validationUrl:function(url,index){function containsProtocol(url){return/^(ht|f)tp(s?)\:/.test(url)}function isUniq(url,without){return _.every(urlfilter.list,function(elem,index){return elem.__removed?!0:without==index?!0:elem.url!=url})}return url?containsProtocol(url)?"urlflt_error_rule_url_contains_protocol":isUniq(url,index)?null:"urlflt_error_rule_is_not_uniq":null},supportedParam:function(param){return _.has(urlfilter.config,param)},wasModified:wasModified,addressesList:[],clientsList:[],filterTypes:[],wanGroups:[],onAddClient:function(){showDialog({rule:{},client:urlfilter.client,clientsList:urlfilter.clientsList})},onEditClient:function(item,inx){showDialog({rule:item,inx:inx,client:urlfilter.client,clientsList:urlfilter.clientsList})},onDeleteClient:function(item,inx){_.each(inx,function(num){delete urlfilter.clientsList[num]}),urlfilter.clientsList=_.compact(urlfilter.clientsList),helper.updateClientsList(urlfilter.clientsList)},onAddTemplate:function(){showTemplDialog({rule:{},list:urlfilter.list})},onEditTemplate:function(item,inx){showTemplDialog({rule:item,inx:inx,list:urlfilter.list})},onDeleteTemplate:onDeleteTemplate,getTplName:function(tpl){switch(tpl){case"full":return translate("urlflt_dns_tpl_full");case"begin":return translate("urlflt_dns_tpl_begin");case"end":return translate("urlflt_dns_tpl_end");case"middle":return translate("urlflt_dns_tpl_middle")}},isRLX819XFilter:autoconf.BR2_PACKAGE_ANWEB_RLX_819X_DNS_FILTER||autoconf.BR2_PACKAGE_ANWEB_DNS_FILTER};var helper,urlfilter=$scope.urlfilter,overlayId=null,instance=$state.params.inx||"new_filter",__initConfig=null;!function(){function success(){return helper=util.makeHelper(instance),urlfilter.config=helper.getConfig(),urlfilter.list=helper.getList(),urlfilter.clientsList=helper.getClientsList(),"new_filter"==instance&&(urlfilter.config.clients_mode="White",urlfilter.config.type="Include",urlfilter.config.filterType="DNS"),urlfilter.config.list=urlfilter.list,urlfilter.filterTypes=helper.getFilterTypes(),urlfilter.wanGroups=helper.getGroupsList(),urlfilter.focus=!1,devinfo.once("client").then(function(result){urlfilter.client=result.client,urlfilter.isActivate=!0,$scope.$emit("pageload")},error),__initConfig=funcs.deepClone(urlfilter.config),overlayId&&($scope.overlay.circular.stop(overlayId),overlayId=null),$injector.has("scheduler")?isScheduleExists():void 0}function error(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})}util.pull().then(success)["catch"](error)}()}])}();