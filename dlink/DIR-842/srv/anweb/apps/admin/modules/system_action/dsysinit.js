"use strict";!function(){angular.module(regdep("system-action"),[]).service("systemActionService",["$rootScope","$http","$q","$timeout","$window","cpe","devinfo","translate","snackbars","ngDialog","unloadHandler","oneWayRequest",function($rs,$http,$q,$timeout,$window,cpe,devinfo,translate,snackbars,ngDialog,unloadHandler,oneWayRequest){function reboot(opts){opts||(opts={});var maxTime=opts.maxTime||12e4,title=opts.title||"reboot_in_progress",progress=$rs.overlay.progress;return progress.start(maxTime,title),oneWayRequest({req:function(){var d=$q.defer();return $http.post("/system_reboot",{},{timeout:5e3}).then(function(data){data.status?d.resolve({data:data,status:"ApplySuccess"}):d.reject({data:data,status:"ApplyError"})})["catch"](function(error){d.resolve({error:error,status:"HTTPError"})}),d.promise}(),minTime:5e3,maxTime:maxTime,newHost:opts.newHost})["finally"](function(){progress.stop()})}function fwRemoteUpgradeBegin(){function check(){devinfo.skipAuth.once("notice").then(function(result){_.isUndefined(result.fwupdateStatus)||0==result.fwupdateStatus?fwUpgradeEndOk(result):recheck(5e3)},recheck)}function recheck(time){fwupdateTimer.recheck=$timeout(check,time)}devinfo.suspendAll(),$rs.deviceMonitorConfig.definitelyLostThreshold=0,progress.start(fwupdateTimeout,"wizard_update_in_progress"),fwupdateTimer.end=$timeout(fwUpgradeEnd,fwupdateTimeout-fwupdateTimeStartCheck),recheck(fwupdateTimeStartCheck)}function fwUpgradeEnd(){devinfo.resumeAll(),$rs.deviceMonitorConfig.definitelyLostThreshold=3,fwupdateTimer.end&&$timeout.cancel(fwupdateTimer.end),fwupdateTimer.recheck&&$timeout.cancel(fwupdateTimer.recheck),progress.stop()}function fwUpgradeEndOk(result){_.isString(result)?(unloadHandler.before.clean(),location.href=$location.protocol()+"://"+$location.host()+":"+$location.port()):$window.location.reload(!0)}var progress=$rs.overlay.progress,circular=$rs.overlay.circular,fwupdateTimeStartCheck=6e4,fwupdateTimeout=3e5,fwupdateTimer={recheck:null,end:null};return{reboot:reboot,reset:function(cleanAll){var circular=$rs.overlay.circular,circularId=circular.start();return cpe.FactoryReset(cleanAll).then(function(){return $rs.dlinkMobileApp&&$rs.dlinkMobileApp.isUserInMobileApp()&&$rs.dlinkMobileApp.deviceResetStarted(),circular.stop(circularId),reboot({title:"reset_in_progress",maxTime:3e5,newHost:autoconf.BR2_PACKAGE_ANWEB_DEVICE_DEFAULT_IP})})},remoteUpdate:function(url,md5){function download(url,md5,transactionID){return cpe.Download("Firmware",url,md5,transactionID).then(function(res){var path;return res.result&&res.result.TransactionID?(path=url,res.result.SavedFirmware&&(path="file://"+res.result.SavedFirmware),download(path,md5,res.result.TransactionID)):Promise.resolve()})}var overlayId=circular.start();return download(url,md5).then(function(){return circular.stop(overlayId),fwRemoteUpgradeBegin(),Promise.resolve()},function(){circular.stop(overlayId),alert(translate("firmware_file_invalid"))})},changeDefaultParams:function(params){return ngDialog.open({template:"dialogs/change_pass/dialog.tpl.html",className:"change_pass_dialog",closeByDocument:!1,closeByEscape:!1,controller:ChangePassDialogCtrl,showClose:!1,data:params}).closePromise}}}])}();