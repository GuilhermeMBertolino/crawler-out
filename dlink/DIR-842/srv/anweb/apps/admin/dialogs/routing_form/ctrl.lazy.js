"use strict";angular.module("app").controllerProvider.register("RoutingDialogCtrl",function($scope,funcs,translate){function getInterfaceList(){if(!dialog.route)return[];var version=dialog.route.IPVersion,table=dialog.route.Table;return _.filter(config.Ifaces,function(item){if(!_.isEmpty(table)){var tableInfo=_.find(config.TableList[version],function(t){return t.Link==table});if(tableInfo){if(/Connection/.test(tableInfo.Origin))return"auto"==item.Value||item.Value==tableInfo.Iface?!0:!1;if(/Group/.test(tableInfo.Origin))return"auto"==item.Value||item.Value==tableInfo.Lan||_.contains(tableInfo.Wans,item.Value)||_.contains(tableInfo.VPN,item.Value)||item.CreateInterface?!0:!1}}return"All"==item.Version?!0:item.Version==version?!0:!1})}function isConfict(){return dialog.route?_.some(config.Routes,function(elem,index){return index==id?!1:!(elem.IPAddress!=dialog.route.IPAddress||elem.SubnetMask!=dialog.route.SubnetMask||(parseInt(elem.Metric)||0)!=(parseInt(dialog.route.Metric)||0)||autoconf.BR2_PACKAGE_ANWEB_DSYSINIT&&elem.Table!=dialog.route.Table||autoconf.BR2_PACKAGE_ANWEB_SWITCH&&(elem.InitVersion!=dialog.route.IPVersion||elem.Iface!=dialog.route.Iface))}):!1}var config=$scope.ngDialogData.config,id=$scope.ngDialogData.id,isNew=$scope.ngDialogData.isNew;$scope.dialog={isNew:isNew,header:isNew?"act_adding_of?name=routing_route&abr=name":"act_editing_of?name=routing_route&abr=name",route:null,protocolList:null,tableList:null,save:function(){function isFormValid(){function emptyFields(){return requiredFields.some(function(field){return!dialog.route[field]})}var requiredFields=["IPAddress"];return"IPv4"===dialog.route.IPVersion&&requiredFields.push("SubnetMask"),!$scope.routing_form.$invalid&&!isConfict()&&!emptyFields()}if(isFormValid()){if("IPv4"===dialog.route.IPVersion){var subnetIPv4=funcs.ipv4.subnet.getNetworkAddress(dialog.route.IPAddress,dialog.route.SubnetMask);if(subnetIPv4!=dialog.route.IPAddress)return void alert(translate("routing_dest_network_note")+" "+subnetIPv4+"/"+funcs.ipv4.mask["short"](dialog.route.SubnetMask))}$scope.closeThisDialog(dialog.route)}},getInterfaceList:getInterfaceList,gatewayRequired:function(){return"auto"==dialog.route.Iface},isConfict:isConfict,isSavingDisabled:function(){return __backupRoute&&_.isEqual(__backupRoute,dialog.route)},showEnabled:function(){return autoconf.BR2_PACKAGE_ANWEB_DSYSINIT},checkGateway:function(value){return value&&!funcs.is.ipv6(value)?"msg_invalid_ipv6":null},checkVLAN:function(value){return!value||value>4094||1>value?null:config.Ifaces.some(function(v){return v.VLANID==value})?null:"vlan_not_found"},changeTable:function(){var ifaces=getInterfaceList(),ifaceValues=_.pluck(ifaces,"Value");_.contains(ifaceValues,dialog.route.Iface)||(dialog.route.Iface=ifaceValues[0])},changeDefaultRoute:function(value){value?"IPv4"==dialog.route.IPVersion?(dialog.route.IPAddress="0.0.0.0",dialog.route.SubnetMask="0.0.0.0"):(dialog.route.IPAddress="::/0",dialog.route.SubnetMask=""):(dialog.route.IPAddress="",dialog.route.SubnetMask="")},validateName:function(value,type){return config.Routes.some(function(route){return route.__id!=dialog.route.__id&&route.Name==value})?"msg_error_value_is_not_uniq":null}};var dialog=$scope.dialog,backup={},__backupRoute=null;!function(){function getDefaultRoute(){return{Enable:!0,Iface:"auto",DefaultRoute:!1,VLANID:null,IPVersion:"IPv4",IPAddress:"",SubnetMask:"",GatewayAddress:"",Metric:"",Name:autoconf.BR2_PACKAGE_ANWEB_DSYSINIT?funcs.generateName("Route"):void 0,Table:getDefaultTable()}}function getDefaultTable(){if(!config.TableList)return"";var initTable=_.find(config.TableList.IPv4,function(c){return"Device.Network.Group.1."==c.Origin});return initTable?initTable.Link:config.TableList.IPv4[0]?config.TableList.IPv4[0].Link:""}function getRoute(id){return angular.copy(config.Routes[id])}dialog.route=isNew?getDefaultRoute():getRoute(id),dialog.protocolList=config.ProtocolList,dialog.tableList=config.TableList?config.TableList[dialog.route.IPVersion]:null;__backupRoute=angular.copy(dialog.route)}(),$scope.$watch("dialog.route.IPVersion",function(version,oldVersion){if(backup[oldVersion]=angular.copy({IPAddress:dialog.route.IPAddress,SubnetMask:dialog.route.SubnetMask,GatewayAddress:dialog.route.GatewayAddress}),backup[version]?(dialog.route.IPAddress=angular.copy(backup[version].IPAddress),dialog.route.SubnetMask=angular.copy(backup[version].SubnetMask),dialog.route.GatewayAddress=angular.copy(backup[version].GatewayAddress)):(dialog.route.IPAddress="",dialog.route.SubnetMask="",dialog.route.GatewayAddress=""),dialog.tableList=config.TableList?config.TableList[dialog.route.IPVersion]:null,dialog.tableList){var tableLinks=_.pluck(dialog.tableList,"Link");_.contains(tableLinks,dialog.route.Table)||(dialog.route.Table=dialog.tableList[0].Link)}var ifaceList=getInterfaceList(),ifaceValues=_.pluck(ifaceList,"Value");_.contains(ifaceValues,dialog.route.Iface)||(dialog.route.Iface=ifaceValues[0])}),$scope.getIfaceKey=function(name){return"routing_auto_iface"==name?translate("auto"):name}});