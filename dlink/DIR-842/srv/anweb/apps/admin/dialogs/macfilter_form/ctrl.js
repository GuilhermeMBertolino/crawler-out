"use strict";function MacFilterFormDialogCtrl($scope,funcs,translate,util){function isNotUniqRule(){return helper.isNotUniqRule($scope.dialog.config,$scope.dialog.rule,index)}function wasModified(){return __backupRule&&!_.isEqual(__backupRule,$scope.dialog.rule)}var rule=$scope.ngDialogData.rule,index=$scope.ngDialogData.index,target=$scope.ngDialogData.target,overlay=$scope.overlay.circular,overNames=_.pluck($scope.ngDialogData.overRules,"Name");$scope.dialog={header:"",action:null,rule:null,target:target,config:null,disableButtons:!1,save:function(){function updateClient(clientConfig){return clientConfig&&clientConfig.Client&&(changedConfig.Client=clientConfig.Client),Promise.resolve(changedConfig)}function checkChange(changedConfig){return helper.accessWillLost(changedConfig)?(alert(translate("macflt_warn_access")),Promise.reject()):Promise.resolve(changedConfig)}function errCb(){$scope.dialog.disableButtons=!1,overlay.stop(overlayId)}if($scope.form.$valid){var changedConfig=helper.changeConfig($scope.dialog.config,{editRules:{rule:$scope.dialog.rule,index:index}}),overlayId=overlay.start();$scope.dialog.disableButtons=!0,util.getClient().then(updateClient).then(checkChange).then(function(changedConfig){return $scope.closeThisDialog({changed:changedConfig,overlayId:overlayId})})["catch"](errCb)}},remove:function(){function updateClient(clientConfig){return clientConfig&&clientConfig.Client&&(changedConfig.Client=clientConfig.Client),Promise.resolve(changedConfig)}function checkChange(changedConfig){return helper.accessWillLost(changedConfig)&&!alert(translate("macflt_warn_access"))?Promise.reject():Promise.resolve(changedConfig)}function errCb(){$scope.dialog.disableButtons=!1,overlay.stop(overlayId)}var changedConfig=helper.changeConfig($scope.dialog.config,{removeIndexes:[index]}),overlayId=overlay.start();$scope.dialog.disableButtons=!0,util.getClient().then(updateClient).then(checkChange).then(function(changedConfig){return $scope.closeThisDialog({changed:changedConfig,overlayId:overlayId})})["catch"](errCb)},close:function(){$scope.closeThisDialog(null)},getActionList:function(){return[{name:"act_allow",value:"ACCEPT"},{name:"act_deny",value:"DROP"}]},getUsedMacList:function(){return helper.getUsedMacList($scope.dialog.config,index)},isSupported:function(param){return _.has($scope.dialog.rule,param)},isDisabledSave:function(){return $scope.dialog.disableButtons||!wasModified()||isNotUniqRule()},isDisabledRemove:function(){return $scope.dialog.disableButtons},isNotUniqRule:isNotUniqRule,wasModified:wasModified,checkNames:function(){return _.contains(overNames,$scope.dialog.rule.Name)?"name_exists":null}},rule&&($scope.useSchedule=rule.useSchedule?rule.useSchedule:!1);var helper,__backupRule=null;!function(){$scope.dialog.config=util.getConfig(),$scope.dialog.attrs=util.getAttrs(),helper=util.makeHelper(),_.isUndefined(index)?($scope.dialog.action="add",$scope.dialog.header=translate("macflt_add_rule"),$scope.dialog.rule=helper.getDefaultRule($scope.dialog.config,$scope.dialog.attrs),target&&($scope.dialog.rule.MACAddress=target)):($scope.dialog.action="edit",$scope.dialog.header=translate("macflt_edit_rule"),$scope.dialog.rule=angular.copy(rule)),__backupRule=angular.copy($scope.dialog.rule)}()}MacFilterFormDialogCtrl.$inject=["$scope","funcs","translate","macFilterUtil"];