"use strict";function LoginDialogCtrl($scope,$interval,nwPasswordService,devinfo,translate){function startBanTimer(banTimeRemain){function formatStr(count){return new Date(1e3*count).toUTCString().match(/\d\d:\d\d:\d\d/)[0]}$scope.fm.banTimeRemainStr=formatStr(banTimeRemain),intervalID=$interval(function(){banTimeRemain--,0>=banTimeRemain?($scope.fm.banTimeRemain=null,$scope.fm.banTimeRemainStr="",$scope.fm.errorMessage="",$interval.cancel(intervalID)):$scope.fm.banTimeRemainStr=formatStr(banTimeRemain)},1e3)}var body=angular.element(document.getElementsByTagName("body")),bodyClass="login_dialog_opened",intervalID=null;$scope.langList=autoconf.__lang_arr||["eng","rus"];var devInfo=devinfo;devInfo.init({need_auth:!1}),devInfo.once("version").then(function(res){$scope.devInfo={},$scope.devInfo.fw_name=res.modelName,$scope.devInfo.hwRevision=res.hwRevision,$scope.devInfo.fw_version=res.version,res.lang&&translate.changeLanguage(res.lang)},function(err){console.log(err)}),$scope.fm={username:"",password:"",tryCountRemain:$scope.ngDialogData.tryCountRemain,clientTryCount:$scope.ngDialogData.clientTryCount,banTimeRemain:$scope.ngDialogData.banTimeRemain,notAuthorized:$scope.ngDialogData.notAuthorized};var banTimeRemain=$scope.ngDialogData.banTimeRemain;banTimeRemain?(startBanTimer(banTimeRemain),$scope.fm.errorMessage="try-count-limit"==$scope.ngDialogData.banReason?"dlg_login_max_count_exc":"dlg_login_max_users_exc"):$scope.fm.errorMessage="",$scope.login=function(){var errorMessage="",username=$scope.fm.username,password=$scope.fm.password;username&&password||(errorMessage=username?"dlg_login_password_req":"dlg_login_username_req"),errorMessage?$scope.fm.errorMessage=errorMessage:$scope.closeThisDialog({username:$scope.fm.username,password:$scope.fm.password})},$scope.clear=function(){$scope.fm.username="",$scope.fm.password=""},$scope.$on("ngDialog.opened",function(){body.addClass(bodyClass)}),$scope.$on("ngDialog.closing",function(){body.removeClass(bodyClass),intervalID&&$interval.cancel(intervalID)})}