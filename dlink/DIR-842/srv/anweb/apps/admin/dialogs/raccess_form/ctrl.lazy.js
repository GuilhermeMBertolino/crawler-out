"use strict";angular.module("app").controllerProvider.register("RemoteAccessDialogCtrl",function($scope,translate,funcs,snackbars,raccessUtil,devinfo){function createBackup(rule){return angular.copy({IPs:rule.IPs,Mask:rule.Mask,Ports:{Source:rule.Ports.Source}})}function getProtocols(){var protocols=funcs.deepClone($scope.attrs.Protocols);return"ipv6"==$scope.ipVersion.value&&(protocols=_.filter(protocols,function(e){return"FTP"!=e.Name&&"SMB"!=e.Name&&"Transmission"!=e.Name})),_.find(protocols,{Name:"Transmission"})&&$scope.attrs.__hasTransmissionRule&&"Device.Services.Transmission."!=rule.Origin&&(protocols=_.filter(protocols,function(e){return"Transmission"!=e.Name})),_.find(protocols,{Name:"domoticz_nav"})&&$scope.attrs.__hasDomoticzRule&&"Device.Services.Domoticz."!=rule.Origin&&(protocols=_.filter(protocols,function(e){return"domoticz_nav"!=e.Name})),protocols}function inLANRange(type,addr){var fn="IPv6"==type?funcs.ipv6.subnet.belongNetworkRange:funcs.ipv4.subnet.belongNetworkRange;return lanSubnet&&"IPv6"!=type?fn(lanSubnet,addr):lanv6Subnet&&"IPv6"==type?fn(lanv6Subnet,addr):!1}function isFormValid(){var requiredFields=[],isIPv6="ipv6"===$scope.ipVersion.value;return $scope.enableAll||requiredFields.push("IPs"),$scope.enableAll||isIPv6||requiredFields.push("Mask"),isIPv6||requiredFields.push("Ports"),$scope.attrs.Defined.bcm_rlx&&requiredFields.push("Name"),function(pos){return $scope.raccess.Rules&&$scope.raccess.Rules[pos]?!angular.equals($scope.rule,$scope.raccess.Rules[pos]):!0}(pos)&&!$scope.raccess_form.$invalid&&!function(){return"99"==$scope.rule.Ports.Dest?!1:requiredFields.some(function(field){return"Ports"==field?!$scope.rule.Ports.Source:!$scope.rule[field]})}()}function checkData(){function checkEqual(rule){function isUniqueIPList(ruleIpList,currentIPList){return ruleIpList&&currentIPList?ruleIpList.length!=currentIPList.length?!1:_.some(ruleIpList,function(elem){var hasIP=_.find(currentIPList,{Addr:elem.Addr});return hasIP}):!0}return function(key){return"__id"==key||"Origin"==key||"Protocol"==key||"Name"==key||"Mask"==key||"useSchedule"==key?!0:"Iface"!==key||"auto"!==$scope.rule.Iface||rule.Iface?"Ports"==key?rule[key].Dest.toString()==$scope.rule[key].Dest.toString()&&rule[key].Source.toString()==$scope.rule[key].Source.toString():"IPList"==key?isUniqueIPList(rule[key],$scope.rule[key]):"IPs"==key?$scope.rule.IPs==rule.IPs&&$scope.rule.Mask==rule.Mask&&$scope.rule.Ports.Source.toString()==rule.Ports.Source.toString():rule[key]==$scope.rule[key]:!0}}if(!isFormValid())return!1;var keys=Object.keys($scope.rule);return $scope.raccess.Rules&&_.without($scope.raccess.Rules,$scope.raccess.Rules[pos]).some(function(rule){return keys.every(checkEqual(rule))})?(snackbars.add("raccess_rule_exists"),!1):!0}function isUniqueAddr(addr,inx){var allAddrs=funcs.deepClone(rule.IPList);return _.every(allAddrs,function(elem,key){return key==inx?!0:elem.Addr!=addr})}function setIfaces(version){var ifaces;if("ipv6"==version&&(ifaces=_.filter(backupIfaces,function(iface){return"USB"!=iface.Type||"IPv6"!=iface.Version&&"Dual"!=iface.Version?!iface.Type||"PPPoEDual"==iface.Type||-1!=iface.Type.indexOf("v6")||iface.SubLink&&iface.SubLink.includes(".DHCPv6."):!0})),"ipv4"==version)var ifaces=_.filter(backupIfaces,function(iface){return"USB"==iface.Type&&"IPv6"==iface.Version?!1:!iface.Type||-1==iface.Type.indexOf("v6")});_.forEach(ifaces,function(iface){iface.Link&&(iface.Value="ipv6"!=version||"PPPoEDual"!=iface.Type&&"PPPoEv6"!=iface.Type&&"PPTP"!=iface.Type?iface.Link:iface.SubLink)}),$scope.raccess.ifaceList=function(arr,param){var i,j,k=0,b=[];for(i=0;i<arr.length;i++){for(j=0;k>j&&b[j][param]!=arr[i][param];)j++;j==k&&(b[k]=arr[i],k++)}return b}(ifaces,"Name"),_.findWhere($scope.raccess.ifaceList,{Value:$scope.rule.Iface})||($scope.rule.Iface="auto")}var protocol,lanSubnet,lanv6Subnet,pos=$scope.ngDialogData.pos,rule=$scope.rule=angular.copy($scope.ngDialogData.rule),backupIfaces=angular.copy($scope.raccess.Ifaces);$scope.config=raccessUtil.getConfig(),rule&&($scope.useSchedule=rule.useSchedule),_.has(rule,"IsIPv6")||(rule.IsIPv6=!1),$scope.ipVersion={list:["ipv4","ipv6"],value:rule.IsIPv6?"ipv6":"ipv4"},setIfaces($scope.ipVersion.value),devinfo.once("net").then(function(result){result&&(lanSubnet=funcs.ipv4.subnet.getNetworkRange(result.lan[0].ip,result.lan[0].mask)),result&&result.lan[0].ipv6&&(lanv6Subnet=funcs.ipv6.subnet.getNetworkRange(result.lan[0].ipv6.split("/")[0],result.lan[0].ipv6.split("/")[1]))}),rule&&($scope.useSchedule=rule.useSchedule?rule.useSchedule:!1),$scope.changeProtocol=function(dport){var protocol=_.find($scope.protocols,{Value:dport})||$scope.protocols[0];rule.Protocol=protocol.Name,rule.Ports.Dest=protocol.Value,rule.Ports.Source=void 0!==protocol.Source?protocol.Source:angular.copy(dport)},$scope.protocols=getProtocols(),$scope.enableAll=function(rule){return"::"===rule.IPs&&""===rule.Mask||"0.0.0.0"===rule.IPs&&"0.0.0.0"===rule.Mask}(rule),rule.Ports&&(protocol=_.find($scope.protocols,{Value:rule.Ports.Dest}),rule.Protocol=protocol&&protocol.Name),$scope.header="act_"+($scope.ngDialogData.isNew?"add":"edit")+"_rule",rule.Ports||(rule.Ports={Source:$scope.attrs.Protocols[0].Value}),rule.Ports&&!rule.Ports.Source&&rule.Ports.Dest&&"99"!=rule.Ports.Dest&&(rule.Ports.Source=$scope.attrs.Protocols[0].Value),rule.Ports&&rule.Ports.Dest||(rule.Ports.Dest=$scope.attrs.Protocols[0].Value,$scope.changeProtocol(rule.Ports.Dest));var __backupRule=angular.copy(rule);$scope.getProtocolName=function(name){return translate(name)+("domoticz_nav"==name?" (https)":"")},$scope.$watch("ipVersion.value",function(value,oldValue){if(value!=oldValue){$scope.protocols=getProtocols();var newVersion=value,oldVersion=oldValue,backup=funcs.deepClone($scope.enableAll?$scope.attrs.BackupStorage.enabled:$scope.attrs.BackupStorage.disabled);rule.IsIPv6="ipv6"==newVersion,oldVersion&&(backup[oldVersion]=createBackup(rule)),newVersion&&backup[newVersion]&&(rule.IPs=angular.copy(backup[newVersion].IPs),rule.Mask=angular.copy(backup[newVersion].Mask),rule.IPList=[{Addr:""}],$scope.changeProtocol(rule.Ports.Dest||backup[newVersion].Ports.Source)),setIfaces(newVersion)}},!0),$scope.changeEnabled=function(value){$scope.enableAll=value;var oldBackup=funcs.deepClone(value?$scope.attrs.BackupStorage.enabled:$scope.attrs.BackupStorage.disabled),newBackup=funcs.deepClone(value?$scope.attrs.BackupStorage.enabled:$scope.attrs.BackupStorage.disabled),version=$scope.ipVersion.value;oldBackup[version]=createBackup(rule),newBackup[version]&&(rule.IPs=angular.copy(newBackup[version].IPs),rule.Mask=angular.copy(newBackup[version].Mask))},$scope.$watch("rule.Ports.Dest",function(){$scope.showProtocol="99"==$scope.rule.Ports.Dest?!1:!0},!0),$scope.save=function(){checkData()&&(rule.Ports.Source=rule.Ports.Source.toString(),$scope.raccess.IPd&&(rule.IPd=funcs.deepClone($scope.raccess.IPd)),$scope.closeThisDialog({changed:rule}))},$scope.isSavingDisabled=function(){return _.isEqual($scope.rule,__backupRule)},$scope.validateIpPartner=function(addr,msk){return addr&&!funcs.is.ipv4(addr)?"msg_invalid_ipv4":addr&&funcs.is.mask(msk)&&addr!=funcs.ipv4.subnet.getNetworkAddress(addr,msk)?"msg_invalid_ipv4_subnet":"0.0.0.0"==addr?"msg_not_allowed_addr":null},$scope.validateNetworkIpv4=function(addr){return addr&&!funcs.is.ipv4(addr)?"msg_invalid_ipv4":addr&&inLANRange("IPv4",addr)?"raccess_ip_in_local_network":null},$scope.validateNetworkIpv6=function(addr){var arr,ipv6,ipv6Subnet;return _.isEmpty(addr)?void 0:(arr=addr.split("/"),addr&&!funcs.is.ipv6(arr[0])?"msg_invalid_network_address_v6":(ipv6=funcs.ipv6.address.full(arr[0]),ipv6Subnet=funcs.ipv6.address.full(funcs.ipv6.subnet.getNetworkAddress(ipv6,arr[1])),addr&&ipv6.toLowerCase()!=ipv6Subnet||arr[1]&&!funcs.is.ipv6Prefix(arr[1])?"msg_invalid_ipv6_subnet":addr&&inLANRange("IPv6",addr)?"raccess_ip_in_local_network":null))},$scope.checkPort=function(){var port,busyPorts=_.filter($scope.raccess.UsedSourcePorts,function(elem){return"tr69"==elem.Section&&"TR"==rule.Protocol?!1:elem.Ports.Start&&elem.Ports.End?rule.Ports.Source>=elem.Ports.Start&&rule.Ports.Source<=elem.Ports.End:elem.Ports.Start?rule.Ports.Source==elem.Ports.Start:elem.Ports.End?rule.Ports.Source==elem.Ports.End:void 0});if(_.size(busyPorts))switch(port=_.first(busyPorts),port.Section){case"vservers":return"raccess_port_busy";case"tr69":return"raccess_port_busy_tr69";case"ipfilter":return"raccess_port_busy_ipfilter"}return~$scope.attrs.SystemPorts.indexOf(rule.Ports.Source)?"raccess_system_port_busy":$scope.raccess.Rules&&_.without($scope.raccess.Rules,$scope.raccess.Rules[pos]).some(function(rule){return rule.Ports.Dest==$scope.rule.Ports.Dest?!1:rule.Ports.Source==$scope.rule.Ports.Source&&rule.IsIPv6==$scope.rule.IsIPv6?!0:!1})?"raccess_port_busy_another_protocol":null},$scope.addAddr=function(){rule.IPList.push({Addr:""}),$scope.network_addr_focus=!0},$scope.removeAddr=function(ip,inx){rule.IPList.splice(inx,1)},$scope.checkIP=function(addr,inx){if(!addr)return null;if(!funcs.is.ipv4Network(addr))return"msg_invalid_ipv4_subnet";var ip=addr.split("/")[0],mask=addr.split("/")[1],net=funcs.ipv4.address.and(ip,funcs.ipv4.mask["long"](mask));return ip!=net?"msg_invalid_ipv4_subnet":isUniqueAddr(addr,inx)?null:"msg_error_value_is_not_uniq"},$scope.checkIPv6=function(addr,inx){addr.split("/")[0];return isUniqueAddr(addr,inx)?null:"msg_error_value_is_not_uniq"},$scope.isSupported=function(param){return _.has(rule,param)},$scope.checkUniqName=function(name){if(!name)return null;var exist=_.find($scope.raccess.Rules,function(r){return r.__id!=rule.__id&&r.Name==name});return exist?"name_exists":null}});