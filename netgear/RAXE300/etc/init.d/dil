#!/bin/sh

SVC="fing_dil"

#start_service used to start and recovery fing module for openWRT 
start_service() {
  echo "start_service *************"
  procd_open_instance $SVC
  procd_set_param command /usr/bin/fing_dil  
  procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-60} ${respawn_retry:-5}
  procd_set_param limits core="unlimited"
  procd_close_instance
}

boot() {
  echo "boot *************"
  /etc/init.d/dilboot
  start
}

stop_service() {
  echo "stop_service *************"
  kill -17 1
  rm /tmp/fing_dil.log
  return 0
}

restart() {
  echo "Restart_service *************"
  stop
  start
  return 0
}

shutdown() {
  return 0
}

#start_nonopenwrt used for NH ODM to start fing module 
#Just call this procedure to start fing module for NH SKUs
start_nonopenwrt() {
  echo "start fing module for Non openWRT ********* "
  /etc/init.d/dilboot
  /usr/bin/fing_dil &
  #<< PEGA Mark: support DAL logs
  if [ -e /data/dal/log_dal_when_bootup ]; then
      d2 -c dallogcfg[0].FingConfigurationApply false
      sleep 1
      setlogLevelForDAL.sh fing_dil LOG_DEBUG false true
  fi
  #PEGA >>
}

pudil_up_wlan_clients() {
  WIFI_IFS="wl0 wl0.1 wl1 wl1.1 wl2 wl2.1";
  for wlif in $WIFI_IFS;
  do
    echo $wlif
    for mac in `wl -i $wlif assoclist | grep -o -E '([0-9a-fA-F]{2}:){5}([0-9a-fA-F]{2})'`;
    do
      echo "  pudil -m $mac 6 up"
      pudil -m $mac 6 up
    done
  done
}

case "$1" in
	start)
		echo -e "\033[35mStarting dil...\033[0m"
		start_nonopenwrt
		pudil_up_wlan_clients

		# In DAL V1.3.66, it add seal_randcron script for fing
		# move create_cronjon.init code to this section
		echo -e "\033[35mSeal_randcron...\033[0m"
		/usr/bin/seal_randcron daily_fing_query
		exit 0
		;;

	stop)
		echo "Stopping dil..."
		stop_service
		exit 0
		;;

	*)
		echo "\033[35m$0: unrecognized option $1\033[0m"
		exit 1
		;;

esac
