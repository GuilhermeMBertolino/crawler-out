#!/bin/sh
# Configure WiFi parameters
# Needed objects: Device.WiFi

script_name="$0"

[ ! "$LIB_COMMON_SOURCED" ] && . /tmp/fapi_wlan_wave_lib_common.sh

interface_name=wlan0
pid=$$

# Find the interface index
interface_index=`find_index_from_interface_name $interface_name`

[ -z $interface_index ] && interface_index=0

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the in conf file
[ "$debug_save_conf" ] && cp ${IN_CONF} ${TEMP_DIR}/wifi_set_in_conf

# Save the input configuration parameters to a local DB used by Wave FAPI and source it
wifi_index=`map_param_index Object $WIFI_OBJECT`
[ -n "$wifi_index" ] && save_db_params wifi_set all $wifi_index 0
local_db_source WIFI

print2log $interface_index DEBUG "$script_name $*"
timestamp $interface_index "$script_name:$interface_name:begin"

params_check_array="WaveDisableAHB WaveUseSinglePCI WaveFastpathEnabled
				WaveBclEnabled WaveBclEnabled WaveDualPciEnabled
				WaveFastRecoveryEnabled WaveFastRecoveryLimit WaveFullRecoveryEnabled
				WaveFullRecoveryLimit WaveRecoveryNumOfDumps WaveRecoveryTimer
				WaveAutoRecoveryDumpsEnabled WaveRecoveryEnabled"
fast_init_needed="0"
for param in $params_check_array
do
	grep $param ${IN_CONF} && fast_init_needed="1" && break
done

# If params_check_array was changed, clear CONF_DIR and rmmod-insmod the system
if [ "$fast_init_needed" = "1" ]; then
	if [ "$(is_cdb_dual)" = "1" ]; then
		## Update wlan2 DB same as wlan0. This is the same card from recovery point of view.
		test `grep WaveFastRecoveryEnabled ${IN_CONF}` && update_cdb_db_recovery $interface_index "WaveFastRecoveryEnabled" $IN_CONF
		test `grep WaveFastRecoveryLimit ${IN_CONF}` && update_cdb_db_recovery $interface_index "WaveFastRecoveryLimit" $IN_CONF
		test `grep WaveFullRecoveryEnabled ${IN_CONF}` && update_cdb_db_recovery $interface_index "WaveFullRecoveryEnabled" $IN_CONF
		test `grep WaveFullRecoveryLimit ${IN_CONF}` && update_cdb_db_recovery $interface_index "WaveFullRecoveryLimit" $IN_CONF
		test `grep WaveRecoveryNumOfDumps ${IN_CONF}` && update_cdb_db_recovery $interface_index "WaveRecoveryNumOfDumps" $IN_CONF
		test `grep WaveRecoveryTimer ${IN_CONF}` && update_cdb_db_recovery $interface_index "WaveRecoveryTimer" $IN_CONF
		test `grep WaveAutoRecoveryDumpsEnabled ${IN_CONF}` && update_cdb_db_recovery $interface_index "WaveAutoRecoveryDumpsEnabled" $IN_CONF
	fi
	sync
	(. $ETC_PATH/fapi_wlan_wave_complete_recovery wlan0 NO_DUMPS)
	# Create the output configuration file
	cat /dev/null > ${OUT_CONF}
	rm -rf ${CONF_DIR}

	# Configuration is completed successfully
	update_conf_out "wlan_configuration_status" "success"
	print2log $interface_index ATTENTION "###################################################"
	print2log $interface_index ATTENTION "      WAIT... for system to complete init 	     "
	print2log $interface_index ATTENTION "###################################################"
	sleep 2
	exit 0
fi

#comment="___Radio_parameters___###"

# Define list of radio parameters
driver_params=""

driver_otf_params=""

hostapd_params=""

# Prepare the temporary configuration files to use
#prepare_confs $interface_name $interface_name $pid $AP
# Get the pid to use in this configuration session
#. ${CONF_IN_PROGRESS}_${interface_name}

# Read current values and initiate new values file.


# Calculate new values.
# TODO

# Write the parameters to the configuration files.

# Create the output configuration file
cat /dev/null > ${OUT_CONF}

# Configuration is completed successfully
update_conf_out "wlan_configuration_status" "success"

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the out conf file
[ "$debug_save_conf" ] && cp ${OUT_CONF} ${TEMP_DIR}/WIFI_set_out_conf

print2log $interface_index DEBUG "$script_name done"
timestamp $interface_index "$script_name:$interface_name:done"
