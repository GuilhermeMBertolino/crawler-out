#!/bin/sh


mkdir -p /tmp/ipv6info
WANNAME=$1.info
FILE=/tmp/ipv6info/$WANNAME

mkdir -p /tmp/ipv6prefix
FPATH=/tmp/ipv6prefix
FILE_VALID=$FPATH/$1.validpre
FILE_DEPRE=$FPATH/$1.deprepre
DEPRE_PREFIX=$FPATH/deprecated
CHAINNAME=PREFIXES
laninf="br-lan"


disabled=$(cat /etc/disable_prefixes)

if [ "$disabled" == "1" ]; then
	echo "disabled return" >> /tmp/ipv6.log
	return;
fi


(ip6tables -n -L FORWARD)
if [ "$?" == "0" ]; then
	ip6tables -C FORWARD -s fc00::/7 -j DROP
	if [ "$?" != "0" ]; then
		ip6tables -I FORWARD -s fc00::/7 -j DROP 
		echo "inserting fc00 drop rule" >> /tmp/ipv6.log
	fi

	ip6tables -C FORWARD -d fc00::/7 -j DROP
	if [ "$?" != "0" ]; then
		ip6tables -I FORWARD -d fc00::/7 -j DROP
		echo "inserting fc00 drop rule" >> /tmp/ipv6.log
	fi
fi		

(ip6tables -n -L $CHAINNAME)
if [ "$?" != "0" ]; then
	echo "Chain return $?" >> /tmp/ipv6.log
	return
fi		

if [ ! -f $DEPRE_PREFIX ]; then
	touch $DEPRE_PREFIX
fi
	
echo interface $1 >> /tmp/ipv6.log
echo event $2 >> /tmp/ipv6.log
echo prefixes $PREFIXES >> /tmp/ipv6.log
echo $* >> /tmp/ipv6.log

update_dns()
{
	if [ "${1}z" != 'z' ]; then
		for d in "$@"
		do
			uci add_list dhcp.lan.dns="$d"
		done
	fi	
}

delete_dns()
{
	if [ "${1}z" != 'z' ]; then
		for d in "$@"
		do
			uci del_list dhcp.lan.dns="$d"
		done
	fi	
}

update_domain()
{
	if [ "${1}z" != 'z' ]; then
		for d in "$@"
		do
			uci add_list dhcp.lan.domain="$d"
		done
	fi	
}

delete_domain()
{
	if [ "${1}z" != 'z' ]; then
		for d in "$@"
		do
			uci del_list dhcp.lan.domain="$d"
		done
	fi	
}
replace()
{
	if [ ! -f $FILE ]; then
		fn=$(ls -t /tmp/ipv6info/ | head -n1)
		if [ "$fn" != "" ] ; then
			dns=$(awk -F'=' '{if ($1== "dns"){print $2;}}' /tmp/ipv6info/$fn)
			domain=$(awk -F'=' '{if ($1== "domain"){print $2;}}' /tmp/ipv6info/$fn)	
			delete_dns $dns
			delete_domain $domain
		fi	
		echo dns="$RDNSS" >> $FILE
        	echo domain="$DOMAINS" >> $FILE 
        	update_dns $RDNSS
        	update_domain $DOMAINS       
        fi	
	
	dns=$(awk -F'=' '{if ($1== "dns"){print $2;}}' $FILE)
	domain=$(awk -F'=' '{if ($1== "domain"){print $2;}}' $FILE)
        fn=$(ls -t /tmp/ipv6info/ | head -n1)                      
        if [ /tmp/ipv6info/"$fn" != "$FILE" ] ; then               
                return                                             
        fi
	echo dns="$RDNSS" > $FILE
       	echo domain="$DOMAINS" >> $FILE 
	delete_dns $dns
	delete_domain $domain
	cpe_domain=$(uci show dhcp.lan.domain)
	cpe_domain=`echo $cpe_domain | awk '{split ($0,arr,"=")} END {print arr[2]}'`
        if [ "$cpe_domain" != "" ];then
	        if [ "$domain" != "$cpe_domain" ];then
			domain_flag=1
	                delete_domain $cpe_domain
                fi
        fi
	update_dns $RDNSS
	update_domain $DOMAINS
        if [ "$domain_flag" == "1" ];then
		update_domain $cpe_domain
	fi
	uci commit dhcp
}


update_prefix_info()
{
        prefix=$(echo "$PREFIXES"| cut -d, -f1)
        if [ $prefix != "" ]; then
	        if [ -f $FILE_VALID ]; then
        	        curprefix=$(awk -F'=' '{if ($1== "prefix"){print $2}}' $FILE_VALID)
                	if [ "$curprefix" != "$prefix" ]
                	then
                        	mv $FILE_VALID $FILE_DEPRE
                		deprecate $curprefix
                	fi
        	fi
        	echo prefix="$prefix" > $FILE_VALID
        	sed -i s#$prefix##g $DEPRE_PREFIX
        	sed -i '/^$/d' $DEPRE_PREFIX
        	preftime=$(echo "$PREFIXES" | cut -d, -f2)
	        if [ $preftime != "" ]; then
       		 	echo preftime="$preftime" >> $FILE_VALID
       		fi	
        	validtime=$(echo "$PREFIXES" | cut -d, -f3)
	        if [ $validtime != "" ]; then
	        	echo validtime="$validtime" >> $FILE_VALID
       		fi	
        fi	
}
deprecate()
{
	echo "deprecate" >> /tmp/ipv6.log
	for file in $FPATH/*.validpre
	do
		curprefix=$(awk -F'=' '{if ($1== "prefix"){print $2}}' $file)
		if [ "$curprefix" != "" ]; then
			if [ "$curprefix" == "$1" ]; then
				return;
			fi
		fi		
	done
        echo $1 >> $DEPRE_PREFIX
}
populate()
{
	for file in $FPATH/*.validpre
	do
		if [ "$file" != "" ]; then
			echo file $file >> /tmp/ipv6.log
			curprefix=$(awk -F'=' '{if ($1== "prefix"){print $2}}' $file)
			echo 1cureprefix $curprefix >> /tmp/ipv6.log
			if [ "$curprefix" != "" ]; then
				echo cureprefix $curprefix >> /tmp/ipv6.log
				ip6tables -A $CHAINNAME -i $laninf -s $curprefix -j RETURN
				ip6tables -A $CHAINNAME ! -i $laninf -d $curprefix -j RETURN
			fi	
		fi	
	done	
	
	if [ -f $DEPRE_PREFIX ]; then
		while read prefixes 
		do
	   		if [ ! -z "$prefixes" ]; then	
				ip6tables -A $CHAINNAME ! -i $laninf -d $prefixes -j REJECT --reject-with icmp6-policy-fail-to-gateway
				ip6tables -A $CHAINNAME -i $laninf -s $prefixes -j DROP
	   		fi
		done <$DEPRE_PREFIX 
	fi	
	
}

clean()
{
	ip6tables -F $CHAINNAME
	echo clean >> /tmp/ipv6.log
}
case $2 in
bound)
	replace
	echo bound and update >> /tmp/ipv6.log
	update_prefix_info
	clean
	populate
	;;
updated)
	replace
	update_prefix_info
	clean
	populate	
	;;
ra-updated)
	replace
	update_prefix_info
	clean
	populate	
	;;
unbound)
        delete_dns $RDNSS
        delete_domain $DOMAINS
	rm -f $FILE
	fn=$(ls -t /tmp/ipv6info/ | head -n1)
	if [ "$fn" != "" ] ; then
		config_dns=$(uci show dhcp.lan.dns)
		dns=$(awk -F'=' '{if ($1== "dns"){print $2;}}' /tmp/ipv6info/$fn) 
		if [ "${config_dns#*$dns}" == "$config_dns" ] ; then
			update_dns $dns
		fi

		config_domain=$(uci show dhcp.lan.domain)
		domain=$(awk -F'=' '{if ($1== "domain"){print $2;}}' /tmp/ipv6info/$fn)  
		if [ "${config_domain#*$domain}" == "$config_domain" ] ; then
			update_domain $domain
		fi
	fi
	uci commit dhcp

	if [ -f $FILE_VALID ]; then
                curprefix=$(awk -F'=' '{if ($1== "prefix"){print $2}}' $FILE_VALID)
               	deprecate $curprefix 
		ip -6 route add $curprefix dev lo
		echo last-cmd-status "$?" curprefix $curprefix   >> /tmp/ipv6.log
		mv $FILE_VALID $FILE_DEPRE 
	fi	
	clean
	populate	
	;;
esac
