<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Pragma" content="no-cache">
<meta http-equiv="Cache-Control" content="no-cache">
<meta http-equiv="Expires" content="Mon, 06 Jan 1990 00:00:01 GMT">
<meta name="description" content="@model_name#_multilangual">
<title>NETGEAR Router @model_name#</title>
<script language="javascript" type="text/javascript" src="string.js"></script>
<link rel="stylesheet" href="style/form.css">
<script language="javascript" type="text/javascript" src="funcs.js"></script>
<!-- link rel="stylesheet" href="form.css" -->
<style type="text/javascript">
	classes.num.all.fontFamily = "Courier";
	classes.num.all.fontSize = "10pt" ;
</style>
<script language="javascript" type="text/javascript" src="utility.js@js_css_suffix#"></script>
<script language="javascript" type="text/javascript" src="linux.js"></script>
<script language="javascript" type="text/javascript">
<!-- hide script from old browsers
var NTP_isOK = 0;
var wps_mode = "@wps_mode#";
var wps_avoid_pin = "@wps_avoid_pin#";
var smart_conn_enable = "@wifi_smart_connect_enable#";
var DisableFixedIP = false;
var DisableFixedDNS = false;
var opmode="@opmode_support#";
function check_network_name(netName)
{
	var i, num;
	var msg = "";
    if(netName.length == 0)
    {
        msg = getErrorMsgByVar("gsm_msg_dev_name_blank");
        return msg;
    }
	for (num = 0, i = 0; i < netName.length; i++) {
		var c = netName.charAt(i);
		if (!((c >= '0' && c <= '9') || (c >= 'a' && c <= 'z')
			|| (c >= 'A' && c <= 'Z') || c == '-')) {
			    msg += (c +" ");
			}
	}
	if (msg.length >= 1)
	{
		msg = getErrorMsgByVar("gsm_msg_usb_inv_char_network_name") + msg;
		return msg;
	}

	return msg;
}

function default_turnoff()
{
	var cf = document.forms[0];
	var year = @rt_now_year#;
	if(year >= 2010)
		NTP_isOK = 1; //if NTP doesn't work, wifi schedule should gray-out

    // 2.4G Hz
	if(cf.h_wireless_schedule.value == "enable")
	{
		cf.wireless_schedule.checked=true;
		document.getElementById("turnOff_WS").style.color = "black";
	}
	else
    {
		cf.wireless_schedule.checked=false;
		document.getElementById("turnOff_WS").style.color = "gray";
	}
	if(cf.h_enable_ap.value=="enable")
		cf.enable_ap.checked=true;
	else
		cf.enable_ap.checked=false;
	if(NTP_isOK == 1)
	{
		dis_turnoff();
	}
	else
	{
		cf.wireless_schedule.disabled = true;
		cf.add_period.disabled = true;
		cf.edit_period.disabled = true;
		cf.delete_period.disabled = true;
	}

    // 5G Hz
	if(cf.h_wireless_schedule_an.value == "enable")
	{
		cf.wireless_schedule_an.checked=true;
		document.getElementById("turnOff_WS_an").style.color = "black";
	}
	else
    {
		cf.wireless_schedule_an.checked=false;
		document.getElementById("turnOff_WS_an").style.color = "gray";
	}
	if(cf.h_enable_ap_an.value=="enable")
		cf.enable_ap_an.checked=true;
	else
		cf.enable_ap_an.checked=false;
	if(NTP_isOK == 1)
	{
		dis_turnoff_an();
	}
	else
	{
		cf.wireless_schedule_an.disabled = true;
		cf.add_period_an.disabled = true;
		cf.edit_period_an.disabled = true;
		cf.delete_period_an.disabled = true;
	}

}

function dis_turnoff()
{
	var cf = document.forms[0];
	if(cf.enable_ap.checked==false && NTP_isOK == 1)
	{
		cf.wireless_schedule.checked = false;
		cf.wireless_schedule.disabled = true;
		document.getElementById("turnOff_WS").style.color = "gray";
		cf.add_period.disabled = true;
		cf.edit_period.disabled = true;
		cf.delete_period.disabled = true;
	}
	if(cf.enable_ap.checked==true && NTP_isOK == 1)
	{
		cf.wireless_schedule.disabled = false;
		document.getElementById("turnOff_WS").style.color = "black";
		cf.add_period.disabled = false;
		cf.edit_period.disabled = false;
		cf.delete_period.disabled = false;
	}
}
function dis_turnoff_an()
{
	var cf = document.forms[0];
	if(cf.enable_ap_an.checked==false && NTP_isOK == 1)
	{
		cf.wireless_schedule_an.checked = false;
		cf.wireless_schedule_an.disabled = true;
		document.getElementById("turnOff_WS_an").style.color = "gray";
		cf.add_period_an.disabled = true;
		cf.edit_period_an.disabled = true;
		cf.delete_period_an.disabled = true;
	}
	if(cf.enable_ap_an.checked==true && NTP_isOK == 1)
	{
		cf.wireless_schedule_an.disabled = false;
		document.getElementById("turnOff_WS_an").style.color = "black";
		cf.add_period_an.disabled = false;
		cf.edit_period_an.disabled = false;
		cf.delete_period_an.disabled = false;
	}
}
function schedule_add(amode)
{
    var cf = document.forms[0];
    if(amode == 0)
    {
        cf.nBand.value= "24G";
        cf.todo.value="schedule_add";
        cf.submit();
    }
    else
    {
        cf.nBand.value= "5G";
        cf.todo.value="schedule_add";
        cf.submit();
    }
     return true ;
}

function checkData( save_only )
{
	var cf = document.forms[0];
	var msg = "";

	if(!showWpsAlert()) return false;
	if(checkInt(cf.frag, "", 256, 2346, true).length > 0)
	{
		msg += getErrorMsgByVar("gsm_msg_wls_fragm_throd");
	}
	if(checkInt(cf.rts, "", 1, 2347, true).length > 0)
	{
		msg += 	getErrorMsgByVar("gsm_msg_wls_crts_throd");
	}
	if(checkInt(cf.frag_an, "", 256, 2346, true).length > 0)
	{
		msg += getErrorMsgByVar("gsm_msg_wls_fragm_throd");
	}
	if(checkInt(cf.rts_an, "", 1, 2347, true).length > 0)
	{
		msg += 	getErrorMsgByVar("gsm_msg_wls_crts_throd");
	}
	if(wps_avoid_pin=="1")
	{
		if(checkInt(cf.max_pin_failed, "", 1, 10, true).length > 0)
		{
			msg += 	addstr(getErrorMsgByVar("gsm_msg_outofrange"),cf.max_pin_failed.value,'1','10');
		}
	}
	if("@wifi_router_apcli_function_enable#"=="1")
	{
		if(cf.enable_other_mode.checked == true)
		{
			if (cf.device_name.value == "")
				msg+= getErrorMsgByVar("gsm_msg_dev_name_blank");

			if (cf.device_name.value.match( /[^(\x20-\x7E\xA0)]/ ))
			{
				cf.device_name.focus();
				msg+= getErrorMsgByVar("gsm_msg_dev_name_invalid");
			}
			cf.device_name.value = cf.device_name.value.replace(/\xA0/g," ");
			if(cf.enable_bridge_mode.checked)
			{
				if (cf.bridge_Assign.checked == false)
				{
					if(badLANIP(cf.bridge_ether1,cf.bridge_ether2,cf.bridge_ether3,cf.bridge_ether4,254)
						|| (parseInt(cf.bridge_ether4.value, 10)==0))
						msg+= getErrorMsgByVar("gsm_msg_eth_inv_ip");
					if(badMASK(cf.bridge_Mask1,cf.bridge_Mask2,cf.bridge_Mask3,cf.bridge_Mask4))
						msg+= getErrorMsgByVar("gsm_msg_eth_inv_mask");
					//Gateway last byte could be zero
					if(badSubLANIP(cf.bridge_Gateway1,cf.bridge_Gateway2,cf.bridge_Gateway3,cf.bridge_Gateway4,254))
						msg+= getErrorMsgByVar("gsm_msg_eth_inv_gateway");
					if (msg.length > 1)
					{
						alert(msg);
						return false;
					}
					/* check IP setting valid */
					var bridge_ether = cf.bridge_ether1.value + "." + cf.bridge_ether2.value + "." + cf.bridge_ether3.value +"." + cf.bridge_ether4.value;
					var bridge_Mask = cf.bridge_Mask1.value + "." + cf.bridge_Mask2.value + "." + cf.bridge_Mask3.value +"." + cf.bridge_Mask4.value;
					var fixgw = cf.bridge_Gateway1.value + "." + cf.bridge_Gateway2.value + "." + cf.bridge_Gateway3.value +"." + cf.bridge_Gateway4.value;
					if(IsGatewayValid(bridge_ether, bridge_Mask, fixgw) == false){
						msg += getErrorMsgByVar("gsm_msg_eth_inv_gateway");
					}
				}
				if (cf.bridge_DNSAssign.checked == false)
				{
					msg += checkDNSValid(
							cf.bridge_DAddr1, cf.bridge_DAddr2, cf.bridge_DAddr3, cf.bridge_DAddr4,
							cf.bridge_PDAddr1, cf.bridge_PDAddr2, cf.bridge_PDAddr3, cf.bridge_PDAddr4);
				}
			}
		}
	}
    
	if(msg.length > 1)
	{
		alert(msg);
		return false;
	}
    if(cf.h_wl0_on.value == 0)
    {
		//cf.wsc_config.checked = (cf.h_wsc_config.value == "enable");
	}
	if(cf.h_wl1_on.value == 0)
    {
		//cf.wsc_config_an.checked = (cf.h_wsc_config_an.value == "enable");
	}
	dataToHidden(cf);
	cf.h_ruleSelect_an.value = getRadioCheckedValue(cf.priod_select_an);
	cf.ruleSelect_an.value = getRadioCheckedValue(cf.priod_select_an);
	cf.ruleSelect.value = getRadioCheckedValue(cf.priod_select);
	cf.h_ruleSelect.value = getRadioCheckedValue(cf.priod_select);
	if("@wifi_router_apcli_function_enable#"=="1")
	{
		if(cf.enable_other_mode.checked == true)
		{
			if(cf.enable_bridge_mode.checked)
				cf.h_enable_bridge_mode.value="1";
			else
				cf.h_enable_bridge_mode.value="0";
		}
	}
	//alertR("LLLLLLLLLLLLLLLLLLLLL");
	if( save_only == 1)
		cf.save_only.value = "1";
	else
		cf.save_only.value = "0";

//	if ( save_only == 1)
//		return true;

	return true;
}

var idx_number = 2; //parseInt("@h_idxn#");
var idx_name_all = "802.11G,802.11N";
var idx_nameArr = idx_name_all.split(",");
if( idx_nameArr.length!= idx_number)
	idx_nameArr=Array(idx_number); //prevent error
if( idx_nameArr.length != idx_number){
	alert("MAJOR ERROR: nvram pvcn:" + idx_number + "does not match with idx_names:" + idx_nameArr.length + "!");
}
autoNameIDX(); //preven ssidX without a name

function autoNameIDX(){
	var n;
	for (n=0 ; n<idx_nameArr.length ; n++ ){
		if ( idx_nameArr[n].length==0){
			idx_nameArr[n] = "UnnamedIf"+(n+1);
		}
	}
}

function show_idx()
{
	var cf = document.forms[0];
	cf.idx_num.options.length=0;//flush out all the items

	for(i=0;i<idx_nameArr.length;i++){
		cf.idx_num.options[i] = new Option(idx_nameArr[i], (i) +"");
	}
}

function init()
{
	var cf = document.forms[0];

	if(cf.h_pin_enable.value == "enable"){
		document.getElementById("wPIN1").style.color = "black";
		document.getElementById("wPIN2").style.color = "black";
		if(wps_avoid_pin=="1")
		document.getElementById("div_wps_auto_lockdown").style.display = "block";
	}else{
		document.getElementById("wPIN1").style.color = "gray";
		document.getElementById("wPIN2").style.color = "gray";
		if(wps_avoid_pin=="1")
		document.getElementById("div_wps_auto_lockdown").style.display = "none";
	}
	if(cf.wifi_btn_on.value == "0"){
		document.getElementById("btn_off_warning").style.display = "block";
		document.getElementById("btn_off_warning").style.color = "gray";
		document.getElementById("btn_off_warning_an").style.display = "block";
		document.getElementById("btn_off_warning_an").style.color = "gray";
		cf.enable_ap.disabled = true;
		cf.enable_ap.style.color = "gray";
		cf.enable_ap_an.disabled = true;
		cf.enable_ap_an.style.color = "gray";
	} else {
		document.getElementById("btn_off_warning").style.display = "none";
		document.getElementById("btn_off_warning_an").style.display = "none";
		cf.enable_ap.disabled = false;
		cf.enable_ap.style.color = "black";
		cf.enable_ap_an.disabled = false;
		cf.enable_ap_an.style.color = "black";
	}

	if(wps_mode == "disabled"){
	document.getElementById("wPIN1").style.color = "gray";
	document.getElementById("wPIN2").style.color = "gray";
	cf.pin_enable.disabled = true;
	cf.wps_auto_lockdown.disabled = true;
	if(wps_avoid_pin=="1")
		cf.max_pin_failed.disabled = true;
	cf.wsc_config.disabled = true;
	//cf.wsc_config.checked = false ;
	cf.wsc_config_an.disabled = true;
	//cf.wsc_config_an.checked = false ;
	}
	
	if("@h_WRegion#" == "Middle East (Algeria/Syria/Yemen)")//Region not support 5G
	{
		document.getElementById("table_5g").style.display = "none";
	}
	
	if(smart_conn_enable=="1")
	{
		document.getElementById("header_2g").style.display = "none";
		document.getElementById("header_2g_smart").style.display = "block";
		document.getElementById("table_5g").style.display = "none";
		document.getElementById("table_wps").style.display = "none";
		document.getElementById("table_wps_smart").style.display = "block";
	}
	if("@wifi_router_apcli_function_enable#"=="1" && opmode==0)
	{
		document.getElementById("apcli").style.display = "block";
		display_othermode();
		displaymode(2);
		setIP_sta();
		setDNS_sta();
	}
	if ("@deviceregion_valid#" == "1")
	{
	} else
	{
		cf.enable_ap.disabled = true;
		cf.enable_ap_an.disabled = true;

		var sWidth,sHeight;
		sWidth=document.body.clientWidth;
		sHeight=document.body.clientHeight;
		
		var bgObj=document.createElement("div");
		bgObj.setAttribute('id','bgDiv');
		bgObj.style.position="absolute";
		bgObj.style.top="0";
		bgObj.style.background="#777";
		bgObj.style.filter="progid:DXImageTransform.Microsoft.Alpha(style=3,opacity=25,finishOpacity=75";
		bgObj.style.opacity="0.4";
		bgObj.style.left="0";
		bgObj.style.width=sWidth + "px";
		bgObj.style.height=sHeight + "px";
		bgObj.style.zIndex = "10000";
		document.body.appendChild(bgObj);
	}
}

function showWpsAlert()
{
	var cf = document.forms[0];
	if(cf.show_wps_alert.value != "0")
	{
		alert(getErrorMsgByVar("gsm_msg_wps_in_prog_warn"));
	    return  false ;
	}
	return  true ;
}
function edit_wifi_schedule(amode)
{
    var cf = document.forms[0];
    if(amode == 0)
    {
        cf.nBand.value= "24G";
	cf.h_ruleSelect_an.value = getRadioCheckedValue(cf.priod_select_an);
	cf.ruleSelect_an.value = getRadioCheckedValue(cf.priod_select_an);
	cf.ruleSelect.value = getRadioCheckedValue(cf.priod_select);
	cf.h_ruleSelect.value = getRadioCheckedValue(cf.priod_select);
        radioTable(cf,cf.priod_select,'edit');
    }
    else
    {
        cf.nBand.value= "5G";
	cf.h_ruleSelect_an.value = getRadioCheckedValue(cf.priod_select_an);
	cf.ruleSelect_an.value = getRadioCheckedValue(cf.priod_select_an);
	cf.ruleSelect.value = getRadioCheckedValue(cf.priod_select);
	cf.h_ruleSelect.value = getRadioCheckedValue(cf.priod_select);
        radioTable(cf,cf.priod_select_an,'edit');
    }
}
function setEnablePIN()
{
    var cf = document.forms[0];
	if(cf.pin_enable.checked == true)
	{
		if(wps_avoid_pin=="1")
			document.getElementById("div_wps_auto_lockdown").style.display = "block";
	} 
	else
	{
		if(wps_avoid_pin=="1")
			document.getElementById("div_wps_auto_lockdown").style.display = "none";
	}
}
function delete_wifi_schedule(amode)
{
    var cf = document.forms[0];
    if(amode == 0)
    {
        cf.nBand.value= "24G";
        cf.h_ruleSelect.value = getRadioCheckedValue(cf.priod_select);
        radioTable(cf,cf.priod_select,'delete');
    }
    else
    {
        cf.nBand.value= "5G";
        cf.h_ruleSelect_an.value = getRadioCheckedValue(cf.priod_select_an);
        radioTable(cf,cf.priod_select_an,'delete');
    }
}
function set2GState()
{
    var cf = document.forms[0];
    if(cf.wsc_config.checked == true)
    {
        cf.wsc_config.checked = true;
        cf.wsc_config_an.checked = true;
    }
    if(cf.wsc_config.checked == false)
    {
        cf.wsc_config.checked = false;
        cf.wsc_config_an.checked = false;
    }
}
function set5GState()
{
    var cf = document.forms[0];
    if(cf.wsc_config_an.checked == true)
    {
        cf.wsc_config.checked = true;
        cf.wsc_config_an.checked = true;
    }
    if(cf.wsc_config_an.checked == false)
    {
        cf.wsc_config.checked = false;
        cf.wsc_config_an.checked = false;
    }
}

var wifi_power_percent_last = 1;
function save_wifi_power_percent_last()
{
	var cf = document.forms[0];
	wifi_power_percent_last = cf.wifi_power_percent.selectedIndex;
}
function set_wifi_power_percent()
{
    var cf = document.forms[0];
    var index = cf.wifi_power_percent.selectedIndex;
	if(cf.wifi_power_percent.options[index].value == 120) /* super wifi */
	{
		if(!confirm(getErrorMsgByVar("gsm_msg_super_wifi_warning")))  
		{
			cf.wifi_power_percent.selectedIndex = wifi_power_percent_last;
		}
	}
}
var wifi_power_percent_last1 = 1;
function save_wifi_power_percent_last1()
{
	var cf = document.forms[0];
	wifi_power_percent_last1 = cf.wifi_power_percent1.selectedIndex;
}
function set_wifi_power_percent1()
{
    var cf = document.forms[0];
    var index = cf.wifi_power_percent1.selectedIndex
	if(cf.wifi_power_percent1.options[index].value == 120) /* super wifi */
	{
		if(!confirm(getErrorMsgByVar("gsm_msg_super_wifi_warning")))  
		{
			cf.wifi_power_percent1.selectedIndex = wifi_power_percent_last1;
		}
	}
}

function displaymode(band)
{
	var cf = document.forms[0];
	if(band==2){
		if (cf.h_enable_bridge_mode.value==0){
			document.getElementById("stamode_display").style.display="none";
        }else if(cf.h_enable_bridge_mode.value==1){
			document.getElementById("stamode_display").style.display="block";
        }
	}else{
         if(band==1){
        	document.getElementById("stamode_display").style.display="block";
			cf.h_enable_bridge_mode.value="1";
        }
	}
}

function display_othermode()
{
    var cf = document.forms[0];
	if (cf.enable_other_mode.checked == true){
        document.getElementById("other_mode").style.display="block";
		//cf.enable_other_mode.value="1";
    }else{
		document.getElementById("other_mode").style.display="none";
		//cf.enable_other_mode.value="";
	}
}

function setIP_sta()
{
	var cf = document.forms[0];
	var dflag = cf.bridge_Assign.checked;
	setDisabled(dflag,cf.bridge_ether1,cf.bridge_ether2,cf.bridge_ether3,cf.bridge_ether4,cf.bridge_Mask1,cf.bridge_Mask2,cf.bridge_Mask3,cf.bridge_Mask4,cf.bridge_Gateway1,cf.bridge_Gateway2,cf.bridge_Gateway3,cf.bridge_Gateway4);
	if (!cf.bridge_Assign.checked)
	{
	    cf.bridge_DNSAssign.checked = false;
	    setDNS_sta();
	}
	DisableFixedIPSta = dflag;
}
function setDNS_sta()
{
	var cf = document.forms[0];
	var dflag = cf.bridge_DNSAssign.checked;
	if (!cf.bridge_Assign.checked && cf.bridge_DNSAssign.checked)
	{
		cf.bridge_DNSAssign.checked = false;
		dflag = false;
	}
	setDisabled(dflag,cf.bridge_DAddr1,cf.bridge_DAddr2,cf.bridge_DAddr3,cf.bridge_DAddr4,cf.bridge_PDAddr1,cf.bridge_PDAddr2,cf.bridge_PDAddr3,cf.bridge_PDAddr4);
	DisableFixedDNSSta = dflag;
}

function openBridgeWindow()
{
    var winoptions;
    winoptions = "width=640,height=480,status=yes,resizable=yes";
    window.open('WLG_bridge_wireless_settings.htm', 'bridge_mode', winoptions);
}

function loadmenu()
{
//	top.contents.location.href="./@menupage#";
//	return true;
	if(top.is_advindex_pg==1)
    {
		top.load_menu('ap');
        top.load_menu('wps');
    }
}
//WPS_end
// -->
</script>
</head>
<body bgcolor="#ffffff" onLoad="dataToVisible(document.forms[0]);init();document.forms[0].elements[0].focus();default_turnoff();loadmenu();">
<form method="POST" action="setup.cgi@post_par#" onSubmit="buttonToDisabled(document.forms[0])">
<div class="page_title" languageCode="846">Advanced Wireless Settings</div>
<div class="fix_button">
<table width="100%" border="0" cellpadding="0" cellspacing="2">
<tr><td nowrap colspan="2" align="center">
<input class="cancel_bt" type="button" value = "Cancel" onclick='location.href="WLG_dualband_adv.htm";' languageCode="51">
&nbsp;
<input class="apply_bt" type="SUBMIT" name="Apply" value = "Apply" onClick="return checkData(0);" languageCode="50">
</td></tr>
</table>
</div>
<div id="main" class="main_top_button">
<table border="0" cellpadding="0" cellspacing="3" width="100%" id="table_2g">
<tr id="header_2g"><td colspan="2">
<a href="javascript:loadhelp('WLG_adv','settings')" tabindex="-1">
<b languageCode="905">Wireless Settings</b><b> (2.4GHz b/g/n)</b></a>
</td></tr>
<tr id="header_2g_smart" style="display:none"><td colspan="2">
<a href="javascript:loadhelp('WLG_adv','settings')" tabindex="-1">
<b languageCode="905">Wireless Settings</b><b> (2.4GHz b/g/n & 5GHz @5g_supp_info#)</b></a>
</td></tr>
<tr><td colspan="2">
<input type="checkbox" name="enable_ap" value="enable_ap" onClick="dis_turnoff()">
<span languageCode="887">Enable Wireless Router Radio</span>
<div id="btn_off_warning">(<span languageCode="3617">This action is currently disabled until the wireless On/Off button is pressed</span>)</div>
</td></tr>

<tr><td class="hlc"><span languageCode="889">Fragmentation Length (256-2346)</span></td>
		<td class="hrc"><input type="text" name="frag" size="5" maxlength="4" value="@frag#"></td>
	</tr><tr><td><span languageCode="890">CTS/RTS Threshold (1-2347)</span></td>
		<td align="left"><input type="text" name="rts" size="5" maxlength="4" value="@rts#"></td>
	</tr><tr><td align="left"><span languageCode="893">Preamble Mode</span></td>
		<td align="left">
		<select name="enable_shortpreamble">
		<option value="1" selected languageCode="894">Long Preamble</option>
		<option value="2" languageCode="895">Short Preamble</option></select></td>
	</tr>
	<tr><td align="left" style="@tx_power_control_show_hide#"><span languageCode="3616">Transmit Power Control</span></td>
		<td align="left">
		<select name="wifi_power_percent" style="@tx_power_control_show_hide#" value= "wifi_power_percent" onClick="save_wifi_power_percent_last()" onChange="set_wifi_power_percent()">
		<option value="100" selected>100%</option>
		<option value="75">75%</option>
		<option value="50">50%</option>
		<option value="25">25%</option>
		</select>
		</td>
	</tr>
	<tr><td colspan="2">
	   <div ID="turnOff_WS">
	   <input type="checkbox" name="wireless_schedule">
	   <b languageCode="3314">Turn off wireless signal by schedule</b>
	   <br/>
	   <b languageCode="3315">The wireless signal is scheduled to turn off during the following time period:</b></div></td>
    </tr>
    <tr><td colspan="2" align="center">
        <div ID="wifi_sched_rules">
		<TABLE id="WirelessOnOff" class="tables" border="0" cellpadding="2" cellspacing="0" width="100%">
			<TR class="table_header">
				<td nowrap align="center"><span class="thead" languageCode="1085">Period</span></td>
				<td nowrap align="center"><span class="thead" languageCode="360">Start</span></td>
				<td nowrap align="center"><span class="thead" languageCode="364">End</span></td>
				<td nowrap align="center"><span class="thead" languageCode="3316">Recurrence Pattern</span></td>
			</tr>
			@schedule_rule#
		</table>
	    </div>
	</td>
	</tr>
	<tr><td colspan="2" align="center">
		<table border="0" cellpadding="0" cellspacing="3" width="80%">
			<tr>
				<td width="20%"></td>
				<td nowrap="nowrap"><input class="long_long_add_bt" type="button" name="add_period" value="Add a new period" languageCode="3317"  onClick="schedule_add(0)">
	&nbsp;
	<input class="edit_bt" type="button" name="edit_period" value="Edit" languageCode="147" onClick="edit_wifi_schedule(0)">
	&nbsp;
	<input class="delete_bt" type="button" name="delete_period" value="Delete" languageCode="148" onClick="delete_wifi_schedule(0)"></td>
			</tr>
		</table>
	</td>
	</tr>
	</table>
	<table border="0" cellpadding="0" cellspacing="3" width="100%" id="table_5g">
	<tr><td colspan="2" background="liteblue.gif" height="12"></td>
	</tr>
	<tr><td colspan="2">
	<a href="javascript:loadhelp('WLG_adv','settings')" tabindex="-1">
	<b languageCode="905">Wireless Settings</b><b> (5GHz @5g_supp_info#)</b></a></td>
	</tr>
	<tr><td colspan="2">
	<input type="checkbox" name="enable_ap_an" value="enable_ap_an" onClick="dis_turnoff_an()">
	<span languageCode="887">Enable Wireless Router Radio</span>
		<div id="btn_off_warning_an">(<span languageCode="3617">This action is currently disabled until the wireless On/Off button is pressed</span>)</div>
	</td></tr>
	<tr><td class="hlc"><span languageCode="889">Fragmentation Length (256-2346)</span></td>
		<td class="hrc">
		<input type="text" name="frag_an" size="5" maxlength="4" value="@frag_an#"></td>
	</tr><tr><td><span languageCode="890">CTS/RTS Threshold (1-2347)</span></td>
		<td align="left">
		<input type="text" name="rts_an" size="5" maxlength="4" value="@rts_an#"></td>
	</tr><tr><td align="left"><span languageCode="893">Preamble Mode</span></td>
		<td align="left">
		<select name="enable_shortpreamble_an">
		<option value="1" selected languageCode="894">Long Preamble</option>
		<option value="2" languageCode="895">Short Preamble</option></select></td>
	</tr>
	<tr><td align="left" style="@tx_power_control_show_hide#"><span languageCode="3616">Transmit Power Control</span></td>
		<td align="left">
		<select name="wifi_power_percent1" style="@tx_power_control_show_hide#" value= "wifi_power_percent1" onClick="save_wifi_power_percent_last1()" onChange="set_wifi_power_percent1()">
		<option value="100" selected>100%</option>
		<option value="75">75%</option>
		<option value="50">50%</option>
		<option value="25">25%</option>
		</select>
		</td>
	</tr>
	<tr><td colspan="2">
	   <div ID="turnOff_WS_an">
	   <input type="checkbox" name="wireless_schedule_an">
	   <b languageCode="3314">Turn off wireless signal by schedule</b>
	   <br/>
	   <b languageCode="3315">The wireless signal is scheduled to turn off during the following time period:</b>
	   </div></td>
    </tr><tr><td colspan="2" align="center">
        <div ID="wifi_sched_rules">
		<TABLE id="WirelessOnOff5G" class="tables" border="0" cellpadding="2" cellspacing="0" width="100%">
			<TR class="table_header">
				<td nowrap align="center"><span class="thead" languageCode="1085">Period</span></td>
				<td nowrap align="center"><span class="thead" languageCode="360">Start</span></td>
				<td nowrap align="center"><span class="thead" languageCode="364">End</span></td>
				<td nowrap align="center"><span class="thead" languageCode="3316">Recurrence Pattern</span></td>
			</tr>
			@schedule_rule_an#
		</table>
	    </div>
	</td>
	</tr><tr><td colspan="2" align="center">
		<table border="0" cellpadding="0" cellspacing="3" width="80%">
			<tr>
				<td width="20%"></td>
				<td nowrap="nowrap"><input class="long_long_add_bt" type="button" name="add_period_an" value="Add a new period" languageCode="3317"  onClick="schedule_add(1)">
	&nbsp;
	<input class="edit_bt" type="button" name="edit_period_an" value="Edit" languageCode="147" onClick="edit_wifi_schedule(1)">
	&nbsp;
	<input class="delete_bt" type="button" name="delete_period_an" value="Delete" languageCode="148" onClick="delete_wifi_schedule(1)"></td>
			</tr>
		</table>
	</td>
	</tr>
	</table>
	<table border="0" cellpadding="0" cellspacing="3" width="100%" id="table_wps">
	<!--WPS--><!-- RULE --><tr><td colspan="2" background="liteblue.gif" height="12"></td>
	</tr><td colspan="2"><a href="javascript:loadhelp('WLG_adv','wps')" tabindex="-1">
	<b languageCode="44">WPS Settings</b></a></td>
	<tr><td>
		<div id="wPIN1"><span languageCode="46">Router's PIN</span>:</div>
		</td>
		<td>
		<div id="wPIN2"><b><font size="4">@routerPIN#</font></b></div>
		</td>
	</tr><tr><td colspan="2"><input type="checkbox" name="pin_enable" value="pin_enable" onClick="setEnablePIN();">@router_pin_message#</td></tr>
	<tr><td colspan="2">
@wps_avoid_pin_hide_s#
	<div id="div_wps_auto_lockdown" style="display:block">
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type="checkbox" name="wps_auto_lockdown" value="wps_auto_lockdown"><span languageCode="1302">To prevent PIN compromise, auto disable the PIN after</span><input type="text" name="max_pin_failed" size="4" maxlength="2" value="@max_pin_failed#"><span languageCode="1303">failed PIN connections, util router reboots.</span>
	<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span languageCode="1304">In auto disabled mode, router's WPS LED will be keep blinking slowly</span>
	</div>
@wps_avoid_pin_hide_e#
	</td></tr><tr><td colspan="2"><input type="checkbox" name="wsc_config" value="wsc_config" checked onClick="set2GState();">
	<span languageCode="897">Keep Existing Wireless Settings</span> (2.4GHz b/g/n)</td>
	</tr><tr><td colspan="2"><input type="checkbox" name="wsc_config_an" value="wsc_config_an" checked onClick="set5GState();"><span languageCode="897">Keep Existing Wireless Settings</span> (5GHz @5g_supp_info#)</td>
	</tr><!--WPS--><!-- RULE -->
	</table>
	<table border="0" cellpadding="0" cellspacing="3" width="100%" id="table_wps_smart" style="display:none">
	<!--SMART connect hide WPS--><tr><td  colspan="2" background="liteblue.gif" height="12"></td>
	</tr><tr><td colspan="2" width="30%"><a href="javascript:loadhelp('WLG_adv','wps')" tabindex="-1">
	<b languageCode="44">WPS Settings</b><b languageCode="10725">(disabled when Smart Connect is enabled)</b></a></td></tr>
	</table>
	<table border="0" cellpadding="0" cellspacing="3" width="100%">
	<tr><td colspan="2" background="liteblue.gif" height="12"></td>
	</tr>
@7615_wifi_adv_hide_s#
	<tr><td colspan="2" align="center"></td>
	</tr>
	<tr><td colspan="2"><input type="checkbox" name="beamfromaing_enable" value="beamfromaing_enable"><span languageCode="10713">Enable Implicit BEAMFORMING - Boosts WiFi speed, reliability, & range for all mobile devices</span></td>
	</tr>
	<tr><td colspan="2"><input type="checkbox" name="mumimo_enable" value="mumimo_enable"><span languageCode="313">Enable</span> MU-MIMO</td>
	</tr>
	<tr><td colspan="2"><input type="checkbox" name="airtimefairness_enable" value="airtimefairness_enable"><span languageCode="10724">Enable Airtime Fairness - Prevents network lag when slower devices connect</span></td>
	</tr>
@7615_wifi_adv_hide_e#
<tbody id="apcli" style="display:none">
	<tr><td colspan="2"><input type="checkbox" name="enable_other_mode" value="1" onclick="display_othermode();"><span languageCode="10735">use other operation mode</span></td>
	</tr>
	<tr><td colspan="2">
		<div id="other_mode" style="display:none;">
		<table border="0" cellpadding="0" cellspacing="0" width="100%"> 
		<tr>
			<td colspan="2">
			<input TYPE="radio" NAME="enable_bridge_mode" value="1"  onclick="displaymode(1);"><span languageCode="10736">Enable Bridge mode</span>
			</td>
		</tr>
		<tr>
			<td colspan="2" >
			<div id="stamode_display" style="display: none;">
			<table align="left" border="0" width="100%">
				<tr>
					<td nowrap><span languageCode="192">Device Name</span></td>
					<td width="60%" align="right"><input type="text" maxlength="12" size="24" name="device_name" value="@device_name#"></td>
				</tr>
				<tr>
					<td colspan=2><INPUT TYPE="checkbox" NAME="bridge_Assign" value="enable" checked onclick="setIP_sta();">
					<span languageCode="10738">Get IP Address Dynamically</span></td>
				</tr>
				<tr><td nowrap><img src="spacer.gif" width="20" height="12" border="0"><span languageCode="71">IP Address</span></td>
					<td nowrap align="right" class="num">
					<input type="text" name="bridge_ether1" class="num" size="4" value="" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_ether2" class="num"; size="4" value="" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_ether3" class="num" size="4" value="" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_ether4" class="num" size="4" value="" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);"></td>
				</tr>
				<tr><td nowrap><img src="spacer.gif" width="20" height="12" border="0"><span languageCode="75">IP Subnet Mask</span></td>
					<td align="right" class="num">
					<input type="text" name="bridge_Mask1" class="num" size="4" value="" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_Mask2" class="num" size="4" value="" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_Mask3" class="num" size="4" value="" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_Mask4" class="num" size="4" value="" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);"></td>
				</tr>
        		<tr><td nowrap><img src="spacer.gif" width="20" height="12" border="0"><span languageCode="3054">Gateway IP Address</span></td>
					<td align="right" class="num">
					<input type="text" name="bridge_Gateway1" class="num" size="4" value="" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_Gateway2" class="num"; size="4" value="" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_Gateway3" class="num" size="4" value="" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_Gateway4" class="num" size="4" value="" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);"></td>
				</tr>
				<tr>
				  <td colspan=2>
				  <INPUT TYPE="checkbox" NAME="bridge_DNSAssign" value="enable" checked onclick="setDNS_sta();">
				  <span languageCode="10739">Get DNS Server Address Dynamically</span>
				  </td>
				</tr>
				<tr>
					<td><img src="spacer.gif" width="20" height="12" border="0"><span languageCode="80">Primary DNS</span></td>
					<td align="right" class="num"><input type="text" name="bridge_DAddr1" class="num" size="4" maxlength="3" value="" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_DAddr2" class="num" size="4" maxlength="3" value="" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_DAddr3" class="num" size="4" maxlength="3" value="" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_DAddr4" class="num" size="4" maxlength="3" value="" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);"></td>
				</tr>
				<tr>
					<td><img src="spacer.gif" width="20" height="12" border="0"><span languageCode="81">Secondary DNS</span></td>
					<td align="right" class="num"><input type="text" name="bridge_PDAddr1" class="num" size="4" maxlength="3" value="" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_PDAddr2" class="num" size="4" maxlength="3" value="" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_PDAddr3" class="num" size="4" maxlength="3" value="" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="keydown(event,this);" onKeyPress="return getkey('num',event);" onkeyup="keyup(event,this);">.<input type="text" name="bridge_PDAddr4" class="num" size="4" maxlength="3" value="" onFocus="if(DisableFixedDNS) this.blur()" onKeyPress="return getkey('num',event);"></td>
				</tr>
				<tr>
					<input class="long_common_bt" name="bridge_page" value = "Setup Bridge Mode Wireless Settings" onClick="openBridgeWindow();" languageCode="10737">
				</tr>
			</table>
			</div>
			</td>
		</tr>
	</table>
	</div></td>
	</tr>	
<tbody>
	<tr><td colspan="2" align="center"></td>
	</tr>

</table><!-- ServerStart -->

    <input type="hidden" name="h_enable_ap" value="@h_enable_ap#">
    <input type="hidden" name="h_enable_ap_an" value="@h_enable_ap_an#">
    

    <input type="hidden" name="h_enable_shortpreamble" value="@h_enable_shortpreamble#">
    <input type="hidden" name="h_enable_shortpreamble_an" value="@h_enable_shortpreamble_an#"><!-- WPS -->
    <input type="hidden" name="h_wifi_power_percent" value="@h_wifi_power_percent#">
    <input type="hidden" name="h_wifi_power_percent1" value="@h_wifi_power_percent1#">
    <input type="hidden" name="h_pin_enable" value="@h_pin_enable#">
    <input type="hidden" name="h_wps_auto_lockdown" value="@h_wps_auto_lockdown#">
    <input type="hidden" name="h_wsc_config" value="@h_wsc_config#">
    <input type="hidden" name="h_wsc_config_an" value="@h_wsc_config_an#">
    <input type="hidden" name="h_wl0_type" value="@h_wl0_type#">
    <input type="hidden" name="h_authAlgm" value="@h_authAlgm#">
    <input type="hidden" name="h_wl0_on" value="@h_wl0_on#">
    <input type="hidden" name="h_wl1_on" value="@h_wl1_on#">
    <input type="hidden" name="show_wps_alert" value="@show_wps_alert#">
    <input type="hidden" name="wifi_btn_on" value="@wifi_btn_on#">
    <!-- ServerEnd -->
    <input type="hidden" name="h_idx_num" value="@h_idx_num#">
    <input type="hidden" name="h_wireless_schedule" value="@h_wireless_schedule#">
    <input type="hidden" name="h_wireless_schedule_an" value="@h_wireless_schedule_an#">
    <input type="hidden" name="h_beamfromaing_enable" value="@h_beamfromaing_enable#">
    <input type="hidden" name="h_mumimo_enable" value="@h_mumimo_enable#">
    <input type="hidden" name="h_airtimefairness_enable" value="@h_airtimefairness_enable#">
    <input type="hidden" name="h_enable_bridge_mode" value="@h_enable_bridge_mode#">
    <input type="hidden" name="h_enable_other_mode" value="@h_enable_other_mode#">
    <input type="hidden" name="h_bridge_Assign" value="@h_bridge_Assign#">
    <input type="hidden" name="h_bridge_DNSAssign" value="@h_bridge_DNSAssign#">
    <input type="hidden" name="c4_bridge_ether" value="@c4_bridge_ether#">
	<input type="hidden" name="c4_bridge_Mask" value="@c4_bridge_Mask#">
	<input type="hidden" name="c4_bridge_Gateway" value="@c4_bridge_Gateway#">
	<input type="hidden" name="c4_bridge_DAddr" value="@c4_bridge_DAddr#">
	<input type="hidden" name="c4_bridge_PDAddr" value="@c4_bridge_PDAddr#">
    <input type="hidden" name="save_only" value="sss">
    <input type="hidden" name="todo" value="save">
    <input type="hidden" name="this_file" value="WLG_dualband_adv.htm">
    <input type="hidden" name="next_file" value="WLG_dualband_adv.htm">
    <input type="hidden" name="ruleSelect" value="">
    <input type="hidden" name="ruleSelect_an" value="">
    <!--input type="hidden" name="h_ruleSelect" value="@h_ruleSelect#">
    <input type="hidden" name="h_ruleSelect_an" value="@h_ruleSelect_an#"-->
     <input type="hidden" name="h_ruleSelect" value="">
    <input type="hidden" name="h_ruleSelect_an" value="">
    <input type="hidden" name="nBand" value="">
    <input type="hidden" name="SID" value="@SID#">
</div>
</form>

<div id="help" style="display: none">
		<iframe name="help_iframe" id="helpframe" src="WLG_adv_h.htm" allowtransparency="true" width="100%" frameborder="0">
		</iframe>
</div>
<div id="help_switch" class="close_help">
	 <img class="help_switch_img" src="image/help/help-bar.gif"><script>
var help_flag=0;
if(isIE()){
	show_hidden_help_top_button(1);
	var frame_div = top.document.getElementById("formframe_div");
	frame_div.onresize =  function(){
		if(help_flag == 0)  show_hidden_help_top_button(1);
		else{show_hidden_help_top_button(--help_flag);help_flag++;}
};}
if(get_browser() == "Opera"){
	window.onresize =  function(){
		if(help_flag == 0)  show_hidden_help_top_button(1);
		else{show_hidden_help_top_button(--help_flag);help_flag++;}
};}
</script><div id="help_space" onClick="show_hidden_help_top_button(help_flag); help_flag++;"></div>
<div id="help_center"><span languageCode="3058">Help Center</span></div>
<div id="help_button" onClick="show_hidden_help_top_button(help_flag); help_flag++;"></div>
<div id="help_show_hidden"><a href="javascript:void(0)" onClick="show_hidden_help_top_button(help_flag); help_flag++;"><span languageCode="3148">Show/Hide Help Center</span></a></div>
</div>
<script language="javascript" type="text/javascript" src="langs.js"></script></body></html>
