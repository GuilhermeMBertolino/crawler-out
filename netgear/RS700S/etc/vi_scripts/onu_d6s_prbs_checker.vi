########################################
# call_msg: ..\..\ONU\Common\D6S__SerDes\MSG\onu_d6s_prbs_checker
########################################
###################################################                         
# SerDes D6S PRBS Checker                                                
###################################################                      
# __ARG0: Standard Select : 0 = ITUT modes / 1= IEEE,AE,MPCS modes       
#                                                                        
# __ARG1 : pon_type_select = "itut_mode_select" or  "ieee_mode_select"   
#       itut_mode_select                                                 
#                   0 = XGS                                              
#                   1 = XGPON                                            
#                   2 = GPON                                             
##                                                                       
#       ieee_mode_select                                                 
#               0 = EPON 10/10  | 4 = AE 10g    | 8  = MPCS 10g          
#               1 = EPON 10/1   | 5 = AE 5g     | 9  = MPCS 5g           
#               2 = EPON 2/1    | 6 = AE 2.5g   | 10 = MPCS 2.5g         
#               3 = EPON 1/1    | 7 = AE 1g     | 11 = MPCS 1g           
################################################                         
# __ARG2 : PRBS Type                                                     
#      0 = prbs7                                                         
#      1 = prbs9                                                         
#      2 = prbs15                                                        
#      3 = prbs23                                                        
#      4 = prbs31                                                        
#                                                                        
# __ARG3 : PRBS_En  = PRBS Checker Enable(=1)/ Disable(=0)               
#                                                                        
#################################################                        
 
 
#Input arguments and variables used in ATM file 
MOV __ARG0,itut_or_ieee_sel
MOV __ARG1,pon_type_select
MOV __ARG2,PRBS_TYPE
MOV __ARG3,PRBS_En
 
#enum defines for atm/msg/vi_script 
MOV 0,enum_itut
MOV 1,enum_ieee
#ITUT enum modes defines for atm/msg/vi_script 
MOV 0,enum_xgs
MOV 1,enum_xgpon
MOV 2,enum_gpon
#IEEE enum modes defines for atm/msg/vi_script 
MOV 0,enum_epon_10g10g
MOV 1,enum_epon_10g1g
MOV 2,enum_epon_2g1g
MOV 3,enum_epon_1g1g
MOV 4,enum_ae_10g10g
MOV 5,enum_ae_5g5g
MOV 6,enum_ae_2g2g
MOV 7,enum_ae_1g1g
MOV 8,enum_mpcs_10g10g
MOV 9,enum_mpcs_5g5g
MOV 10,enum_mpcs_2g2g
MOV 11,enum_mpcs_1g1g
################################################# 
 
# Set "RX_PRBSCHK_DW" based on RX-Data Rate 
MOV 0,enum_rx_chkdw_9p95
MOV 1,enum_rx_chkdw_2p48
MOV 1,enum_rx_chkdw_1p24
MOV 4,enum_rx_chkdw_10p31
MOV 4,enum_rx_chkdw_5p16
MOV 4,enum_rx_chkdw_3p125_ae
MOV 2,enum_rx_chkdw_3p125_mpcs
MOV 2,enum_rx_chkdw_2p5
MOV 2,enum_rx_chkdw_1p25
 
# Set "RX_WORDMODE" based on RX-Data Rate 
MOV 1,enum_rx_wordmode_9p95
MOV 6,enum_rx_wordmode_2p48
MOV 5,enum_rx_wordmode_1p24
MOV 1,enum_rx_wordmode_10p31
MOV 1,enum_rx_wordmode_5p16
MOV 1,enum_rx_wordmode_3p125_ae
MOV 6,enum_rx_wordmode_3p125_mpcs
MOV 6,enum_rx_wordmode_2p5
MOV 5,enum_rx_wordmode_1p25
################################################# 
 
# Configure the required RX_PRBSCHK_DW & RX_WORDMODE based on pon_type 
################################################ 
CMP itut_or_ieee_sel,enum_itut
JNE _L_ifelse_0_1_else
    CMP pon_type_select,enum_xgs
    JNE _L_ifelse_0_0_0_else
        MOV enum_rx_chkdw_9p95,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_9p95,RX_WORDMODE
        JMP _L_ifelse_0_0_end
    _L_ifelse_0_0_0_else:
    CMP pon_type_select,enum_xgpon
    JNE _L_ifelse_0_0_1_else
        MOV enum_rx_chkdw_9p95,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_9p95,RX_WORDMODE
        JMP _L_ifelse_0_0_end
    _L_ifelse_0_0_1_else:
    CMP pon_type_select,enum_gpon
    JNE _L_ifelse_0_0_2_else
        MOV enum_rx_chkdw_2p48,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_2p48,RX_WORDMODE
        JMP _L_ifelse_0_0_end
    _L_ifelse_0_0_2_else:
        HALT -1
    _L_ifelse_0_0_end:
    JMP _L_ifelse_0_end
_L_ifelse_0_1_else:
CMP itut_or_ieee_sel,enum_ieee
JNE _L_ifelse_0_3_else
    CMP pon_type_select,enum_epon_10g10g
    JNE _L_ifelse_0_2_0_else
        MOV enum_rx_chkdw_10p31,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_10p31,RX_WORDMODE
        JMP _L_ifelse_0_2_end
    _L_ifelse_0_2_0_else:
    CMP pon_type_select,enum_epon_10g1g
    JNE _L_ifelse_0_2_1_else
        MOV enum_rx_chkdw_10p31,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_10p31,RX_WORDMODE
        JMP _L_ifelse_0_2_end
    _L_ifelse_0_2_1_else:
    CMP pon_type_select,enum_epon_2g1g
    JNE _L_ifelse_0_2_2_else
        MOV enum_rx_chkdw_2p5,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_2p5,RX_WORDMODE
        JMP _L_ifelse_0_2_end
    _L_ifelse_0_2_2_else:
    CMP pon_type_select,enum_epon_1g1g
    JNE _L_ifelse_0_2_3_else
        MOV enum_rx_chkdw_1p25,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_1p25,RX_WORDMODE
        JMP _L_ifelse_0_2_end
    _L_ifelse_0_2_3_else:
    CMP pon_type_select,enum_ae_10g10g
    JNE _L_ifelse_0_2_4_else
        MOV enum_rx_chkdw_10p31,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_10p31,RX_WORDMODE
        JMP _L_ifelse_0_2_end
    _L_ifelse_0_2_4_else:
    CMP pon_type_select,enum_ae_5g5g
    JNE _L_ifelse_0_2_5_else
        MOV enum_rx_chkdw_5p16,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_5p16,RX_WORDMODE
        JMP _L_ifelse_0_2_end
    _L_ifelse_0_2_5_else:
    CMP pon_type_select,enum_ae_2g2g
    JNE _L_ifelse_0_2_6_else
        MOV enum_rx_chkdw_3p125_ae,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_3p125_ae,RX_WORDMODE
        JMP _L_ifelse_0_2_end
    _L_ifelse_0_2_6_else:
    CMP pon_type_select,enum_ae_1g1g
    JNE _L_ifelse_0_2_7_else
        MOV enum_rx_chkdw_1p25,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_1p25,RX_WORDMODE
        JMP _L_ifelse_0_2_end
    _L_ifelse_0_2_7_else:
    CMP pon_type_select,enum_mpcs_10g10g
    JNE _L_ifelse_0_2_8_else
        MOV enum_rx_chkdw_10p31,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_10p31,RX_WORDMODE
        JMP _L_ifelse_0_2_end
    _L_ifelse_0_2_8_else:
    CMP pon_type_select,enum_mpcs_5g5g
    JNE _L_ifelse_0_2_9_else
        MOV enum_rx_chkdw_5p16,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_5p16,RX_WORDMODE
        JMP _L_ifelse_0_2_end
    _L_ifelse_0_2_9_else:
    CMP pon_type_select,enum_mpcs_2g2g
    JNE _L_ifelse_0_2_10_else
        MOV enum_rx_chkdw_3p125_mpcs,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_3p125_mpcs,RX_WORDMODE
        JMP _L_ifelse_0_2_end
    _L_ifelse_0_2_10_else:
    CMP pon_type_select,enum_mpcs_1g1g
    JNE _L_ifelse_0_2_11_else
        MOV enum_rx_chkdw_1p25,RX_PRBSCHK_DW
        MOV enum_rx_wordmode_1p25,RX_WORDMODE
        JMP _L_ifelse_0_2_end
    _L_ifelse_0_2_11_else:
        HALT -1
    _L_ifelse_0_2_end:
    JMP _L_ifelse_0_end
_L_ifelse_0_3_else:
    HALT -1
_L_ifelse_0_end:
 
 
################################################ 
# load atm file: ..\..\ONU\Common\D6S__SerDes\ATM\D6S_ONU__PRBS.csv, val_select:general
########################################
# cfg_class: onu_d6s_prbs_checker_clear
########################################
# pre_order
 # Start by Disabling prbs-checker configurations 
MOV 0x0,@(0x828d0d2c{0x1}<<8)
MOV 0x0,@(0x828d0d2c{0x1})
 # set Default values to all prbs-checker status registers
MOV 0x7f,@(0x828d0d7c{0x3ff})
MOV 0x0,@(0x828d0d3c{0xffff})
MOV 0xffff,@(0x828d0d38{0xffff})
MOV 0xffff,@(0x828d0d34{0xffff})
MOV 0xffff,@(0x828d0d30{0xffff})
 # Release Forcing serdes internal signals
MOV 0x0,@(0x828d0b24{0x1}<<12)
MOV 0x0,@(0x828d0b14{0x1}<<1)
MOV 0x0,@(0x828d0b10{0x1}<<1)
MOV 0x0,@(0x828d2000{0x1}<<11)
MOV 0x0,@(0x828d0b24{0x1}<<13)
 ##########################################
# unorder
# post_order
########################################
# end of cfg_class: onu_d6s_prbs_checker_clear
########################################
CMP PRBS_En,0
JNE _L_ifelse_1_0_else
    HALT 0
    JMP _L_ifelse_1_end
_L_ifelse_1_0_else:
    ########################################
    # cfg_class: onu_d6s_prbs_checker_cfg
    ########################################
    # pre_order
    MOV RX_WORDMODE,@(0x828d0a10{0x7}<<1)
    MOV 0x1,@(0x828d0b10{0x1}<<1)
    MOV RX_PRBSCHK_DW,@(0x828d0d44{0x7}<<3)
     ## Force serdes_BE from "RX_BURST_ENA" register and toggle BE OFF--> ON so serdes would sample the incoming data
    MOV 0x1,@(0x828d0b24{0x1}<<12)
    MOV 0x0,@(0x828d0a30{0x1})
    MOV 0x1,@(0x828d0a30{0x1})
     ## Force RX_CDR-Relock register and toggle "RX_CDRRELOCK"  0-->1-->
    MOV 0x1,@(0x828d0b14{0x1}<<1)
    MOV 0x0,@(0x828d0a14{0x1}<<5)
    MOV 0x1,@(0x828d0a14{0x1}<<5)
    MOV 0x0,@(0x828d0a14{0x1}<<5)
     # Start D6S PRBS Checker Configuration
    MOV 0x0,@(0x828d0d2c{0x1}<<1)
    MOV 0x1,@(0x828d0d2c{0x1}<<12)
    MOV 0x1,@(0x828d0d2c{0x1}<<10)
    MOV 0x0,@(0x828d0d2c{0x1}<<9)
    MOV 0x0,@(0x828d0d40{0x1}<<1)
    MOV 0x0,@(0x828d0d2c{0x1}<<2)
    MOV 0x7f,@(0x828d0d7c{0x3ff})
    MOV 0x0,@(0x828d0d3c{0xffff})
    MOV 0xffff,@(0x828d0d38{0xffff})
    MOV 0xffff,@(0x828d0d34{0xffff})
    MOV 0xffff,@(0x828d0d30{0xffff})
    MOV PRBS_TYPE,@(0x828d0d2c{0x7}<<3)
    MOV PRBS_En,@(0x828d0d2c{0x1})
    # unorder
    # post_order
    ########################################
    # end of cfg_class: onu_d6s_prbs_checker_cfg
    ########################################
_L_ifelse_1_end:
HALT 0
########################################
# end of call_msg: onu_d6s_prbs_checker
########################################
