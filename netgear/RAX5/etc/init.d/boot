#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org
. /lib/functions/pega.sh

START=10
STOP=98

uci_apply_defaults() {
	. /lib/functions/system.sh

	cd /etc/uci-defaults || return 0
	files="$(ls)"
	[ -z "$files" ] && return 0
	mkdir -p /tmp/.uci
	for file in $files; do
		( . "./$(basename $file)" ) && rm -f "$file"
	done
	uci commit
}


# for database patches: need add patches in /etc/pega-defaults if database version updated
# ex: /etc/pega-defaults/patch_db-1 => patch for database version 1
# patch_db files will be skipped as factory deafult (/etc/uci-defaults/netgear.default existed)
cur_db=1
apply_pega_defaults() {
	. /lib/functions/system.sh

	cd /etc/pega-defaults || return 0
	files="$(ls -v)"
	[ -z "$files" ] && return 0
	factoryDefault=0
	[ -e /etc/uci-defaults/netgear.default ] && factoryDefault=1
	[ $factoryDefault = 0 ] && mkdir -p /tmp/.uci
	for file in $files; do
		if [ $factoryDefault = 0 ]; then
			( . "./$(basename $file)" ) && rm -f "$file"
		else # skip (reomve) patch_db files as factory deafult
			rm -f "$file"
		fi
	done
	[ $factoryDefault = 0 ] && uci commit
}

keep_wlan_macAddr() {
	baseMacAddr=$(fw_printenv -c /etc/pdata.config -n MAC 2>/dev/null)
	if [ -n "$baseMacAddr" ]; then
		macAddrInHex=$(echo "$baseMacAddr" | awk -F ':' '{printf 0x$1$2$3$4$5$6}')
		wifi2g_mac=$baseMacAddr
		wifi5g_mac=$(macToString "$(printf %012X $((0x$macAddrInHex + 0x02)))")
		wifi2gProfileMacAddr=$(datconf -f /etc/wireless/mediatek/mt7915.dbdc.b0.dat get MacAddress)
		wifi5gProfileMacAddr=$(datconf -f /etc/wireless/mediatek/mt7915.dbdc.b1.dat get MacAddress)
		if [ "$wifi2g_mac" != "$wifi2gProfileMacAddr" ] || [ "$wifi5g_mac" != "$wifi5gProfileMacAddr" ]; then
			[ "$wifi2g_mac" != "" ] && datconf -f /etc/wireless/mediatek/mt7915.dbdc.b0.dat set MacAddress $wifi2g_mac
			[ "$wifi5g_mac" != "" ] && datconf -f /etc/wireless/mediatek/mt7915.dbdc.b1.dat set MacAddress $wifi5g_mac
			echo -e "\033[41;37m[init boot] Found wireless MAC address in porfile is different than the value of PDATA, recovery it!!!\033[0m" > /dev/console
		fi
	fi
}

ntgr_language_init(){
	/usr/sbin/ntgr_language.sh
}

boot() {
	[ -f /proc/mounts ] || /sbin/mount_root
	[ -f /proc/jffs2_bbc ] && echo "S" > /proc/jffs2_bbc
	[ -f /proc/net/vlan/config ] && vconfig set_name_type DEV_PLUS_VID_NO_PAD

	mkdir -p /var/run
	mkdir -p /var/log
	mkdir -p /var/lock
	mkdir -p /var/state
	mkdir -p /var/tmp
	mkdir -p /tmp/.uci
	chmod 0700 /tmp/.uci
	touch /var/log/wtmp
	touch /var/log/lastlog
	touch /tmp/resolv.conf.auto
	ln -sf /tmp/resolv.conf.auto /tmp/resolv.conf
	touch /var/state/portstate
	uci -c /var/state set portstate.state=data
	uci -c /var/state commit portstate
	grep -q debugfs /proc/filesystems && /bin/mount -o noatime -t debugfs debugfs /sys/kernel/debug
	[ "$FAILSAFE" = "true" ] && touch /tmp/.failsafe

	/sbin/kmodloader

	[ ! -f /etc/config/wireless ] && {
		# compat for brcm47xx and mvebu
		sleep 1
		/sbin/wifi config
	}

	/bin/config_generate
	# for database patches: need add patches in /etc/pega-defaults if database version updated
	db=$(cat /etc/openwrt_release | grep 'DISTRIB_DATABASE' | awk  -F = '{print $2}'| tr -d "'")
	[ -n "$db" ] && cur_db=$db
	apply_pega_defaults
	uci_apply_defaults
	keep_wlan_macAddr
	/usr/lib/lua/commonFunc/detectAndRecovery_MTK_wirelessProfile.lua

    echo -e "\n\033[31mUpdate Borad data to /var/state/netgear\033[0m\n" > /dev/console
    #PEGA: write Board data into the /var/state/netgear.
    model=$(fw_printenv -c /etc/pdata.config -n Model 2>/dev/null)
    [ -z "$model" ] && (model="Netgear";echo -e "\033[41;37mThere is no \033[41;30mModel\033[41;37m in PDATA!!!\033[0m" > /dev/console)
    region_no=$(fw_printenv -n region_no 2>/dev/null)
    [ -n "$region_no" ] && {
        sku="$(pega_get_skuName_by_nmrpRegionNo $region_no)"
        echo -e "\033[41;37mNew \033[41;30mREGION NO:$region_no\033[41;37m!!!\033[0m" > /dev/console
        if [ -z "$sku" ]; then
            echo -e "\033[41;37mSet SKU to \033[41;30mPA\033[41;37m!!!\033[0m" > /dev/console
            sku=PA
        fi
    } || {
        echo -e "\033[41;37mThere is no \033[41;30mREGION NO\033[41;37m in uboot env!!!\033[0m" > /dev/console
        echo -e "\033[41;37mChange to SKU to \033[41;30mPA\033[41;37m!!!\033[0m" > /dev/console
        sku=PA
    }
    echo -e "\033[41;37mSet SKU to \033[41;30m$sku\033[41;37m!!!\033[0m" > /dev/console
    sn=$(fw_printenv -c /etc/pdata.config -n SN 2>/dev/null)
    [ -z "$sn" ] && (sn="";echo -e "\033[41;37mThere is no \033[41;30mSN\033[41;37m in PDATA!!!\033[0m" > /dev/console)
    hwver=$(fw_printenv -c /etc/pdata.config -n hwver 2>/dev/null)
    [ -z "$hwver" ] && (hwver="";echo -e "\033[41;37mThere is no \033[41;30mhwver\033[41;37m in PDATA!!!\033[0m" > /dev/console)
    uci -P /var/state set netgear.board.sku="$sku"
    uci -P /var/state set netgear.board.model="$model"
    uci -P /var/state set netgear.board.sn="$sn"
    uci -P /var/state set netgear.board.hwver="$hwver"

    cur_ver=$(cat /etc/openwrt_release | grep 'DISTRIB_RELEASE' | awk  -F = '{print $2}'| tr -d "'")
    uci -P /var/state set netgear.fw.cur_ver=$cur_ver
    uci -P /var/state set netgear.db.cur_ver=$cur_db

    lang_ver=$(cat /etc/openwrt_release | grep 'DISTRIB_LANGUAGE' | awk  -F = '{print $2}'| tr -d "'")
    uci -P /var/state set netgear.fw.lang_ver=$lang_ver

	# PEGA: read LAN/WAN MAC from Factory
	lan_mac=$(/sbin/mtk_factory_rw.sh -r lan)
	wan_mac=$(/sbin/mtk_factory_rw.sh -r wan)
	[ -n "$lan_mac" -a "$lan_mac" != "FF:FF:FF:FF:FF:FF" ] && uci -P /var/state set netgear.board.lan_mac="$lan_mac"
	[ -n "$wan_mac" -a "$wan_mac" != "FF:FF:FF:FF:FF:FF" ] && uci -P /var/state set netgear.board.wan_mac="$wan_mac"

	# PEGA: add for Netgear SOAP
	touch /tmp/soap

	# PEGA: prepare Netgear multi-language file
	ntgr_language_init
	
	# temporary hack until configd exists
	/sbin/reload_config
	
}
