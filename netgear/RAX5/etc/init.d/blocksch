#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

SERVICE_USE_PID=1
START=75
CRON_BLKSCH="/var/spool/cron/crontabs/blocksch"
BLKSCH_ON="/usr/sbin/blockschedule_on.sh"
BLKSCH_OFF="/usr/sbin/blockschedule_off.sh"
CRON_UPDATE="/var/spool/cron/crontabs/cron.update"

schedule_block() {
    local isSunday isMonday isTuesday isWednesday
    local isThursday isFriday isSaturday
    local startBlockTime endBlockTime

    config_get isSunday $1 isSunday
    config_get isMonday $1 isMonday
    config_get isTuesday $1 isTuesday
    config_get isWednesday $1 isWednesday
    config_get isThursday $1 isThursday
    config_get isFriday $1 isFriday
    config_get isSaturday $1 isSaturday
    config_get startBlockTime $1 startBlockTime
    config_get endBlockTime $1 endBlockTime

    fromTime1=$(echo $startBlockTime | cut -d ":" -f 1)
    fromTime2=$(echo $startBlockTime | cut -d ":" -f 2)
    toTime1=$(echo $endBlockTime | cut -d ":" -f 1)
    toTime2=$(echo $endBlockTime | cut -d ":" -f 2)
    day_week=`date +"%w"`
    cur_hour=`date +"%H"`
    cur_mins=`date +"%M"`
    local start_time end_time cur_time
    if [ ${#fromTime1} -eq 1 ]; then
        start_time="0$fromTime1:$fromTime2"
    else
        start_time="$fromTime1:$fromTime2"
    fi
    if [ ${#toTime1} -eq 1 ]; then
        end_time="0$toTime1:$toTime2"
    else
        end_time="$toTime1:$toTime2"
    fi
    if [ ${#cur_hour} -eq 1 ]; then
        cur_time="0$cur_hour:$cur_mins"
    else
        cur_time="$cur_hour:$cur_mins"
    fi

    for i in 0 1 2 3 4 5 6
    do
      if [ $i -eq $day_week ]; then
         if [ $cur_time \> $start_time ] && [ $cur_time \< $end_time ] || [ $cur_time = $start_time ]; then
            echo "block schedule on "$day_week
            /usr/sbin/blockschedule_on.sh
         else
            /usr/sbin/blockschedule_off.sh
         fi
      fi
    done

    if [ "$isSunday" == "true" ]; then
        echo "$fromTime2 $fromTime1 * * 0 $BLKSCH_ON" >> $CRON_BLKSCH
        echo "$toTime2 $toTime1 * * 0 $BLKSCH_OFF" >> $CRON_BLKSCH
    else
        if [ "$day_week" == "0" ]; then
            /usr/sbin/blockschedule_off.sh
        fi
    fi
    if [ "$isMonday" == "true" ]; then
        echo "$fromTime2 $fromTime1 * * 1 $BLKSCH_ON" >> $CRON_BLKSCH
        echo "$toTime2 $toTime1 * * 1 $BLKSCH_OFF" >> $CRON_BLKSCH
    else
        if [ "$day_week" == "1" ]; then
            /usr/sbin/blockschedule_off.sh
        fi
    fi
    if [ "$isTuesday" == "true" ]; then
        echo "$fromTime2 $fromTime1 * * 2 $BLKSCH_ON" >> $CRON_BLKSCH
        echo "$toTime2 $toTime1 * * 2 $BLKSCH_OFF" >> $CRON_BLKSCH
    else
        if [ "$day_week" == "2" ]; then
            /usr/sbin/blockschedule_off.sh
        fi
    fi
    if [ "$isWednesday" == "true" ]; then
        echo "$fromTime2 $fromTime1 * * 3 $BLKSCH_ON" >> $CRON_BLKSCH
        echo "$toTime2 $toTime1 * * 3 $BLKSCH_OFF" >> $CRON_BLKSCH
    else
        if [ "$day_week" == "3" ]; then
            /usr/sbin/blockschedule_off.sh
        fi
    fi
    if [ "$isThursday" == "true" ]; then
        echo "$fromTime2 $fromTime1 * * 4 $BLKSCH_ON" >> $CRON_BLKSCH
        echo "$toTime2 $toTime1 * * 4 $BLKSCH_OFF" >> $CRON_BLKSCH
    else
        if [ "$day_week" == "4" ]; then
            /usr/sbin/blockschedule_off.sh
        fi
    fi
    if [ "$isFriday" == "true" ]; then
        echo "$fromTime2 $fromTime1 * * 5 $BLKSCH_ON" >> $CRON_BLKSCH
        echo "$toTime2 $toTime1 * * 5 $BLKSCH_OFF" >> $CRON_BLKSCH
    else
        if [ "$day_week" == "5" ]; then
            /usr/sbin/blockschedule_off.sh
        fi
    fi
    if [ "$isSaturday" == "true" ]; then
        echo "$fromTime2 $fromTime1 * * 6 $BLKSCH_ON" >> $CRON_BLKSCH
        echo "$toTime2 $toTime1 * * 6 $BLKSCH_OFF" >> $CRON_BLKSCH
    else
        if [ "$day_week" == "6" ]; then
            /usr/sbin/blockschedule_off.sh
        fi
    fi
    echo "block_schedules" >> $CRON_UPDATE
}

start() {
    config_load blocksch
    config_foreach schedule_block schedule
}

stop() {
    rm -r $CRON_BLKSCH 2>/dev/null
    touch "$CRON_UPDATE"
}

restart() {
    stop
    start
}

