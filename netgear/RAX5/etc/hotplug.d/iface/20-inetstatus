#!/bin/sh

. /usr/share/libubox/jshn.sh

opmode="$(uci -q get network.@opmode[0].mode)"

update_wan()
{
    wan_mode="$(uci get network.inet_global.wan_mode)"

    iface=""
    ifname=""
    isup=""
    ipAddr=""

    if [ "$INTERFACE" = "lan" -a $opmode = "router" ]; then
        return
    elif [ $opmode != "router" ]; then
        iface="lan"
    elif [ $wan_mode = "PPTP" ]; then
        iface="pptp"
    elif [ "$wan_mode" = "L2TP" ]; then
        iface="l2tp"
    else
        iface="wan"
    fi

    demand_pppoe=$(uci -q get network.wan.demand)
    demand_pptp=$(uci -q get network.pptp.demand)
    demand_lttp=$(uci -q get network.l2tp.demand)
    manual_disconn=$(uci_get_state network inet manual_disconnect)
    #After manually disconnect, the connection shouldnâ€™t be triggered up via traffic
    if [ "${manual_disconn:-0}" -eq 0 ]; then
        # reset to on-demand as ifdown
        [ "${demand_pppoe:-0}" -gt 0 -a "$ACTION" = "ifdown" ] && ifup wan
        [ "${demand_pptp:-0}" -gt 0 -a "$ACTION" = "ifdown" ] && ifup pptp
        [ "${demand_lttp:-0}" -gt 0 -a "$ACTION" = "ifdown" ] && ifup l2tp
    fi
    
    json_init
    json_load "$(ifstatus $iface)"

    json_get_var isup up
    json_get_var ifname l3_device
    json_select "ipv4-address"
    json_select "1"
    json_get_var ipAddr "address"
    json_select ".."
    json_select ".."

    uci -c /var/state set hotplug_phy.port.wan_check=A
    uci -c /var/state commit hotplug_phy
    killall -USR2 led_control

    uci_revert_state network inet
    uci_add_state network inet_status inet
    uci_toggle_state network inet up $isup
    [ -z ifname ] && uci_toggle_state network inet ifname "" || uci_toggle_state network inet ifname "$ifname"

    if [ "$isup" == "1" ]; then
        logger -t "[RouterOp]" "[Internet connected] IP address: $ipAddr"
    else
        logger -t "[RouterOp]" "[Internet disconnected]"
    fi

    /usr/sbin/inet_check.sh $isup &
    is_ntgrIpLocation_running=$(ps -www | grep "ntgr_ipLocation.sh 1" -c)
    #echo -e "\n\033[31m\$is_ntgrIpLocation_running=$is_ntgrIpLocation_running\033[0m\n" > /dev/console ##For debug.
    if [ "$is_ntgrIpLocation_running" -le 1 ]; then
        /usr/sbin/ntgr_ipLocation.sh $isup & ## 2022.05.26, PegaBU6, YochengLian, To support PA Sku(Pan north America Sku). Get ip geographic information by xCloud service. ##
    fi
}

update_wifi()
{
    if [ "$INTERFACE" = "lan" -a $opmode = "ap" ]; then
        /usr/bin/lua -lcommonFunc/wifiUtils_convertWifiSettings -e "wifiReload_postAction(\"2.4G\", \"0s\")"
        /usr/bin/lua -lcommonFunc/wifiUtils_convertWifiSettings -e "wifiReload_postAction(\"5G\", \"0s\")"
        sleep 1
        #PegaBU6, YochengLian, 2022.08.09, In Netgear HomeRouterSpec 16a, Ch. 17.4.2 In "Guest Network", "Allow guest to access My Local network" must be checked and grey out.
        #/usr/bin/lua -lcommonFunc/wifiUtils_convertWifiSettings -e "local M = require \"commonFunc.wifiUtils_convertWifiSettings\";M.reload_guest_network_accessing();"
    fi
}

if [ "$INTERFACE" = "lan" ] || [ "$INTERFACE" = "wan" ] || [ "$INTERFACE" = "pptp" ] || [ "$INTERFACE" = "l2tp" ]; then
	update_wan
	update_wifi
fi
if [ "$INTERFACE" = "wan_v6" -a "$ACTION" = "ifup" ]; then
    dhcpv6_mode=$(uci -q get dhcp.lan.dhcpv6_pd)
    if [ "$dhcpv6_mode" == "1"  ]; then
        echo -e "\n\033[31mLAN DHCP server mode, force to link change\033[0m\n" > /dev/console
        /usr/sbin/lan_linkdownup.sh force &
    fi
fi
