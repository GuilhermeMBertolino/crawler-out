#!/usr/bin/lua

local json = require "luci.json"
local ddns  = require "webGetFunc.ddns"

local log = require("luci.log") --for debug

local enableDdns = ddns.getCheckboxVal_enableDdns()
local ddnsService = ddns.getSelectVal_ddnsService()
local haveNetgearAccount = ddns.getRadioVal_haveNetgearAccount()
local hostName = ddns.getTextVal_hostName()
local email = ddns.getTextVal_NtgrEmail()
local username = ddns.getTextVal_username()
local password = ddns.getTextVal_password()
local runningHostName = ddns.getTextVal_hostName()..".mynetgear.com"
local runningEmail = ddns.getTextVal_NtgrEmail()
local ddnsStatus = ddns.getNtgrDdnsStatus()
local runningProvider = ddns.getSelectVal_ddnsService()
local msgNetgearUpdateFailMlang = ddns.getMlangVal_msgNetgearUpdateFail()
local msgNetgearUpdateFail_continueMlang = ddns.getMlangVal_msgNetgearUpdateFail_continue()
local msgNetgearUpdateFail_continue2Mlang = ddns.getMlangVal_msgNetgearUpdateFail_continue2()
local openvpnStatus = ddns.getOpenVpnStatus()

local data = { }

data["enableDdns"] = { value = enableDdns, type = "checkbox" }
data["ddnsService"] = { value = ddnsService, type = "select" }
data["haveNetgearAccount"] = { value = haveNetgearAccount, type = "radio" }
data["hostName"] = { value = hostName}
data["email"] = { value = email}
data["username"] = { value = username}
data["password"] = { value = password}
data["runningHostName"] = { value = runningHostName, type = "spantext"}
data["runningEmail"] = { value = runningEmail, type = "spantext"}
data["ddnsStatus"] = { value = ddnsStatus}
data["runningProvider"] = { value = runningProvider}
data["msgNetgearUpdateFail"] = { value = "", type = "spantext", mlang = msgNetgearUpdateFailMlang}
data["msgNetgearUpdateFail_continue"] = { value = "", type = "spantext", mlang = msgNetgearUpdateFail_continueMlang}
data["msgNetgearUpdateFail_continue2"] = { value = "", type = "spantext", mlang = msgNetgearUpdateFail_continue2Mlang}
data["hidHostName"]  = { value = hostName}
data["openvpnStatus"] = { value = openvpnStatus}

return json.encode(data)

