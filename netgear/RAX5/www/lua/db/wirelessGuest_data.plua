#!/usr/bin/lua

--For LUA
function __FILE__() return debug.getinfo(2, 'S').short_src end -- or use .source
function __FUNCTION__() return debug.getinfo(2, 'n').name end
function __LINE__() return debug.getinfo(2, 'l').currentline end

local json = require "luci.json"
local uci = require "luci.model.uci".cursor()
--local uci_st = require "luci.model.uci".cursor("/var/state", "/var/state") --Naming the local variable with "_st" to mean it's using to access "/var/state" uci.
--                                                                           --If we want to get/set UCI that mixed /etc/config/XXXX and /var/state/XXXX at same time,
--                                                                           --the parameters for cursor() should be (nil, "/var/state") or ("/etc/config", "/var/state").
local log = require "luci.log"
    log.debug(0)
--log.console("\n")

--Proprietary LUA Objects/Libararies/APIs--
local wifiUtil_convert = require "commonFunc.wifiUtils_convertWifiSettings"
local wifi = require "webGetFunc.wireless"

function file_exists( name )
    local f=io.open(name,"r")
    if f~=nil then io.close(f) return true else return false end
end

if file_exists("\/etc\/config\/"..NTGR_WIFI_UCI_CONFIG_NAME) == false then
    --Create and Update NTGR_WiFi UCI config--
    wifiUtil_convert.update_NTGR_WiFi_uci()
end

log.console("====Debug Print, start of "..__FILE__().."====")
local data = { }
--local tmpValue = nil
local opMode = uci:get("network", "@opmode[0]", "mode")

--2.4G Guest Network settings--
data["2GEnableGuest"] = { value = wifi.getEnableGuestNetwork("2.4G"), type = "checkbox" }
data["2GSsidBroadcast"] = { value = wifi.getSSIDBroadcast("2.4G", "guest"), type = "checkbox" }
--PegaBU6, YochengLian, 2022.08.09, In Netgear HomeRouterSpec 16a, Ch. 17.4.2 In "Guest Network", "Allow guest to access My Local network" must be checked and grey out.
if opMode == "ap" then
    data["2GAllowAccessLocal"] = { value = "true", type = "checkbox" }
else
    data["2GAllowAccessLocal"] = { value = wifi.getAllowAccessLocal("2.4G"), type = "checkbox" }
end

--Default guest network naming rule: (refer NetgearHomeRouter 16a, page 193, 194.)
--        "NETGEAR-Guest" for 1st 2.4G guest network SSID.
--        "NETGEAR-Guest2" for 2nd 2.4G guest network SSID.
--        "NETGEAR-Guest3" for 3rd 2.4G guest network SSID.
--        "NETGEAR-5G-Guest" for 1st 5G guest network SSID.
--        "NETGEAR-5G-Guest" for 2nd 5G guest network SSID.
--        "NETGEAR-5G-Guest" for 3rd 5G guest network SSID.
data["2GSsid"] = { value = wifi.getSsid("2.4G", "guest"), type = "input" }
data["2GSecurity"] = { value = wifi.getSecurityType("2.4G", "guest"), type = "radio" }
data["2GPassword"] = { value = wifi.getWPAPassphrase("2.4G", "guest"), type = "input" }

--5G Guest Network settings--
data["5GEnableGuest"] = { value = wifi.getEnableGuestNetwork("5G"), type = "checkbox" }
data["5GSsidBroadcast"] = { value = wifi.getSSIDBroadcast("5G", "guest"), type = "checkbox" }
--PegaBU6, YochengLian, 2022.08.09, In Netgear HomeRouterSpec 16a, Ch. 17.4.2 In "Guest Network", "Allow guest to access My Local network" must be checked and grey out.
if opMode == "ap" then
    data["5GAllowAccessLocal"] = { value = "true", type = "checkbox" }
else
    data["5GAllowAccessLocal"] = { value = wifi.getAllowAccessLocal("5G"), type = "checkbox" }
end

data["5GSsid"] = { value = wifi.getSsid("5G", "guest"), type = "input" }
data["5GSecurity"] = { value = wifi.getSecurityType("5G", "guest"), type = "radio" }
data["5GPassword"] = { value = wifi.getWPAPassphrase("5G", "guest"), type = "input" }

--GuestNetwork GUI, hidden INPUT--
data["2GMainSsid"] = { value = wifi.getSsid("2.4G", "primary"), type = "input" }
data["5GMainSsid"] = { value = wifi.getSsid("5G", "primary"), type = "input" }
--data["wps_status"] = { value = "", type = "input" } --TODO: FIXME or Remove me.

log.console("====Debug Print, End of "..__FILE__().."====")
log.console("\n")

--io.write("Content-type: %s" %  {"application/json"} )
--io.write("\r\n\r\n")
--io.write(json.encode(data))
return json.encode(data)

