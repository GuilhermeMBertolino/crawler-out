#! /bin/sh

vlan_init() {
	echo "switch only mode, add vlan2"
	vconfig set_name_type VLAN_PLUS_VID_NO_PAD
	vconfig add eth0 2
	echo "5,2" > proc/tenda_eswitch_tool/pvid
}

# $1: vlan_id  $2: vlan members, port bitmap  $3 vlan tag members, port bitmap
vlan_set() {
	echo "$1,$2,$3" > proc/tenda_eswitch_tool/vlan_ports
	echo 1 > proc/tenda_eswitch_tool/vlan_enable
}

pvid_set() {
	echo "$1,$2" > proc/tenda_eswitch_tool/pvid
}

pvid_set_all() {
	echo "0,$1" > proc/tenda_eswitch_tool/pvid
	echo "1,$2" > proc/tenda_eswitch_tool/pvid
	echo "2,$3" > proc/tenda_eswitch_tool/pvid
	echo "3,$4" > proc/tenda_eswitch_tool/pvid

}

# $1:igmp_pbmp $2: tag_igmp_pbmp $3 igmp_port $4: main_vid $5:vids 
igmp_config() {
	echo igmp_config
    if [ $# -gt 4 ]
	then
		echo "Custom IPTV mode config vlan"
		vids=$5
		vids=${vids//,/ }
		for v in $vids
		do
            echo "$v,$1,$2" > proc/tenda_eswitch_tool/vlan_ports
		done
	    echo "$3,$4" > proc/tenda_eswitch_tool/pvid
	else
		echo "Default IPTV mode config vlan"
		echo "$4,$1,$2" > proc/tenda_eswitch_tool/vlan_ports
	    echo "$3,$4" > proc/tenda_eswitch_tool/pvid
	fi
	
	
	vconfig set_name_type VLAN_PLUS_VID_NO_PAD
	brctl addbr br2
	vconfig add eth0 $4  
	ifconfig vlan$4 up

	brctl addif br2 vlan$4
	ifconfig br2 up

}

switch_led_set() {
	if [ $1 = 1 ] 
	then
		ssdk_sh led ctrlpattern set 0 0 always_on
		ssdk_sh led ctrlpattern set 0 1 always_on
		ssdk_sh led ctrlpattern set 0 2 always_on
		ssdk_sh led ctrlpattern set 1 0 always_on
		ssdk_sh led ctrlpattern set 1 1 always_on
		ssdk_sh led ctrlpattern set 1 2 always_on
	fi

	if [ $1 = 2 ]
	then
		ssdk_sh led ctrlpattern set 0 0 always_off
		ssdk_sh led ctrlpattern set 0 1 always_off
		ssdk_sh led ctrlpattern set 0 2 always_off
		ssdk_sh led ctrlpattern set 1 0 always_off
		ssdk_sh led ctrlpattern set 1 1 always_off
		ssdk_sh led ctrlpattern set 1 2 always_off
	fi

	if [ $1 = 3 ]
	then
		ssdk_sh led ctrlpattern set 0 0 always_blink
		ssdk_sh led ctrlpattern set 0 1 always_blink
		ssdk_sh led ctrlpattern set 0 2 always_blink
		ssdk_sh led ctrlpattern set 1 0 always_blink
		ssdk_sh led ctrlpattern set 1 1 always_blink
		ssdk_sh led ctrlpattern set 1 2 always_blink
	fi

	if [ $1 = 4 ]
	then
		ssdk_sh led ctrlpattern set 0 0 map y y y y y y y y y y 8HZ
		ssdk_sh led ctrlpattern set 0 1 map y y y y y y y y y y 8HZ
		ssdk_sh led ctrlpattern set 0 2 map y y y y y y y y y y 8HZ
		ssdk_sh led ctrlpattern set 1 0 map y y y y y y y y y y 8HZ
		ssdk_sh led ctrlpattern set 1 1 map y y y y y y y y y y 8HZ
		ssdk_sh led ctrlpattern set 1 2 map y y y y y y y y y y 8HZ
	fi
}

case $1 in
vlan_init)
	vlan_init $2 $3;;
vlan_set)
	vlan_set $2 $3 $4;;
pvid_set)
	pvid_set $2 $3;;
pvid_set_all)
	pvid_set_all $2 $3 $4 $5 $6 $7;;
igmp_config)
	igmp_config $2 $3 $4 $5 $6 $7;;
switch_led_set)
	switch_led_set $2;;
*)
	echo "Invalid arg"
esac
