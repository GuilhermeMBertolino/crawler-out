#!/bin/sh /etc/rc.common
#
# Copyright (C) 2017 Tp-link.com
# Author: Weng Kaiping <wengkaiping@tp-link.net>
# Date: 30Mar17
#

START=99

DEBUG_OUTOUT=1

SERVICE_PATH="/usr/sbin/nrd"
NRD_CONFIG_FILE="/tmp/nrd.conf"

. /lib/functions/nrd-config.sh

nrd_echo() {   
    if [ "$DEBUG_OUTOUT" -gt 0 ]; then
            echo "${1}: ""$2"> /dev/console
	fi
}

generate_config() {
    # Create configuration file and start nrd
    nrd_create_config $NRD_CONFIG_FILE 'AP' 

}


start(){

    config_load 'nrd'
    config_get_bool enabled config 'Enable' '0'
    local sysmode=`uci get sysmode.sysmode.mode`
    local APSteering_enable=`uci get onemesh.onemesh.enable`

    [ -z "$sysmode" ] && sysmode="router"
    [ -z "$APSteering_enable" ] && APSteering_enable="off"

    [ "$enabled" -gt 0 ] || return 1

    [ "$APSteering_enable" = "on" -a "$sysmode" = "router" ] || return 1

    generate_config

    local nrd=$(pgrep "/usr/sbin/nrd" |wc -l)
    if [ "$nrd" -ge 1 ]; then
        return 1
    fi

    option="-a"

    nrd_echo nrd "starting daemon, AP steering is $APSteering_enable, Band steering is $BandSteering_enable"

    ${SERVICE_PATH} $option -d -C "$NRD_CONFIG_FILE" &

    # Uncomment this line to send the logs to a file
    #export DBG_APPEND_FILE_PATH=/tmp/nrd.log
    #export DBG_LEVELS=all=DEBUG

}



stop() {
    nrd_echo nrd "stopping"
    local nrd_pid=`ps|grep ${SERVICE_PATH}|grep -v 'grep'|awk '{print $1}'`
    nrd_echo nrd "$nrd_pid"
    if [ -n "$nrd_pid" ];then
        for pid in $nrd_pid;do
            kill -SIGINT "$pid"
        done
    fi
}


reload()
{
    nrd_echo nrd "reload"
    #send message to nrd to update blacklist can be replace by restart
    stop
    start
}

#service_triggers()
#{
#    procd_add_reload_trigger "nrd_blacklist" "nrd" 
#}

