!function($){"use strict";function TPCheckbox(){}TPCheckbox.prototype={constructor:TPCheckbox,instances:[],init:function(id){var tag;this.id=id,this.$checkbox=$("#"+id);var divTmp=this.$checkbox.parent("div"),bTmp=$(divTmp).find("b");void 0!==$(bTmp).attr("class")&&(tag=$(bTmp).attr("class")),$(divTmp).addClass("pure-control-group").addClass("relative"),$(bTmp).replaceWith("<label class='label-title "+tag+"' "+($(bTmp).attr("id")?"id='"+$(bTmp).attr("id")+"'":"")+">"+$(bTmp).html()+"</label>");var labelTmp=this.$checkbox.next("label").first(),str="<label class='checkbox-label' for='"+this.$checkbox.attr("id")+"'>";""==labelTmp.html()||void 0===labelTmp.html()?str+="<span class='icon no-text'></span></label>":str+="<span class='icon'></span><span class='text T "+labelTmp.attr("class")+"'>"+labelTmp.html()+"</span></label>",this.$checkbox.next("label").replaceWith(str),this.$label=this.$checkbox.next("label");var errorTips='<div class="widget-error-tips flow" id="'+this.$checkbox.attr("id")+'_tips"><div class="widget-error-tips-wrap"><div class="content error-tips-content"><span id="'+this.$checkbox.attr("id")+'_tips_content"></span></div></div></div>';this.errorTip=$(errorTips).hide(),this.$label.after(this.errorTip),this.refresh(),this.registerHandlers()},refresh:function(){var isChecked=this.$checkbox.prop("checked"),checkboxText=this.$label.find(".text"),checkboxIcon=this.$label.find(".icon");checkboxText.removeClass("span-click").removeClass("span-disable-click"),checkboxIcon.removeClass("checkbox-click").removeClass("checkbox-disable-click").removeClass("checkbox-disable-unchecked"),this.$checkbox.prop("disabled")?1==isChecked||"checked"==isChecked?(this.$checkbox.addClass("checkbox-checkbox").prop("data-checked",!0),checkboxText.addClass("span-disable-click"),checkboxIcon.addClass("checkbox-disable-click")):(this.$checkbox.addClass("checkbox-checkbox").prop("data-checked",!1),checkboxText.addClass("span-disable-click"),checkboxIcon.addClass("checkbox-disable-unchecked")):1==isChecked||"checked"==isChecked?(this.$checkbox.addClass("checkbox-checkbox").prop("data-checked",!0),checkboxText.addClass("span-click"),checkboxIcon.addClass("checkbox-click")):(this.$checkbox.addClass("checkbox-checkbox").prop("data-checked",!1),checkboxText.removeClass("span-click"),checkboxIcon.removeClass("checkbox-click"))},registerHandlers:function(){var self=this;self.unregisterHandlers(),self.$label.on("mouseenter.tpCheckbox",function(e){self.labelMouseEnter(e)}),self.$label.on("mouseleave.tpCheckbox",function(e){self.labelMouseLeave(e)}),self.$label.on("click.tpCheckbox",function(e){self.labelClick(e)})},labelMouseEnter:function(){this.$label.find(".text").addClass("span-hover"),!0===this.$checkbox.prop("data-checked")?this.$label.find(".icon").removeClass("checkbox-click").addClass("checkbox-hover-checked"):this.$label.find(".icon").addClass("checkbox-hover-unchecked")},labelMouseLeave:function(){!0===this.$checkbox.prop("data-checked")&&this.$label.find(".icon").addClass("checkbox-click"),this.$label.find(".text").removeClass("span-hover"),this.$label.find(".icon").removeClass("checkbox-hover-checked").removeClass("checkbox-hover-unchecked")},labelClick:function(e){e.preventDefault();this.$checkbox.prop("disabled")||(this.$label.find(".text").removeClass("span-hover"),this.$label.find(".icon").removeClass("checkbox-hover-checked").removeClass("checkbox-hover-unchecked"),!1===this.$checkbox.prop("data-checked")?(this.$checkbox.prop("data-checked",!0),this.$label.find(".text").addClass("span-click"),this.$label.find(".icon").addClass("checkbox-click")):(this.$checkbox.prop("data-checked",!1),this.$label.find(".text").removeClass("span-click"),this.$label.find(".icon").removeClass("checkbox-click")),this.$checkbox.click())},unregisterHandlers:function(){this.$label.off(".tpCheckbox")},destroy:function(){this.unregisterHandlers(),delete Object.getPrototypeOf(this).instances[this.id],$(this).removeData("tpCheckbox")}},$.fn.tpCheckbox=function(options){this.each(function(){var tpcheckbox=$(this).data("tpCheckbox");if(tpcheckbox)"destroy"===options&&tpcheckbox?tpcheckbox.destroy():$(this).data("tpCheckbox").refresh();else{var instance=new TPCheckbox;$(this).data("tpCheckbox",instance),(instance.instances[this.id]=instance).init(this.id)}})}}(jQuery);