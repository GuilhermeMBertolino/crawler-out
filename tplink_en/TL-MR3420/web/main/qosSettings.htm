<style type="text/css">
    .inline .select-container {
        display: inline-block;
    }
    .inline .select-container .tp-select .select-box {
        top: -1px;
    }
    .rule-list-container {
        width: 210px;
        display: inline-block;
        height: auto;
        position:  relative;
    }
    .rule-list-container.first {
        /*margin-left: 2%;*/
    }
    .rule-list-container h4.status {
        font-weight: normal;
    }
    .qos-panel.status-panel-main {
        padding: 30px 0px 0px 15px;
    }
    .qos-panel.status-panel-main .qos-list {
        margin-top: 20px;
        height: 165px;
        overflow-x: hidden;
        overflow-y: auto;
    }
    .msg-container-wrapper.complex-msg {
        margin-top: -50%;
        width: 650px;
    }
    .qos-panel.status-panel-main .qos-list .qos-list-p {
        width: 180px;
        padding: 8px 0;
        border-bottom: 1px solid #d9d9d9;
        cursor: pointer;
        position: relative;
        margin: 0;
    }
    .qos-display-name {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        display: inline-block;
        width: 130px;
        /*禁止选中文本*/
        -moz-user-select:none;
        -webkit-user-select:none;
        user-select:none;
    }
    span.qos-toggle-icon {
        vertical-align: middle;
        position: absolute;
        width: 10px;
        height: 8px;
        background: url(../img/icons-02.png) no-repeat -240px -41px;
    }
    p.qos-list-p span.qos-toggle-icon {
        top: 13px;
        right: 34px;
    }
    .type-title .qos-toggle-icon {
        top: 18px;
        right: 3px;
    }
    .selected span.qos-toggle-icon {
        background: url(../img/icons-02.png) no-repeat -238px -22px;
    }
    p.qos-list-p span.icon-del {
        background: url(../img/icons.png) no-repeat -222px -21px;
        display: inline-block;
        width: 18px;
        height: 18px;
        margin-top: -4px;
        margin-left: 15px;
    }
    .qos-item-detail {
        margin: 10px 0;
        background-color: #f2f2f2;
        width: 180px;
    }
    .qos-item-detail.hidden {
        display: none;
    }
    .qos-item-detail p {
        line-height: 26px;
        margin: 0;
    }
    label.detail-label {
        display: inline-block;
        width: 65px;
        margin-left: 10px;
    }
    label.detail-label.short {
        width: 30px;
        margin-left: 5px;
        padding-right: 5px;
    }
    .control-panel {
        margin-top: 20px;
        margin-right: 10px;
    }
    div.msg-container div.button-container {
        display: inline-block;
        vertical-align: middle;
        margin-right: 5px;
    }
    div.msg-container div.inline-btn-right {
        margin-right: 0px;
    }
    div.msg-content-container div.header-container h3 {
        font-size: 14px;
        color: #1A1A1A;
        margin-bottom: 10px;
        border-bottom: none;
        padding-bottom: 0;
    }
    .type-title {
        font-weight: normal;
        color: #1a1a1a;
        border-bottom: 1px solid #cccccc;
        position: relative;
        cursor: pointer;
    }
    .app-info-cnt {
        margin: 6px 0 25px;
    }
    .widget-wrap-outer {
        position: relative;
        display: inline-block;
        vertical-align: middle;
    }
    .checkbox-group-wrap {
        vertical-align: top;
        display: inline-block;
        position: relative;
    }
    ul.checkbox-group-list-wrap {
        vertical-align: top;
        display: inline-block;
        margin-right: 2px;
        padding: 0;
        margin-top: 0;
        list-style: outside none none;
    }
    .app-info-name {
        width: 130px;
        padding: 2px 8px;
    }
</style>

<div id="tcHeader">
    <h3 id="t_et">QoS</h3>
</div>

<div class="content-container">
    <form class="pure-form pure-form-aligned">
        <div id="qosEnableBox">
            <b class="l" id="t_en">QoS:</b>
            <input type="checkbox" id="enableQoS" />
            <label class="T_enable">Enable</label>
        </div>
        <div>
            <b class="l" id="t_type">Line Type:</b>
            <input type="radio" id="adsl_type" name="lineTypeRadio" />
            <label>DSL</label>
            <input type="radio" id="other_type" name="lineTypeRadio" />
            <label id="t_other">Other</label>
        </div>

        <div class="pure-control-group nd" id="curDslUp">
            <b class="l" id="t_dslUp">Current Up Stream Rate:</b>
            <input type="text" readonly="true" class="tp-input-text" id="upStreamCurrRate">
        </div>

        <div class="pure-control-group nd" id="curDslDown">
            <b class="l" id="t_dslDown">Current Down Stream Rate:</b>
            <input type="text" readonly="true" class="tp-input-text" id="downStreamCurrRate">
        </div>

        <div class="inline">
            <b id="t_upBandwidth" class="l">Upload Bandwidth:</b>
            <input type="text" maxlength="4" class="m" id="upBandwidth" />
            <select id="upUnit" class="m">
                <option value="kbps" class="T_kbps">kbps</option>
                <option value="mbps" class="T_mbps">mbps</option>
            </select>
        </div>

        <div class="inline">
            <b id="t_downBandwidth" class="l">Download Bandwidth:</b>
            <input type="text" maxlength="4" class="m" id="downBandwidth" />
            <select id="downUnit" class="m">
                <option value="kbps" class="T_kbps">kbps</option>
                <option value="mbps" class="T_mbps">mbps</option>
            </select>
        </div>

        <div id="iptvQos" class="nd">
            <div>
                <b class="l" id="t_iptv">IPTV QoS:</b>
                <input type="checkbox" id="en_iptvQos" />
                <label class="T_enable">Enable</label>
            </div>
            <div id="div_iptvDetails" class="nd">
                <div>
                    <b id="t_iptvClass" class="l">IPTV Class</b>
                    <select id="iptvClass" class="">
                        <option class="T T_high" value="4">High</option>
                        <option class="T T_middle" value="3">Middle</option>
                        <option class="T T_low" value="2">Low</option>
                    </select>
                </div>
            </div>
        </div>

        <div id="voipQos" class="nd">
            <div>
                <b class="l" id="t_voip">VoIP QoS:</b>
                <input type="checkbox" id="en_voipQos" />
                <label class="T_enable">Enable</label>
            </div>
        </div>

        <div class="advanced-block">
            <span class="advanced-icon advanced-hide-icon" id="moreCfg"></span>
            <span class="T_adv">Advanced</span>
        </div>

        <div id="con_More" class="nd">
            <div class="pure-control-group">
                <label class="label-title l T T_c_highPriority">High Priority:</label>
                <input type="text" data-slider="true" data-slider-range="0 ,100" data-slider-snap="true" data-slider-step="5" data-slider-highlight="true" id="high" />
                <span class="output"></span>
            </div>
            <div class="pure-control-group">
                <label class="label-title l T T_c_middlePriority">Middle Priority:</label>
                <input type="text" data-slider="true" data-slider-range="0 ,100" data-slider-snap="true" data-slider-step="5" data-slider-highlight="true" id="middle" />
                <span class="output"></span>
            </div>
            <div class="pure-control-group">
                <label class="label-title l T T_c_lowPriority">Low Priority:</label>
                <input type="text" data-slider="true" data-slider-range="0 ,100" data-slider-snap="true" data-slider-step="5" data-slider-highlight="true" id="low" />
                <span class="output"></span>
            </div>
        </div>

        <div id="saveBtn">
            <p class="br"></p>
            <div class="btn-right">
                <button type="submit" class="green T_save" id="editOK">Save</button>
            </div>
        </div>
    </form>

    <p class="br"></p>

    <h3 id="t_et2">QoS Rule List</h3>
    <div class="content-container">
        <div class="rule-list-container">
            <h4 class="status">
                <span class="T" id="T_c_highPriority">High Priority:</span> <span id="highValue"></span>
            </h4>
            <div class="status-panel-main qos-panel">
                <div class="qos-list" id="highList">
                </div>
                <div class="control-panel">
                    <button type="submit" class="blue T_add" id="addHigh">Add</button>
                </div>
            </div>
        </div>
        <div class="rule-list-container">
            <h4 class="status">
                <span class="T" id="T_c_middlePriority">Middle Priority:</span> <span id="middleValue"></span>
            </h4>
            <div class="status-panel-main qos-panel">
                <div class="qos-list" id="middleList">
                </div>
                <div class="control-panel">
                    <button type="submit" class="blue T_add" id="addMiddle">Add</button>
                </div>
            </div>
        </div>
        <div class="rule-list-container">
            <h4 class="status">
                <span class="T" id="T_c_lowPriority">Low Priority:</span> <span id="lowValue"></span>
            </h4>
            <div class="status-panel-main qos-panel">
                <div class="qos-list" id="lowList">
                </div>
                <div class="control-panel">
                    <button type="submit" class="blue T_add" id="addLow">Add</button>
                </div>
            </div>
        </div>
    </div>

</div>
<script type="text/javascript">
(function() {

//
//    e_str[CMM_IQOS_BANDWIDTH_ERR] = "Invalid port format.";
//    e_str[CMM_IQOS_UP_BW_SMALL] = "上行带宽总值过小";
//    e_str[CMM_IQOS_UP_BW_SMALL] = "下行带宽总值过小";
//    e_str[CMM_IQOS_CONFLITCT_RULE] = "IQOS条目冲突";


    var TYPE_DEVICE = 11;
    var TYPE_SYSTEM = 30;
    var TYPE_CUSTOM_TCP = 21;
    var TYPE_CUSTOM_UDP = 22;
    var TYPE_CUSTOM_ALL = 23;
    var CLASS_HIGH = 4;
    var CLASS_MIDDLE = 3;
    var CLASS_LOW = 2;

    var qosEntry;
    $.qosVar = {};
    var qosRuleList;
    var upstreamCurrRate;
    var downstreamCurrRate;

    function init() {
        initSlider();

        qosEntry = $.act(ACT_GET, IQOS, null, null);
        if (!$.exe()) {
            $("#enableQoS").prop("checked", (qosEntry.enable == 0) ? false : true);
            if (qosEntry.linkType == 1) {
                $("#adsl_type").prop("checked", true);
            } else {
                $("#other_type").prop("checked", true);
            }
            $("#upBandwidth").val(qosEntry.upTotalBW);
            if (qosEntry.upUnit == 1) {
                $('#upUnit option[value="mbps"]').prop('selected', 'selected');
            } else if (qosEntry.upUnit == 2) {
                $('#upUnit option[value="kbps"]').prop('selected', 'selected');
            }
            $("#downBandwidth").val(qosEntry.downTotalBW);
            if (qosEntry.downUnit == 1) {
                $('#downUnit option[value="mbps"]').prop('selected', 'selected');
            } else if (qosEntry.downUnit == 2) {
                $('#downUnit option[value="kbps"]').prop('selected', 'selected');
            }

            //iptv
            if (INCLUDE_IPTV) {
                $('#iptvQos').removeClass('nd');
                $("#en_iptvQos").prop("checked", (qosEntry.iptvEnable == 0) ? false : true);
                if (qosEntry.iptvEnable == 1) {
                    $("#div_iptvDetails").removeClass("nd");
                    $('#iptvClass option[value="' + qosEntry.iptvClass + '"]').prop('selected', 'selected');
                }
            }


            //voip
            if (INCLUDE_VOIP) {
                $('#voipQos').removeClass('nd');
                $("#en_voipQos").prop("checked", (qosEntry.voIPEnable == 0) ? false : true);
            }

            //advanced
            $("#high").simpleSlider("setValue", qosEntry.high);
            $("#middle").simpleSlider("setValue", qosEntry.middle);
            $("#low").simpleSlider("setValue", qosEntry.low);

            $('#highValue').text(qosEntry.high + '%');
            $('#middleValue').text(qosEntry.middle + '%');
            $('#lowValue').text(qosEntry.low + '%');

        }

        //获取训练速率
        var wanComInfList = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, ["WANAccessType"]);
        if (!$.exe()) {
            var dslStk;
            var ewanStk;
            $.each(wanComInfList, function() {
                if (this.WANAccessType == "DSL") {
                    dslStk = this.__stack;
                } else if (this.WANAccessType == "Ethernet") {
                    ewanStk = this.__stack;
                }
            });
        }
        var wanDslCfg = $.act(ACT_GET, WAN_DSL_INTF_CFG, dslStk, null, ["status", "upstreamCurrRate", "downstreamCurrRate"]);
        if (!$.exe()) {
            wanDslStatus = wanDslCfg.status;
            if (wanDslCfg.status == "Up") {
                $("#curDslUp").removeClass("nd");
                $("#curDslDown").removeClass("nd");
                $("#upStreamCurrRate").prop("value", wanDslCfg.upstreamCurrRate + " " + s_str.kbps);
                $("#downStreamCurrRate").prop("value", wanDslCfg.downstreamCurrRate + " " + s_str.kbps);
            }
        }

        //初始化规则列表
        initRuleList();
    }

    function initRuleList(callback) {
        qosRuleList = $.act(ACT_GL, IQOS_RULE, null, null);
        $("#highList").empty();
        $("#middleList").empty();
        $("#lowList").empty();
        if (!$.exe()) {
            var i = 0;
            $.each(qosRuleList, function() {
                var details = {};
                if (this.type == TYPE_DEVICE) {
                    var macTemp = this.macAddress;
                    details[$.tpLang.qosSettings_nstr.c_mac] = macTemp.replace(/\:/g, '-');
                    var ipTemp = $.tpLang.qosSettings_nstr.c_none;
                    var deviceOnline = $.act(ACT_GL, LAN_HOST_ENTRY, null, null);
                    if (!$.exe()) {
                        $.each(deviceOnline, function() {
                            if (this.MACAddress == macTemp) {
                                ipTemp = this.IPAddress;
                            }
                        });
                    }
                    details[$.tpLang.qosSettings_nstr.c_ip] = ipTemp;
                }
                if (this.type == TYPE_SYSTEM) {}
                if (this.type == TYPE_CUSTOM_ALL) {
                    details[$.tpLang.table_str.protocol] = $.tpLang.qosSettings_nstr.t_all;
                    if (this.srcPort == this.endPort) {
                        details[$.tpLang.table_str.port] = this.srcPort;
                    } else {
                        details[$.tpLang.table_str.port] = this.srcPort + "-" + this.endPort;
                    }
                }
                if (this.type == TYPE_CUSTOM_TCP) {
                    details[$.tpLang.table_str.protocol] = $.tpLang.qosSettings_nstr.t_tcp;
                    if (this.srcPort == this.endPort) {
                        details[$.tpLang.table_str.port] = this.srcPort;
                    } else {
                        details[$.tpLang.table_str.port] = this.srcPort + "-" + this.endPort;
                    }
                }
                if (this.type == TYPE_CUSTOM_UDP) {
                    details[$.tpLang.table_str.protocol] = $.tpLang.qosSettings_nstr.t_udp;
                    if (this.srcPort == this.endPort) {
                        details[$.tpLang.table_str.port] = this.srcPort;
                    } else {
                        details[$.tpLang.table_str.port] = this.srcPort + "-" + this.endPort;
                    }
                }

                if (this["class"] == CLASS_HIGH) {
                    insertQosItem( /*this.confId*/ i, "high", this.appName, details);
                } else if (this["class"] == CLASS_MIDDLE) {
                    insertQosItem( /*this.confId*/ i, "middle", this.appName, details);
                } else if (this["class"] == CLASS_LOW) {
                    insertQosItem( /*this.confId*/ i, "low", this.appName, details);
                }
                i++;
            });

            if ($.isFunction(callback)) {
                callback();
            }
        }
    }


    $("#en_iptvQos").on("click", function() {
        if ($(this).prop("data-checked") == true) {
            $("#div_iptvDetails").removeClass("nd");
        } else {
            $("#div_iptvDetails").addClass("nd");
        }
    });

    $("#addHigh").on("click", function() {
        $.qosVar.newRuleClass = CLASS_HIGH;
        $.complexMsg("qosRule.htm" /*, "qos rule"*/ );
    });
    $("#addMiddle").on("click", function() {
        $.qosVar.newRuleClass = CLASS_MIDDLE;
        $.complexMsg("qosRule.htm" /*, "qos rule"*/ );
    });
    $("#addLow").on("click", function() {
        $.qosVar.newRuleClass = CLASS_LOW;
        $.complexMsg("qosRule.htm" /*, "qos rule"*/ );
    });

    $("#editOK").on("click", function() {
        $.addLoading($(this));
        doSave();
    });

    $('#moreCfg').on('click', function() {
        var obj = this;
        if ($(obj).hasClass("cln")) {
            $("#con_More").addClass("nd");
            $(obj).removeClass("cln");
        } else {
            $("#con_More").removeClass("nd");
            $(obj).addClass("cln");
        }
    });

    var isMouseMove = false;
    $('.rule-list-container').on('mousedown', 'div.qos-item-container .qos-list-p', function(event) {
        isMouseMove = false;

        var me = this;
        var area = $(this).closest('.content-container');

        var offX = event.offsetX;
        var offY = event.offsetY;

        var parent = $(this).closest('.rule-list-container');

        var item = $(this).closest('div.qos-item-container');
        $('body').off('mousemove.qos').on('mousemove.qos', function(evt) {
            isMouseMove = true;
            //因为拖动过程可能会导致页面滚动，此时需要重新获取相关元素的offset的值，所以以下的获取逻辑，要写在mousemove中
            var parentX = $(parent).offset().left;
            var parentY = $(parent).offset().top;
            var minX = area.offset().left;
            var minY = area.offset().top;
            var maxX = minX + area.width();
            var maxY = minY + area.height();
            var evtX = evt.clientX;
            var evtY = evt.clientY;
            if (evtX < minX) {
                evtX = minX;
            } else if (evtX > maxX){
                evtX = maxX;
            }

            if (evtY < minY) {
                evtY = minY;
            } else if (evtY > maxY){
                evtY = maxY;
            }

            var _x = evtX - parentX - offX;
            var _y = evtY - parentY - offY;


            item.css({
                'left': _x,
                'top': _y,
                'z-index': 999,
                'position': 'absolute'
            });
        });

        $('body').off('mouseup.qos').on('mouseup.qos', function(evt) {
            $('body').off('.qos');
            if (isMouseMove === true) {
                var listContainer = $('.rule-list-container');
                var mouseX = evt.clientX;
                var mouseY = evt.clientY;
                var targetContainer = null;
                for (var i = 0, len = listContainer.length; i < len; i++) {
                    var tmpContainer = $(listContainer[i]);
                    var minX = tmpContainer.offset().left;
                    var minY = tmpContainer.offset().top;
                    var maxX = minX + tmpContainer.width();
                    var maxY = minY + tmpContainer.height();

                    if (mouseX >= minX && mouseX <= maxX && mouseY >= minY && mouseY <= maxY) {
                        targetContainer = tmpContainer;
                        break;
                    }
                }

                if (targetContainer === null || targetContainer[0] ===  parent[0]) {
                    item.css({
                        'position': 'static',
                        'left': 0,
                        'top': 0,
                        'z-index': 0
                    });
                } else {
                    //删除原本条目，添加新条目到
                    var newClass;
                    if (targetContainer.find('#highList').length > 0) {
                        newClass = CLASS_HIGH;
                    } else if (targetContainer.find('#middleList').length > 0) {
                        newClass = CLASS_MIDDLE;
                    } else if (targetContainer.find('#lowList').length > 0) {
                        newClass = CLASS_LOW;
                    }

                    var index = $(me).attr('id').match(/_rule(\d)$/)[1];
                    $(me).remove();
                    $.act(ACT_DEL, IQOS_RULE, qosRuleList[index].__stack, null);
                    var newData = $.extend({}, qosRuleList[index]);
                    delete newData.__stack;
                    newData["class"] = newClass;


                    $.addLoading();
                    $.act(ACT_ADD, IQOS_RULE, null, null, newData);
                    $.exe(function() {
                        initRuleList(function() {
                            $.removeLoading();
                        })
                    });
                }
            }


        });
    });




    function initSlider() {
        $("[data-slider]").each(function() {
            var $el, allowedValues, settings, x;
            $el = $(this);
            settings = {};
            allowedValues = $el.data("slider-values");
            if (allowedValues) {
                settings.allowedValues = (function() {
                    var _i, _len, _ref, _results;
                    _ref = allowedValues.split(",");
                    _results = [];
                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                        x = _ref[_i];
                        _results.push(parseFloat(x));
                    }
                    return _results;
                })();
            }
            if ($el.data("slider-range")) {
                settings.range = $el.data("slider-range").split(",");
            }
            if ($el.data("slider-step")) {
                settings.step = $el.data("slider-step");
            }
            settings.snap = $el.data("slider-snap");
            settings.equalSteps = $el.data("slider-equal-steps");
            if ($el.data("slider-theme")) {
                settings.theme = $el.data("slider-theme");
            }
            if ($el.attr("data-slider-highlight")) {
                settings.highlight = $el.data("slider-highlight");
            }
            if ($el.data("slider-animate") != null) {
                settings.animate = $el.data("slider-animate");
            }
            return $el.simpleSlider(settings);
        });
        //给三个slider设置相互之间的关系以及最大最小值
        $("#high").bind("slider:ready slider:changed", function(event, data) {
            var middleMaxValue = (100 - $("#high").prop("value") - $("#low").prop("value")) > ($("#high").prop("value") - 5) ? ($("#high").prop("value") - 5) : (100 - $("#high").prop("value") - $("#low").prop("value"));
            $("#middle").simpleSlider("setLimits", 10, middleMaxValue);
            var lowMaxValue = (100 - $("#high").prop("value") - $("#low").prop("value")) > ($("#middle").prop("value") - 5) ? ($("#middle").prop("value") - 5) : (100 - $("#high").prop("value") - $("#low").prop("value"));
            $("#low").simpleSlider("setLimits", 5, lowMaxValue);
            $(this).nextAll(".output:first").html(parseInt(data.value) + "%");
        });
        $("#middle").bind("slider:ready slider:changed", function(event, data) {
            var lowMaxValue = (100 - $("#high").prop("value") - $("#middle").prop("value")) > ($("#middle").prop("value") - 5) ? ($("#middle").prop("value") - 5) : (100 - $("#high").prop("value") - $("#middle").prop("value"));
            $("#low").simpleSlider("setLimits", 5, lowMaxValue);
            var highMaxValue = 100 - $("#middle").prop("value") - $("#low").prop("value");
            if (highMaxValue >= $("#high").prop("value")) {
                $("#high").simpleSlider("setLimits", 15, highMaxValue);
            }
            $(this).nextAll(".output:first").html(parseInt(data.value) + "%");
        });
        $("#low").bind("slider:ready slider:changed", function(event, data) {
            var highMaxValue = 100 - $("#middle").prop("value") - $("#low").prop("value");
            if (highMaxValue >= $("#high").prop("value")) {
                $("#high").simpleSlider("setLimits", 15, highMaxValue);
            }
            var middleMaxValue = (100 - $("#high").prop("value") - $("#low").prop("value")) > ($("#high").prop("value") - 5) ? ($("#high").prop("value") - 5) : (100 - $("#high").prop("value") - $("#low").prop("value"));
            if (middleMaxValue >= $("#middle").prop("value")) {
                $("#middle").simpleSlider("setLimits", 10, middleMaxValue);
            }
            $(this).nextAll(".output:first").html(parseInt(data.value) + "%");
        });
    }

    function insertQosItem(id, type, name, details) {
        var target = $("#" + type + "List");
        var container = $('<div class="qos-item-container">');
        var str = $("<p class=\"qos-list-p\" id=\"_rule" + id + "\"><span class=\"qos-display-name\">" + name + "</span><span class=\"qos-toggle-icon\"><span class=\"icon-del\"></span></span></p>");
        container.append(str);
        var count = 0;
        var hasMac = false;
        var detailsStr = "<div class=\"qos-item-detail hidden\">";
        for (var i in details) {
            count++;
            if (i == $.tpLang.qosSettings_nstr.c_mac) {
                hasMac = true;
            }
            detailsStr += "<p><label class=\"detail-label\">" + i + ":</label><span>" + details[i] + "</span>";
        }
        detailsStr += "</div>";
        var appendTemp = $(detailsStr);
        if (hasMac) {
            appendTemp.find("label.detail-label").addClass("short");
        }
        container.append(appendTemp);
        target.append(container);

        if (count == 0) {
            //如果是没有details的就不显示小箭头
            str.find(".qos-toggle-icon").css("background", "none");
        } else {
            $(str).on("click", function(event) {
//                if ($(event.target).hasClass("icon-del")) {
//                    return false;
//                }
                if (isMouseMove === true) {
                    return;
                }
                $(this).toggleClass("selected");
                if ($(this).hasClass("selected")) {
                    $(this).next(".qos-item-detail").first().removeClass("hidden");
                } else {
                    $(this).next(".qos-item-detail").first().addClass("hidden");
                }
            });
        }

        $(str).find(".icon-del").on("click", function(e) {
            // $.addLoading($(this));
            e.stopPropagation();
            delQosItem(id);
        });
    }

    function delQosItem(index) {
        $.addLoading();
        $.act(ACT_DEL, IQOS_RULE, qosRuleList[index].__stack, null);
        $.exe(function(err) {
            $.removeLoading();
            if (!err) $.reload();
        });
    }


    function selectObj(element) {
        if (element) {
            element.focus();
            element.select();
        }
    }

    function doSave() {
        var qosSettings = {};
        var upUnit_val = $("#upUnit").data("value");
        var downUnit_val = $("#downUnit").data("value");
        var iptvClass_val = $("#iptvClass").data("value");


        qosSettings.enable = $("#enableQoS").prop("data-checked") ? 1 : 0;
        qosSettings.linkType = $("#adsl_type").prop("checked") ? 1 : 0;
        if (upUnit_val == "mbps") {
            qosSettings.upUnit = 1;
        } else if (upUnit_val == "kbps") {
            qosSettings.upUnit = 2;
        }
        if ($("#upBandwidth").val() == '' || !$.isnum($("#upBandwidth").val()) || parseInt($("#upBandwidth").val(), 10) < 1 || parseInt($("#upBandwidth").val(), 10) > 1000) {
            $.alert(CMM_IQOS_BANDWIDTH_ERR);
            selectObj($("#upBandwidth"));
            return false;
        }
        qosSettings.upTotalBW = $("#upBandwidth").val();
        if (downUnit_val == "mbps") {
            qosSettings.downUnit = 1;
        } else if (downUnit_val == "kbps") {
            qosSettings.downUnit = 2;
        }
        if ($("#upBandwidth").val() == '' || !$.isnum($("#downBandwidth").val()) || parseInt($("#downBandwidth").val(), 10) < 1 || parseInt($("#downBandwidth").val(), 10) > 1000) {
            $.alert(CMM_IQOS_BANDWIDTH_ERR);
            selectObj($("#downBandwidth"));
            return false;
        }
        qosSettings.downTotalBW = $("#downBandwidth").val();
        //iptv
        if (INCLUDE_IPTV) {
            qosSettings.iptvEnable = $("#en_iptvQos").prop("data-checked") ? 1 : 0;
            qosSettings.iptvClass = iptvClass_val;
        }
        //voip
        if (INCLUDE_VOIP) {
            qosSettings.voIPEnable = $("#en_voipQos").prop("data-checked") ? 1 : 0;
        }
        //advanced
        qosSettings.high = $("#high").prop("value");
        qosSettings.middle = $("#middle").prop("value");
        qosSettings.low = $("#low").prop("value");
        //guest network
        $.act(ACT_GET, IQOS, null, null, qosEntry);
        $.exe();
        qosSettings.guestEnable = qosEntry.guestEnable;
        qosSettings.guestClass = qosEntry.guestClass;

        $.act(ACT_SET, IQOS, null, null, qosSettings);
        $.exe(function(ret) {
            if (!ret) {
                $.removeLoading();
                $.reload();
            }
        });
    }

    $.tpInit(init);
})();
</script>
