<script type="text/javascript">
var strUpToDate = n_str.softup.upTodate || "Your firmware is up to date";
var strDownLoad = n_str.softup.downLoad || "Downloading...";
var strKeepPowerOn = n_str.softup.keepPowerOn || "To avoid any damage, keep the device powered on.";
var strInternetUnavailable = n_str.softup.internetUnavailable || "Internet is unavailable.";
var strCheckFail = n_str.softup.checkFail || "Invalid firmware. Please download the new firmware again.";
var strDownLoadFail = n_str.softup.downLoadFailed || "Download failed.";
var strCheckForUpgrade = n_str.softup.checkForUpgrade || "Check for Upgrades";
var strConfirmContent = n_str.softup.confirmContent || "Are you sure you want to upgrade the firmware?";
var strRestoreTipContent = n_str.softup.restoreTipContent || "The router will restore to its factory default settings after firmware upgrade.<br>Are you sure you want to upgrade the firmware?";
var strIllegalDevice = n_str.softup.illegalDevice || "Your device does not support TP-Link cloud service. Please contact TP-Link technical support if you want to continue.";
var strUpgrade = n_str.softup.c_upgrade || "Upgrade";
$("#t_upgrade").click(function() {
    if ($("#filename").val() == "") {
        $.alert(ERR_FIRM_FILE_NONE);
        return false;
    }

    var formObj = $('#filename').closest('form')[0];
    try {
        formObj.target = "up_frame";
        formObj.action = "/cgi/softup";
        formObj.submit();
    } catch (e) {}

    $.guage(["<span class='T T_uploading'>" + s_str.uploading + "</span>", "<span class='T T_wait_upload'>" + s_str.wait_upload + "</span>"], 10, 300, function() {
        $.guage(["<span class='T T_upgrading'>" + s_str.upgrading + "</span>", "<span class='T T_wait_upgrade'>" + s_str.wait_upgrade + "</span>"], 100, 1800, function() {
            $.refresh();
        }, null, null, null, strKeepPowerOn);

		//use tpAjax to prevent reloading in http error 500.
		$.tpAjax({
			url: "/cgi/softburn",
			async: true,
			bScript: true,
			success: function(ret) {
				if (!ret && (ret = $.ret)) {
					$.err("cgi", $.ret);
				}
			}
		});
    });
});

function showUpgradeError(status) {
    var strAlert;
    status = parseInt(status, 10);
    switch (status) {
        case 20000:
            strAlert = strDownLoadFail;
            break;
        case 20001:
            strAlert = strCheckFail;
            $("#t_onLineUpgrade").html('<span>' + strCheckForUpgrade + '</span>').data('operation', 'check').addClass('xl');
            break;
        case 20002:
            strAlert = strInternetUnavailable;
            break;
        case 20003:
            strAlert = strInternetUnavailable;
            break;
        case 20004: //alloc memory fail for firmware 
            strAlert = strDownLoadFail; //for temp-use, it should generate new document
            break;
    }

    alertButton('t_onLineUpgrade', strAlert);
}

function showDownLoadProgress() {
    var objUpdate;
    var status;

    alertButton('t_onLineUpgrade');
    $.guageWithRateControl({
        text: strDownLoad,
        note: strKeepPowerOn,
        updateInterval: 500,
        rateControl: function(percentOld, callback) {
            objUpdate = $.act(ACT_GET, FW_UPGRADE_INFO, null, null, null);

            $.exe(function(err) {
                if (err) {
                    return;
                }
                callback(objUpdate.progress || 100);
                status = parseInt(objUpdate.status, 10);
            });
        },
        isComplete: function(percent, callback_complete, callback_error) {
            if (status == 3) {
                if (callback_complete) {
                    callback_complete();
                }
            } else if (status >= 20000) {
                if (callback_error) {
                    callback_error(status);
                }

                $.removeLoading();
                showUpgradeError(status);
            }


        },
        callback_complete: function() {
            $.guage(["<span class='T T_upgrading'>" + s_str.upgrading + "</span>", "<span class='T T_wait_upgrade'>" + s_str.wait_upgrade + "</span>"], 100, 1800, function() {
                $.refresh();
            }, null, null, null, strKeepPowerOn);

        },
        callback_error: function(errCode) {}
    });
}

$("#t_onLineUpgrade").click(function() {
    var operation = $("#t_onLineUpgrade").data('operation');
    if (operation == 'check') {
        //        check for upgrade
        alertButton('t_onLineUpgrade'); // clear failed info
        $.addLoading($("#t_onLineUpgrade"));
        $.act(ACT_SET, FW_UPGRADE_INFO, null, null, ["start=1"]);
        $.exe(function(err) {
            if (err) {
                $.removeLoading();
                return;
            }
            var timer = setInterval(function() {
                var obj = $.act(ACT_GET, FW_UPGRADE_INFO, null, null, null);
                var cloudObj = $.act(ACT_GET, CLOUD_SERVICE, null, null, ["legality"]);
                $.exe(function() {
                    if (err) {
                        $.removeLoading();
                        clearInterval(timer);
                        return;
                    }
                    if (cloudObj.legality == 1) {
                        clearInterval(timer);
                        $.removeLoading();
                        alertButton('t_onLineUpgrade', strIllegalDevice);
                        return;
                    }
                    if ((obj.status == 4) || (obj.status == 11)) {
                        return;
                    } else if (obj.status == 5) {
                        $.removeLoading();
                        clearInterval(timer);
                        if (obj.version == '') {
                            //                            has nothing to upgrade
                            alertButton('t_onLineUpgrade', strUpToDate);
                            $("#t_onLineUpgrade").html('<span>' + strCheckForUpgrade + '</span>').data('operation', 'check').addClass('xl');
                        } else {
                            //                            update the view
                            $("#onlie_up_sver").prop("value", obj.version);
                            $("#online_release_log").html(obj.releaseLog);
                            $("#t_onLineUpgrade").html('<span>' + n_str.softup.c_upgrade + '</span>').data('operation', 'upgrade').removeClass('xl');
                            $('#topUpdate').removeClass('nd');
                            $.adjustTop();
                        }

                    } else {
                        //                        stop and do nothing
                        $.removeLoading();
                        clearInterval(timer);
                        showUpgradeError(obj.status);
                    }
                });
            }, 1000);
        });
    } else if (operation == 'upgrade') {
         var tipStr = "";
        var sysVer = parseInt($("#up_sver").val().split(".")[0]);
        var cloudVer = parseInt($("#onlie_up_sver").val().split(".")[0]);

        if (cloudVer > sysVer) {
            tipStr = strRestoreTipContent;
        } else {
            tipStr = strConfirmContent;
        }

        $.confirm(tipStr, function() {
            $.addLoading($("#t_onLineUpgrade"));
            doInternetDiag(function() {
                $.act(ACT_SET, FW_UPGRADE_INFO, null, null, ["start=1"]);
                $.exe(function(err) {
                    if (err) {
                        $.removeLoading();
                        return;
                    }
                    showDownLoadProgress();
                });

            }, function() {
                $.removeLoading();
                alertButton('t_onLineUpgrade', strInternetUnavailable);
            });
        });
    }
});

function init() {
    var obj = $.act(ACT_GET, IGD_DEV_INFO, null, null, ["hardwareVersion", "softwareVersion"]);
    if ('INCLUDE_CLOUD' in window && INCLUDE_CLOUD == 1) {
        var newFwObj = $.act(ACT_GET, FW_UPGRADE_INFO, null, null, null);
    }

    if (!$.exe()) {
        $("#up_sver").prop("value", obj.softwareVersion);
        $("#up_hver").prop("value", obj.hardwareVersion);
        if ('INCLUDE_CLOUD' in window && INCLUDE_CLOUD == 1) {
            $('#onlineUpgrade-block').removeClass('nd');
            if (newFwObj.status == 1) {
                showDownLoadProgress();
            }
            if (!!newFwObj.version) {
                $("#onlie_up_sver").prop("value", newFwObj.version);
                $("#t_onLineUpgrade").html('<span>' + n_str.softup.c_upgrade + '</span>').data('operation', 'upgrade');
            } else {
                $("#onlie_up_sver").prop("value", obj.softwareVersion);
                $("#t_onLineUpgrade").html('<span>' + strCheckForUpgrade + '</span>').data('operation', 'check');
            }
            $("#online_release_log").html(newFwObj.releaseLog);
        }
    }
}

function doInternetDiag(callback_connected, callback_disconnected) {
    var diagTool = $.act(ACT_GET, DIAG_TOOL, null, null, ["LastResult"]);
    $.exe(function(err) {
        if (err) {
            return;
        }
        $.act(ACT_OP, ACT_OP_DIAG_DNSDIAG, diagTool.__stack);
        $.exe(function(err) {
            if (err) {
                return;
            }
            setTimeout(function() {
                diagTool = $.act(ACT_GET, DIAG_TOOL, null, null, ["LastResult"]);
                $.exe(function() {
                    if (err) {
                        return;
                    }
                    if (diagTool.lastResult == 1) {
                        if (callback_connected) {
                            callback_connected();
                        }
                    } else {
                        if (callback_disconnected) {
                            callback_disconnected();
                        }
                    }
                });
            }, 1000);
        });

    });
}

function alertButton(id, text) {
    if (typeof id == 'string' && id.search('#') == -1) {
        id = '#' + id;
    }
    var button = $(id);
    var span = button.prev('.button-err-text').length > 0 ? button.prev('.button-err-text') : $('<span class="button-err-text">').insertBefore(button);
    span.html(text ? text : '');
}
</script>
<h3 id="et1">Device information</h3>
<div class="content-container">
    <form class="pure-form pure-form-aligned">
        <div class="pure-control-group">
            <b class="l T_swver">Firmware version:</b>
            <input type="text" readonly="ture" class="tp-input-text xxxl" id="up_sver" />
        </div>

        <div class="pure-control-group">
            <b class="l T_hwver">Hardware version:</b>
            <input type="text" readonly="ture" class="tp-input-text xxxl" id="up_hver" />
        </div>
    </form>
</div>

<div id="onlineUpgrade-block" class="nd">
    <h3 id="et2">Online Upgrade</h3>
    <div class="content-container">
        <form class="pure-form pure-form-aligned">
            <div class="pure-control-group">
                <b class="l T_c_latest">Latest version:</b>
                <input type="text" readonly="ture" class="tp-input-text xxxl" id="onlie_up_sver" />
            </div>

            <p class="cfg-line release-log" id="online_release_log"></p>

            <button type="submit" class="green l T_c_upgrade l_auto" id="t_onLineUpgrade" value="Upgrade">upgrade</button>
        </form>
    </div>
</div>


<h3 id="et3">Local upgrade</h3>
<div class="content-container">
    <form class="pure-form pure-form-aligned" action="/cgi/softup" enctype="multipart/form-data" method="post">
        <div class="file-container">
            <b id="t_file">New firmware file: </b>
            <input type="file" name="filename" id="filename" />
        </div>
    </form>
    <form class="pure-form pure-form-aligned">
        <button type="submit" class="green l T_c_upgrade l_auto" id="t_upgrade" value="Upgrade">upgrade</button>
    </form>
</div>
<script type="text/javascript">
$.tpInit(init);
</script>
