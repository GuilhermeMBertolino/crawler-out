!function(a){a.su.moduleManager.define("initLogin",{services:["ajax"],stores:[],views:["initLoginView"],deps:["main"],models:["initLoginModel","initLoginControl"],listeners:{"ev_on_launch":function(n,o,i,e,t,r,a){a.ajax.request({proxy:"keyProxy",success:function(n){n&&n.password&&(o.encryptKey=n.password)}})}},init:function(o,n,i,e,t,r){this.control({"#init-login-confirm":{"keyup":function(n){13==n.keyCode&&o.doInitLogin()}},"#init-login-button":{"ev_button_click":function(){o.doInitLogin()}}})}},function(i,n,e,o,t,r){return{encryptKey:null,doInitLogin:function(){if(e.initLoginControl.validate()){var o=e.initLoginControl.password.getValue();if(e.initLoginControl.password.getValue()!=e.initLoginControl.confirm.getValue())return e.initLoginControl.confirm.setError(a.su.CHAR.ERROR["00000080"]),!1;var n=e.initLoginControl.password.doEncrypt(i.encryptKey);e.initLoginModel.password.setValue(n),r.ajax.request({proxy:"authProxy",success:function(n){a.su.encryptor.setRSAKey(n.key[0],n.key[1]),a.su.encryptor.setSeq(n.seq),a.su.encryptor.genAESKey(),a.su.encryptor.setHash("admin",o),a.encrypt.encryptManager.recordEncryptor(),e.initLoginModel.login({success:i.loginSuccessDealer,fail:i.loginFailDealer})}})}},loginSuccessDealer:function(n,o){var i,e=n.stok||(n="12345",i=top.location.href,e=i.indexOf("stok="),n=0<=e?i.substring(e+5):n);localStorage&&(t.main.setToken(e),t.main.reload())},loginFailDealer:function(n,o){var i=!(n.data&&n.data.failureCount&&5<=n.data.failureCount);n.data&&n.data.hasOwnProperty("errorcode")&&i&&(i=String(n.data.errorcode).replace(/^-/,"E"),e.localLoginControl.password.setErrorHtml(a.su.CHAR.ERROR[i]))}}})}(jQuery);