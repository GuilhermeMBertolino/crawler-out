#!/bin/sh
#
#
# Copyright (c) 2014, The Linux Foundation. All rights reserved.
#
#  Permission to use, copy, modify, and/or distribute this software for any
#  purpose with or without fee is hereby granted, provided that the above
#  copyright notice and this permission notice appear in all copies.
#
#  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#


IFNAME=$1
CMD=$2

update_section() {
	local section=$1
	local dev guest
	config_get dev "$section" device
	config_get guest "$section" guest

	# In 2.4G single-band bridge, 5G ap ssid and password follow root ap.
	if [ "$device" = "wifi0" -a "$guest" != "on" ]; then
		case $wpa_version in
			WPA2-PSK)
				uci set wireless.${section}.encryption='psk'
				uci set wireless.${section}.psk_key=$psk
				;;
			WPA-PSK)
				uci set wireless.${section}.encryption='psk'
				uci set wireless.${section}.psk_key=$psk
				;;
			NONE)
				uci set wireless.${section}.encryption='none'
				uci set wireless.${section}.psk_key=''
				;;
		esac
		if [ "${dev}" = "wifi0" ]; then
			uci set wireless.${section}.ssid="${ssid:0:32}"
		else
			uci set wireless.${section}.ssid="${ssid:0:29}_5G"
		fi
	fi
}

get_psk() {
	local count=
	local conf=$1
	local index=
	count=$(awk 'BEGIN{FS="="} /psk=/ {print $0}' $conf |grep "psk=" |wc -l)
	index=$(($count*2))
	psk=$(awk 'BEGIN{ORS=""} /psk/ {print $0}' $conf| cut -f $index)
	if [[ ${psk:0:5} == "psk=\"" ]] ; then
		psk="${psk#psk=\"}"
		psk="${psk%\"}"
	else
		psk="${psk#psk=}"
	fi
}

local psk=
local ssid=
local wpa_version=
local device=
local guest=


echo "[RE]$IFNAME:$CMD" > /dev/console
case "$CMD" in
	CONNECTED)
		. /sbin/wifi detect

		wpa_cli -i$IFNAME -p/var/run/wpa_supplicant-$IFNAME save_config
		ssid=$(wpa_cli -i$IFNAME -p/var/run/wpa_supplicant-$IFNAME status | grep ^ssid= | cut -f2- -d =)
		wpa_version=$(wpa_cli -i$IFNAME -p/var/run/wpa_supplicant-$IFNAME status | grep ^key_mgmt= | cut -f2- -d=)
		get_psk /var/run/wpa_supplicant-$IFNAME.conf
		config_get device "$IFNAME" device

		$(config_foreach update_section wifi-iface)
		uci commit
		kill "$(cat "/var/run/wps-hotplug-$IFNAME.pid")"
		rm /var/run/wps-hotplug-$IFNAME.pid
		#post hotplug event to whom take care of
		env -i ACTION="wps-connected" INTERFACE=$IFNAME /sbin/hotplug-call iface
		;;
	WPS-TIMEOUT)
		. /sbin/wifi detect

		kill "$(cat "/var/run/wps-hotplug-$IFNAME.pid")"
		rm /var/run/wps-hotplug-$IFNAME.pid
		env -i ACTION="wps-timeout" INTERFACE=$IFNAME /sbin/hotplug-call iface
		;;
	WPS-FAIL)
		. /sbin/wifi detect

		kill "$(cat "/var/run/wps-hotplug-$IFNAME.pid")"
		rm /var/run/wps-hotplug-$IFNAME.pid
		env -i ACTION="wps-fail" INTERFACE=$IFNAME /sbin/hotplug-call iface
		;;
esac

