#!/bin/sh
# Copyright (c) 2016 Shenzhen TP-LINK Technologies Co.Ltd.
# Author  : Eddie Ho <eddie.ho@tp-link.com>
# Date    : 21 Aug 2016

. /lib/functions.sh

WIFI_BUTTON_PID="/var/run/wifi_button.pid"

[ -e ${WIFI_BUTTON_PID} ] && {
        local pid=$(cat ${WIFI_BUTTON_PID})
        echo "$0: Kill pid $pid." > /dev/console
        [ -n "$pid" ] && kill -9 $pid
        rm -f ${WIFI_BUTTON_PID}
}
echo $$ > $WIFI_BUTTON_PID
echo "$0: my pid $$." > /dev/console

sleep 2

state="off"
sysmode=

wifi_state_obtain() {
        local disabled_all
        local dev="$1"
		config_get_bool disabled_all $1 disabled_all
        if [ "$disabled_all" = "0" ]; then
                state="on"
        fi
}

wifi_state_set() {
        local dev="$1"
		uci set wireless.$dev.disabled_all=$state
        wifi_commit
}

wifi_iface_state_set() {
	local dev="$1"
	local enable="off"
	local mode guest
	
	config_get mode $1 mode
	config_get guest $1 guest
	
	[ "$mode" == "sta" -a "$sysmode" != "re" ] && return
	[ "$guest" == "on" ] && return
	if [ "$state" == "off" ]; then
		enable="on"
	fi
	uci set wireless.$dev.enable=$enable
	wifi_commit
}

get_sysmode() {
	config_get sysmode $1 mode
}

config_load sysmode
config_foreach get_sysmode sysmode
config_load wireless
config_foreach wifi_state_obtain wifi-device
config_foreach wifi_state_set wifi-device
config_foreach wifi_iface_state_set wifi-iface
if [ "$state" = "on" ]; then
        [ -f /usr/bin/ledctrl ] && {
                ledcli WIFI2G_OFF
                ledcli WIFI5G_OFF
                ledcli WPS_OFF
        }
else
        [ -f /usr/bin/ledctrl ] && {
                ledcli WIFI2G_ON
                ledcli WIFI5G_ON
        }
fi
wifi reload

