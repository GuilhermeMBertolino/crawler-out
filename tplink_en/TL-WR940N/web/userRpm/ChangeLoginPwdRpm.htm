
<style>
	p {
		margin-top: 0;
	}
	.pwd-tip {
		padding-left: 26px;
	}
	input[type=password],
	input[type=text] {
		width: 180px;
		height: 25px;
		padding-right: 30px;
	}

	.eye-icon {
		margin-top: 3px;
		margin-left: -25px;
	}
</style>
<!--[if lte IE 8]>
<style>
	.eye-icon {
		display: none;
	}
</style>
<![endif]-->
<SCRIPT language="JavaScript" src="../login/encrypt.js" type="text/JavaScript"></SCRIPT>
<SCRIPT language="javascript" src="../dynaform/common.js" type="text/javascript"></SCRIPT>
	<script type="text/javascript" src="../dynaform/encrypt.js"></script>
	<script type="text/javascript" src="../dynaform/cryptoJS.min.js"></script>
	<script type="text/javascript" src="../dynaform/tpEncrypt.js"></script>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<SCRIPT type="text/javascript">
var connection=getElesByName(document, "encryptedData");
for(var i=0;i<connection.length;i++){
	var rep=connection[i].getAttribute("data-name");
	var unpData = window.top.parse(window[rep]);
	try{eval(unpData);}
	catch(exception){alert(exception);}
}

function $(id) {
	return document.getElementById(id);
}
function toggleEye (event) {
	var eyeIcon = event.target || event.srcElement;
	var ele = eyeIcon.previousSibling;
	var type = ele.getAttribute("type");
	if (type === "text") {
		ele.setAttribute("type", "password");
		removeClass(eyeIcon, "show");
	} else {
		ele.setAttribute("type", "text");
		addClass(eyeIcon, "show");
	}
}
function onFocusPwd(event) {
	removeClass($("pwd-tips"), "nd");
	for (var i = 0, len = tipArr.length; i < len; i++) {
		var tip = tipArr[i];
		removeClass(tip, "nd");
		removeClass(tip, "error");
	}
	addClass((event.target || event.srcElement).parentNode, "focus");
	onKeyUpPwd(event);
}

function onKeyUpPwd(event) {
	var value = (event.target || event.srcElement).value,
			spaceTip = tipArr[0],
			lengthTip = tipArr[1],
			charTip = tipArr[2];

	checkSpace(value) ? addClass(spaceTip, "active") : removeClass(spaceTip, "active");
	checkLength(value) ? addClass(lengthTip, "active") : removeClass(lengthTip, "active");
	checkChar(value) ? addClass(charTip, "active") : removeClass(charTip, "active");
}

function onBlurPwd(event) {
	var tips = tipArr;
	var showBtn = true;
	var btn = $("save-btn")

	removeClass((event.target || event.srcElement).parentNode, "focus");
	for (var i = 0, len = tips.length; i < len; i++) {
		var tip = tips[i];
		if(hasClass(tip, "active")) {
			addClass(tip, "nd");
		} else {
			showBtn = false;
			addClass(tip, "error");
		}
	}
	btn.disabled = !showBtn;
	showBtn ? addClass($("pwd-tips"), "nd") : removeClass($("pwd-tips"), "nd");
}

function checkSpace(value) {
	var re = /[^\x00-\x19\x21-\xff]/;
	if (re.test(value)) return false;
	return true;
}

function checkLength(value) {
	if (value.length > 5 && value.length < 33) return true;
	return false;
}

function checkChar(value) {
	var patternNum = /[0-9]/g;
	var patternLetter = /[A-Za-z]/g;
	var patternSign = /[\`\~\!\@\#\$\%\^\&\*\(\)\-\=\_\+\[\]\{\}\;\:\'\"\\\|\/\?\.\,\<\>\x20]/g;
	var level = 0;

	if (patternNum.test(value)) level++;
	if (patternLetter.test(value)) level++;
	if (patternSign.test(value)) level++;

	return level > 1;
}

function CheckUserPswChars(szValue)
{
	var reg = /^[\x21-\x7e]+$/;	
	if(reg.test(szValue))
	{
		return true;
	}	
	return false;
}

function doClear()
{
	for(var i = 0; i < 5; i ++)
	{
		document.forms[0].elements[i].value = "";
	}
}

function doSubmit()
{
	for(var i = 0; i < 5; i ++)
	{
		if(document.forms[0].elements[i].value != "")
		{
			if(!CheckUserPswChars(document.forms[0].elements[i].value))
			{
				alert(js_ill_input="The input value contain illegal character, please input another one!");
				var element = document.forms[0].elements[i];
				if(element)
				{
					element.focus();
					element.select();
				}
				return false;
			}
			if(2==i||3==i)
			{
				if(!CheckUserPswChars(document.forms[0].elements[i].value))
				{
					alert(js_illegal_input2="The input value contains illegal characters, please input another one! (The illegal character is the character except for alphabet, number, '-' and '_'.)");
					var element = document.forms[0].elements[i];
					if(element)
					{
						element.focus();
						element.select();
					}
					return false;
				}
			}
		}
		else
		{
			alert(js_req_field="Please input the password.");
			var element = document.forms[0].elements[i];
			if(element)
			{
				element.focus();element.select();
			}
			return false;
		}
	}
	
	var newpwd = document.forms[0].newpassword.value;
	if(!checkSpace(newpwd) || !checkLength(newpwd) || !checkChar(newpwd)) {
		return false;
	}
	
	if(document.forms[0].newpassword.value != document.forms[0].newpassword2.value)
	{
		alert(js_bad_conf_pwd="The confirm password must accord with the new password!");
		var element = document.forms[0].newpassword2;
		if(element)
		{
			element.focus();
			element.select();
		}
		return false;
	}
	
	if(LoginPwdInf[2] == 1)
	{	
		var strNewPwd = document.forms[0].newpassword.value;
		var strNewPwd2 = document.forms[0].newpassword2.value;
		var strOldPwd = document.forms[0].oldpassword.value;
		document.forms[0].newpassword.value = Base64Encoding(hex_md5(strNewPwd));
		document.forms[0].newpassword2.value = Base64Encoding(hex_md5(strNewPwd2));
		document.forms[0].oldpassword.value = Base64Encoding(hex_md5(strOldPwd));
	}
	window.top.submitForm(document.forms[0],document);
	return false;
}


function doAddMac()
{
	document.forms[1].mac_local.value = controlParam[1].toUpperCase();
}

function doChanged()
{
	if( document.forms[1].all_mac_l.checked == true)
	{
		document.forms[1].mac_local.value = "00-00-00-00-00-00";
		document.forms[1].mac_local.disabled=true;
		document.forms[1].addmac.disabled=true;	
	}
	else
	{
		document.forms[1].mac_local.disabled = 0;
		document.forms[1].addmac.disabled = 0;
		document.forms[1].mac_local.value = macWhitelist[0];
	}	
}

function toUpper(str)
{
	str = str.toUpperCase();
}
function is_spmac(mac_string)
{
	if(mac_string == "00-00-00-00-00-00")
	{
		alert(js_inv_mac_addr="Invalid MAC Address.");
		return false;
	}
	var ch = "0123456789ABCDEFabcdef-";
	for (var i = 0; i < mac_string.length; i++)
	{
		c = mac_string.charAt(i); // c = 0~9 A~F -
		if(ch.indexOf(c) == -1)
		{
			alert(js_inv_mac_addr="Invalid MAC Address.");
			return false;
		}
	}
	return true;
}

function isMacEmpty(string)
{
	console.log(string.length);
	if(string.length > 0)
	{
		return true;
	}
	else
	{	
		alert(js_pl_spec_mac_addr="Please specify the MAC Address first.");
		return false;
	}
}

function is_Specific_port(port)
{
	if( port == 21 || port == 25 ||	port == 110 || port == 119 || port == 139 || port == 145 || port == 445)
	{
		alert(js_specific_port="The remote management port number for the browser is not supported (21, 25, 110, 119, 139, 145, 445 etc.), please reenter.");
		return true;
	}
	return false;
}

function doSubmit2()
{
	// local http(s) 
	// if all not checked we should check mac (is mac format, )
	if( document.forms[1].all_mac_l.checked == false )
	{
		toUpper(document.forms[1].mac_local.value);
		if( (!isMacEmpty(document.forms[1].mac_local.value)) || (!is_macaddr(document.forms[1].mac_local.value)) || (!is_spmac(document.forms[1].mac_local.value)) )
		{
			var element = document.forms[1].mac_local;
			if(element)
			{
				element.focus();
				element.select();
			}
			return false;
		}
	}
	
	// remote http(s) 
	// port check
	var port;
	if(document.forms[1].http_port_r.value != "")
	{
    	if(!is_port(document.forms[1].http_port_r.value) || is_Specific_port(document.forms[1].http_port_r.value))
    	{
        	var element =document.forms[1].http_port_r;
        	if(element)
        	{
        		element.focus();
        		element.select();
        	}
            return false;
    	}
		port = Number(document.forms[1].http_port_r.value);
    }
	// https_port check	
	var https_port;
	if(document.forms[1].https_port_r.value != "")
	{
    	if(!is_port(document.forms[1].https_port_r.value) || is_Specific_port(document.forms[1].https_port_r.value))
    	{
        	var element =document.forms[1].https_port_r;
        	if(element)
        	{
        		element.focus();
        		element.select();
        	}
            return false;
    	}
		// https port equal http port error
		if( document.forms[1].https_port_r.value == document.forms[1].http_port_r.value)
		{
			alert(js_specific_port="HTTPS Port can't be the same as HTTP Port.");
			var element =document.forms[1].https_port_r;
        	if(element)
        	{
        		element.focus();
        		element.select();
			}
			window.top.submitForm(document.forms[1],document);
			return false;
		}
		
		https_port = Number(document.forms[1].https_port_r.value);
    }
		
	// ip_remote check
	if( (document.forms[1].ip_remote.value != "") && (document.forms[1].ip_remote.value != "0.0.0.0") )
	{/* 0.0.0.0 is a legal ip for remote management, it means diable remote management*/
		if(!is_ipaddr(document.forms[1].ip_remote.value))
		{/*is_ipaddr will say 0.0.0. is inlegal*/	
			var element =document.forms[1].ip_remote;
			if(element)
			{
				element.focus();
				element.select();
			}
			return false;
		}
	}	
	window.top.submitForm(document.forms[1],document);
	return false;
}

</SCRIPT>
</HEAD>
<BODY onLoad="LoadHelp('ChangeLoginPwdHelpRpm.htm');setTagStr(document,'ntw_change_login_pwd'); resize(this);" onResize="resize(this);">
<CENTER>
  <FORM action="ChangeLoginPwdRpm.htm" enctype="multipart/form-data" method="get" onSubmit="return doSubmit();">
    <TABLE id="autoWidth">
      <TR>
        <TD class=h1 colspan=2 id ="t_title">Manage Control</TD>
      </TR>
      <TR>
        <TD class=blue colspan=2></TD>
      </TR>
	  <TR>
		<TD class="h2" colspan="2" id="t_Account">Account Management</td>
	  </TR>
      <TR class="nd">
        <TD class=Item id ="t_old_user_name">Old User Name:</TD>
        <TD><INPUT class="textS" value="admin" maxlength="32" size="32" value="" name="oldname"></TD>
      </TR>
      <TR>
        <TD class=Item id ="t_old_pwd">Old Password:</TD>
        <TD><INPUT class="textS" type="password" maxlength="32" size="32" name="oldpassword"><span class="eye-icon" onclick="toggleEye(event)"></span></TD>
      </TR>
	  <TR>
		<TD>
		</TD>
	  </TR>
      <TR class="nd">
        <TD class=Item id ="t_new_user_name">New User Name:</TD>
        <TD><INPUT class="textS" value="admin" maxlength="32" size="32" name="newname"></TD>
      </TR>
      <TR>
        <TD class=Item id ="t_new_pwd">New Password:</TD>
        <TD><INPUT class="textS" type="password" maxlength="32" size="32" name="newpassword" onfocus="onFocusPwd(event)" onkeyup="onKeyUpPwd(event)" onblur="onBlurPwd(event)"><span class="eye-icon" onclick="toggleEye(event)"></span></TD>
      </TR>
			<tr id="pwd-tips" class="nd">
				<td></td>
				<td>
					<p class="pwd-tip"><span class="icon"></span><span id="pwd-tip-space">Must contain no space(s).</span></p>
					<p class="pwd-tip"><span class="icon"></span><span id="pwd-tip-long">Must be 6-32 characters long.</span></p>
					<p class="pwd-tip"><span class="icon"></span><span id="pwd-tip-char">Must contain at least two types of the following characters: letters, numbers and symbols.</span></p>
				</td>
			</tr>
      <TR>
        <TD class=Item id ="t_conf_new_pwd">Confirm New Password:</TD>
        <TD><INPUT class="textS" type="password" maxlength="32" size="32" name="newpassword2"><span class="eye-icon" onclick="toggleEye(event)"></span></TD>
      </TR>
      <!--<TR>
         <TD class=blue colspan=2></TD>
      </TR> -->
      <TR>
        <TD></TD>
        <TD>&nbsp;
          <INPUT class="buttonBig" type="submit" id="save-btn" disabled value="Save" name="Save">
          &nbsp;
          <INPUT class="buttonBig" type="reset" value="Clear All" name="Clear">		  
		</TD>
      </TR>
    </TABLE>
  </FORM>
  <FORM action="ChangeLoginPwdRpm.htm" enctype="multipart/form-data" method="get" onSubmit="return doSubmit2();">
	<TABLE id="autoWidth">
		<TR>
			<TD class=blue colspan=2></TD>
		</TR>
		<TR>
			<TD class="h2" colspan="2" id="t_Management">Service Configuration</td>
		</TR>
		<TR>
			<TD WIDTH="698" ALIGN="center"> <TABLE BORDER="1" ALIGN="center" WIDTH="698" CELLSPACING="0" CELLPADDING="0" class="normal-border">
				<TR><TD class=ListM style="padding:3px 5px;"><B id="empty">&nbsp;&nbsp;&nbsp;</B></TD>
					<TD class=ListM><B id="t_http">HTTP Service</B></TD>
					<TD class=ListM><B id="t_https">HTTPS Service</B></TD>
					<TD class=ListM><B id="t_avail">Available Host</B></TD>
				</TR>
				<TR id="local_control" name="local_control">
					<TD class=ListM style="padding:3px 5px;"><B id="t_local">Local Management</B>
					</TD>
					<TD  style="padding:3px 5px;"><span id="t_port_l">Port: </span><span id="http_port_l" name="t_http_port_l">80</span>
					</TD>
					<TD  style="padding:3px 5px;">
						<span id="t_enable">Enable</span><INPUT type="checkbox" value="1" id="enable_https_l" name="enable_https_l"></INPUT>
						<span id="t_ports_l">Port: </span><span id="https_port_l" name="https_port_l">443</span>
					</TD>
					<TD  style="padding:3px 5px;">
						<span><B>ALL</B><INPUT id="all_mac_l" name="all_mac_l" type="checkbox" value="1"  onchange="doChanged();"></INPUT></span>
						<span id="t_avail_mac_l">Or only Host PC Mac: </span><INPUT id="mac_local" name="mac_local"  value=""  maxlength=17 size=17></INPUT><br/>
						<span>Your PC's MAC Address: </span><span id="mac_hostpc" name="mac_hostpc">00-0C-29-97-7D-5D</span>
						<INPUT id="addmac" name="addmac" type="button" class="button" onclick="doAddMac();" value="select" ></INPUT>
					</TD>
				</TR>
				<TR id="remote_control" name="remote_control">
					<TD class=ListM style="padding:3px 5px;"><B id="t_remote">Remote Management</B>
					</TD>
					<TD  style="padding:3px 5px;"><span id="t_port_r">Port: </span><INPUT id="http_port_r" name="http_port_r" value="80" maxlength=5 size=5>
					</TD>
					<TD  style="padding:3px 5px;"><span id="t_ports_r">Port: </span><INPUT id="https_port_r" name="https_port_r" value="443" maxlength=5 size=5>
					</TD>
					<TD  style="padding:3px 5px;">
						<B id="t_avail_ip_r">IP Address:</B><INPUT id="ip_remote" name="ip_remote" value="0.0.0.0"  maxlength=15 size=16></INPUT>
						<SPAN id = "t_for_all">(Enter 255.255.255.255 for all)</SPAN>
					</TD>
				</TR>
			</TABLE></TD>
		</TR>
		<TR>
			<TD class = "mbtn">
				<INPUT class="buttonBig" type="submit" value="Save" name="Save2" />
			</TD>
		</TR>	
	</TABLE>
  </FORM>
</CENTER>
<script>
var tipArr = document.querySelectorAll(".pwd-tip");
</script>
</BODY>
<HEAD>
<META http-equiv="pragma" content="no-cache">
</HEAD>
</HTML>
<script language="JavaScript">
//document.getElementById("fversion").innerHTML = softUpInf[0];
//document.getElementById("hversion").innerHTML = softUpInf[1];
if (1 == LoginPwdInf[3])
{
	document.forms[0].oldname.disabled = 1;
	document.forms[0].oldpassword.disabled = 1;
	document.forms[0].newname.disabled = 1;
	document.forms[0].newpassword.disabled = 1;
	document.forms[0].newpassword2.disabled = 1;
	//document.forms[0].Save.disabled = 1;
	document.forms[0].Clear.disabled = 1;
}
else
{
	document.forms[0].oldname.disabled = 0;
	document.forms[0].oldpassword.disabled = 0;
	document.forms[0].newname.disabled = 0;
	document.forms[0].newpassword.disabled = 0;
	document.forms[0].newpassword2.disabled = 0;
	//document.forms[0].Save.disabled = 0;
	document.forms[0].Clear.disabled = 0;
}

// managementPara [0]wan_http_port [1]wan_ip_control ([2] wan port change or not!!) [3]wan_https_port
document.forms[1].http_port_r.value =managementPara[0];
document.forms[1].ip_remote.value =managementPara[1];
document.forms[1].https_port_r.value = managementPara[3];

// controlParam [0]length of whitelist  [1] Mac address of PC [2]local All checked?  [3]https_l enable
// document.forms[1].mac_hostpc.value = controlParam[1]; 
document.getElementById("mac_hostpc").innerHTML=controlParam[1];
document.forms[1].all_mac_l.checked	= !controlParam[2];
doChanged();
document.forms[1].enable_https_l.checked = controlParam[3];
// macWhitelist


</script>
