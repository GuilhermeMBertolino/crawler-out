<style type="text/css">
#scheduleRepeatDay .checkbox-label {
    width: 55px;
}
</style>
<h3 id="et">Task Schedule</h3>

<div id="wireless-schedule-24g">
    <div class="content-container">
        <form class="pure-form pure-form-aligned">
            <div class="button-group-container">
                <b class="T_c_en">Enable Wireless Schedule:</b>
                <ul>
                    <li>
                        <button id="enableWirelessScheduleOn" class="fst" value="on">On</button>
                    </li>
                    <li>
                        <button id="enableWirelessScheduleOff" class="lst" value="off">Off</button>
                    </li>
                </ul>
            </div>
        </form>
    </div>
    <div id="schedule-list-container">
        <h3 class="T_c_off">Wireless Off Time</h3>
        <div class="content-container">
            <form class="pure-form pure-form-aligned">
                <div class="table-op">
                    <div class="table-btn">
                        <span class="add-icon" id="addSch"></span>
                        <label class="T_add">Add</label>
                        <span class="delete-icon" id="delSch"></span>
                        <label class="T_del">Delete</label>
                    </div>
                </div>

                <table id="schedulelist">
                    <thead></thead>
                    <tbody id="schedulelistBody">
                        <tr id="editSchedule" class="nd">
                            <td colspan="8">
                                <div>
                                    <b class="T_c_intf m">From:</b>
                                    <select class="l" id="startTime">
                                        <option value="none" class='T_c_plsSel'></option>
                                        <option value="0">00:00</option>
                                        <option value="1">00:30</option>
                                        <option value="2">01:00</option>
                                        <option value="3">01:30</option>
                                        <option value="4">02:00</option>
                                        <option value="5">02:30</option>
                                        <option value="6">03:00</option>
                                        <option value="7">03:30</option>
                                        <option value="8">04:00</option>
                                        <option value="9">04:30</option>
                                        <option value="10">05:00</option>
                                        <option value="11">05:30</option>
                                        <option value="12">06:00</option>
                                        <option value="13">06:30</option>
                                        <option value="14">07:00</option>
                                        <option value="15">07:30</option>
                                        <option value="16">08:00</option>
                                        <option value="17">08:30</option>
                                        <option value="18">09:00</option>
                                        <option value="19">09:30</option>
                                        <option value="20">10:00</option>
                                        <option value="21">10:30</option>
                                        <option value="22">11:00</option>
                                        <option value="23">11:30</option>
                                        <option value="24">12:00</option>
                                        <option value="25">12:30</option>
                                        <option value="26">13:00</option>
                                        <option value="27">13:30</option>
                                        <option value="28">14:00</option>
                                        <option value="29">14:30</option>
                                        <option value="30">15:00</option>
                                        <option value="31">15:30</option>
                                        <option value="32">16:00</option>
                                        <option value="33">16:30</option>
                                        <option value="34">17:00</option>
                                        <option value="35">17:30</option>
                                        <option value="36">18:00</option>
                                        <option value="37">18:30</option>
                                        <option value="38">19:00</option>
                                        <option value="39">19:30</option>
                                        <option value="40">20:00</option>
                                        <option value="41">20:30</option>
                                        <option value="42">21:00</option>
                                        <option value="43">21:30</option>
                                        <option value="44">22:00</option>
                                        <option value="45">22:30</option>
                                        <option value="46">23:00</option>
                                        <option value="47">23:30</option>
                                        <option value="48">24:00</option>
                                    </select>
                                </div>
                                <div>
                                    <b class="T_c_intf m">To:</b>
                                    <select class="l" id="endTime">
                                        <option value="none" class='T_c_plsSel'></option>
                                        <option value="0">00:00</option>
                                        <option value="1">00:30</option>
                                        <option value="2">01:00</option>
                                        <option value="3">01:30</option>
                                        <option value="4">02:00</option>
                                        <option value="5">02:30</option>
                                        <option value="6">03:00</option>
                                        <option value="7">03:30</option>
                                        <option value="8">04:00</option>
                                        <option value="9">04:30</option>
                                        <option value="10">05:00</option>
                                        <option value="11">05:30</option>
                                        <option value="12">06:00</option>
                                        <option value="13">06:30</option>
                                        <option value="14">07:00</option>
                                        <option value="15">07:30</option>
                                        <option value="16">08:00</option>
                                        <option value="17">08:30</option>
                                        <option value="18">09:00</option>
                                        <option value="19">09:30</option>
                                        <option value="20">10:00</option>
                                        <option value="21">10:30</option>
                                        <option value="22">11:00</option>
                                        <option value="23">11:30</option>
                                        <option value="24">12:00</option>
                                        <option value="25">12:30</option>
                                        <option value="26">13:00</option>
                                        <option value="27">13:30</option>
                                        <option value="28">14:00</option>
                                        <option value="29">14:30</option>
                                        <option value="30">15:00</option>
                                        <option value="31">15:30</option>
                                        <option value="32">16:00</option>
                                        <option value="33">16:30</option>
                                        <option value="34">17:00</option>
                                        <option value="35">17:30</option>
                                        <option value="36">18:00</option>
                                        <option value="37">18:30</option>
                                        <option value="38">19:00</option>
                                        <option value="39">19:30</option>
                                        <option value="40">20:00</option>
                                        <option value="41">20:30</option>
                                        <option value="42">21:00</option>
                                        <option value="43">21:30</option>
                                        <option value="44">22:00</option>
                                        <option value="45">22:30</option>
                                        <option value="46">23:00</option>
                                        <option value="47">23:30</option>
                                        <option value="48">24:00</option>
                                    </select>
                                </div>

                                <div id="scheduleRepeat">
                                    <b class="T_c_repeat m">Repeat:</b>
                                    <input type="radio" name="scheduleRepeat" id="repeatEveryday" />
                                    <label class="T_c_everyday">Every Day</label>
                                    <input type="radio" name="scheduleRepeat" id="repeatSelected" />
                                    <label class="T_c_selectday">Selected Day</label>
                                </div>

                                <div id="scheduleRepeatDay">
                                    <b class="m" id="t_selDay"></b>
                                    <input type="checkbox" id="scheduleSun" />
                                    <label class="T_sun">Sun</label>
                                    <input type="checkbox" id="scheduleMon" />
                                    <label class="T_mon">Mon</label>
                                    <input type="checkbox" id="scheduleTue" />
                                    <label class="T_tues">Tue</label>
                                    <input type="checkbox" id="scheduleWed" />
                                    <label class="T_wed">Wed</label>
                                    <input type="checkbox" id="scheduleThu" />
                                    <label class="T_thur">Thu</label>
                                    <input type="checkbox" id="scheduleFri" />
                                    <label class="T_fri">Fri</label>
                                    <input type="checkbox" id="scheduleSat" />
                                    <label class="T_sat">Sat</label>
                                </div>

                                <div class="inline-btn-right">
                                    <button type="submit" class="green T_cancel" id="editCancel">Cancel</button>
                                    <button type="submit" class="green T_save" id="editOk">Save</button>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </form>
        </div>
    </div>
</div>

<script language="javascript" type="text/javascript">
(function() {
    var edit = 0;
    var stk;
    var editStk;
    var taskSche = {};
    var schedules = [];
    var tpGridSelect;
    var days = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
    var schedulelistHead = [{
        "text": '<div><input type="checkbox" id="checkbox_1" class="table-select-all"/><label></label></div>',
        "width": "5%"
    }, {
        "text": table_str.id,
        "width": "10%"
    }, {
        "text": (table_str.wirelessoff),
        "width": "25%"
    }, {
        "text": (table_str.repeat),
        "width": "35%"
    }, {
        "text": table_str.modify,
        "width": "25%"
    }];

    $.initTableHead($("#schedulelist"), schedulelistHead);

    $.tpInit(init);

    $('#repeatEveryday').on('click', function() {
        if ($('#repeatEveryday').prop('checked')) {
            $('#scheduleRepeatDay').addClass('nd');
        }
    });
    $('#repeatSelected').on('click', function() {
        if ($('#repeatSelected').prop('checked')) {
            $('#scheduleRepeatDay').removeClass('nd');
        }
    });
    $('#editCancel').on('click', function() {
        $.hideEditArea($('#schedulelist'));
        clear24GForm();
    });

    $('#schedulelist').on('click', 'span.edit-modify-icon', function() {
        edit = 1;
        editStk = $(this).attr('data-stack');
        var id = $(this).parent().parent().find('input:checkbox').attr('data-id');
        var start = schedules[id].start;
        var end = schedules[id].end;
        var everyday = schedules[id].everyday;
        var repeat = schedules[id].repeat.selected;
        $('#startTime').find('option[value=' + start + ']').prop('selected', true);
        $('#endTime').find('option[value=' + end + ']').prop('selected', true);
        $('#repeatEveryday').prop('checked', everyday).tpRadio();
        $('#repeatSelected').prop('checked', !everyday).tpRadio();
        if (!everyday) {
            for (var i in repeat) {
                var day = 'schedule' + i.toUpperCase().substr(0, 1) + i.substr(1, 2);
                $('#' + day).prop('checked', true).tpCheckbox();
            }
        }
        $('#startTime').tpSelect({
            refresh: 1
        });
        $('#endTime').tpSelect({
            refresh: 1
        });
    }).on('click', 'span.edit-trash-icon', function() {
        $.addLoading();
        var stack = $(this).attr('data-stack');
        $.act(ACT_DEL, 'LAN_WLAN_SCHEDULEITEM', stack, null, null);
        $.exe(function(err) {
            $.removeLoading();
            init();
        });
    });
    $('#addSch').on('click', function() {
        if (taskSche.length >= 4) {
            $.alert(CMM_REACH_MAX_INSTANCE_NUM);
            $.hideEditArea($('#schedulelist'));
        } else {
            edit = 0;
        }
    });
    $('#delSch').on('click', function() {
        $.addLoading();
        for (var i = 0; i < taskSche.length; i++) {
            if ($("#schedule_item_" + i).prop('checked')) {
                $.act(ACT_DEL, 'LAN_WLAN_SCHEDULEITEM', $("#schedule_item_" + i).attr('data-stack'), null, null);
            }
        }
        $.exe(function(err) {
            $.removeLoading();
            init();
        });
    });
    $('#editOk').on('click', function() {
        $.addLoading();
        doSave(edit);
    });
    $('#repeatEveryday').prop('checked', true).tpRadio();
    $('#repeatSelected').prop('checked', false).tpRadio();

    function clear24GForm() {
        $('#startTime').find('option:first').prop('selected', true);
        $('#endTime').find('option:first').prop('selected', true);
        $('#startTime').tpSelect({
            refresh: 1
        });
        $('#endTime').tpSelect({
            refresh: 1
        });

        $('#repeatEveryday').prop('checked', true).tpRadio();
        $('#repeatSelected').prop('checked', false).tpRadio();
        $('#scheduleSun').prop('checked', false).tpCheckbox();
        $('#scheduleMon').prop('checked', false).tpCheckbox();
        $('#scheduleTue').prop('checked', false).tpCheckbox();
        $('#scheduleWed').prop('checked', false).tpCheckbox();
        $('#scheduleThu').prop('checked', false).tpCheckbox();
        $('#scheduleFri').prop('checked', false).tpCheckbox();
        $('#scheduleSat').prop('checked', false).tpCheckbox();
    }

    function initScheduleTable() {
        var attrs;
        var array = [];

        for (var i = 0; i < taskSche.length; i++) {
            attrs = getSelectedTime(taskSche[i]);
            // console.log('get:', attrs);
            schedules[i] = attrs;
            array.push([{
                "text": '<div><input type="checkbox" id="schedule_item_' + i + '" data-id="' + i + '" data-stack="' + taskSche[i].__stack + '" class="table-select-one" /><label></label></div>',
                "width": "5%"
            }, {
                "text": (i + 1),
                "width": "10%"
            }, {
                "text": attrs.timeRange,
                "width": "25%"
            }, {
                "text": attrs.repeat.text,
                "width": "35%"
            }, {
                "text": "<span class='table-grid-icon edit-modify-icon' data-stack='" + taskSche[i].__stack + "'></span>" + "<span class='table-grid-icon edit-trash-icon' data-stack='" + taskSche[i].__stack + "'></span>",
                "width": "25%"
            }]);
        }

        $.initTableBody($("#schedulelist"), array);
    }

    function setSelectedTime(data) {
        var i, value;
        var start = parseInt(data.start);
        var end = parseInt(data.end);
        var attrs = {
            sunAm: 0,
            sunPm: 0,
            monAm: 0,
            monPm: 0,
            tueAm: 0,
            tuePm: 0,
            wedAm: 0,
            wedPm: 0,
            thuAm: 0,
            thuPm: 0,
            friAm: 0,
            friPm: 0,
            satAm: 0,
            satPm: 0
        };
        // 标记有没有星期被选中
        var selectTag = false;
        for (i in data.repeat) {
            if (data.repeat.hasOwnProperty(i) && data.repeat[i]) {
                selectTag = true;
            }
        }

        // 没有任何日期被选中
        if (!data.everyday && !selectTag) {
            return false;
        }

        var minus = end - start;

        // 如果两个时间相同，表示全选中
        if (minus === 0) {
            value = Math.pow(2, 24) - 1;
            for (i = 0; i < days.length; i++) {
                if (data.everyday) {
                    attrs[days[i] + 'Am'] = value;
                    attrs[days[i] + 'Pm'] = value;
                } else if (data.repeat[days[i]]) {
                    attrs[days[i] + 'Am'] = value;
                    attrs[days[i] + 'Pm'] = value;
                }
            }
            return attrs;
        }

        if (minus > 0) {
            if (start > 23) {
                value = Math.pow(2, end - 24) - 1 - (Math.pow(2, start - 24) - 1);
                for (i = 0; i < days.length; i++) {
                    if (data.everyday) {
                        attrs[days[i] + 'Pm'] = value;
                    } else if (data.repeat[days[i]]) {
                        attrs[days[i] + 'Pm'] = value;
                    }
                }

            } else if (end < 25) {
                value = Math.pow(2, end) - 1 - (Math.pow(2, start) - 1);
                for (i = 0; i < days.length; i++) {
                    if (data.everyday) {
                        attrs[days[i] + 'Am'] = value;
                    } else if (data.repeat[days[i]]) {
                        attrs[days[i] + 'Am'] = value;
                    }
                }
            } else {
                var amValue = Math.pow(2, 24) - 1 - (Math.pow(2, start) - 1);
                var pmValue = Math.pow(2, end - 24) - 1 - (Math.pow(2, 0) - 1);
                for (i = 0; i < days.length; i++) {
                    if (data.everyday) {
                        attrs[days[i] + 'Am'] = amValue;
                        attrs[days[i] + 'Pm'] = pmValue;
                    } else if (data.repeat[days[i]]) {
                        attrs[days[i] + 'Am'] = amValue;
                        attrs[days[i] + 'Pm'] = pmValue;
                    }
                }
            }
            return attrs;
        }

        if (minus < 0) {
            if (start < 24) {
                var am1Value = Math.pow(2, 24) - 1 - (Math.pow(2, start) - 1);
                var pmValue = Math.pow(2, 24) - 1;
                var am2Value = Math.pow(2, end) - 1;
                for (i = 0; i < days.length; i++) {
                    if (data.everyday) {
                        attrs[days[i] + 'Am'] += am1Value;
                        attrs[days[i] + 'Pm'] = pmValue;
                        attrs[days[(i + 1) % 7] + 'Am'] += am2Value;
                    } else if (data.repeat[days[i]]) {
                        attrs[days[i] + 'Am'] += am1Value;
                        attrs[days[i] + 'Pm'] = pmValue;
                        attrs[days[(i + 1) % 7] + 'Am'] += am2Value;
                    }
                }
            } else if (end > 24) {
                var pm1Value = Math.pow(2, 24) - 1 - (Math.pow(2, start - 24) - 1);
                var amValue = Math.pow(2, 24) - 1;
                var pm2Value = Math.pow(2, end - 24) - 1;
                for (i = 0; i < days.length; i++) {
                    if (data.everyday) {
                        attrs[days[i] + 'Pm'] += pm1Value;
                        attrs[days[(i + 1) % 7] + 'Am'] = amValue;
                        attrs[days[(i + 1) % 7] + 'Pm'] += pm2Value;
                    } else if (data.repeat[days[i]]) {
                        attrs[days[i] + 'Pm'] += pm1Value;
                        attrs[days[(i + 1) % 7] + 'Am'] = amValue;
                        attrs[days[(i + 1) % 7] + 'Pm'] += pm2Value;
                    }
                }
            } else {
                var pmValue = Math.pow(2, 24) - 1 - (Math.pow(2, start - 24) - 1);
                var amValue = Math.pow(2, end) - 1;
                for (i = 0; i < days.length; i++) {
                    if (data.everyday) {
                        attrs[days[i] + 'Pm'] += pmValue;
                        attrs[days[(i + 1) % 7] + 'Am'] = amValue;
                    } else if (data.repeat[days[i]]) {
                        attrs[days[i] + 'Pm'] += pmValue;
                        attrs[days[(i + 1) % 7] + 'Am'] = amValue;
                    }
                }
            }
            return attrs;
        }

        return false;
    }

    function getSelectedTime(item) {
        var i;
        var attrs = {};
        var value = -1;
        var allSameTag = true;
        var twoDayTag = false;
        var startTag = 0,
            endTag = 0,
            start = -1,
            end = -1;

        // 判断是不是每天配置相同
        for (i = 0; i < days.length; i++) {
            var x = days[i] + 'Am';
            var y = days[i] + 'Pm';
            var am = parseInt(item[x]);
            var pm = parseInt(item[y]);
            var cur = am + pm * Math.pow(2, 24);

            if (value === -1) {
                value = cur;
            } else if (value !== -1 && cur !== value) {
                allSameTag = false;
            }
        }

        if (allSameTag) {
            var series = getTimeSeries(item['sunAm'], item['sunPm']);

            if (series[0] === 0 || series[47] === 0) {
                twoDayTag = false;
                for (i = 0; i < 48; i++) {
                    if (start === -1 && series[i] === 1) {
                        start = i;
                    } else if (start !== -1 && series[i] === 0 && end === -1) {
                        end = i;
                    }
                }
            } else {
                start = -1;
                end = -1;
                for (i = 0; i < 48; i++) {
                    if (startTag === 0 && series[i] === 1) {
                        startTag = 1;
                    } else if (startTag === 1 && series[i] === 0) {
                        endTag = 1;
                        if (end === -1) {
                            end = i;
                        }
                    } else if (endTag === 1 && series[i] === 1) {
                        if (start === -1) {
                            start = i;
                        }
                        if (i === 47) {
                            twoDayTag = true;
                        }
                    }
                }
            }
            attrs.repeat = {
                text: 'Every Day'
            };
        } else {
            for (i in item) {
                if (item.hasOwnProperty(i) && item[i] != 0 && i != '__stack') {
                    var day = i.substr(0, 3);
                    var dayAm = day + 'Am';
                    var dayPm = day + 'Pm';
                    break;
                }
            }

            var series = getTimeSeries(item[dayAm], item[dayPm]);
            if (series[0] === 0 && series[47] === 0) {
                start = -1;
                end = -1;
                twoDayTag = false;
                for (i = 0; i < 48; i++) {
                    if (start === -1 && series[i] === 1) {
                        start = i;
                    } else if (start !== -1 && series[i] === 0 && end === -1) {
                        end = i;
                    }
                }
            } else {
                value = -1;
                for (i = 0; i < days.length; i++) {
                    var x = days[i] + 'Am';
                    var y = days[i] + 'Pm';
                    var am = parseInt(item[x]);
                    var pm = parseInt(item[y]);
                    var cur = am + pm * Math.pow(2, 24);

                    if (value === -1 && cur !== 0) {
                        value = cur;
                    } else if (value !== -1 && cur !== 0 && cur !== value) {
                        twoDayTag = true;
                        break;
                    }
                }

                if (twoDayTag) {
                    // 跨天时间段
                    for (i in item) {
                        if (item.hasOwnProperty(i) && item[i] != 0 && i != '__stack') {
                            var day = i.substr(0, 3);
                            var dayAm = day + 'Am';
                            var dayPm = day + 'Pm';
                            series = getTimeSeries(item[dayAm], item[dayPm]);
                            startTag = 0;
                            endTag = 0;

                            if (series[0] === 1) {
                                end = -1;
                                for (i = 0; i < 48; i++) {
                                    if (endTag === 0 && series[i] === 0) {
                                        endTag = 1;
                                        if (end === -1) {
                                            end = i;
                                        }
                                    }
                                }
                            } else if (series[47] === 1) {
                                start = -1;
                                for (i = 0; i < 48; i++) {
                                    if (startTag === 0 && series[i] === 1) {
                                        startTag = 1;
                                        if (start === -1) {
                                            start = i;
                                        }
                                    }
                                }
                            }
                        }
                    }
                } else {
                    // 单天内时间段
                    start = -1;
                    end = -1;
                    for (i = 0; i < 48; i++) {
                        if (start === -1 && series[i] === 1) {
                            start = i;
                        } else if (start !== -1 && series[i] === 0 && end === -1) {
                            end = i;
                        }
                    }
                }
            }

            attrs.repeat = getRepeatDays(item, twoDayTag);
        }
        if (start === -1 || end === -1) {
            start = (start === -1 ? 0 : start);
            end = (end === -1 ? 0 : end);
        }

        attrs.start = start;
        attrs.end = end;
		if(end==0) {
			attrs.end = 48;
			end = 48;
		}
        attrs.everyday = allSameTag;
        attrs.timeRange = getTimeFromNum(start) + '-' + getTimeFromNum(end);
        return attrs;
    }

    function getRepeatDays(item, twoDayTag) {
        var names = {
            sun: s_str.sun,
            mon: s_str.mon,
            tue: s_str.tues,
            wed: s_str.wed,
            thu: s_str.thur,
            fri: s_str.fri,
            sat: s_str.sat
        };
        var value = -1,
            cur = 0,
            repeatDays = {};

        if (twoDayTag) {
            for (var i = 0; i < days.length; i++) {
                var x = days[i] + 'Am';
                var y = days[i] + 'Pm';
                var series = getTimeSeries(item[x], item[y]);

                if (series[47] === 1 && !repeatDays.hasOwnProperty(days[i])) {
                    repeatDays[days[i]] = names[days[i]];
                }
            }
        } else {
            for (var i = 0; i < days.length; i++) {
                var x = days[i] + 'Am';
                var y = days[i] + 'Pm';
                var am = parseInt(item[x]);
                var pm = parseInt(item[y]);
                var cur = am + pm * Math.pow(2, 24);

                if (value === -1 && cur !== 0) {
                    value = cur;
                    repeatDays[days[i]] = names[days[i]];
                } else if (value !== -1 && cur !== 0 && cur === value) {
                    twoDayTag = true;
                    if (!repeatDays.hasOwnProperty(days[i])) {
                        repeatDays[days[i]] = names[days[i]];
                    }
                }
            }
        }

        var repeatArray = [];
        for (var i in repeatDays) {
            repeatArray.push(repeatDays[i]);
        }
        return {
            selected: repeatDays,
            text: repeatArray.join(' ')
        };
    }

    // 获取数组长度为48的单天时间选择，粒度为半小时

    function getTimeSeries(am, pm) {
        var series = [];
        for (var i = 0; i < 24; i++) {
            if (parseInt(am) & Math.pow(2, i)) {
                series[i] = 1;
            } else {
                series[i] = 0;
            }
            if (parseInt(pm) & Math.pow(2, i)) {
                series[i + 24] = 1;
            } else {
                series[i + 24] = 0;
            }
        }
        return series;
    }

    function getTimeFromNum(number) {
        var time = '';
        if (number % 2 === 1) {
            time = Math.floor(number / 2) + ':30';
        } else {
            time = number / 2 + ':00';
        }
        return time;
    }

    function init() {
        idIndex = [];
        //        var wlanList = $.act(ACT_GL, LAN_WLAN, null, null, ["X_TP_Band"]);
        //        var wlanObj;
        //        if (!$.exe()) {
        //            $.each(wlanList, function() {
        //                if ("2.4GHz" == this.X_TP_Band) {
        //                    wlanObj = this;
        //                }
        //            });
        //        }
        //        var basicList = $.act(ACT_GS, LAN_WLAN_TASK_SCHEDULE, null, wlanObj.__stack);
        var basicList = $.act(ACT_GS, LAN_WLAN_TASK_SCHEDULE, null, '1,1,0,0,0,0');
        if (!$.exe()) {
            var scheCfg = basicList[0];
            stk = scheCfg.__stack;

            if (1 == scheCfg.enable) {
                $("#schedule-list-container").removeClass("nd");
                $("#enableWirelessScheduleOn").addClass("selected");
            } else {
                $("#schedule-list-container").addClass("nd");
                $("#enableWirelessScheduleOff").addClass("selected");
            }

            taskSche = $.act(ACT_GS, 'LAN_WLAN_SCHEDULEITEM', null, stk);

            if (!$.exe()) {
                $("#schedulelist").tpTable(initScheduleTable);
            }
        }

        $("#enableWirelessScheduleOn").on("click", function() {
            $.addLoading($(this));
            $.act(ACT_SET, LAN_WLAN_TASK_SCHEDULE, stk, null, ["enable=1", "isUsrCtrl=0"]);
            $.exe(function(err) {
                $.removeLoading();
                if (!err) {
                    $.removeLoading();
                    init();
                    $("#schedule-list-container").removeClass("nd");
                }
            });
        });

        $("#enableWirelessScheduleOff").on("click", function() {
            $.addLoading($(this));
            $.act(ACT_SET, LAN_WLAN_TASK_SCHEDULE, stk, null, ["enable=0", "isUsrCtrl=0"]);
            $.exe(function(err) {
                $.removeLoading();
                if (!err) {
                    $.removeLoading();
                    init();
                    $("#schedule-list-container").addClass("nd");
                }
            });
        });
    }

    function doSave(edit) {
        var data = {};
        data.start = $('#startTime').data('value');
        data.end = $('#endTime').data('value');
        data.everyday = $('#repeatEveryday').prop('checked');
        data.repeat = {};

        if (data.end == 'none' || data.start == 'none') {
            $.alert($.tpLang.wirelessSchedule_nstr.c_plsSetOffTime);
            return;
        }

        for (var i = 0; i < days.length; i++) {
            var id = '#schedule' + days[i].substr(0, 1).toUpperCase() + days[i].substr(1);
            if ($(id).prop('checked')) {
                data.repeat[days[i]] = true;
            } else {
                data.repeat[days[i]] = false;
            }
        }

        var attrs = setSelectedTime(data);

        if (attrs) {
            if (edit === 1) {
                $.act(ACT_SET, 'LAN_WLAN_SCHEDULEITEM', editStk, null, attrs);
            } else if (edit === 0) {
                $.act(ACT_ADD, 'LAN_WLAN_SCHEDULEITEM', null, stk, attrs);
            }
            $.exe(function(err) {
                $.removeLoading();
                if (!err) {
                    $.reload();
                }
            });
        }
    }
})();
</script>
