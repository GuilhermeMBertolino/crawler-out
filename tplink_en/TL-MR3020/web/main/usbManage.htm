<h3 id="t_dSett">Device Settings</h3>
<div class="content-container">
    <form class="pure-form pure-form-aligned">
        <button type="submit" id="refresh" class="blue left T_scan">Scan</button>
        <div id="usb_drawing" class="part-separate">
        </div>
        <div id="chart_cnt" class="part-separate">
        </div>
        <div id="chart_tip" class="nd">
            <div id="chart_tips_point"></div>
            <p></p>
            <div id="chart_tips_button"></div>
        </div>
    </form>
</div>

<h3 id="t_sSett">Sharing Settings</h3>
<div class="content-container">
    <form class="pure-form pure-form-aligned">
        <label id="t_nsn" for="server_name">Network/Media Server Name:</label>
        <input type="text" id="server_name" maxlength="15" />
        <button type="submit" class="green T_save" id='shareSettings'>Save</button>
    </form>
</div>

<h3 id="t_info">Folder Sharing</h3>
<div class="content-container">
    <form class="pure-form pure-form-aligned">
        <div class="button-group-container">
            <b id="t_esa">Share All:</b>
            <ul>
                <li>
                    <button id="shareOn" class="fst" value="on">On</button>
                </li>
                <li>
                    <button id="shareOff" class="lst" value="off">Off</button>
                </li>
            </ul>
        </div>

        <div class="browse-content-container nd" id="folderSel">
            <div class="browse-content-container-wrap">
                <span><b id="t_brw">Browse for folder path</b>
                </span>
                <br>
                <br>
                <div id="folderSelContent">
                </div>
            </div>

            <div class="inline-btn-right">
                <button type="submit" class="green inline T_cancel" id="cancelPathSel">Cancel</button>
                <button type="submit" class="green inline T_save" id="confirmPathSel">Save</button>
            </div>
        </div>


        <div id="shareDrawing" class="nd">
            <div class='table-op'>
                <div class='table-btn'>
                    <span class='add-icon' id="shareItemAdd"></span>
                    <label class="T_add">Add</label>
                    <span class='delete-icon'></span>
                    <label class="T_del">Delete</label>
                </div>
            </div>
            <table id='shareTab'>
                <thead></thead>
                <tbody>
                    <tr id="editShareFolder" class="nd">
                        <td colspan="8">
                            <div>
                                <b id="t_vol">Volume Name:</b>
                                <select id="shareVolume">
                                </select>
                            </div>
                            <div>
                                <b id="t_folP">Folder Path:</b>
                                <input type="text" id="filename" class="xl" disabled required>
                                <button type="submit" class="blue" id="t_browse">Browse</button>
                            </div>
                            <div>
                                <b id="t_shareN">Folder Name:</b>
                                <input type="text" id="shareName" class="xl" maxlength="31" required>
                            </div>
                            <div>
                                <b></b>
                                <input type="checkbox" id="ea" />
                                <label id="t_ea">Enable Authentication</label>
                            </div>
                            <div>
                                <b></b>
                                <input type="checkbox" id="wa" />
                                <label id="t_wa">Enable Write Access</label>
                            </div>
                            <div>
                                <b></b>
                                <input type="checkbox" id="ems" />
                                <label id="t_ems">Enable Media Sharing</label>
                            </div>
                            <div class="inline-btn-right">
                                <button type="submit" class="green T_cancel" id="edit-cancel">Cancel</button>
                                <button type="submit" class="green T_save" id="edit-ok">Save</button>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="button-group-container" id="authentication">
            <b id="t_ea_a">Enable Authentication:</b>
            <ul>
                <li>
                    <button id="authOn" class="fst" value="on">On</button>
                </li>
                <li>
                    <button id="authOff" class="lst" value="off">Off</button>
                </li>
            </ul>
        </div>

        <div id="authDrawing" class="nd">
            <div class='table-op'>
                <div class='table-btn'>
                    <span class='refresh-icon' id="refShareSet"></span>
                    <label class="T_refresh">Refresh</label>
                </div>
            </div>
            <table id='authTab'>
                <thead></thead>
                <tbody></tbody>
            </table>
        </div>
    </form>
</div>

<script language="javascript" type="text/javascript">
(function() {
    var usbDeviceList;
    var volumeList;
    var smbService;
    var dlnaService;
    var ftpServer;

    var accessFolderList_samba;
    var accessFolderList_ftp;
    var accessFolderList_dlna;

    var numAliveDev = 0;
    var numAliveLog = 0;
    var idx;

    var currVolume = "";
    var currPath = "";

    var currentFolder = "";
    var fPath = "";

    var firstClick = 1;
    var firstNode = 1;
    var o;
    var prevObj;

    var folderPath = "";
    var currentVol = "";

    var folderIdx;
    var shareTabStatus = "";
    var editCurIndex;


    $.tpInit(init);

    $("#refresh").click(function() {
        $.addLoading($(this));
        usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);

        if (!$.exe()) {
            if (0 == usbDeviceList.length) {
                $.removeLoading();
                $.reload();
                return;
            }

            var idx;

            for (idx = 0; idx < usbDeviceList.length; idx++) {
                usbDeviceList[idx].enable = 1;
                mountUsb(idx);
            }
            $.removeLoading();
            $.reload();
        }
    });

    $("#chart_tips_button").click(function(){
        $.hideCover();
        $('#mask').css({background: '#36444b', opacity: '0.2'});
        $("#chart_tip").addClass('nd');
    });

    $('#t_browse').click(function() {
        showBrowse();
    });

    $('#folderSelContent').on('click', '.addFolder,.hideFolder', function() {
        loadClick(this);
    }).on('click', '.folderImg', function() {
        foldSelect(this);
    }).on('click', '.fName, span.span', function() {
        getFolderPath(this);
    });

    $('#usb_drawing').on('click', 'span.safely-remove-icon', function() {
        var index = $(this).attr('data-index');
        $.addLoading();
        handleUsb(index);
    }).on('click', 'span.disable-icon, span.enable-icon', function() {
        var index = $(this).attr('data-index');
        ableFunc(index);
    });

    $('#shareTab').on('click', 'span.enable-icon, span.disable-icon', function() {
        var index = $(this).attr('data-index');
        ableShare(index);
    }).on('click', 'span.edit-modify-icon', function() {
        var index = $(this).attr('data-index');
        modifyShare(index);
    }).on('click', 'span.edit-trash-icon', function() {
        var index = $(this).attr('data-index');
        delShare(index);
    }).on('click', '.share-table-checkbox', function() {
        var index = $(this).attr('data-index');
        selectJudge(index);
    });

    $('#shareDrawing').on('click', '.delete-icon', function() {
        deleteItem();
    });

    $("#shareVolume").click(function () {
        currentVol = $("#shareVolume").data("value");
    });

    $("#shareItemAdd").click(function () {
        shareTabStatus = "add";
    });

    $("#cancelPathSel").click(function () {
        $.hideCover();
        $("#folderSelContent").empty();
        $("#folderSel").addClass("nd");
    });

    $("#confirmPathSel").click(function () {
        $.hideCover();
        $("#folderSelContent").empty();
        $("#folderSel").addClass("nd");
        $("#filename").val(transStr(folderPath));
    });

    $("#refShareSet").click(function () {
        initAuthTab();
    });

    $("#shareOn").click(function () {
        $.addLoading($(this));
        $.act(ACT_SET, SMB_SERVICE, null, null, ["shareAll=1"]);
        $.act(ACT_SET, FTP_SERVER, null, null, ["shareAll=1"]);
        $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, ["shareAll=1"]);

        if (!$.exe()) {
            $.removeLoading();
            $("#authentication").removeClass("nd");
            $("#shareDrawing").addClass("nd");
            $("#authDrawing").removeClass("nd");
            var param = {};
            param.scrollTop = $("#scroll").scrollTop();
            $.loadMain("usbManage.htm", param);
        }
    });

    $("#shareOff").click(function () {
        $.addLoading($(this));
        $.act(ACT_SET, SMB_SERVICE, null, null, ["shareAll=0"]);
        $.act(ACT_SET, FTP_SERVER, null, null, ["shareAll=0"]);
        $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, ["shareAll=0"]);

        if (!$.exe()) {
            $.removeLoading();
            $("#authentication").addClass("nd");
            $("#authDrawing").addClass("nd");
            $("#shareDrawing").removeClass("nd");
            var param = {};
            param.scrollTop = $("#scroll").scrollTop();
            $.loadMain("usbManage.htm", param);
        }
    });

    $("#authOn").click(function () {
        $.addLoading($(this));
        $.act(ACT_SET, SMB_SERVICE, null, null, ["anonymous=0"]);
        $.act(ACT_SET, FTP_SERVER, null, null, ["anonymous=0"]);

        if (!$.exe()) {
            $.removeLoading();
            var param = {};
            param.scrollTop = $("#scroll").scrollTop();
            $.loadMain("usbManage.htm", param);
        }
    });

    $("#authOff").click(function () {
        $.addLoading($(this));
        $.act(ACT_SET, SMB_SERVICE, null, null, ["anonymous=1"]);
        $.act(ACT_SET, FTP_SERVER, null, null, ["anonymous=1"]);

        if (!$.exe()) {
            $.removeLoading();
            var param = {};
            param.scrollTop = $("#scroll").scrollTop();
            $.loadMain("usbManage.htm", param);
        }
    });

    function handleUsb(idx) {
        var command = {};

        if ("Online" == usbDeviceList[idx].status) {
            command.enable = 0;
            usbDeviceList[idx].enable = 0;
        } else if (("Standby" == usbDeviceList[idx].status) && (1 == usbDeviceList[idx].enable)) {
            usbDeviceList[idx].enable = 0;
            command.enable = 0;
        } else {
            usbDeviceList[idx].enable = 1;
            command.enable = 1;
        }

        $.act(ACT_SET, USB_DEVICE, usbDeviceList[idx].__stack, null, command);

        $.exe(function() {
            $.removeLoading();
            $.reload();
        });
    }

    function mountUsb(idx) {
        var command = {};
        if (("Standby" == usbDeviceList[idx].status) && (1 == usbDeviceList[idx].enable)) {
            command.enable = 1;
            $.act(ACT_SET, USB_DEVICE, usbDeviceList[idx].__stack, null, command);

            if (!$.exe()) {
                $.reload();
            }
        }
    }

    function ableFunc(num) {
        var command = {};

        if ("Online" == volumeList[num].status) {
            command.enable = 0;
        } else if ("Error" == volumeList[num].status) {
            return;
        } else if (("Offline" == volumeList[num].status) && ("1" == volumeList[num].enable)) {
            handleVolumeForce(num);
            return;
        } else if (("Offline" == volumeList[num].status)) {
            command.enable = 1;
        } else {
            $.reload();
        }

        $.act(ACT_SET, LOGICAL_VOLUME, volumeList[num].__stack, null, command);

        $.exe(function() {
            $.removeLoading();
            $.reload();
        });
    }

    function handleVolumeForce(num) {
        var command = {};

        command.enable = 1;
        command.force = 1;
        $.act(ACT_SET, LOGICAL_VOLUME, volumeList[num].__stack, null, command);

        if (!$.exe()) {
            $.reload();
        }
    }

    function initTable() {
        var array = [];
        var i, rowspan;

        for (idx = 1; idx <= usbDeviceList.length; idx++) {
            if ("Online" == usbDeviceList[idx - 1].status) {
                rowspan = 0;
                for (i = 0; i < volumeList.length; i++) {
                    if (((usbDeviceList[idx - 1].__stack).split(','))[0] == ((volumeList[i].__stack).split(','))[0]) {
                        rowspan++;
                    }
                }
                for (i = 0; i < volumeList.length; i++) {
                    if (((usbDeviceList[idx - 1].__stack).split(','))[0] == ((volumeList[i].__stack).split(','))[0]) {
                        var ableControl;

                        if (volumeList[i].status == "Online") {
                            ableControl = true;
                        } else if ("Error" == volumeList[i].status) {
                            ableControl = false;
                        } else if (("Offline" == volumeList[i].status) && (1 == volumeList[i].enable)) {
                            ableControl = false;
                        } else {
                            ableControl = false;
                        }

                        if ((0 == usbDeviceList[idx - 1].enable) || ("Online" != usbDeviceList[idx - 1].status)) {
                            ableControl = false;
                        }

                        var removeTD = {
                            "text": "<span class='safely-remove-icon table-icon' data-index='" + (idx-1)
                            +"'></span>",
                            "width": "15%",
                            "rowspan": rowspan
                        };

                        array.push([{
                            "text": volumeList[i].label + ':(' + volumeList[i].name + ')',
                            "width": "15%"
                        }, {
                            "text": volumeList[i].capacity,
                            "width": "20%"
                        }, {
                            "text": renderFreeSpace(getVolumeGB(volumeList[i].freeSpace), getVolumeGB(volumeList[i].capacity)),
                            "width": "38%"
                        }, {
                            "text": '<span class="table-grid-icon'+(ableControl?' enable-icon':' disable-icon')+'" data-index="'+
                            i +'"></span>',
                            "width": "12%"
                        }, removeTD]);
                    }
                }
            }
        }

        $.initTableBody($('#volumeTbl'), array);
        // $.tablePages($('#volumeTbl'), 5);
        return array;
    }

    function init() {
        usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);
        volumeList = $.act(ACT_GL, LOGICAL_VOLUME, null, null);
        smbService = $.act(ACT_GET, SMB_SERVICE, null, null, null);
        ftpServer = $.act(ACT_GET, FTP_SERVER, null, null, null);
        dlnaService = $.act(ACT_GET, DLNA_MEDIA_SERVER, null, null, null);
        accessFolderList_samba = $.act(ACT_GL, SMB_SERVICE_FOLDER, null, null, null);
        accessFolderList_ftp = $.act(ACT_GL, FTP_SERVER_FOLDER, null, null, null);
        accessFolderList_dlna = $.act(ACT_GL, DLNA_MEDIA_SERVER_FOLDER, null, null, null);

        userAccessList_samba = $.act(ACT_GL, SMB_USER_ACCESS, null, null, null);

        userList = $.act(ACT_GL, USER_ACCOUNT, null, null, null);

        var index, headArray;

        $("#chart_tip p").text(c_str.usbChartInfo);
        $("#chart_tips_button").text(m_str.ok);

        if (!$.exe()) {
            // USB Storage Device
            if (0 < usbDeviceList.length) {
                if (usbDeviceList.length <= 2 && checkVolumeNum(usbDeviceList, volumeList)) {
                    drawChart(usbDeviceList, volumeList);
                } else {
                    for (idx = 0; idx < usbDeviceList.length; idx++) {
                        if ("Online" == usbDeviceList[idx].status) {
                            numAliveDev++;
                        }
                    }

                    for (idx = 0; idx < volumeList.length; idx++) {
                        if ("Online" == volumeList[idx].status) {
                            numAliveLog++;
                        }
                    }

                    var usbDrawing;
                    usbDrawing = "<table id='volumeTbl'><thead></thead><tbody></tbody></table>";
                    $("#usb_drawing").append(usbDrawing).append("<br>");

                    headArray = [{
                        "text": table_str.name,
                        "width": "15%"
                    }, {
                        "text": table_str.total,
                        "width": "20%"
                    }, {
                        "text": table_str.capacity,
                        "width": "38%"
                    }, {
                        "text": table_str.enable,
                        "width": "12%"
                    }, {
                        "text": m_str.remove,
                        "width": "15%"
                    }];

                    $.initTableHead($('#volumeTbl'), headArray);
                    $('#volumeTbl').tpTable(initTable);
                }
            }

            // Sharing Settings
            $("#server_name").val(smbService.serverName);

            // Folder Sharing
            var authHeadArray = [{
                "text": table_str.id,
                width: "10%"
            }, {
                "text": table_str.shareName,
                width: "40%"
            }, {
                "text": table_str.folderPath,
                width: "25%"
            }, {
                "text": table_str.volume,
                width: "25%"
            }];

            $.initTableHead($('#authTab'), authHeadArray);
            $('#authTab').tpTable(initAuthTab);

            headArray = [{
                "text": '<div><input type="checkbox" id="shareTitle" class="table-select-all"/><label></label></div>',
                "width": "8%"
            }, {
                "text": table_str.id,
                "width": "5%"
            }, {
                "text": table_str.shareName,
                "width": "15%"
            }, {
                "text": table_str.folderPath,
                "width": "25%"
            }, {
                "text": table_str.mediaSharing,
                "width": "10%"
            }, {
                "text": table_str.volume,
                "width": "10%"
            }, {
                "text": table_str.status,
                "width": "10%"
            }, {
                "text": table_str.modify,
                "width": "17%"
            }];
            $.initTableHead($('#shareTab'), headArray);
            $('#shareTab').tpTable(initShareTab);

            if (smbService.anonymous == 0) {
                $("#authOn").addClass("selected");
            } else {
                $("#authOff").addClass("selected");
            }

            if (smbService.shareAll == false) {
                $("#shareOff").addClass("selected");
                $("#authentication").addClass("nd");
                $("#authDrawing").addClass("nd");
                $("#shareDrawing").removeClass("nd");
            } else {
                $("#shareOn").addClass("selected");
                $("#shareDrawing").addClass("nd");
                $("#authentication").removeClass("nd");

                $("#authDrawing").removeClass("nd");
            }

            var i;
            var $volNameSelect = $("#shareVolume");

            while ((i = $("#shareVolume option").length) > 0) {
                $("#shareVolume option[index='0']").remove();
            }

            var $ispOption = $("<option>" + table_str.selectopt + "</option>");
            $ispOption.val(table_str.selectopt);

            $volNameSelect.append($ispOption);

            for (index = 0; index < volumeList.length; index++) {
                if ("Online" == volumeList[index].status) {
                    $ispOption = $("<option></option>");
                    $ispOption.val(volumeList[index].label + ":");
                    $ispOption.text(volumeList[index].label + ":");

                    $volNameSelect.append($ispOption);
                }
            }

            folderIdx = accessFolderList_samba.length;

            if ($.mainParam !== undefined) {
                var param = $.mainParam || {};
                $('#scroll').scrollTop(param.scrollTop);
            }
        }
    }

    function checkVolumeNum(usbDeviceList, volumeList) {
        var maxVolumeNum = 0;
        for (var i = 0; i < usbDeviceList.length; i++) {
            var tempNum = 0;
            for (var j = 0; j < volumeList.length; j++) {
                if ($.stkPop(volumeList[j].__stack) == usbDeviceList[i].__stack) {
                    tempNum += 1;
                }
            }
            if (tempNum > maxVolumeNum) {
                maxVolumeNum = tempNum;
            }
            if (maxVolumeNum > 5) {
                return false;
            }
        }
        return true;
    }

    function renderFreeSpace(free, total) {
        var percent = 1-free/total,
                len = percent*230;
        var isAlert = (percent >= 0.9);
        var inHTML='<div class="inline-block">';
        inHTML +=   '<div class="" style="position: relative; display: inline-block;">';
        inHTML +=       '<div class="" style="margin-bottom:10px;top:7px;position:relative;">';
        inHTML +=           '<div class="" style="border: 0 none;background-color: #a7a9ac;width: 230px; height: 6px;">';
        inHTML +=               '<div class="progressbar-value'+(isAlert?' grid_alert':'')+'" style="width:'+
                len+'px;height:100%;overflow: hidden;"></div>';
        inHTML +=           '</div>';
        inHTML +=       '</div>';
        inHTML +=   '</div>';
        inHTML +=   '<div class="volume-progress-text">';
        inHTML +=       '<span class="'+(isAlert?'grid_alert':'')+'">'+s_str.used+':'+(total-free).toFixed(1)+'G</span>';
        inHTML +=       '<span>'+s_str.free+':'+free+'G</span>';
        inHTML +=   '</div>';
        inHTML +='</div>';
        return inHTML;
    }

    function getVolumeGB(data) {
        var kb = /K/;
        var mb = /M/;
        var gb = /G/;
        var cap;
        if (kb.test(data)) {
            cap = data.split(" K")[0]*1/1024/1024;
            return cap.toFixed(1)*1;
        } else if (mb.test(data)) {
            cap = data.split(" M")[0]*1/1024;
            return cap.toFixed(1)*1;
        } else if (gb.test(data)) {
            cap = data.split(" G")[0]*1;
            return cap.toFixed(1)*1;
        } else {
            return (data*1).toFixed(1)*1;
        }
    }

    function drawChart(deviceList, volumeList) {
        var formatData,
                colorArray=["#4ACBD6","#11BBBF","#0D9999","#86E2E2","#59E6EA"],
                div = [];

        $("#chart_cnt").empty().show();

        $("#usb_drawing").hide();

        if(deviceList.length > 0 && (document.cookie.search('usbInfo=1') === -1)){
            document.cookie = 'usbInfo=1';
            $.showCover();
            $('#mask').css({background: '#000', opacity: '0.3'});
            $("#chart_tip").removeClass('nd');
            $("#main").scrollTop(0);
        }

        for(var k = 0; k < deviceList.length; k++) {
            if ("Online" != deviceList[k].status) {
                continue;
            }

            var totalCapacity = 0, volumeIndex = 0;
            div[k]=document.createElement("div");
            $(div[k]).attr("class","device_chart");
            $("#chart_cnt").append(div[k]);

            $.each(volumeList, function(index) {
                var that = this;
                if ($.stkPop(that.__stack) == deviceList[k].__stack) {
                    totalCapacity += getVolumeGB(that.capacity);
                }
            });

            formatData = [];
            var bgLine=document.createElement("canvas");
            bgLine.className="bg-line";
            bgLine.width=350;
            bgLine.height=350;
            var infoUl=document.createElement("ul");
            infoUl.className="device_info_ul";
            $.each(volumeList, function(index) {
                var that = this;
                if ($.stkPop(that.__stack) == deviceList[k].__stack) {
                    (function(k, volumeIndex, bgLine, totalCapacity){
                        formatData.push({
                            value: getVolumeGB(that.capacity),
                            color: that.enable == "1" ? colorArray[volumeIndex%5] : "#A7A9AC",
                            label: that.label+':('+that.name+')',
                            free: getVolumeGB(that.freeSpace),
                            clickCallback:function(){
                                $.addLoading();
                                ableFunc(index);
                            },
                            showInfo:function(){
                                var angle,
                                        angleSum = 0,
                                        total = 0,
                                        index = 0;
                                var r = this.outerRadius;
                                var ctx = bgLine.getContext('2d');
                                $("#chart_cnt .device_chart:eq("+k+")").find("div.device_info").hide();
                                ctx.clearRect(0,0,350,350);
                                ctx.beginPath();
                                ctx.strokeStyle = this.fillColor;
                                ctx.lineWidth = 2;
                                ctx.moveTo(170,170);

                                $.each(volumeList, function() {
                                    var that = this;
                                    if ($.stkPop(that.__stack) == deviceList[k].__stack) {
                                        if(index<volumeIndex) {
                                            angleSum += getVolumeGB(that.capacity);
                                        }
                                        index++;
                                    }
                                });

                                angleSum = angleSum/totalCapacity*2*Math.PI;
                                angle = this.value/totalCapacity*2*Math.PI;
                                if(this.value==totalCapacity) angle=2.3;
                                var changeX = ((angleSum + angle/2)>Math.PI)?-1:0;

                                var div = $("#chart_cnt .device_chart:eq("+k+")").find("div.device_info:eq("+volumeIndex+")");
                                ctx.lineTo(170+1.4*r*Math.sin(angleSum + angle/2),170-1.4*r*Math.cos(angleSum + angle/2));
                                ctx.lineTo(170+1.4*r*Math.sin(angleSum + angle/2)+ (changeX==0?1:-1)*div.width(),170-1.4*r*Math.cos(angleSum + angle/2));

                                ctx.stroke();
                                if ( isIE8 ){
                                    ctx.beginPath();
                                    ctx.fillStyle="#ffffff";
                                    ctx.arc(170, 170, 36, 0, Math.PI*2, false);
                                    ctx.fill();
                                }
                                div.show();
                            },
                            hideInfo:function(){
                                var ctx = bgLine.getContext('2d');
                                $("#chart_cnt .device_chart:eq("+k+")").find("div.device_info").hide();
                                ctx.clearRect(0,0,350,350);
                            }
                        });
                    })(k, volumeIndex, bgLine, totalCapacity);
                    volumeIndex++;
                }
            });
            if (formatData.length === 1) {
                formatData.push({
                    value: 0.01,
                    color: "#fff",
                    label: '',
                    free: 0.01,
                    clickCallback: function () {
                    },
                    showInfo: function () {
                    },
                    hideInfo: function () {
                    }
                });
            }

            $("#chart_cnt .device_chart:eq("+k+")").append(bgLine);
            $("#chart_cnt .device_chart:eq("+k+")").append(infoUl);
            var canvas=document.createElement("canvas");
            canvas.width=140;
            canvas.height=140;
            $("#chart_cnt .device_chart:eq("+k+")").append(canvas);
            // newfour
            var isIE8 =( navigator.appName == "Microsoft Internet Explorer" && navigator.appVersion.split(";")[1].replace(/[ ]/g,"")=="MSIE8.0" );

            if( isIE8 ){
                canvas=window.G_vmlCanvasManager.initElement(canvas);
                bgLine=window.G_vmlCanvasManager.initElement(bgLine);
            }

            (function(canvas,totalCapacity,bgLine){
                new Chart(canvas.getContext("2d")).Doughnut(formatData, {
                    showTooltips: true,
                    segmentStrokeWidth : 1,
                    percentageInnerCutout : 45,
                    animationSteps : 30,
                    animationEasing: "easeOutQuad",
                    //animation : false,
                    onAnimationComplete:function(){
                        var ctx=bgLine.getContext('2d');
                        var div, li;
                        var angle, angleSum=0;
                        var changeX=0, changeY=0;
                        var r = this.outerRadius;
                        var usedValue, freeValue;
                        var total;

                        for(var i=0;i<this.segments.length;i++){
                            angle = this.segments[i].value/this.total*2*Math.PI;
                            if(this.segments.length==2)angle=2.3;
                            div=document.createElement("div");
                            li=document.createElement("li");
                            div.className="device_info";
                            li.className="device_info_li";
                            $(canvas).closest(".device_chart").append(div);
                            $(canvas).closest(".device_chart").find(".device_info_ul").append(li);

                            changeX = ((angleSum + angle/2)>Math.PI)?-1:0;
                            changeY = -1;

                            $(div).css("top",parseInt(r - 1.4*r*Math.cos(angleSum + angle/2) + changeY*div.offsetHeight - 1)+"px");
                            $(div).css("left",parseInt(r + 1.4*r*Math.sin(angleSum + angle/2) + changeX*div.offsetWidth + 20)+"px");

                            usedValue = ((this.segments[i].value*1-this.segments[i].free*1+"").indexOf(".")>-1)?
                                    (this.segments[i].value*1-this.segments[i].free*1).toFixed(1):
                                    (this.segments[i].value*1-this.segments[i].free*1);
                            freeValue = ((this.segments[i].free*1+"").indexOf(".")>-1)?
                                    (this.segments[i].free*1).toFixed(1):(this.segments[i].free*1);

                            div.innerHTML="<h4>"+this.segments[i].label+"</h4>"+"<ul><li class=\""+
                                    ((usedValue/freeValue)>=9?"alert":"")+"\">"+s_str.used+": "+usedValue+"G</li>"+"<li>"+
                                    s_str.free+": "+freeValue+"G</li></ul>";
                            li.innerHTML="<div style=\"background:"+this.segments[i].fillColor+"\"></div>"+this.segments[i].label.split('(')[0];
                            angleSum+=angle;
                            div.style.display="none";
                        }
                        ctx.beginPath();
                        ctx.fillStyle="#ffffff";
                        ctx.arc(170, 170, 36, 0, Math.PI*2, false);
                        ctx.fill();
                        totalCapacity = ((totalCapacity+"").indexOf(".")>-1)?(totalCapacity*1).toFixed(1):(totalCapacity*1);
                        if ( isIE8 ) {
                            total="<div class=\"device_total\" style=\"background:transparent;\">"+totalCapacity+"G</div>";
                        }else{
                            total="<div class=\"device_total\">"+totalCapacity+"G</div>";
                        }
                        $(canvas).closest(".device_chart").append($(total));
                    }
                });
            })(canvas,totalCapacity,bgLine);

            $("#chart_cnt .device_chart:eq("+k+")").append($('<button data-index="'+k+'"'+
                    ' type="submit" class="bottom_button blue">'+m_str.remove+'</button>'));
        }


        $('.bottom_button').click(function() {
            var idx = $(this).attr('data-index');
            $.addLoading();
            handleUsb(idx);
        });
    }

    function selectJudge(index) {
        var i;
        var selectAll = 1;

        if ($("#cb" + index).prop("data-checked") == true) {
            for (i = 0; i < accessFolderList_samba.length; i++) {
                if ($("#cb" + i).prop("data-checked") == false) {
                    selectAll = 0;
                }
            }

            if (selectAll == 1) {
                $("#shareTitle").prop("checked", true).tpCheckbox();
            }
        } else {
            $("#shareTitle").prop("checked", false).tpCheckbox();
        }
    }

    function initShareTab() {
        var array = [];
        var fp;
        var matchVolume;
        var status;
        var dlnaEnable;
        var ableControl;
        var j;
        var index;
        var edit = "";
        var del = "";
        var i;

        for (index = 0; index < accessFolderList_samba.length; index++) {
            var match = false;
            var volumeName = m_str.disconnected;
            fp = accessFolderList_samba[index].volumeLabel + ":" + accessFolderList_samba[index].name;

            $.each(volumeList, function() {
                if (this.uuid == accessFolderList_samba[index].volumeUuid) {
                    matchVolume = this;
                    match = true;
                    return false;
                }
            });

            dlnaEnable = table_str.off;
            if (accessFolderList_dlna[index].enable == 1) {
                dlnaEnable = table_str.on;
            }

            if ((accessFolderList_samba[index].volumeUuid != "") && (match == false)) {
                ableControl = "<span class='table-grid-icon inactive-disable-icon' id='sp" + index + "'></span>";
            } else if ((accessFolderList_samba[index].volumeUuid != "") && (matchVolume.status != "Online")) {
                if ("Error" == matchVolume.status) {
                    ableControl = "<span class='table-grid-icon inactive-icon' id='sp" + index + "'></span>";
                } else if (("Offline" == matchVolume.status) && (matchVolume.enable == 1)) {
                    ableControl = "<span class='table-grid-icon inactive-icon' id='sp" + index + "'></span>";
                } else {
                    ableControl = "<span class='table-grid-icon inactive-icon' id='sp" + index + "'></span>";
                }
            } else {
                if (1 == accessFolderList_samba[index].enable) {
                    ableControl = "<span class='table-grid-icon enable-icon' id='sp" + index + "' data-index='"+index+"'></span>";
                } else {
                    ableControl = "<span class='table-grid-icon disable-icon' id='sp" + index + "' data-index='"+index+"'></span>";
                }
            }

            edit = "<span class='table-grid-icon edit-modify-icon' id='edit" + index + "' data-index='"+index+"'></span>";
            del = "<span class='table-grid-icon edit-trash-icon' id='del" + index + "' data-index='"+index+"'></span>";

            for (i = 0; i < volumeList.length; i++) {
                if (volumeList[i].label == accessFolderList_samba[index].volumeLabel) {
                    volumeName = volumeList[i].name;
                }
            }

            if (volumeName == undefined) {
                volumeName = m_str.disconnected;
            }

            array.push([{
                "text": '<div><input type="checkbox" id="cb'+index+'" class="table-select-one" data-index="'
                + index + '"/><label></label></div>',
                "width": "8%"
            }, {
                "text": (index + 1),
                "width": "5%"
            }, {
                "text": accessFolderList_samba[index].alias,
                "width": "15%"
            }, {
                "text": escapeStr(fp),
                "width": "25%"
            }, {
                "text": dlnaEnable,
                "width": "10%"
            }, {
                "text": volumeName,
                "width": "10%"
            }, {
                "text": ableControl,
                "width": "10%"
            }, {
                "text": edit + del,
                "width": "17%"
            }]);
        }

        $.initTableBody($('#shareTab'), array);
        $.tablePages($('#shareTab'), 8);
        return array;
    }

    function ableShare(index) {
        var command = {};

        var matchVolume;
        var match = false;
        var _index;

        $.each(volumeList, function () {
            if (this.uuid == accessFolderList_samba[index].volumeUuid) {
                matchVolume = this;
                match = true;
            }
        });

        if ((accessFolderList_samba[index].volumeUuid != "") && (match == false)) {

        } else if ((accessFolderList_samba[index].volumeUuid != "") && (matchVolume.status != "Online")) {

        } else {
            if (1 == accessFolderList_samba[index].enable) {
                command.enable = 0;
            } else {
                command.enable = 1;
            }
        }

        $.act(ACT_SET, SMB_SERVICE_FOLDER, accessFolderList_samba[index].__stack, null, command);
        $.act(ACT_SET, FTP_SERVER_FOLDER, accessFolderList_ftp[index].__stack, null, command);
        $.act(ACT_SET, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[index].__stack, null, command);

        if (!$.exe()) {
            $.act(ACT_SET, SMB_SERVICE, null, null, ["modified=0"]);
            $.act(ACT_SET, FTP_SERVER, null, null, ["modified=0"]);
            if (!$.exe()) {
                var param = {};
                param.scrollTop = $("#scroll").scrollTop();
                $.loadMain("usbManage.htm", param);
            }
        }
    }

    function modifyShare(index) {
        var i;
        editCurIndex = index;
        var str = accessFolderList_samba[index].volumeLabel + ":";

        $("#shareVolume").find("option[value='" + str + "']").prop("selected", "selected");
        $("#shareVolume").tpSelect({refresh: 1});

        $("#filename").val(accessFolderList_samba[index].volumeLabel + ":" + accessFolderList_samba[index].name);
        $("#shareName").val(accessFolderList_samba[index].alias);

        if (accessFolderList_samba[index].needAuth == 1) {
            $("#ea").prop("checked", true).tpCheckbox();
        }

        for (i = 0; i < userAccessList_samba.length; i++) {
            if (parseInt(accessFolderList_samba[index].__stack, 10) != parseInt(userAccessList_samba[i].__stack, 10)) {
                continue;
            }

            if (parseInt(userList[0].__stack, 10) == userAccessList_samba[i].userId) {
                if (userAccessList_samba[i].permissions == 7) {
                    $("#wa").prop("checked", true).tpCheckbox();
                } else {
                    $("#wa").prop("checked", false).tpCheckbox();
                }
            }
        }

        if (accessFolderList_dlna[index].enable == 1) {
            $("#ems").prop("checked", true).tpCheckbox();
        }

        shareTabStatus = "modify";
    }

    function delShare(index) {

        $.act(ACT_DEL, SMB_SERVICE_FOLDER, accessFolderList_samba[index].__stack, null, null);
        $.act(ACT_DEL, FTP_SERVER_FOLDER, accessFolderList_ftp[index].__stack, null, null);
        $.act(ACT_DEL, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[index].__stack, null, null);


        if (!$.exe()) {
            $.act(ACT_SET, SMB_SERVICE, null, null, ["modified=0"]);
            $.act(ACT_SET, FTP_SERVER, null, null, ["modified=0"]);
            if (!$.exe()) {
                var param = {};
                param.scrollTop = $("#scroll").scrollTop();
                $.loadMain("usbManage.htm", param);
            }
        }
    }

    function delShareMul(index) {
        var i;

        $.act(ACT_DEL, SMB_SERVICE_FOLDER, accessFolderList_samba[index].__stack, null, null);
        $.act(ACT_DEL, FTP_SERVER_FOLDER, accessFolderList_ftp[index].__stack, null, null);
        $.act(ACT_DEL, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[index].__stack, null, null);

        $.exe();
    }

    function initAuthTab() {
        var array = [];
        var index;

        if (volumeList.length == 0) {
            array.push([{
                "text": "--",
                "width": "10%"
            }, {
                "text": "--",
                "width": "40%"
            }, {
                "text": "--",
                "width": "25%"
            }, {
                "text": "--",
                "width": "25%"
            }]);
        }

        usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);
        volumeList = $.act(ACT_GL, LOGICAL_VOLUME, null, null);

        if (!$.exe()) {
            for (idx = 1; idx <= usbDeviceList.length; idx++) {
                if ("Online" == usbDeviceList[idx - 1].status) {
                    for (index = 0; index < volumeList.length; index++) {
                        if (((usbDeviceList[idx - 1].__stack).split(','))[0] == ((volumeList[index].__stack).split(','))[0]) {
                            if (volumeList[index].status == "Online") {
                                array.push([{
                                    "text": (index + 1),
                                    "width": "10%"
                                }, {
                                    "text": "volume(" + volumeList[index].name + ")",
                                    "width": "40%"
                                }, {
                                    "text": volumeList[index].label + ":",
                                    "width": "25%"
                                }, {
                                    "text": volumeList[index].name,
                                    "width": "25%"
                                }]);
                            }
                        }
                    }
                }
            }

            $.initTableBody($('#authTab'), array);
            $.tablePages($('#authTab'), 5);
        }

        return array;
    }

    function getParentObj(obj) {
        if (!obj.hasClass('cc')) {
            currentFolder = obj.siblings().text();
            if (fPath != "") {
                currentFolder += ("/" + fPath);
            }
            fPath = currentFolder;
            getParentObj(obj.parent());
        } else {
            fPath = "/" + fPath;
        }
    }

    function escapeStr(str) {
        return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/ /g, '&nbsp;');
    }

    function transStr(str) {
        return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&').replace(/&nbsp;/g, ' ').replace(/\s/g, ' ');
    }

    function getFolderPath(obj) {
        var label;
        var index;
        var color, $prefol;

        if (firstNode == 1) {
            if (!$(obj).parent().hasClass('root')) {
                folderPath = ("/" + $(obj).text());
                o = obj;
                firstNode = 0;
                getFolderPath($(obj).parent());
            } else {
                folderPath = $(obj).text();

                for (index = 0; index < volumeList.length; index++) {
                    if ($(obj).text() == (volumeList[index].label + ":")) {
                        currVolume = volumeList[index].name;
                    }
                }

                color = $(obj).css("color");
                $(obj).css("color", "#0CF");
                if (prevObj) {
                    $(prevObj).css("color", color);

                    $prefol = $(prevObj).siblings(".folderSel");
                    if (prevObj != obj) {
                        $prefol.removeClass("folderSel");
                        $prefol.addClass("folderImg");
                    }
                }
                prevObj = obj;
            }
        } else {
            if (!$(obj).parent().hasClass('root')) {
                folderPath = ("/" + $(obj).siblings('span').text()) + folderPath;
                getFolderPath($(obj).parent());
            } else {
                label = $(obj).siblings('.span').text();

                for (index = 0; index < volumeList.length; index++) {
                    if ($(obj).siblings('.span').text() == (volumeList[index].label + ":")) {
                        currVolume = volumeList[index].name;
                    }
                }

                folderPath = label + folderPath;
                firstNode = 1;

                color = $(o).css("color");
                $(o).css("color", "#0CF");

                var $ofol = $(o).siblings(".folderImg");
                $ofol.removeClass("folderImg");
                $ofol.addClass("folderSel");

                if (prevObj) {
                    $(prevObj).css("color", color);

                    $prefol = $(prevObj).siblings(".folderSel");
                    if (prevObj != o) {
                        $prefol.removeClass("folderSel");
                        $prefol.addClass("folderImg");
                    }

                }
                prevObj = o;
            }
        }
    }

    function createChildFolder(obj) {
        var index;

        if (firstClick == 1) {
            firstClick = 0;
            o = obj;
        }

        if (!$(obj).parent().hasClass('root')) {
            currentFolder = $(obj).siblings('.fName').text();

            if (currPath != "") {
                currentFolder += ("/" + currPath);
            }
            currPath = currentFolder;

            createChildFolder($(obj).parent());
        } else {
            for (index = 0; index < volumeList.length; index++) {
                if ($(obj).siblings('.span').text() == (volumeList[index].label + ":")) {
                    currVolume = volumeList[index].name;
                }
            }

            var fullPath = currVolume + "/" + transStr(currPath);

            var command = {};
            command.targetPath = fullPath;
            var ide;

            $.act(ACT_SET, FOLDER_BROWSE, null, null, command);
            folderList = $.act(ACT_GL, FOLDER_NODE, null, null, null);

            if (!$.exe()) {
                for (ide = 0; ide < folderList.length; ide++) {
                    var folderNameStr = escapeStr(folderList[ide].folderName);
                    text = '<div style="padding-left:23px;" class="div">'+
                            '<div class="addFolder inline"></div>'+
                            '<div class="folderImg inline" style="cursor:pointer;"></div>&nbsp;'+
                            '<span class="fName inline" style="line-height:24px;vertical-align:top;cursor:pointer;">'+
                            folderNameStr + '</span></div>';
                    $(o).parent().append(text);
                }
            }
            firstClick = 1;
            currPath = "";
            if (!($(o).parent().hasClass("root"))) {
                $(o).parent().addClass("loaded");
            }
        }
    }

    function foldSelect(obj) {
        $(obj).siblings(".fName").click();
    }

    function loadClick(obj) {
        if ($(obj).hasClass("addFolder")) {
            if ($(obj).parent().hasClass("vol")) {
                $(obj).siblings('div').removeClass("nd");
                $(o).parent().removeClass("vol");
            } else if ($(obj).parent().hasClass("loaded")) {
                $(obj).siblings('div').removeClass("nd");
            } else {
                createChildFolder(obj);
            }

            $(obj).removeClass("addFolder");
            $(obj).addClass("hideFolder");
        } else if ($(obj).hasClass("hideFolder")) {
            $(obj).removeClass("hideFolder");
            $(obj).addClass("addFolder");

            if ($(obj).parent().hasClass("root")) {
                $(obj).parent().addClass("vol");
            }

            $(obj).siblings('div').addClass("nd");
        }
    }

    function showBrowse() {
        $.setFixedCentral($("#folderSel"));
        $.showCover();
        $("#folderSel").removeClass("nd");
        var index;

        for (index = 0; index < volumeList.length; index++) {
            if ("Online" == volumeList[index].status && currentVol == (volumeList[index].label + ":")) {
                var text;
                text = ("<div style='padding-left:10px;' class='root'><div class='addFolder inline'></div>&nbsp;"+
                "<span class='span inline' style='line-height:24px;vertical-align:top;cursor:pointer;'>" +
                volumeList[index].label + ":" + "</span></div>");

                $("#folderSelContent").append(text);
            }
        }
    }

    function deleteItem() {
        var index;

        if ($("#shareTitle").prop("data-checked") == true) {
            for (index = 0; index < accessFolderList_samba.length; index++) {
                delShareMul(index);
            }
        } else {
            for (index = 0; index < accessFolderList_samba.length; index++) {
                if ($("#cb" + index).prop("data-checked") == true) {
                    delShareMul(index);
                }
            }
        }

        $.act(ACT_SET, SMB_SERVICE, null, null, ["modified=0"]);
        $.act(ACT_SET, FTP_SERVER, null, null, ["modified=0"]);
        $.exe();
        var param = {};
        param.scrollTop = $("#scroll").scrollTop();
        $.loadMain("usbManage.htm", param);
    }

    $("#shareSettings").click(function () {
        $.addLoading($(this));

        if ($("#server_name").val().length >= 16) {
            $.alert(CMM_USB_SERVER_NAME_LENGTH);
            return;
        }

        var newDlnaObj = {};
        newDlnaObj.serverName = $("#server_name").val();

        if (newDlnaObj.serverName == "") {
            $.alert(ERR_USB_DLNA_SERVER_NAME_EMPTY);
            return;
        }
        if ($.asc(newDlnaObj.serverName, true)) {
            $.alert(ERR_USB_DLNA_SERVER_NAME_NOT_ASCII);
            return;
        }
        if ((/[\\\/\*\?=+:;,."<>|@\[\]\(\)\ ]+/).test(newDlnaObj.serverName)) {
            $.alert(ERR_USB_DLNA_INVALID_SERVER_NAME);
            return;
        }

        var command = {};
        command.serverName = $("#server_name").val();

        $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, newDlnaObj);
        $.act(ACT_SET, SMB_SERVICE, null, null, command);

        $.exe(function (ret) {
            if (!ret) {
                $.removeLoading();
                var param = {};
                param.scrollTop = $("#scroll").scrollTop();
                $.loadMain("usbManage.htm", param);
            }
        });
    });

    $("#edit-ok").click(function () {
        var newStr;
        var selectVolumeUuid;
        var selectVolumeLabel;
        var index;
        var command = {};
        var command_ftp = {};
        var command_dlna = {};
        var stack_samba;
        var enableDlna = 0;
        var str;
        var stack_ftp;
        var curFolderPath;

        $.addLoading($(this));

        newStr = $("#shareName").val();

        if (newStr === "") {
            $.alert(ERR_USB_SHARE_NAME_EMPTY);
            return;
        }

        if ((/[\\\/:\*\?"<>|\]\ ]+/).test(newStr)) {
            $.alert(ERR_USB_INVALID_CHAR_IN_FOLDER_NAME);
            return;
        }

        if ($.asc(newStr)) {
            $.alert(ERR_USB_SHARE_NAME_NOT_ASCII);
            return;
        }

        selectVolumeUuid = "";
        selectVolumeLabel = "";

        $.each(volumeList, function () {
            if (this.name == currVolume) {
                selectVolumeUuid = this.uuid;
                selectVolumeLabel = this.label;
            }
        });

        str = $("#filename").val();
        if (str == "") {
            $.alert(CMM_USB_BROWSE_FOLDER_PATH);
            return;
        }

        if (str.length == 2 || str == "ALL:") {
            curFolderPath = "/";
        } else {
            curFolderPath = str.substring(str.indexOf(":") + 1, str.length);
        }

        if ("add" == shareTabStatus) {
            for (index = 0; index < accessFolderList_samba.length; index++) {
                if ((curFolderPath == accessFolderList_samba[index].name) && (selectVolumeUuid == accessFolderList_samba[index].volumeUuid)) {
                    $.alert(ERR_USB_DIR_EXIST);
                    return;
                }

                if ($("#shareName").val() == accessFolderList_samba[index].alias) {
                    $.alert(ERR_USB_SHARE_NAME_EXIST);
                    return;
                }
            }

            command.name = curFolderPath;
            command.alias = $("#shareName").val();
            command.enable = 1;
            command.needAuth = ($("#ea").prop("data-checked") == true) ? 1 : 0;

            command_ftp.name = curFolderPath;
            command_ftp.alias = $("#shareName").val();
            command_ftp.enable = 1;
            command_ftp.needAuth = ($("#ea").prop("data-checked") == true) ? 1 : 0;
            command_ftp.writePermission = ($("#wa").prop("data-checked") == true) ? 7 : 3;

            command_dlna.name = curFolderPath;
            command_dlna.alias = $("#shareName").val();
            command_dlna.enable = ($("#ems").prop("data-checked") == true) ? 1 : 0;
            command_dlna.needAuth = ($("#ea").prop("data-checked") == true) ? 1 : 0;
            if (selectVolumeUuid != "") {
                command.volumeUuid = selectVolumeUuid;
                command_ftp.volumeUuid = selectVolumeUuid;
                command_dlna.volumeUuid = selectVolumeUuid;
            }
            if (selectVolumeLabel != "") {
                command.volumeLabel = selectVolumeLabel;
                command_ftp.volumeLabel = selectVolumeLabel;
                command_dlna.volumeLabel = selectVolumeLabel;
            }

            $.act(ACT_ADD, SMB_SERVICE_FOLDER, null, null, command);
            accessFolderList_samba = $.act(ACT_GL, SMB_SERVICE_FOLDER, null, null, null);

            $.act(ACT_ADD, FTP_SERVER_FOLDER, null, null, command_ftp);
            accessFolderList_ftp = $.act(ACT_GL, FTP_SERVER_FOLDER, null, null, null);

            $.act(ACT_ADD, DLNA_MEDIA_SERVER_FOLDER, null, null, command_dlna);
            accessFolderList_dlna = $.act(ACT_GL, DLNA_MEDIA_SERVER_FOLDER, null, null, null);
        } else {
            for (index = 0; index < accessFolderList_samba.length; index++) {
                if (($("#shareName").val() == accessFolderList_samba[index].alias) && (index != editCurIndex)) {
                    $.alert(ERR_USB_SHARE_NAME_EXIST);
                    return;
                }
                if ((curFolderPath == accessFolderList_samba[index].name) && (selectVolumeUuid == accessFolderList_samba[index].volumeUuid) && (index != editCurIndex)) {
                    $.alert(ERR_USB_DIR_EXIST);
                    return;
                }
            }

            command.name = curFolderPath;
            command.alias = $("#shareName").val();
            command.needAuth = ($("#ea").prop("data-checked") == true) ? 1 : 0;

            command_ftp.name = curFolderPath;
            command_ftp.alias = $("#shareName").val();
            command_ftp.needAuth = ($("#ea").prop("data-checked") == true) ? 1 : 0;
            command_ftp.writePermission = ($("#wa").prop("data-checked") == true) ? 7 : 3;

            command_dlna.name = curFolderPath;
            command_dlna.alias = $("#shareName").val();
            command_dlna.enable = ($("#ems").prop("data-checked") == true) ? 1 : 0;
            command_dlna.needAuth = ($("#ea").prop("data-checked") == true) ? 1 : 0;

            if (selectVolumeUuid != "") {
                command.volumeUuid = selectVolumeUuid;
                command_ftp.volumeUuid = selectVolumeUuid;
                command_dlna.volumeUuid = selectVolumeUuid;
            }
            if (selectVolumeLabel != "") {
                command.volumeLabel = selectVolumeLabel;
                command_ftp.volumeLabel = selectVolumeLabel;
                command_dlna.volumeLabel = selectVolumeLabel;
            }

            $.act(ACT_SET, SMB_SERVICE_FOLDER, accessFolderList_samba[editCurIndex].__stack, null, command);
            accessFolderList_samba = $.act(ACT_GL, SMB_SERVICE_FOLDER, null, null, null);

            $.act(ACT_SET, FTP_SERVER_FOLDER, accessFolderList_ftp[editCurIndex].__stack, null, command_ftp);
            accessFolderList_ftp = $.act(ACT_GL, FTP_SERVER_FOLDER, null, null, null);

            $.act(ACT_SET, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[editCurIndex].__stack, null, command_dlna);
            accessFolderList_dlna = $.act(ACT_GL, DLNA_MEDIA_SERVER_FOLDER, null, null, null);
        }

        $.exe(function (ret) {
            if (!ret) {
                if ("add" == shareTabStatus) {
                    stack_samba = accessFolderList_samba[folderIdx].__stack;
                    stack_ftp = accessFolderList_ftp[folderIdx].__stack;
                } else {
                    stack_samba = accessFolderList_samba[editCurIndex].__stack;
                    stack_ftp = accessFolderList_ftp[editCurIndex].__stack;
                }

                var newFlag = 1;
                var userCommand = {};

                for (index = 0; index < userAccessList_samba.length; index++) {
                    if (parseInt(stack_samba, 10) != parseInt(userAccessList_samba[index].__stack, 10)) {
                        continue;
                    }

                    if (parseInt(userList[0].__stack, 10) == userAccessList_samba[index].userId) {
                        userCommand.userId = 1;
                        if ($("#wa").prop("data-checked") == true) {
                            userCommand.permissions = 7;
                        } else {
                            userCommand.permissions = 3;
                        }
                    }

                    $.act(ACT_SET, SMB_USER_ACCESS, userAccessList_samba[index].__stack, null, userCommand);
                    newFlag = 0;
                }
                if (1 == newFlag) {
                    userCommand.userId = 1;
                    if ($("#wa").prop("data-checked") == true) {
                        userCommand.permissions = 7;
                    } else {
                        userCommand.permissions = 3;
                    }

                    $.act(ACT_ADD, SMB_USER_ACCESS, null, stack_samba, userCommand);
                }

                $.exe(function (ret) {
                    if (!ret) {
                        $.act(ACT_SET, SMB_SERVICE, null, null, ["modified=0"]);
                        $.act(ACT_SET, FTP_SERVER, null, null, ["modified=0"]);
                        if (!$.exe()) {
                            $.removeLoading();
                            var param = {};
                            param.scrollTop = $("#scroll").scrollTop();
                            $.loadMain("usbManage.htm", param);
                        }
                    } else {
                        $.removeLoading();
                    }
                });
            } else {
                $.removeLoading();
            }
        });
    });

    $("#edit-cancel").click(function () {
        var param = {};
        param.scrollTop = $("#scroll").scrollTop();
        $.loadMain("usbManage.htm", param);
    });
})();
</script>
