<script type="text/javascript">
var wlanObj_2g,
    wlanObj_5g,
    vapObj_2g,
    vapObj_5g,
    guestnetObj_2g,
    guestnetObj_5g;
var isSec_2g = 0;
var isSec_5g = 0;

function isHex(str, arg) {
    str = str.toLowerCase();
    for (var i = 0; i < str.length; i++) {
        if ((str.charAt(i) >= '0' && str.charAt(i) <= '9') || (str.charAt(i) >= 'a' && str.charAt(i) <= 'f'))
            continue;
        else {
            if (arg != 0)
                $.alert(ERR_WLAN_WEP_KEY_HEX_INVALID);
            return false;
        }
    }
    if (parseInt(str, 16) == 0) {
        if (arg != 0)
            $.alert(ERR_WLAN_WEP_KEY_HEX_INVALID);
        return false;
    }
    return true;
}

function checkSSID(band) {
    var s = $('#ssid' + band);
    var ssidLen = $.realLen(s.prop('value'));
	var wl5gSSIDconflic=INCLUDE_LAN_WLAN_DUALBAND?(s.prop('value') == wlanObj_5g.SSID):false;;
    if (INCLUDE_LAN_WLAN_MSSID) {
        if (INCLUDE_LAN_WLAN_GUESTNETWORK) {
            if (s.prop('value') == wlanObj_2g.SSID || wl5gSSIDconflic) {
                $.alert(CMM_WLAN_SSID_CONFLICTE);
                s.focus();
                s.select();
                return false;
            }
        }
    }
    if (ssidLen <= 0) {
        $.alert(ERR_WLAN_SSID_IS_EMPTY);
        s.focus();
        s.select();
        return false;
    } else if (ssidLen > 32) {
        $.alert(ERR_WLAN_SSID_LEN_OUTRANGE);
        s.focus();
        s.select();
        return false;
    }

    return true;
}

function checkPersonal(band) {
    var t = $('#wpa2PersonalPwd');
    var pwd = t.prop('value');

    if (pwd.length == 0) {
        $.alert(ERR_WLAN_WPA_PSK_EMPTY);
        t.focus();
        t.select();
        return false;
    } else if (pwd.length < 8) {
        $.alert(ERR_WLAN_WPA_PSK_LENGTH_INVALID);
        t.focus();
        t.select();
        return false;
    } else if (pwd.length >= 64) {
        if (!isHex(pwd, 0)) {
            $.alert(ERR_WLAN_WPA_PSK_HEX_INVALID);
            t.focus();
            t.select();
            return false;
        }
        t.prop('value', t.prop('value').substr(0, 64));
    } else {
        if ($.asc(pwd, true)) {
            $.alert(ERR_WLAN_WPA_PSK_ASCII_INVALID);
            t.focus();
            t.select();
            return false;
        }
    }

    return true;
}

function init() {
	if (INCLUDE_LAN_WLAN_DUALBAND)
	{
	 	$('#5ghz_guest_enable').removeClass("nd");
	 	$('#hideGuest_5g').removeClass("nd");
	}
	if (INCLUDE_USB_STORAGE) {
		$("#usb_access").removeClass("nd");
	}
    var basicList = $.act(ACT_GL, LAN_WLAN, null, null, ["Enable", "SSID", "X_TP_Band", "BeaconType", "BasicEncryptionModes"]);
    if (!$.exe()) {
        $.each(basicList, function() {
            if ("2.4GHz" == this.X_TP_Band) {
                wlanObj_2g = this;
            }
            if ("5GHz" == this.X_TP_Band) {
                wlanObj_5g = this;
            }
        });

        mssidObj_2g = $.act(ACT_GET, LAN_WLAN_MULTISSID, wlanObj_2g.__stack, null, ["MultiSSIDEnable"]);
        vapList_2g = $.act(ACT_GS, LAN_WLAN_MSSIDENTRY, null, wlanObj_2g.__stack, ["Name", "Enable", "SSID", "SSIDAdvertisementEnable", "isolateClients", "BeaconType", "BasicAuthenticationMode", "WEPKeyIndex", "BasicEncryptionModes", "WPAEncryptionModes", "WPAAuthenticationMode", "IEEE11iEncryptionModes", "IEEE11iAuthenticationMode", "PreSharedKey", "GroupKeyUpdateInterval", "RadiusServerIP", "RadiusServerPort", "RadiusServerPassword"]);
        
        guestnetObj_2g = $.act(ACT_GET, LAN_WLAN_GUESTNET, wlanObj_2g.__stack, null, ["Enable", "Name", "IsModified", "LANAccessEnable", "USBAccessEnable", "TCEnable", "TCMaxUpBW", "TCMinUpBW", "TCMaxDownBW", "TCMinDownBW", "TCRuleID"]);
		if (INCLUDE_LAN_WLAN_DUALBAND)
		{
        	mssidObj_5g = $.act(ACT_GET, LAN_WLAN_MULTISSID, wlanObj_5g.__stack, null, ["MultiSSIDEnable"]);
			vapList_5g = $.act(ACT_GS, LAN_WLAN_MSSIDENTRY, null, wlanObj_5g.__stack, ["Name", "Enable", "SSID", "SSIDAdvertisementEnable", "isolateClients", "BeaconType", "BasicAuthenticationMode", "WEPKeyIndex", "BasicEncryptionModes", "WPAEncryptionModes", "WPAAuthenticationMode", "IEEE11iEncryptionModes", "IEEE11iAuthenticationMode", "PreSharedKey", "GroupKeyUpdateInterval", "RadiusServerIP", "RadiusServerPort", "RadiusServerPassword"]);
			guestnetObj_5g = $.act(ACT_GET, LAN_WLAN_GUESTNET, wlanObj_5g.__stack, null, ["Enable", "Name", "IsModified", "LANAccessEnable", "USBAccessEnable", "TCEnable", "TCMaxUpBW", "TCMinUpBW", "TCMaxDownBW", "TCMinDownBW", "TCRuleID"]);
		}
        if (!$.exe()) {
            $.each(vapList_2g, function(arg, index) {
                if (this.name == guestnetObj_2g.name)
                    vapObj_2g = this;
            });
            if (INCLUDE_LAN_WLAN_DUALBAND)
            {
	            $.each(vapList_5g, function(arg, index) {
	                if (this.name == guestnetObj_5g.name)
	                    vapObj_5g = this;
	            });
            }
            if (guestnetObj_2g.enable == true) {
                /*                vapObj = vapObj2g;
                guestnetObj = guestnetObj2G;*/
            }
            if (guestnetObj_2g.enable == true) {
                /*                vapObj = vapObj5g;
                guestnetObj = guestnetObj_5g;*/
            }
        }
        initParamShow(vapObj_2g, '_2g');
        initAdvancedShow(vapObj_2g, guestnetObj_2g);
        initSecShow(vapObj_2g, '_2g');
       
        if (INCLUDE_LAN_WLAN_DUALBAND)
        {
			initParamShow(vapObj_5g, '_5g');
			initSecShow(vapObj_5g, '_5g');
        }
    }
}

function initParamShow(vapObj, band) {
	if (vapObj_2g.enable == 1) {
		$('#wlEn_2g').prop('checked', true);
	} 
	if (INCLUDE_LAN_WLAN_DUALBAND && vapObj_5g.enable == 1) {
		$('#wlEn_5g').prop('checked', true);
	}
    if (band == '_2g') {
        if (wlanObj_2g.enable == 0) {
            $('#wlEn_2g').prop('disabled', true);
            $('#ssid_2g').prop('disabled', true);
            $('#hideSSID_2g').prop('disabled', true);
            $.errorTip('wlEn_2g', ERR_WLAN_DISABLED);
        }
    } else if (band == '_5g') {
        if (wlanObj_5g.enable == 0) {
            $('#wlEn_5g').prop('disabled', true);
            $('#ssid_5g').prop('disabled', true);
            $('#hideSSID_5g').prop('disabled', true);
            $.errorTip('wlEn_5g', ERR_WLAN_DISABLED);
        }
    }

    $('#ssid' + band).prop('value', vapObj.SSID);

    if (vapObj.SSIDAdvertisementEnable == 0) {
        $('#hideSSID' + band).prop('checked', 'checked');
    }
}

function initAdvancedShow(vapObj, guestnetObj) {
    if (vapObj.isolateClients == 0) {
        $('#seeEachOther').prop('checked', 'checked');
    }
    if (guestnetObj.LANAccessEnable == 1) {
        $('#accessLocal').prop('checked', 'checked');
    }
    if (guestnetObj.USBAccessEnable == 1) {
        $('#accessUSB').prop('checked', 'checked');
    }
}

function initSecShow(wlanObj, band) {
    if (initSecType(wlanObj, band) === false) {
        $('#noSec').prop('checked', true);
    } else {
        $('#wpaSec').prop('checked', true);
        initWpa2Personal(wlanObj, band);
    }

}

function initSecType(wlanObj, band) {
    if (wlanObj.beaconType == 'Basic' && wlanObj.basicEncryptionModes == 'None') {
        return false;
    } else {
        if (band == '_2g') {
            isSec_2g = 1;
        } else {
            isSec_5g = 1;
        }
        return true;
    }
}

function initWpa2Personal(wlanObj, band) {
    $('#wpa2PersonalPwd').prop('value', wlanObj.preSharedKey);
}

function check(band) {
    if (checkSSID(band) == false) {
        return false;
    }
    if (($('#wpaSec').prop('checked')) && (checkPersonal(band) == false)) {
        return false;
    }
}

function clickSave(wlanObj, guestnetObj, band) {
    var wlSettings = {};
    var guestSettings = {};
    var type;

    wlSettings.enable = $('#wlEn' + band).prop('data-checked') ? 1 : 0;
   
    wlSettings.SSID = $('#ssid' + band).prop('value');
    wlSettings.SSIDAdvertisementEnable = $('#hideSSID' + band).prop('data-checked') ? 0 : 1;
    wlSettings.preSharedKey = $('#wpa2PersonalPwd').prop('value');

    if ((band == '_2g' && isSec_2g == 0 && $('#wpaSec').prop('checked')) ||
        (band == '_5g' && isSec_5g == 0 && $('#wpaSec').prop('checked'))) {
        if (band == '_2g') {
            isSec_2g = 1;
        } else {
            isSec_5g = 1;
        }
        wlSettings.beaconType = '11i';
        wlSettings.IEEE11iAuthenticationMode = 'PSKAuthentication';
        wlSettings.IEEE11iEncryptionModes = 'TKIPandAESEncryption';
    } else if ((band == '_2g' && isSec_2g == 1 && $('#noSec').prop('checked')) ||
        (band == '_5g' && isSec_5g == 1 && $('#noSec').prop('checked'))) {
        if (band == '_2g') {
            isSec_2g = 0;
        } else {
            isSec_5g = 0;
        }
        wlSettings.beaconType = 'Basic';
    }
    wlSettings.isolateClients = $('#seeEachOther').prop('data-checked') ? 0 : 1;

    guestSettings.LANAccessEnable = $('#accessLocal').prop('data-checked') ? 1 : 0;
    guestSettings.USBAccessEnable = $('#accessUSB').prop('data-checked') ? 1 : 0;

    $.act(ACT_SET, LAN_WLAN_MSSIDENTRY, wlanObj.__stack, null, wlSettings);

    $.act(ACT_SET, LAN_WLAN_GUESTNET, guestnetObj.__stack, null, guestSettings);

    $.exe(function() {
        $.removeLoading();
    });
}

function disableGuest() {
    var wlSettings = {};
    wlSettings.enable = 0;
    $.act(ACT_SET, LAN_WLAN_MSSIDENTRY, vapObj_2g.__stack, null, wlSettings);
    if (INCLUDE_LAN_WLAN_DUALBAND)
    	$.act(ACT_SET, LAN_WLAN_MSSIDENTRY, vapObj_5g.__stack, null, wlSettings);
    $.exe(function() {
        $.removeLoading();
    });
}

$('#save').on('click.guestBasic', function(e) {
    $.addLoading($(this));
    if ($('#wlEn_2g').prop('data-checked')) {
        if (check('_2g') == false) {
            return;
        }
    }
    if (INCLUDE_LAN_WLAN_DUALBAND)
    {
	    if ($('#wlEn_5g').prop('data-checked')) {
	        if (check('_5g') == false) {
	            return;
	        }
	    }
	    clickSave(vapObj_5g, guestnetObj_5g, '_5g');
    }
    clickSave(vapObj_2g, guestnetObj_2g, '_2g');
});
$("#wpaSec").on('click.guestNetwork', function(e) {
    $("#hideWpaSec").show('fast');
});
$("#noSec").on('click.guestNetwork', function(e) {
    $("#hideWpaSec").hide('fast');
});
$("#wpaSec").on('click.guestNetwork', function(e) {
    $("#hideWpaSec").show('fast');
});
$("#noSec").on('click.guestNetwork', function(e) {
    $("#hideWpaSec").hide('fast');
});
</script>
<h3 id="et">Settings</h3>

<div class="content-container">
    <form class="pure-form pure-form-aligned">
        <div>
            <b class="l ru-hide"></b>
            <input type="checkbox" id="seeEachOther" />
            <label id="t_allowsee">Allow guests to see each other</label>
        </div>
        <div>
            <b class="l ru-hide"></b>
            <input type="checkbox" id="accessLocal" />
            <label id="t_lAccess">Allow guests to access to my local network</label>
        </div>
        <div id="usb_access" class="nd">
            <b class="l ru-hide"></b>
            <input type="checkbox" id="accessUSB" />
            <label id="t_uAccess">Allow guests to access my USB Storage Sharing</label>
        </div>
        <div class="part-separate">
            <b class="T_gn24 l">2.4GHz:</b>
            <input type="checkbox" id="wlEn_2g" />
            <label class="T_wlradioenGuest">Enable Guest Network</label>
        </div>
        <div id="hideGuest_2g">
            <div class="inline">
                <b class="T_gnssid l">Name(SSID):</b>
                <input type="text" maxlength="32" class="xl" id="ssid_2g" />
            </div>
            <div class="inline">
                <input type="checkbox" id="hideSSID_2g" />
                <label class="T_hidessid">Hide SSID</label>
            </div>
        </div>
        <div id="5ghz_guest_enable" class="nd">
            <b class="T_gn5 l">5GHz:</b>
            <input type="checkbox" id="wlEn_5g" />
            <label class="T_wlradioenGuest">Enable Guest Network</label>
        </div>
        <div id="hideGuest_5g" class="nd">
            <div class="inline">
                <b class="T_gnssid l">Name(SSID):</b>
                <input type="text" maxlength="32" class="xl" id="ssid_5g" />
            </div>
            <div class="inline">
                <input type="checkbox" id="hideSSID_5g" />
                <label class="T_hidessid">Hide SSID</label>
            </div>
        </div>
        <div id='secArea' class='part-separate'>
            <div>
                <b class="T_wlsec l">Security:</b>
                <input type="radio" name="security" id="noSec" />
                <label class="T_wldissec">No Security</label>
                <input type="radio" name="security" id="wpaSec" />
                <label class="T_c_setpwd">Set Password</label>
            </div>
            <div id="hideWpaSec">
                <div class="pure-control-group inline">
                    <b class="T_passwd l">Password:</b>
                    <input type="text" maxlength="64" class="tp-input-text xl" id="wpa2PersonalPwd" />
                </div>
            </div>    
        </div>
        
        <button type="submit" class="green T_save" id="save">Save</button>
    </form>
</div>

<script type="text/javascript">
$.tpInit(init);
</script>
