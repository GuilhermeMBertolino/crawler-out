<script language="javascript" type="text/javascript">
var regionInfo = new Array(
	"Albania", 1, 13, 2,
	"Algeria", 1, 13, 2,
	"Argentina", 1, 13, 2,
	"Armenia", 1, 13, 2,
	"Australia", 1, 13, 2,
	"Austria", 1, 13, 2,
	"Azerbaijan", 1, 13, 2,
	"Bahrain", 1, 13, 2,
	"Belarus", 1, 13, 2,
	"Belgium", 1, 13, 2,
	"Belize", 1, 13, 2,
	"Bolivia", 1, 13, 2,
	"Brazil", 1, 13, 2,
	"Brunei Darussalam", 1, 13, 2,
	"Bulgaria", 1, 13, 2,
	"Cambodia", 1, 13, 2,
	"Canada", 1, 11, 2,
	"Chile", 1, 13, 2,
	"China", 1, 13, 1,
	"Colombia", 1, 11, 2,
	"Costa Rica", 1, 13, 2,
	"Croatia", 1, 13, 2,
	"Cyprus", 1, 13, 2,
	"Czech Republic", 1, 13, 2,
	"Denmark", 1, 13, 2,
	"Dominican Republic", 1, 11, 2,
	"Ecuador", 1, 13, 2,
	"Egypt", 1, 13, 2,
	"El Salvador", 1, 13, 2,
	"Estonia", 1, 13, 2,
	"Finland", 1, 13, 2,
	"France", 1, 13, 2,
	"Georgia", 1, 13, 2,
	"Germany", 1, 13, 2,
	"Greece", 1, 13, 2,
	"Guatemala", 1, 11, 2,
	"Honduras", 1, 13, 2,
	"Hong Kong", 1, 13, 2,
	"Hungary", 1, 13, 2,
	"Iceland", 1, 13, 2,
	"India", 1, 13, 2,
	"Indonesia", 1, 13, 2,
	"Iran", 1, 13, 2,
	"Iraq", 1, 13, 2,
	"Ireland", 1, 13, 2,
	"Israel", 1, 13, 2,
	"Italy", 1, 13, 2,
	"Japan", 1, 13, 2,
	"Jordan", 1, 13, 2,
	"Kazakhstan", 1, 13, 2,
	"North Korea", 1, 13, 2,
	"Korea Republic", 1, 13, 2,
	"Kuwait", 1, 13, 2,
	"Latvia", 1, 13, 2,
	"Lebanon", 1, 13, 2,
	"Liechtenstein", 1, 13, 2,
	"Lithuania", 1, 13, 2,
	"Luxembourg", 1, 13, 2,
	"Macau", 1, 13, 2,
	"Macedonia", 1, 13, 2,
	"Malaysia", 1, 13, 2,
	"Malta", 1, 13, 2,
	"Mexico", 1, 11, 2,
	"Monaco", 1, 13, 2,
	"Morocco", 1, 13, 2,
	"Netherlands", 1, 13, 2,
	"New Zealand", 1, 13, 2,
	"Norway", 1, 13, 2,
	"Oman", 1, 13, 2,
	"Pakistan", 1, 13, 2,
	"Panama", 1, 11, 2,
    "Paraguay", 1, 13, 2,
	"Peru", 1, 13, 2,
	"Philippines", 1, 13, 2,
	"Poland", 1, 13, 2,
	"Portugal", 1, 13, 2,
	"Puerto Rico", 1, 11, 2,
	"Qatar", 1, 13, 2,
	"Romania", 1, 13, 2,
	"Russia", 1, 13, 2,
	"Saudi Arabia", 1, 13, 2,
	"Singapore", 1, 13, 2,
	"Serbia", 1, 13, 2,
	"Slovak Republic", 1, 13, 2,
	"Slovenia", 1, 13, 2,
	"South Africa", 1, 13, 2,
	"Spain", 1, 13, 2,
	"Sweden", 1, 13, 2,
	"Switzerland", 1, 13, 2,
	"Syrian Arab Republic", 1, 13, 2,
	"Taiwan", 1, 11, 2,
	"Thailand", 1, 13, 2,
	"Trinidad And Tobago", 1, 13, 2,
	"Tunisia", 1, 13, 2,
	"Turkey", 1, 13, 2,
	"Ukraine", 1, 13, 2,
	"United Arab Emirates", 1, 13, 2,
	"United Kingdom", 1, 13, 2,
	"United States", 1, 11, 2,
	"Uruguay", 1, 13, 2,
	"Uzbekistan", 1, 11, 2,
	"Venezuela", 1, 11, 2,
	"Viet Nam", 1, 13, 2,
	"Yemen", 1, 13, 2,
	"Zimbabwe", 1, 13, 2
); 

var regionCodeInfo = new Array
(
	[8, "AL ", 0,3, "ALBANIA"],
	[12,"DZ ", 0,3, "ALGERIA"],
	[32,"AR ", 0,3, "ARGENTINA"],
	[51,"AM ", 0,3,"ARMENIA"],
	[36,"AU ", 0,3, "AUSTRALIA"],
	[40,"AT ", 0,3,"AUSTRIA"],
	[31,"AZ ", 0,3,"AZERBAIJAN"],
	[48,"BH ", 0,3,"BAHRAIN"],
	[112,"BY ", 0,3,"BELARUS"],
	[56,"BE ", 0,3,"BELGIUM"],
	[84,"BZ ", 0,8,"BELIZE"],
	[68,"BO ", 0,8,"BOLIVIA"],
	[76,"BR ", 0,3,"BRAZIL"],
	[96,"BN ", 0,3,"BRUNEI DARUSSALAM"],
	[100,"BG ", 0,3,"BULGARIA"],
	[116,"KH ", 0,3,"CAMBODIA"],
	[124,"CA ", 0,1,"CANADA"],
	[152,"CL ", 0,3,"CHILE"],
	[156,"CN ", 0,3,"CHINA"],
	[170,"CO ", 0,1,"COLOMBIA"],
	[188,"CR ", 0,3,"COSTA RICA"],
	[191,"HR ", 0,3,"CROATIA"],
	[196,"CY ", 0,3,"CYPRUS"],
	[203,"CZ ", 0,3,"CZECH REPUBLIC"],
	[208,"DK ", 0,3,"DENMARK"],
	[214,"DO ", 0,1,"DOMINICAN REPUBLIC"],
	[218,"EC ", 0,3,"ECUADOR"],
	[818,"EG ", 0,3,"EGYPT"],
	[222,"SV ", 0,3,"EL SALVADOR"],
	[233,"EE ", 0,3,"ESTONIA"],
	[246,"FI ", 0,3,"FINLAND"],
	[250,"FR ", 0,3,"FRANCE"],
	[268,"GE ", 0,3,"GEORGIA"],
	[276,"DE ", 0,3,"GERMANY"],
	[300,"GR ", 0,3,"GREECE"],
	[320,"GT ", 0,1,"GUATEMALA"],
	[340,"HN ", 0,3,"HONDURAS"],
	[344,"HK ", 0,3,"HONG KONG"],
	[348,"HU ", 0,3,"HUNGARY"],
	[352,"IS ", 0,3,"ICELAND"],
	[356,"IN ", 0,3,"INDIA"],
	[360,"ID ", 0,3,"INDONESIA"],
	[364,"IR ", 0,3,"IRAN"],
    [368,"IQ",  0,3, "IRAQ"],
	[372,"IE ", 0,3,"IRELAND"],
	[376,"IL ", 0,7,"ISRAEL"],
	[380,"IT ", 0,3,"ITALY"],
	[392,"JP ", 3,6,"JAPAN"],
	[400,"JO ", 0,3,"JORDAN"],
	[398,"KZ ", 0,3,"KAZAKHSTAN"],
	[410,"KP ", 2,3,"NORTH KOREA"],
	[408,"KR ", 2,3,"KOREA REPUBLIC"],
	[414,"KW ", 0,3,"KUWAIT"],
	[428,"LV ", 0,3,"LATVIA"],
	[422,"LB ", 0,3,"LEBANON"],
	[438,"LI ", 0,3,"LIECHTENSTEIN"],
	[440,"LT ", 0,3,"LITHUANIA"],
	[442,"LU ", 0,3,"LUXEMBOURG"],
	[446,"MO ", 0,3,"MACAU"],
	[807,"MK ", 0,3,"MACEDONIA"],
	[458,"MY ", 0,3,"MALAYSIA"],
	[470,"MT", 0,3, "MALTA",],
	[484,"MX ", 0,1,"MEXICO"],
	[492,"MC ", 0,3,"MONACO"],
	[504,"MA ", 0,3,"MOROCCO"],
	[528,"NL ", 0,3,"NETHERLANDS"],
	[554,"NZ ", 0,8,"NEW ZEALAND"],
	[578,"NO ", 0,3,"NORWAY"],
	[512,"OM ", 0,3,"OMAN"],
	[586,"PK ", 0,3,"PAKISTAN"],
	[591,"PA ", 0,1,"PANAMA"],
    [600,"PY",  0,3,"PARAGUAY"],
	[604,"PE ", 0,3,"PERU"],
	[608,"PH ", 0,3,"PHILIPPINES"],
	[616,"PL ", 0,3,"POLAND"],
	[620,"PT ", 0,3,"PORTUGAL"],
	[630,"PR ", 0,1,"PUERTO RICO"],
	[634,"QA ", 0,3,"QATAR"],
	[642,"RO ", 0,3,"ROMANIA"],
	[643,"RU ", 0,3,"RUSSIA"],
	[682,"SA ", 0,3,"SAUDI ARABIA"],
	[702,"SG ", 4,3,"SINGAPORE"],
	[688,"RS ", 0,3,"SERBIA"],
	[703,"SK ", 0,3,"SLOVAK REPUBLIC"],
	[705,"SI ", 0,3,"SLOVENIA"],
	[710,"ZA ", 0,3,"SOUTH AFRICA"],
	[724,"ES ", 0,3,"SPAIN"],
	[752,"SE ", 0,3,"SWEDEN"],
	[756,"CH ", 0,3,"SWITZERLAND"],
	[760,"SY ", 0,3,"SYRIAN ARAB REPUBLIC"],
	[158,"TW ", 1,1,"TAIWAN"],
	[764,"TH ", 0,3,"THAILAND"],
	[780,"TT ", 0,3,"TRINIDAD AND TOBAGO"],
	[788,"TN ", 0,3,"TUNISIA"],
	[792,"TR ", 0,3,"TURKEY"],
	[804,"UA ", 0,3,"UKRAINE"],
	[784,"AE ", 0,3,"UNITED ARAB EMIRATES"],
	[826,"GB ", 0,3,"UNITED KINGDOM"],
	[840,"US ", 0,1,"UNITED STATES"],
	[858,"UY ", 0,3,"URUGUAY"],
	[860,"UZ ", 0,1,"UZBEKISTAN"],
	[862,"VE ", 0,8,"VENEZUELA"],
	[704,"VN ", 0,3,"VIET NAM"],
	[887,"YE ", 0,3,"YEMEN"],
	[716,"ZW ", 0,3,"ZIMBABWE"]
);

var POWER_HIGH = 	100;
var POWER_MIDDLE = 	50;
var POWER_LOW = 	20;

var powerLabel = {
	100: 	s_str.high,
	50: 	s_str.medium,
	20: 	s_str.low
};

var regionDefaultPower = [
	/* Region, Default Power, Supported Power List */
	["SA", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Saudi Arabia */
	["QA", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Qatar */
	["AE", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* United Arab Emirates */
	["KW", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Kuwait */
	["IR", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Iran*/
	["IQ", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Iraq */
	["SY", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Syria CE or FCC ? */
	["EG", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Egypt */
	["JO", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Jordan */
	["DZ", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Algeria */
	["MA", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Morocco CE */
	["TN", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Tunisia */
	["YE", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Yemen */
	["LB", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Lebanon CE */
	["ZA", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* South Africa */
	["PK", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Pakistan */
	["BH", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Bahrain */
	["MX", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Mexico */
	["CO", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Colombia */
	["BR", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Brazil */
	["PY", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Paraguay CE or FCC ? */
	["PE", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Peru CE or FCC ? */
	["VE", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Venezuela CE or FCC ? */
	["EC", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Ecuador CE or FCC ? */
	["PA", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Panama CE or FCC */
	["GT", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Guatemala CE or FCC ? */
	["CR", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Costa Rica CE or FCC ? */
	["SV", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* El Salvador CE or FCC ? */
	["AR", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Argentina CE or FCC ?*/
	["CL", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Chile CE or FCC ? */
	["UY", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Uruguay CE or FCC ? */
	["BO", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Bolivia CE or FCC ? */
	["SG", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Singapore */
	["MY", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Malaysia */
	["KR", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* South Korea */
	["TW", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Taiwan */
	["HK", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Hong Kong */
	["ID", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Indonesia */
	["TH", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Thailand */
	["VN", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Viet Nam */
	["PH", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Philippines */
	["IN", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* India */
	["AU", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Australia */
	["NZ", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* New Zealand */
	["KH", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]], 		/* Cambodia */
	["IL", POWER_MIDDLE, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]],  		/* Israel */
	[".*", POWER_HIGH, [POWER_HIGH, POWER_MIDDLE, POWER_LOW]]  		/* else */
];

function isRegionSupported(region)
{
	if (INCLUDE_WLAN_REGION_LIST)
	{
		var supportedRegionList = $.qd.wl.supportedRegionList;
		var listLen = supportedRegionList.length;
		if (supportedRegionList == '*' || supportedRegionList == '')
		{
			return true;
		}
		for (var i = 0; i < listLen; i += 2)
		{
			var re = new RegExp("\s*" + supportedRegionList.substr(i, 2) + "\s*");
			if (re.test(region))
			{
				return true;
			}
		}
		return false;
	}
	else
	{
		return true;
	}
}

function showRegionHelp()
{
	if (typeof parent.frames["helpFrame"].document.getElementsByClassName !== 'function')
	{
		parent.frames["helpFrame"].document.getElementsByClassName = function(className, element) {
			var children = parent.frames["helpFrame"].document.getElementsByTagName('*');
			var elements = new Array();
			for (var i = 0; i < children.length; i++)
			{
				var child = children[i];
				var classNameList = child.className.split(' ');
				for (var j = 0; j < classNameList.length; j++)
				{
					if (classNameList[j] == className)
					{
						elements.push(child);
						break;
					}
				}
			}
			return elements;
		}
	}
	var regionHelpElements = parent.frames["helpFrame"].document.getElementsByClassName("region_help");
	if (regionHelpElements.length == 0)
	{
		setTimeout(showRegionHelp, 100);
		return;
	}
	for (var index = 0; index < regionHelpElements.length; index++)
	{
		$.removeClass(regionHelpElements[index], "nd");
	}
}

function initRegionList(domain)
{
	var region = $.id("region");
	var selectedIndex = 0;
	var optionIndex = 0;

	for (i=0; i<(regionInfo.length / 4); i++)
	{
		if (isRegionSupported(regionCodeInfo[i][1]) == false)
		{
			continue;
		}
		var opt=$.c("option");
		opt.value=i;
		if (country_str && country_str[i])
			opt.text=country_str[i];
		else
			opt.text=regionInfo[4 * i];
		try{region.add(opt,null);}catch(e){region.add(opt);}
		if (regionCodeInfo[i][1] == domain) {
			selectedIndex=optionIndex;
			$.qd.wl.country = opt.text;
		}
		optionIndex++;
	}
	region.selectedIndex=selectedIndex;
	if (INCLUDE_FORCE_REGION_SELECT)
	{
		g_selectedIndex=selectedIndex;
	}
	if ($.qd.wl.showRegion == 1)
	{
		$.removeClass($.id("regionBox"), "nd");
		$.removeClass($.id("regionNote"), "nd");
		showRegionHelp();
	}
}

function changeRegion()
{
	$.qd.wl.domain = regionCodeInfo[$.id("region").value][1];
	$.qd.wl.country = regionInfo[4 * $.id("region").value];
	setPowerList($.qd.wl.domain);
}

function setPowerList(region)
{
	var i=0;
	var pList = $.id("txpower");
	var list = new Array();
	var opt;

	if ($.id("region").value == -1)
	{
		$.id("txpower").disabled = true;
	}
	else
	{
		$.id("txpower").disabled = false;
	}

	for (i = 0; i < regionDefaultPower.length; i++)
	{
		if (new RegExp(regionDefaultPower[i][0]).test(region))
		{
			defaultPower = regionDefaultPower[i][1];
			supportedPowerList = regionDefaultPower[i][2];
			break;
		}
	}

	while ( pList.options.length > 0 )
	{
		pList.remove(0);
	}
	$.each(supportedPowerList, function(arg, index) {
			opt = $.c("option");
			opt.value = parseInt(this);
			opt.text = powerLabel[this];
			try {
				pList.add(opt, null);
			} catch (e) {
				pList.add(opt);
			}
			if (opt.value == defaultPower)
			{
				pList.selectedIndex = index;
			}
		});
	changePower();
}

function changePower()
{
	var currPower = $.id("txpower").value;
	if (currPower == POWER_HIGH && defaultPower != POWER_HIGH)
	{
		showBlock("powNote", true);
	}
	else
	{
		showBlock("powNote", false);
	}
}

function showBlock(id, display)
{
	if (display) 
	{
		$.removeClass($.id(id), "nd");
	}
	else
	{
		$.addClass($.id(id), "nd");
	}
}
var curChannel;

function isHex(str) {
    str = str.toLowerCase();
    for (var i = 0; i < str.length; i++) {
        if ((str.charAt(i) >= '0' && str.charAt(i) <= '9') || (str.charAt(i) >= 'a' && str.charAt(i) <= 'f'))
            continue;
        else {
            $.alert(ERR_WLAN_WDS_HEX_KEY_INVALID);
            return false;
        }
    }
    if (parseInt(str, 16) == 0) {
        $.alert(ERR_WLAN_WDS_HEX_KEY_OUTRANGE);
        return false;
    }
    return true;
}

if (INCLUDE_LAN_WLAN_WDS_DETECT) {
    function changeAddrMode() {
        wlanObj.bridgeAddrMode = $.id("addrMode").value;
    }
}

function hide_wep()
{
        $.addClass($.id("authType-ctn"), 'nd');
        $.addClass($.id("wepKeyIndex-ctn"), 'nd');
        $.addClass($.id("keyText-ctn"), 'nd');

        $.id("wepKeyIndex").disabled = true;
        $.id("keyText").disabled = true;
        $.id("authType").disabled = true;
}
function show_wep()
{
        $.removeClass($.id("authType-ctn"), 'nd');
        $.removeClass($.id("wepKeyIndex-ctn"), 'nd');
        $.removeClass($.id("keyText-ctn"), 'nd');

        $.id("wepKeyIndex").disabled = false;
        $.id("keyText").disabled = false;
        $.id("authType").disabled = false;
}
function hide_psk()
{
        $.addClass($.id("keyText-ctn"), 'nd');
        $.addClass($.id("secType-ctn"), 'nd');

		$.id("secType").disabled = true;
        $.id("keyText").disabled = true;
}
function show_psk()
{
        $.removeClass($.id("keyText-ctn"), 'nd');
        $.removeClass($.id("secType-ctn"), 'nd');

        $.id("secType").disabled = false;
        $.id("keyText").disabled = false;
}

function changeWDSKeyType() {
    var keyType = $.id("keyType").value;
    if ("None" == keyType) {
		hide_wep();
		hide_psk();
    } else if ("WEP-HEX" == keyType || "WEP-ASCII" == keyType) {
		hide_psk();
		show_wep();
    } else {
        hide_wep();
		show_psk();
	}
}

function checkWDS() {
    var briSSID = $.id("bridgeSSID");
    var ssidLen = $.realLen(briSSID.value);
    if (ssidLen <= 0) {
        $.alert(ERR_WLAN_WDS_SSID_IS_EMPTY);
        briSSID.focus();
        briSSID.select();
        return false;
    } else if (ssidLen > 32) {
        $.alert(ERR_WLAN_WDS_SSID_LEN_OUTRANGE);
        briSSID.focus();
        briSSID.select();
        return false;
    }
    var bss = $.id("bridgeBSSID");
    if (bss.value.length == 0) {
        $.alert(ERR_WLAN_WDS_BSSID_IS_EMPTY);
        bss.focus();
        bss.select();
        return false;
    } else if ($.mac(bss.value, true)) {
        $.alert(ERR_WLAN_WDS_BSSID_INVALID);
        bss.focus();
        bss.select();
        return false;
    }
    var key = $.id("keyText");
    if ($.id("keyType").value == "None") {

    } else if ($.id("keyType").value == "WEP-ASCII") {
        //alert("WEP-ASCII");
        if (key.value.length != 5 && key.value.length != 13 && key.value.length != 16) {
            $.alert(ERR_WLAN_WDS_ASCII_KEY_OUTRANGE);
            key.focus();
            key.select();
            return false;
        } else if ($.asc(key.value, true)) {
            $.alert(ERR_WLAN_WDS_ASCII_KEY_INVALID);
            key.focus();
            key.select();
            return false;
        }
    } else if ($.id("keyType").value == "WEP-HEX") {
        //alert("WEP-HEX");
        if (key.value.length != 10 && key.value.length != 26 && key.value.length != 32) {
            $.alert(ERR_WLAN_WDS_HEX_KEY_OUTRANGE);
            key.focus();
            key.select();
            return false;
        } else if (!isHex(key.value)) {
            key.focus();
            key.select();
            return false;
        }
    } else {
        // WPA-PSK/WPA2-PSK
        //alert("other");
        if (key.value.length > 64 || key.value.length < 8) {
            $.alert(ERR_WLAN_WDS_PSK_OUTRANGE);
            key.focus();
            key.select();
            return false;
        } else if (key.value.length == 64) {
            if (!isHex(key.value)) {
                key.focus();
                key.select();
                return false;
            }
        } else {
            if ($.asc(key.value, true)) {
                $.alert(ERR_WLAN_WDS_ASCII_KEY_INVALID);
                key.focus();
                key.select();
                return false;
            }
        }
    }

    return true;
}


function initWDS() {
    if (!INCLUDE_LAN_WLAN_WDS_DETECT) {
        $.addClass($.id("wdsdetect"), "nd");
    } else {
        if (1 == wdsObj.bridgeEnable) {
            $.id("addrMode").value = wdsObj.bridgeAddrMode;
        }
    }

    if ($.mainParam && $.mainParam.wdsExist == 1) {
        $.id("bridgeSSID").value = $.mainParam.SSID;
        $.id("bridgeBSSID").value = $.mainParam.BSSID;
        curChannel = $.mainParam.channel;

        if ($.mainParam.authMode == 0 /*"Open"*/ && $.mainParam.wepStatus == 1 /*"None"*/ ) {
            $.id("keyType").selectedIndex = 0;
        } else if ($.mainParam.wepStatus == 0 /*"WEPEncryption"*/ ) {
            $.id("keyType").selectedIndex = 1;
            if ($.mainParam.authMode == 1 /*"SharedAuthentication"*/ ) {
                $.id("authType").selectedIndex = 1;
            } else if ($.mainParam.authMode = 0 /*"Open"*/ ) {
                $.id("authType").selectedIndex = 0;
            }
            /*$.id("keyText").value=wdsObj.bridgeKey;
            if(wdsObj.bridgeKey.length==5||wdsObj.bridgeKey.length==13||wdsObj.bridgeKey.length==16)
                $.id("keyType").selectedIndex=1;
            else if(wdsObj.bridgeKey.length==10||wdsObj.bridgeKey.length==26||wdsObj.bridgeKey.length==32)
                $.id("keyType").selectedIndex=2;
            $.id("wepKeyIndex").selectedIndex=wdsObj.bridgeWepKeyIndex - 1;*/
        } else {
            if ($.mainParam.authMode == 4 /*"PSKAuthentication"*/ ) {
                $.id("keyType").selectedIndex = 3;
            } else {
                $.id("keyType").selectedIndex = 4;
            }
            if ($.mainParam.wepStatus == 4 /*"TKIPEncryption"*/ ) {
                $.id("secType").selectedIndex = 0;
            } else {
                $.id("secType").selectedIndex = 1;
            }
            /*$.id("keyText").value=wdsObj.bridgeKey;*/
        }
    } else if (1 == $.qd.wds.enable) {
        $.id("bridgeSSID").value = $.qd.wds.ssid;
        $.id("bridgeBSSID").value = $.qd.wds.bssid;

        if ($.qd.wds.authMode == "Open" && $.qd.wds.encryptMode == "None")
            $.id("keyType").selectedIndex = 0;
        else if ($.qd.wds.encryptMode == "WEPEncryption") {
            if ($.qd.wds.authMode == "SharedAuthentication")
                $.id("authType").selectedIndex = 1;
            else if ($.qd.wds.authMode = "Open")
                $.id("authType").selectedIndex = 0;
            $.id("keyText").value = $.qd.wds.key;
            if ($.qd.wds.key.length == 5 || $.qd.wds.key.length == 13 || $.qd.wds.key.length == 16)
                $.id("keyType").selectedIndex = 1;
            else if ($.qd.wds.key.length == 10 || $.qd.wds.key.length == 26 || $.qd.wds.key.length == 32)
                $.id("keyType").selectedIndex = 2;
            $.id("wepKeyIndex").selectedIndex = $.qd.wds.wepKeyIndex - 1;
        } else {
            if ($.qd.wds.authMode == "PSKAuthentication")
                $.id("keyType").selectedIndex = 3;
            else
                $.id("keyType").selectedIndex = 4;
            if ($.qd.wds.encryptMode == "TKIPEncryption")
                $.id("secType").selectedIndex = 0;
            else
                $.id("secType").selectedIndex = 1;
            $.id("keyText").value = $.qd.wds.key;
        }
    }

    changeWDSKeyType();
    //changeWDS();
}

function initParam() {
    if (!$.mainParam)
        return;
    wlanObj.SSID = $.mainParam.ssid;
    wlanObj.standard = $.mainParam.standard;
    wlanObj.channel = $.mainParam.channel;
    wlanObj.autoChannelEnable = $.mainParam.autoChannel;
    wlanObj.X_TP_Bandwidth = $.mainParam.bandWidth;
    if (!INCLUDE_LAN_WLAN_HWSWITCH) {
        wlanObj.enable = 1;
    }
    wlanObj.SSIDAdvertisementEnabled = $.mainParam.SSIDAdvertisementEnabled;
}

function apScan(obj) {
    //alert(wlanObj.channel);
	if (INCLUDE_FORCE_REGION_SELECT && $.id("region").value == -1)
	{
		if (typeof ERR_WLAN_REGION_IS_EMPTY == "undefined")
			alert("Please Select the Region !");
		else
			$.alert(ERR_WLAN_REGION_IS_EMPTY);			

		$.id("region").focus();
		//$.id("region").select();		
		return false;
	}
    $.qd.wl.power = $.id("txpower").value;
    $.qd.wl.setByUser = 1;
    $.act(ACT_OP, ACT_OP_WLAN_SCAN, wlanObj.__stack);
    $.addLoading(obj);
    param = new Object();
    param.ssid = wlanObj.SSID;
    param.standard = wlanObj.standard;
    param.channel = wlanObj.channel;
    param.autoChannel = wlanObj.AutoChannelEnable;
    param.bandWidth = wlanObj.X_TP_Bandwidth;
    if (!INCLUDE_LAN_WLAN_HWSWITCH) {
        param.apEn = 1;
    }
    param.SSIDAdvertisementEnabled = 1;

    $.qm[$.curPage].__v = true;
    $.exe(function(ret) {
        if (!ret) $.loadMain("qsWlScanClient.htm", param);
    });
}

function doCollect() {
    if (true != checkWDS()) {
        return;
    }
    var authMode, encryptMode, addrMode;
    if (INCLUDE_LAN_WLAN_WDS_DETECT) {
        if ($.id("addrMode").value == "detect") {
            addrMode = "detect";
        } else if ($.id("addrMode").value == "addr4") {
            addrMode = "addr4";
        } else {
            addrMode = "addr3";
        }
    }
    if ($.id("keyType").value == "None") {
        authMode = "Open";
        encryptMode = "None";
    } else if ($.id("keyType").value == "WEP-ASCII" || $.id("keyType").value == "WEP-HEX") {
        encryptMode = "WEPEncryption";
        if ($.id("authType").value == "open") {
            authMode = "Open";
        } else {
            authMode = "SharedAuthentication";
        }
    } else {
        if ($.id("keyType").value == "WPA-PSK") {
            authMode = "PSKAuthentication";
        } else {
            authMode = "PSK2Authentication";
        }
        if ($.id("secType").value == "tkip") {
            encryptMode = "TKIPEncryption";
        } else {
            encryptMode = "AESEncryption";
        }
    }

    if (INCLUDE_LAN_WLAN_WDS_DETECT) {
        $.qd.wds.addrMode = addrMode;
    }
    $.qd.wds.ssid = $.id("bridgeSSID").value;
    $.qd.wds.bssid = $.id("bridgeBSSID").value;
    $.qd.wds.key = $.id("keyType").value;
    $.qd.wds.wepKeyIndex = $.id("wepKeyIndex").value;
    $.qd.wds.authMode = authMode;
    $.qd.wds.encryptMode = encryptMode;
    $.qd.wds.key = $.id("keyText").value; //password

    $.qd.wl.chnn = curChannel; //wlanObj.channel;
    if ($.qd.sysMode == 'Client') {
        $.qd.wl.ssidAdver = 0; //关闭ssid广播
    }
    if (encryptMode != 'None') {
        $.qd.wl.authMode = authMode;
        $.qd.wl.encryptMode = encryptMode;
        $.qd.wl.pwd = $.qd.wds.key;
        $.qd.wl.sec = true;
    }

    if ($.qd.sysMode == 'Repeater') {
        if ($.id('copy').checked == true) {
            $.qd.wl.ssid = $.id('copySSID').value;
        } else {
            $.qd.wl.customize = true;
            $.qd.wl.ssid = $.id('customSSID').value;
        }
    }
    $.qd.wl.power = $.id("txpower").value;
    $.qd.wl.setByUser = 1;
    return true;
}

function changeSsid(type) {
    if (type == 0) {
        $.id('copySSID').disabled = false;
        $.id('customSSID').disabled = true;
    } else {
        $.id('copySSID').disabled = true;
        $.id('customSSID').disabled = false;
    }
}

function goNext() {
	if (INCLUDE_FORCE_REGION_SELECT && $.id("region").value == -1)
	{
		if (typeof ERR_WLAN_REGION_IS_EMPTY == "undefined")
			alert("Please Select the Region !");
		else
			$.alert(ERR_WLAN_REGION_IS_EMPTY);			

		$.id("region").focus();
		//$.id("region").select();		
		return false;
	}
    if (!doCollect()) {
        return;
    }
    $.qf.next();
}

function goPrev() {
//  doCollect();
    $.qf.prev();
}
</script>
<p class="et T" id="et">Quick Setup - Wireless</p>
<div class="con1 M">
    <p class="ct"></p>
    <p class="bl"></p>
    <div class="con2">
        <p class="br"></p>

	<p id="regionBox" class="nd">
		<b class="item T T_region">Region:</b>
		<select id="region" name="region" onchange="changeRegion();"></select>
	</p>
	<p class="warning nd" id="regionNote">
		<b class="item T T_warn">Warning:</b>
		<span class="fl" style="width:60%">
			<span class="T" id="t_warn1">Please ensure to select the correct country for your current region to confirm with local laws.</span><br/>
			<span class="T" id="t_warn2">Incorrect settings may cause interference.</span>
		</span>
	</p>
	<p>
		<b class="item T T_txpow">Transmit Power:</b>
		<select id="txpower" name="txpower" onchange="changePower();"></select>
	</p>
	<p class="warning nd" id="powNote">
		<b class="item T T_note">Note:</b>
		<span class="fl">
			<span class="T" id="t_pownote">Transmit Power you set beyond the local criterion.</span>
		</span>
	</p>
        <p>
            <b class="item T" id="t_brssid">SSID(to be bridged):</b>
            <input type="text" class="text" size="32" maxlength="32" id="bridgeSSID" />
        </p>
        <p>
            <b class="item T" id="t_brbssid">MAC Address(to be bridged):</b>
            <input type="text" class="text" maxlength="17" size="17" id="bridgeBSSID" />&nbsp;
            <span class="T" id="t_eg">e.g. 00:1D:0F:11:22:33</span>
        </p>
        <p>
            <b class="item">&nbsp;</b>
            <input type="button" class="button L T" id="t_scan" value="Scan" onclick="apScan(this);" />
        </p>
        <div id="wdsdetect">
            <p><b class="item T" id="t_wdsdetect">AddrMode:</b>
                <select id="addrMode" name="addrMode" style="width:150px" onchange="changeAddrMode();">
                    <option value="detect">Auto Detect</option>
                    <option value="addr3">Three Addr</option>
                    <option value="addr4">Four Addr</option>
                </select>
            </p>
        </div>
        <p><b class="item T T_keytype">Key Type:</b>
            <select id="keyType" name="keyType" style="width:150px" onchange="changeWDSKeyType();">
                <option class="T T_noneEnc" value="None">None</option>
                <option value="WEP-ASCII">WEP(ASCII)</option>
                <option value="WEP-HEX">WEP(HEX)</option>
                <option value="WPA-PSK">WPA-PSK</option>
                <option value="WPA2-PSK">WPA2-PSK</option>
            </select>
        </p>
        <p id="wepKeyIndex-ctn"><b class="item T" id="t_wepidx">WEP Index:</b>
            <select id="wepKeyIndex" name="wepKeyIndex" style="width:150px">
                <option value=1>1</option>
                <option value=2>2</option>
                <option value=3>3</option>
                <option value=4>4</option>
            </select>
        </p>
        <p id="authType-ctn"><b class="item T T_authtype">Authentication Type:</b>
            <select id="authType" name="authType" style="width:150px">
                <option class="T T_opensys" value="open">Open System</option>
                <option class="T T_sharekey" value="shared">Shared Key</option>
            </select>
        </p>
        <p id="secType-ctn"><b class="item T T_encryption">Encryption:</b>
            <select id="secType" name="authType" style="width:150px">
                <option value="tkip">TKIP</option>
                <option value="aes">AES</option>
            </select>
        </p>
        <p id="keyText-ctn"><b class="item T T_passwd">Password:</b>
            <input type=text class="text" id="keyText" size="32" />
        </p>

        <div id="rangeExtend" class="nd">
            <p>
                <b class="item" id="repeater_wlname">Wireless Name of Range Extender</b>
                <input type="radio" name="wlNameMode" value="copy" checked id="copy" onclick="changeSsid(0)">
                <span id="t_copy">Copy from Root AP</span>
            </p>
            <p>
                <b class="item">&nbsp;</b>
                <input type="text" id="copySSID" readonly>
            </p>
            <p>
                <b class="item">&nbsp;</b>
                <input type="radio" name="wlNameMode" value="custom" id="custom" onclick="changeSsid(1)">
                <span id="t_custom">Customize</span>
            </p>
            <p>
                <b class="item">&nbsp;</b>
                <input type="text" id="customSSID" disabled>
            </p>
        </div>
    </div>

</div>
</div>
<p class="bl"></p>
<p class="tail ctr">
    <input type="button" class="button L T T_back" value="Back" onclick="goPrev()" />
    <input type="button" class="button L T T_next" value="Next" onclick="goNext()" />
</p>
</div>
<script language="javascript" type="text/javascript">
var wlanObj, wdsObj;
if (INCLUDE_FORCE_REGION_SELECT)
{
	var g_selectedIndex ;
}


(function() {
    $.loadHelpFrame("QsWlClientHelpRpm.htm");
    if (!$.mainParam) return $.loadMain("qsStart.htm");

    /*if (INCLUDE_LAN_WLAN_DUALBAND)
    {
        $.addClass($.id("et"), "nd");
    }
    else
    {
        $.addClass($.id("et_2g"), "nd");
    }*/
    var requestArgs = ["name", "X_TP_Band", "enable", "standard", "SSID", "regulatoryDomain", "possibleChannels","autoChannelEnable", "channel", "X_TP_PreSharedKey", "X_TP_Bandwidth", "X_TP_ShowRegionSelectionOnWeb", "TransmitPower"];

    if (INCLUDE_FORCE_REGION_SELECT)
    {
	    requestArgs.push("X_TP_DomainSetByUser");
    }

    if (INCLUDE_WLAN_REGION_LIST)
    {
	    requestArgs.push("X_TP_SupportedRegionList");
    }

    if (!$.qm[$.curPage].__v) {
        $.qd.wl = {};
        var wls = $.act(ACT_GL, LAN_WLAN, null, null, requestArgs);
        if ($.exe()) return;

        if ($.local) {
            wls = [{
                name: "wlan0",
                enable: "1",
                standard: "n",
                SSID: "TPLINK_332265",
                regulatoryDomain: "CN ",
                possibleChannels: "1-13",
                autoChannelEnable: "1",
                channel: "11",
                X_TP_PreSharedKey: "12345678"
            }];
        }
        if (INCLUDE_LAN_WLAN_DUALBAND)
        {
            $.each(wls, function(arg, index) {
                if ($.mainParam.band == this.X_TP_Band)
                {
                    wlanObj = this;
                    return;
                }
            });
        }
        else
        {
            wlanObj = wls[0];
        }
        $.qd.wl.stack = wlanObj.__stack;
        $.qd.wl.en = 1;
        $.qd.wl.ssid = wlanObj.SSID;
        $.qd.wl.domain = wlanObj.regulatoryDomain;
        //$.qd.wl5g.domain = $.qd.wl.domain;
        $.qd.wl.chnns = wlanObj.possibleChannels;
        $.qd.wl.autoChan = wlanObj.autoChannelEnable;
        $.qd.wl.chnn = wlanObj.channel; //auto Channel // channel
        $.qd.wl.mode = wlanObj.standard;
        $.qd.wl.bandwidth = wlanObj.X_TP_Bandwidth;
        $.qd.wl.ssidAdver = wlanObj.SSIDAdvertisementEnabled; //
	$.qd.wl.showRegion = wlanObj.X_TP_ShowRegionSelectionOnWeb;
	$.qd.wl.power = wlanObj.transmitPower;
	if (INCLUDE_WLAN_REGION_LIST)
	{
		$.qd.wl.supportedRegionList = wlanObj.X_TP_SupportedRegionList;
	}

	if (INCLUDE_FORCE_REGION_SELECT)
	{
		$.qd.wl.setByUser = wlanObj.X_TP_DomainSetByUser;
	}

        //$.qd.wl.pwd = wlanObj.X_TP_PreSharedKey;
        curChannel = wlanObj.channel;

        $.qd.wds = {};
        wdsObj = $.act(ACT_GET, LAN_WLAN_WDSBRIDGE, wlanObj.__stack, null, ["BridgeEnable", "BridgeAddrMode", "BridgeBSSID", "BridgeSSID", "BridgeAuthMode", "BridgeEncryptMode", "BridgeKey", "BridgeWepKeyIndex"]);
        if ($.exe()) return;

        $.qd.wds.enable = 1; //wdsObj.bridgeEnable;
        if (INCLUDE_LAN_WLAN_WDS_DETECT) {
            $.qd.wds.addrMode = wdsObj.bridgeAddrMode;
        }
        $.qd.wds.bssid = wdsObj.bridgeBSSID;
        $.qd.wds.ssid = wdsObj.bridgeSSID;
        $.qd.wds.authMode = wdsObj.bridgeAuthMode;
        $.qd.wds.encryptMode = wdsObj.bridgeEncryptMode;
        $.qd.wds.key = wdsObj.bridgeKey;
        $.qd.wds.wepKeyIndex = wdsObj.bridgeWepKeyIndex;
    }

    initRegionList($.qd.wl.domain);
    if (INCLUDE_FORCE_REGION_SELECT && $.qd.wl.setByUser == 0 && $.qd.wl.showRegion == 1)
    {
	    var t_opt = $.c("option");
	    t_opt.text = "--Please Select--"; 
	    if (s_str.noselect)
		    t_opt.text = s_str.noselect ;
	    t_opt.value =  -1;

	    $.id("region").add(t_opt);
	    $.id("region").value = -1;
	    //$.id("region").remove(t_opt);
	    $.addClass(t_opt, "nd");
    }
    setPowerList($.qd.wl.domain);
    $.id("txpower").value = $.qd.wl.power;
    changePower();

    initParam();
    initWDS();

    if ($.qd.sysMode == 'Repeater') {
        $.removeClass($.id('rangeExtend'), "nd");

        $.id('copySSID').value = ($.mainParam.SSID || $.qd.wds.ssid);
        $.id('customSSID').value = $.mainParam.SSID ? ($.mainParam.SSID + '_Ext') : $.qd.wl.ssid;
        if ($.qd.wl && $.qd.wl.customize) {
            changeSsid(1);
            $.id('custom').checked = true;
            $.id('customSSID').value = $.qd.wl.ssid;
        }
    }
})();
</script>
<script language="javascript" type="text/javascript">$.styleInputElements();</script>
