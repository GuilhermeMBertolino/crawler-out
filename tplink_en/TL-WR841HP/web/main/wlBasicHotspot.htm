<style type="text/css">
p b {
	line-height: 23px;
	height: 23px;
	vertical-align: middle;
}
input[type="text"] {
	height: 19px;
}

.save_line {
	padding-top: 25px;
	padding-bottom: 5px;
}	

.button.T_save {
	margin-left: 0px; 
}
.scanner_line {
	margin: 10px 0;
}
#t_scanner, #cpssid {
	margin-left: 0px;
}
</style>

<script language="javascript" type="text/javascript">

var mainChannel;
var authMode, encryptMode;
var cfgModified = false;

var regionInfo = new Array(
	"Albania", 1, 13, 2,
	"Algeria", 1, 13, 2,
	"Argentina", 1, 13, 2,
	"Armenia", 1, 13, 2,
	"Australia", 1, 13, 2,
	"Austria", 1, 13, 2,
	"Azerbaijan", 1, 13, 2,
	"Bahrain", 1, 13, 2,
	"Belarus", 1, 13, 2,
	"Belgium", 1, 13, 2,
	"Belize", 1, 13, 2,
	"Bolivia", 1, 13, 2,
	"Brazil", 1, 13, 2,
	"Brunei Darussalam", 1, 13, 2,
	"Bulgaria", 1, 13, 2,
	"Cambodia", 1, 13, 2,
	"Canada", 1, 11, 2,
	"Chile", 1, 13, 2,
	"China", 1, 13, 1,
	"Colombia", 1, 11, 2,
	"Costa Rica", 1, 13, 2,
	"Croatia", 1, 13, 2,
	"Cyprus", 1, 13, 2,
	"Czech Republic", 1, 13, 2,
	"Denmark", 1, 13, 2,
	"Dominican Republic", 1, 11, 2,
	"Ecuador", 1, 13, 2,
	"Egypt", 1, 13, 2,
	"El Salvador", 1, 13, 2,
	"Estonia", 1, 13, 2,
	"Finland", 1, 13, 2,
	"France", 1, 13, 2,
	"Georgia", 1, 13, 2,
	"Germany", 1, 13, 2,
	"Greece", 1, 13, 2,
	"Guatemala", 1, 11, 2,
	"Honduras", 1, 13, 2,
	"Hong Kong", 1, 13, 2,
	"Hungary", 1, 13, 2,
	"Iceland", 1, 13, 2,
	"India", 1, 13, 2,
	"Indonesia", 1, 13, 2,
	"Iran", 1, 13, 2,
	"Iraq", 1, 13, 2,
    "Ireland", 1, 13, 2,
	"Israel", 1, 13, 2,
	"Italy", 1, 13, 2,
	"Japan", 1, 13, 2,
	"Jordan", 1, 13, 2,
	"Kazakhstan", 1, 13, 2,
	"North Korea", 1, 13, 2,
	"Korea Republic", 1, 13, 2,
	"Kuwait", 1, 13, 2,
	"Latvia", 1, 13, 2,
	"Lebanon", 1, 13, 2,
	"Liechtenstein", 1, 13, 2,
	"Lithuania", 1, 13, 2,
	"Luxembourg", 1, 13, 2,
	"Macau", 1, 13, 2,
	"Macedonia", 1, 13, 2,
	"Malaysia", 1, 13, 2,
	"Malta", 1, 13, 2,
	"Mexico", 1, 11, 2,
	"Monaco", 1, 13, 2,
	"Morocco", 1, 13, 2,
	"Netherlands", 1, 13, 2,
	"New Zealand", 1, 13, 2,
	"Norway", 1, 13, 2,
	"Oman", 1, 13, 2,
	"Pakistan", 1, 13, 2,
	"Panama", 1, 11, 2,
    "Paraguay", 1, 13, 2,
	"Peru", 1, 13, 2,
	"Philippines", 1, 13, 2,
	"Poland", 1, 13, 2,
	"Portugal", 1, 13, 2,
	"Puerto Rico", 1, 11, 2,
	"Qatar", 1, 13, 2,
	"Romania", 1, 13, 2,
	"Russia", 1, 13, 2,
	"Saudi Arabia", 1, 13, 2,
	"Singapore", 1, 13, 2,
	"Serbia", 1, 13, 2,
	"Slovak Republic", 1, 13, 2,
	"Slovenia", 1, 13, 2,
	"South Africa", 1, 13, 2,
	"Spain", 1, 13, 2,
	"Sweden", 1, 13, 2,
	"Switzerland", 1, 13, 2,
	"Syrian Arab Republic", 1, 13, 2,
	"Taiwan", 1, 11, 2,
	"Thailand", 1, 13, 2,
	"Trinidad And Tobago", 1, 13, 2,
	"Tunisia", 1, 13, 2,
	"Turkey", 1, 13, 2,
	"Ukraine", 1, 13, 2,
	"United Arab Emirates", 1, 13, 2,
	"United Kingdom", 1, 13, 2,
	"United States", 1, 11, 2,
	"Uruguay", 1, 13, 2,
	"Uzbekistan", 1, 11, 2,
	"Venezuela", 1, 11, 2,
	"Viet Nam", 1, 13, 2,
	"Yemen", 1, 13, 2,
	"Zimbabwe", 1, 13, 2
);

var regionCodeInfo = new Array(
	[8, "AL ", 0,3, "ALBANIA"],
	[12,"DZ ", 0,3, "ALGERIA"],
	[32,"AR ", 0,3, "ARGENTINA"],
	[51,"AM ", 0,3,"ARMENIA"],
	[36,"AU ", 0,3, "AUSTRALIA"],
	[40,"AT ", 0,3,"AUSTRIA"],
	[31,"AZ ", 0,3,"AZERBAIJAN"],
	[48,"BH ", 0,3,"BAHRAIN"],
	[112,"BY", 0,3,"BELARUS"],
	[56,"BE ", 0,3,"BELGIUM"],
	[84,"BZ ", 0,8,"BELIZE"],
	[68,"BO ", 0,8,"BOLIVIA"],
	[76,"BR ", 0,3,"BRAZIL"],
	[96,"BN ", 0,3,"BRUNEI DARUSSALAM"],
	[100,"BG ", 0,3,"BULGARIA"],
	[116,"KH ", 0,3,"CAMBODIA"],
	[124,"CA ", 0,1,"CANADA"],
	[152,"CL ", 0,3,"CHILE"],
	[156,"CN ", 0,3,"CHINA"],
	[170,"CO ", 0,1,"COLOMBIA"],
	[188,"CR ", 0,3,"COSTA RICA"],
	[191,"HR ", 0,3,"CROATIA"],
	[196,"CY ", 0,3,"CYPRUS"],
	[203,"CZ ", 0,3,"CZECH REPUBLIC"],
	[208,"DK ", 0,3,"DENMARK"],
	[214,"DO ", 0,1,"DOMINICAN REPUBLIC"],
	[218,"EC ", 0,3,"ECUADOR"],
	[818,"EG ", 0,3,"EGYPT"],
	[222,"SV ", 0,3,"EL SALVADOR"],
	[233,"EE ", 0,3,"ESTONIA"],
	[246,"FI ", 0,3,"FINLAND"],
	[250,"FR ", 0,3,"FRANCE"],
	[268,"GE ", 0,3,"GEORGIA"],
	[276,"DE ", 0,3,"GERMANY"],
	[300,"GR ", 0,3,"GREECE"],
	[320,"GT ", 0,1,"GUATEMALA"],
	[340,"HN ", 0,3,"HONDURAS"],
	[344,"HK ", 0,3,"HONG KONG"],
	[348,"HU ", 0,3,"HUNGARY"],
	[352,"IS ", 0,3,"ICELAND"],
	[356,"IN ", 0,3,"INDIA"],
	[360,"ID ", 0,3,"INDONESIA"],
	[364,"IR ", 0,3,"IRAN"],
    [368,"IQ",  0,3, "IRAQ"],
	[372,"IE ", 0,3,"IRELAND"],
	[376,"IL ", 0,7,"ISRAEL"],
	[380,"IT ", 0,3,"ITALY"],
	[392,"JP ", 3,6,"JAPAN"],
	[400,"JO ", 0,3,"JORDAN"],
	[398,"KZ ", 0,3,"KAZAKHSTAN"],
	[410,"KP ", 2,3,"NORTH KOREA"],
	[408,"KR ", 2,3,"KOREA REPUBLIC"],
	[414,"KW ", 0,3,"KUWAIT"],
	[428,"LV ", 0,3,"LATVIA"],
	[422,"LB ", 0,3,"LEBANON"],
	[438,"LI ", 0,3,"LIECHTENSTEIN"],
	[440,"LT ", 0,3,"LITHUANIA"],
	[442,"LU ", 0,3,"LUXEMBOURG"],
	[446,"MO ", 0,3,"MACAU"],
	[807,"MK ", 0,3,"MACEDONIA"],
	[458,"MY ", 0,3,"MALAYSIA"],
	[470,"MT", 0,3, "MALTA",],
	[484,"MX ", 0,1,"MEXICO"],
	[492,"MC ", 0,3,"MONACO"],
	[504,"MA ", 0,3,"MOROCCO"],
	[528,"NL ", 0,3,"NETHERLANDS"],
	[554,"NZ ", 0,8,"NEW ZEALAND"],
	[578,"NO ", 0,3,"NORWAY"],
	[512,"OM ", 0,3,"OMAN"],
	[586,"PK ", 0,3,"PAKISTAN"],
	[591,"PA ", 0,1,"PANAMA"],
    [600,"PY",  0,3,"PARAGUAY"],
	[604,"PE ", 0,3,"PERU"],
	[608,"PH ", 0,3,"PHILIPPINES"],
	[616,"PL ", 0,3,"POLAND"],
	[620,"PT ", 0,3,"PORTUGAL"],
	[630,"PR ", 0,1,"PUERTO RICO"],
	[634,"QA ", 0,3,"QATAR"],
	[642,"RO ", 0,3,"ROMANIA"],
	[643,"RU ", 0,3,"RUSSIA"],
	[682,"SA ", 0,3,"SAUDI ARABIA"],
	[702,"SG ", 4,3,"SINGAPORE"],
	[688,"RS ", 0,3,"SERBIA"],
	[703,"SK ", 0,3,"SLOVAK REPUBLIC"],
	[705,"SI ", 0,3,"SLOVENIA"],
	[710,"ZA ", 0,3,"SOUTH AFRICA"],
	[724,"ES ", 0,3,"SPAIN"],
	[752,"SE ", 0,3,"SWEDEN"],
	[756,"CH ", 0,3,"SWITZERLAND"],
	[760,"SY ", 0,3,"SYRIAN ARAB REPUBLIC"],
	[158,"TW ", 1,1,"TAIWAN"],
	[764,"TH ", 0,3,"THAILAND"],
	[780,"TT ", 0,3,"TRINIDAD AND TOBAGO"],
	[788,"TN ", 0,3,"TUNISIA"],
	[792,"TR ", 0,3,"TURKEY"],
	[804,"UA ", 0,3,"UKRAINE"],
	[784,"AE ", 0,3,"UNITED ARAB EMIRATES"],
	[826,"GB ", 0,3,"UNITED KINGDOM"],
	[840,"US ", 0,1,"UNITED STATES"],
	[858,"UY ", 0,3,"URUGUAY"],
	[860,"UZ ", 0,1,"UZBEKISTAN"],
	[862,"VE ", 0,8,"VENEZUELA"],
	[704,"VN ", 0,3,"VIET NAM"],
	[887,"YE ", 0,3,"YEMEN"],
	[716,"ZW ", 0,3,"ZIMBABWE"]
);

function isRegionSupported(region)
{
	if (INCLUDE_WLAN_REGION_LIST)
	{
		var supportedRegionList = wlanObj.X_TP_SupportedRegionList;
		var listLen = supportedRegionList.length;
		if (supportedRegionList == '*' || supportedRegionList == '')
		{
			return true;
		}
		for (var i = 0; i < listLen; i += 2)
		{
			var re = new RegExp("\s*" + supportedRegionList.substr(i, 2) + "\s*");
			if (re.test(region))
			{
				return true;
			}
		}
		return false;
	}
	else
	{
		return true;
	}
}

function toggleHelp(cname, show)
{
	var toggle = show ? $.removeClass : $.addClass;

	if (typeof parent.frames["helpFrame"].document.getElementsByClassName !== 'function')
	{
		parent.frames["helpFrame"].document.getElementsByClassName = function(className, element) {
			var children = parent.frames["helpFrame"].document.getElementsByTagName('*');
			var elements = new Array();
			for (var i = 0; i < children.length; i++)
			{
				var child = children[i];
				var classNameList = child.className.split(' ');
				for (var j = 0; j < classNameList.length; j++)
				{
					if (classNameList[j] == className)
					{
						elements.push(child);
						break;
					}
				}
			}
			return elements;
		}
	}

	var regionHelpElements = parent.frames["helpFrame"].document.getElementsByClassName(cname);

	if (regionHelpElements.length == 0)
	{
		setTimeout(function() { toggleHelp(cname, show); }, 100);
		return;
	}

	for (var index = 0; index < regionHelpElements.length; index++)
	{
		toggle(regionHelpElements[index], "nd");
	}

}

function initRegionList()
{
	var region = $.id("region");
	var selectedIndex = 0;
	var optionIndex = 0;

	for(i=0; i < (regionInfo.length / 4); i++)
	{
		if (isRegionSupported(regionCodeInfo[i][1]) == false)
		{
			continue;
		}
		var opt=$.c("option");
		opt.value=i;
		if (country_str && country_str[i])
		{
			opt.text=country_str[i];
		}
		else
		{
			opt.text=regionInfo[4 * i];
		}
		try {
			region.add(opt,null);
		} catch(e) {
			region.add(opt);
		}

		if (regionCodeInfo[i][1] == wlanObj.regulatoryDomain)
		{
			selectedIndex=optionIndex;
		}
		optionIndex++;
	}

	toggleHelp('ext24g nd', false);
	toggleHelp('ext_ssid24g', false);
	toggleHelp('ext_cpssid', false);
	toggleHelp('ext_sec', false);

	if (showRegion == 1)
	{
		$.removeClass($.id("regionBox"), "nd");
		$.removeClass($.id("regionWarning"), "nd");
		toggleHelp('region_help', true);
	}

	region.selectedIndex=selectedIndex;
}

function changeRegion()
{
	isChangeRegion = 1;
}

function hide_wep()
{
	$.addClass($.id("wep_security"),"nd");
	$.addClass($.id("password"),"nd");

	$.id("connWepidx").disabled=true;
	$.id("authType").disabled=true;
	$.id("wepkeyFormat").disabled=true;
	$.id("connKeyText").disabled=true;
}

function show_wep()
{
	$.removeClass($.id("wep_security"),"nd");
	$.removeClass($.id("password"),"nd");

	$.id("connWepidx").disabled=false;
	$.id("authType").disabled=false;
	$.id("wepkeyFormat").disabled=false;
	$.id("connKeyText").disabled=false;
}

function hide_psk()
{
	$.addClass($.id("wpa_tkip_notice"),"nd");
	$.addClass($.id("password"),"nd");
	$.id("connKeyText").disabled=true;
}

function show_psk()
{
	if ( encryptMode != "TKIPEncryption")
	{
		encryptMode="AESEncryption";
	}
	else
	{
		$.removeClass($.id("wpa_tkip_notice"),"nd");
	}
	$.removeClass($.id("password"),"nd");
	$.id("connKeyText").disabled=false;
}

function initParam()
{
	if (!$.mainParam)
	{
		return;
	}

	wlanObj.SSID=$.mainParam.ssid;
	wlanObj.standard=$.mainParam.standard;
	wlanObj.channel=$.mainParam.channel;
	wlanObj.autoChannelEnable=$.mainParam.autoChannel;
	wlanObj.X_TP_Bandwidth=$.mainParam.bandWidth;

	if(!INCLUDE_LAN_WLAN_HWSWITCH)
	{
		wlanObj.enable=$.mainParam.apEn;
	}

	wlanObj.SSIDAdvertisementEnabled=$.mainParam.SSIDAdvertisementEnabled;
	
	if(INCLUDE_LOCK_TO_AP)
	{
		wdsObj.bridgeLockToAPEnable=$.mainParam.lockToAP;	
	}
}

function getParam()
{
	beaconType = wlanObj.beaconType;
	basicAuthenticationMode = wlanObj.basicAuthenticationMode;
	WEPKeyIndex = wlanObj.WEPKeyIndex;

	$.each(wepList,function(arg,index){
		wepKeyArray[index] = this.WEPKey;
	});

	wepLevel = wlanObj.WEPEncryptionLevel.split(",");
	basicEncryptionModes = wlanObj.basicEncryptionModes;
	WPAAuthenticationMode = wlanObj.WPAAuthenticationMode;
	WPAEncryptionModes = wlanObj.WPAEncryptionModes;
	IEEE11iAuthenticationMode = wlanObj.IEEE11iAuthenticationMode;
	IEEE11iEncryptionModes = wlanObj.IEEE11iEncryptionModes;
	X_TP_PreSharedKey = wlanObj.X_TP_PreSharedKey;
	X_TP_GroupKeyUpdateInterval = wlanObj.X_TP_GroupKeyUpdateInterval;
	X_TP_RadiusServerIP = wlanObj.X_TP_RadiusServerIP;
	X_TP_RadiusServerPort = wlanObj.X_TP_RadiusServerPort;
	X_TP_RadiusServerPassword = wlanObj.X_TP_RadiusServerPassword;
}

function changeSec()
{
	if ("wep" == $.id("sec_select").value)
	{
		$.removeClass($.id("wep_idx"),"nd");
	}
	else
	{
		$.addClass($.id("wep_idx"),"nd");
	}
	
	if ("none" == $.id("sec_select").value)
	{
		$.id("extKeyText").disabled=true;
		$.id("extKeyText").value="";
		
	}
	else
	{
		$.id("extKeyText").disabled=false;
	}
}

function changeConnSec()
{		
	if ($.id("host_re").checked == false)
	{
		if ("wep" == $.id("keyType").value)
		{
			hide_psk();
			show_wep();
		}
		else if ("none" == $.id("keyType").value)
		{
			hide_psk();
			hide_wep();
		}
		else
		{
			hide_wep();
			show_psk();
		}	
		
		$.id("keyType").disabled = true;
		$.id("bridgeSSID").disabled = true;
		$.id("t_scanner").disabled = true;	
	}
	else
	{
		$.id("connKeyText").disabled = false;
		$.id("keyType").disabled = false;
		$.id("bridgeSSID").disabled = false;
		$.id("wep_security").disabled = false;
		$.id("t_scanner").disabled = false;
		
		if ("wep" == $.id("keyType").value)
		{
			hide_psk();
			show_wep();
		}
		else if ("none" == $.id("keyType").value)
		{
			hide_psk();
			hide_wep();
		}
		else
		{
			hide_wep();
			show_psk();
		}	
	
	}

	cfgModified  =  true;
}

if(INCLUDE_LOCK_TO_AP) {
function changeLockAp()
{		
	if ($.id("lockap").checked == false)
	{
		$.id("bridgeBSSID").disabled=true;	
	}
	else
	{
		$.id("bridgeBSSID").disabled=false;
	}
}
}

function initWDS()
{
	if (1 == wdsObj.bridgeEnable || $.mainParam)
	{
		$.id("host_re").checked = true;
	}
	else
	{
		$.id("host_re").checked = false;
	}
	
	if(INCLUDE_LOCK_TO_AP){
	if(1==wdsObj.bridgeLockToAPEnable)
		$.id("lockap").checked=true;
	else
		$.id("lockap").checked=false;
	}
	
	if ($.mainParam && $.mainParam.wdsExist == 1)
	{
		$.id("bridgeSSID").value = $.mainParam.SSID;
		$.id("bridgeBSSID").value = $.mainParam.BSSID;
		mainChannel = $.mainParam.channel;

		if ($.mainParam.authMode == 0 /*"Open"*/ && $.mainParam.wepStatus == 1/*"None"*/)
		{
			$.id("keyType").selectedIndex = 0;
		}
		else if($.mainParam.wepStatus == 0/*"WEPEncryption"*/ || $.mainParam.authMode == 2)
		{
			$.id("keyType").selectedIndex = 3;
			if($.mainParam.authMode == 1 /*"SharedAuthentication"*/)
			{
				$.id("authType").selectedIndex=1;
			}
			else if($.mainParam.authMode == 0 /*"Open"*/)
			{
				$.id("authType").selectedIndex = 0;
			}

			$.id("connWepidx").selectedIndex = wdsObj.bridgeWepKeyIndex - 1;
		}
		else
		{
			
			if ($.mainParam.authMode == 3 || $.mainParam.authMode == 5 || $.mainParam.authMode == 4 /*"PSKAuthentication"*/)
			{
				$.id("keyType").selectedIndex = 1;
			}
			else if ($.mainParam.authMode == 6 || $.mainParam.authMode == 7 /*"PSK2Authentication"*/ )
			{
				$.id("keyType").selectedIndex=2;
			}
			else 
			{
				$.id("keyType").selectedIndex=3;
			}
		}
		
		if ($.id("keyType").value == "none")
		{
			authMode = "Open";
			encryptMode = "None";
		}
		else if($.id("keyType").value == "wep")
		{
			encryptMode = "WEPEncryption";
			if ($.id("authType").value == "open")
			{
				authMode = "Open";
			}
			else
			{
				qauthMode = "SharedAuthentication";
			}
		}
		else if ($.id("keyType").value == "wpa")
		{
			authMode = "PSKAuthentication";
			encryptMode = "AESEncryption";
		}
		else if($.id("keyType").value == "wpa2")
		{
			authMode = "PSK2Authentication";
			encryptMode = "AESEncryption";
		}		
		else
		{
			authMode = "PSK2Authentication";
			encryptMode = "AESEncryption";
		}
		
		if ($.mainParam.wepStatus == 4)
		{	
			if($.mainParam.authMode == 3 || $.mainParam.authMode == 5 || $.mainParam.authMode == 4/*"PSKAuthentication"*/)
			{
				authMode = "PSKAuthentication";
			}
			else 
			{
				authMode = "PSK2Authentication";
			}
				
			encryptMode="TKIPEncryption";
		}
			
	}
	else
	{
		$.id("bridgeSSID").value = wdsObj.bridgeSSID;
		$.id("bridgeBSSID").value = wdsObj.bridgeBSSID;
		//no scan param input, reset channel to active channel scanning
		if (wlanObj.channel != 6)
		{
			mainChannel = 6;
		}
		else
		{
			mainChannel = 5;
		}		
		authMode = wdsObj.BridgeAuthMode;
		encryptMode = wdsObj.bridgeEncryptMode;
	
		if (wdsObj.bridgeAuthMode == "Open" && wdsObj.bridgeEncryptMode == "None")
		{
			$.id("keyType").selectedIndex = 0;
			$.id("connKeyText").value = "";
		}
		else if (wdsObj.bridgeEncryptMode == "WEPEncryption")
		{
			$.id("keyType").selectedIndex = 3;
			if (wdsObj.bridgeAuthMode == "SharedAuthentication")
			{
				$.id("authType").selectedIndex = 1;
			}
			else if(wdsObj.bridgeAuthMode == "Open")
			{
				$.id("authType").selectedIndex = 0;
			}

			if (wdsObj.bridgeKey.length == 5 || wdsObj.bridgeKey.length == 13 || wdsObj.bridgeKey.length == 16)
			{
            	$.id("wepkeyFormat").selectedIndex = 0;
			}
			else if (wdsObj.bridgeKey.length == 10 || wdsObj.bridgeKey.length == 26 || wdsObj.bridgeKey.length == 32)
			{
				$.id("wepkeyFormat").selectedIndex = 1;
			}

			$.id("connWepidx").selectedIndex = wdsObj.bridgeWepKeyIndex - 1;
			$.id("connKeyText").value = wdsObj.bridgeKey;
		}
		else if (wdsObj.bridgeAuthMode == "PSKAuthentication")
		{
			$.id("keyType").selectedIndex = 1;
			$.id("connKeyText").value = wdsObj.bridgeKey;
		}
		else if (wdsObj.bridgeAuthMode == "PSK2Authentication")
		{
			$.id("keyType").selectedIndex = 2;
			$.id("connKeyText").value = wdsObj.bridgeKey;
		}	
		else
		{
			$.id("keyType").selectedIndex = 3;				
			$.id("connKeyText").value = wdsObj.bridgeKey;
		}
	}
				
	changeConnSec();
	if (INCLUDE_LOCK_TO_AP)
	{
		changeLockAp();
	}		
}

function initShow()
{
	var i;
	var apSecSelection = $.id("sec_select");
	var opt = $.c("option");
	opt.value = "none";
	opt.text = s_str.noneEnc;
	apSecSelection.add(opt);

	opt = $.c("option");
	opt.value = "wpa";
	opt.text = s_str.wpa_psk;
	apSecSelection.add(opt);

	if (wpsObj.enable == 1)
	{
		$.removeClass($.id("wepWarning"), "nd");
	}
	else
	{
		opt = $.c("option");
		opt.value = "wep";
		opt.text = s_str.wepEnc;
		apSecSelection.add(opt);
	}

	if (INCLUDE_LAN_WLAN_WDS)
	{
		initWDS();
	}

	if (INCLUDE_LAN_WLAN_HWSWITCH)
	{
		$.addClass($.id("wifiswitch"), "nd");
	}
	else
	{
		if (1 == wlanObj.enable)
		{
			$.id("apen").checked=true;
		}
	}

	$.id("ssidBroadcast").checked = (1 == wlanObj.SSIDAdvertisementEnabled);

	$.id("extssid").value = wlanObj.SSID;
	
	if (beaconType == "Basic" && basicEncryptionModes == "None")
	{
		$.id("sec_select").value = "none";
	}
	else if (beaconType == "Basic" && basicEncryptionModes == "WEPEncryption")
	{
		$.id("sec_select").value = "wep";
		for (i = 1; i <= 4; i++)
		{
			if (wepKeyArray[i-1] != "")
			{
				$.id("extKeyText").value = wepKeyArray[i-1];
				$.id("extWepidx").value = i;
				break;
			}
		}		
	}
	else if (beaconType == "WPA")
	{
		if (WPAAuthenticationMode == "PSKAuthentication")
		{
			$.id("sec_select").value = "wpa";
		}
		else
		{
			$.id("sec_select").value = "wpa";

		}
		
		$.id("extKeyText").value = X_TP_PreSharedKey;
	}
	else if(beaconType == "11i" || beaconType == "WPAand11i")
	{
		if(IEEE11iAuthenticationMode == "PSKAuthentication")
			$.id("sec_select").value = "wpa";
		else
			$.id("sec_select").value = "wpa";
			
		$.id("extKeyText").value = X_TP_PreSharedKey;
	}
	else
	{
	}
		
	changeSec();
}

function apScan(obj)
{
	$.act(ACT_OP, ACT_OP_WLAN_SCAN, wlanObj.__stack);
	$.addLoading(obj);
	param = new Object();
	param.ssid = wlanObj.SSID;
	param.standard = wlanObj.standard;
	param.channel = wlanObj.channel;
	param.autoChannel = wlanObj.autoChannelEnable;
	param.bandWidth = wlanObj.X_TP_Bandwidth;
	param.multiMode = 3; //0 Router, 1 Repeater, 2 Client

	//param.apEn = $.id("apen").checked?1:0;
	param.apEn = 1;
	if(INCLUDE_LOCK_TO_AP)
	{
		param.lockToAP=$.id("lockap").checked?1:0;
	}	
	//param.SSIDAdvertisementEnabled = $.id("ssidBroadcast").checked?1:0;
	param.SSIDAdvertisementEnabled = wlanObj.SSIDAdvertisementEnabled;
	$.exe(function(ret){ if (!ret) $.loadMain("wlScan.htm",param)});
}

function isHex(str)
{
	str=str.toLowerCase();
	for(var i=0;i<str.length;i++)
	{
		if((str.charAt(i)>='0'&&str.charAt(i)<='9')||(str.charAt(i)>='a'&&str.charAt(i)<='f'))
			continue;
		else
		{
			$.alert(ERR_WLAN_WDS_HEX_KEY_INVALID);
			return false;
		}
	}
	if(parseInt(str,16)==0)
	{
		$.alert(ERR_WLAN_WDS_HEX_KEY_OUTRANGE);
		return false;
	}
	return true;
}

function checkWDS()
{
	var briSSID = $.id("bridgeSSID");
	var ssidLen = $.realLen(briSSID.value);

	if (ssidLen <= 0)
	{
		$.alert(ERR_WLAN_WDS_SSID_IS_EMPTY);
		briSSID.focus();
		briSSID.select();
		return false;
	}
	else if (ssidLen > 32)
	{
		$.alert(ERR_WLAN_WDS_SSID_LEN_OUTRANGE);
		briSSID.focus();
		briSSID.select();
		return false;
	}

	var bss = $.id("bridgeBSSID");
	if (bss.value.length == 0)
	{
		if (!(INCLUDE_LOCK_TO_AP && $.id("lockap").checked == false))
		{	
			$.alert(ERR_WLAN_WDS_BSSID_IS_EMPTY);
			bss.focus();
			bss.select();
			return false;
		}
	}
	else if ($.mac(bss.value, true))
	{
		$.alert(ERR_WLAN_WDS_BSSID_INVALID);
		bss.focus();
		bss.select();
		return false;
	}
	
	var key = $.id("connKeyText");
	if ($.id("keyType").value == "none")
	{
	}
	else if ($.id("keyType").value == "wep")
	{
        if ($.id("wepkeyFormat").value == "ascii")
		{ 
			if (key.value.length != 5 && key.value.length != 13 && key.value.length != 16)
			{
				$.alert(ERR_WLAN_WDS_ASCII_KEY_OUTRANGE);
				key.focus();
				key.select();
				return false;
			}
			else if($.asc(key.value,true))
			{
				$.alert(ERR_WLAN_WDS_ASCII_KEY_INVALID);
				key.focus();
				key.select();
				return false;				
			}
		}
        else if ($.id("wepkeyFormat").value == "hex")
		{
			if (key.value.length != 10 && key.value.length != 26 && key.value.length != 32)
			{
                $.alert(ERR_WLAN_WDS_HEX_KEY_OUTRANGE);
                key.focus();
                key.select();
                return false;
            }		
			else if(!isHex(key.value))
			{
				key.focus();
				key.select();
				return false;			
			}				
		}
	}
	else
	{
		if (key.value.length > 64 || key.value.length < 8)
		{
			$.alert(ERR_WLAN_WDS_PSK_OUTRANGE);
			key.focus();
			key.select();
			return false;
		}
		else if (key.value.length == 64)
		{
			if (!isHex(key.value))
			{
				key.focus();
				key.select();
				return false;
			}
		}
		else
		{
			if ($.asc(key.value,true))
			{
				$.alert(ERR_WLAN_WDS_ASCII_KEY_INVALID);
				key.focus();
				key.select();
				return false;
			}
		}
	}

	return true;
}

function doConnSubmit()
{
	var index = 0;
	var ssid = $.id("bridgeSSID").value;

	if (INCLUDE_LAN_WLAN_WDS)
	{
		var wdsEn = $.id("host_re").checked ? 1 : 0;
	}
	
	if(INCLUDE_LOCK_TO_AP){
		var lockAPEn=$.id("lockap").checked?1:0;
	}
	
	var vapIndex = 0;

	if ($.id("keyType").value == "none")
	{
		authMode = "Open";
		encryptMode = "None";
	}
	else if($.id("keyType").value == "wep")
	{
		encryptMode = "WEPEncryption";
		if($.id("authType").value == "open")
		{
			authMode = "Open";
		}
		else
		{
			authMode = "SharedAuthentication";
		}
	}
	else if($.id("keyType").value == "wpa")
	{
		authMode="PSKAuthentication";
//		encryptMode="AESEncryption";
	}
	else if($.id("keyType").value == "wpa2")
	{
		authMode = "PSK2Authentication";
//		encryptMode = "AESEncryption";
	}		
	else
	{
		authMode = "PSK2Authentication";
//		encryptMode = "AESEncryption";
	}

	if (INCLUDE_LAN_WLAN_WDS)
	{
		if (1 == wdsEn)
		{
			if (INCLUDE_LOCK_TO_AP)
			{
				$.act(ACT_SET, LAN_WLAN_WDSBRIDGE, wdsObj.__stack, null,
					["BridgeEnable=" + wdsEn, "BridgeBSSID=" + $.id("bridgeBSSID").value,
					 "BridgeSSID=" + $.id("bridgeSSID").value, "BridgeAuthMode=" + authMode,
					 "BridgeEncryptMode=" + encryptMode, "BridgeKey=" + $.id("connKeyText").value,
					 "BridgeWepKeyIndex=" + $.id("connWepidx").value, "bridgeLockToAPEnable="+lockAPEn]);			
			}
			else
			{			
				$.act(ACT_SET, LAN_WLAN_WDSBRIDGE, wdsObj.__stack, null,
					["BridgeEnable=" + wdsEn, "BridgeBSSID=" + $.id("bridgeBSSID").value,
					 "BridgeSSID=" + $.id("bridgeSSID").value, "BridgeAuthMode=" + authMode,
					 "BridgeEncryptMode=" + encryptMode, "BridgeKey=" + $.id("connKeyText").value,
					 "BridgeWepKeyIndex=" + $.id("connWepidx").value]);
			}
		}
		else
		{
			$.act(ACT_SET, LAN_WLAN_WDSBRIDGE, wdsObj.__stack, null, ["BridgeEnable=" + wdsEn]);
		}
	}

    if ($.id("keyType").value != "none") 
	{
        if (encryptMode == 'WEPEncryption') 
		{
			$.each(wepList, function(arg, index) {
				var key;
				if ($.id("connWepidx").value != (index + 1))
				{
					key="";
				}
				else
				{
					key=$.id("connKeyText").value;
				}
					
				$.act(ACT_SET, LAN_WLAN_WEPKEY, this.__stack, null, ["WEPKey=" + key]);
			});	

            $.act(ACT_SET, LAN_WLAN_WPS, wlanObj.__stack, null, ["enable=0"]);
        }

    }

	$.exe(function(ret)
	{
		if (!ret) 
		{
			$.removeLoading();
		}
		
		if (srcPage)
		{
			$.loadMain(srcPage);
		}
		else
		{
			$.reload();
		}
	});
}

function doConnSave(obj)
{
	if (INCLUDE_LAN_WLAN_WDS)
	{
		if(false == $.id("host_re").checked || true == checkWDS())
		{
		}
		else
		{
			return;
		}
	}		
	$.addLoading(obj);
	/* TO CHECK */
	doConnSubmit();
}

function checkParam()
{
	var extSSID=$.id("extssid");
	var ssidLen=$.realLen(extSSID.value);
	if(ssidLen<=0)
	{
		$.alert(ERR_WLAN_SSID_IS_EMPTY);
		extSSID.focus();
		extSSID.select();
		return false;
	}
	else if(ssidLen>32)
	{
		$.alert(ERR_WLAN_SSID_LEN_OUTRANGE);
		extSSID.focus();
		extSSID.select();
		return false;
	}

	var key=$.id("extKeyText");
	if($.id("sec_select").value=="none")
	{
	}
	else if($.id("sec_select").value=="wep")
	{
		if(key.value.length!=5&&key.value.length!=13&&key.value.length!=16&&key.value.length!=10&&key.value.length!=26&&key.value.length!=32)
		{
			$.alert(ERR_WLAN_WDS_ASCII_KEY_OUTRANGE);
			key.focus();
			key.select();
			return false;
		}
		else
		{
			if(key.value.length==5||key.value.length==13||key.value.length==16)
			{
				if($.asc(key.value,true))
				{
					$.alert(ERR_WLAN_WDS_ASCII_KEY_INVALID);
					key.focus();
					key.select();
					return false;				
				}
			}
			else if(key.value.length==10||key.value.length==26||key.value.length==32)
			{
				if(!isHex(key.value))
				{
					key.focus();
					key.select();
					return false;			
				}				
			}
		}		
	}
	else
	{
		if(key.value.length>64||key.value.length<8)
		{
			$.alert(ERR_WLAN_WPA_PSK_LENGTH_INVALID);
			key.focus();
			key.select();
			return false;
		}
		else if(key.value.length==64)
		{
			if(!isHex(key.value))
			{
				key.focus();
				key.select();
				return false;
			}
		}
		else
		{
			if($.asc(key.value,true))
			{
				$.alert(ERR_WLAN_WPA_PSK_ASCII_INVALID);
				key.focus();
				key.select();
				return false;
			}
		}
	}

	return true;
}
function doExtendSubmit()
{
	var ssid = $.id("extssid").value;
	var apEn = $.id("apen").checked ? 1 : 0;

	var ssidBcastEnabled = $.id("ssidBroadcast").checked ? 1 : 0;

	var vapIndex =0;
	
	$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, 
			["SSID=" + ssid, "Standard=" + wlanObj.standard, "SSIDAdvertisementEnabled=" + ssidBcastEnabled]);

	if ($.id("sec_select").value == "none")
	{
		$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, 
				["BeaconType=Basic", "BasicEncryptionModes=None", "BasicAuthenticationMode=None"]);
	}
	else if ($.id("sec_select").value == "wep")
	{
		var index=0;
		var authType;

		authType = "Auto";
		wepKeyIdx = $.id("extWepidx").value;

		$.each(wepList,function(arg,index) {
			var key;
			if ($.id("extWepidx").value != (index + 1))
			{
				key = "";
			}
			else
			{
				key = $.id("extKeyText").value;
			}
				
			$.act(ACT_SET, LAN_WLAN_WEPKEY, this.__stack, null, ["WEPKey="+key]);
		});		

		$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, 
				["BeaconType=Basic", "WEPKeyIndex=" + wepKeyIdx, "BasicAuthenticationMode=" + authType,
					"BasicEncryptionModes=WEPEncryption"]);
	}
	else if($.id("sec_select").value == "wpa")
	{
		var groupInterval = X_TP_GroupKeyUpdateInterval;
		var encryType = "AESEncryption";
		$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, 
				["BeaconType=WPAand11i", "WPAEncryptionModes=" + encryType,
				"WPAAuthenticationMode=PSKAuthentication","IEEE11iAuthenticationMode=PSKAuthentication",
				"IEEE11iEncryptionModes=" + encryType,"X_TP_PreSharedKey=" + $.id("extKeyText").value,
				"X_TP_GroupKeyUpdateInterval=" + groupInterval]);
	}
	
	$.exe(function(ret)
	{
		if (!ret) 
		{
			$.removeLoading();
		}
		
		if (srcPage)
		{
			$.loadMain(srcPage);
		}
		else
		{
			$.reload();
		}
	});
}

function doExtendSave(obj)
{
	if (false==$.id("apen").checked || true==checkParam())
	{
	}
	else
	{
		return;
	}
	
	$.addLoading(obj);
	doExtendSubmit();
}

function doRegionSave(obj)
{
	$.addLoading(obj);

	if (INCLUDE_FORCE_REGION_SELECT && $.id("region").value == -1)
	{
		if (typeof ERR_WLAN_REGION_IS_EMPTY == "undefined")
			alert("Please Select the Region !");
		else
			$.alert(ERR_WLAN_REGION_IS_EMPTY);
				
		$.id("region").focus();
		
		$.removeLoading();
		return false;
	}

	var domain = regionCodeInfo[$.id("region").value][1];
	if (wlanObj.regulatoryDomain != domain || 
			(INCLUDE_FORCE_REGION_SELECT && wlanObj.X_TP_DomainSetByUser == 0))
	{
		if (INCLUDE_FORCE_REGION_SELECT)
		{
			$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, 
					["X_TP_DomainSetByUser=1", "RegulatoryDomain=" + domain]);
		}
		else
		{
			$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, ["RegulatoryDomain=" + domain]);
		}
		$.exe(function(ret)
		{
			if (!ret) 
			{
				$.removeLoading();
			}
			
			if (srcPage)
			{
				$.loadMain(srcPage);
			}
			else
			{
				$.reload();
			}
		});
	}
	else
	{
		$.removeLoading();
	}
}
</script>
<p class="et T" id="et">Wireless Settings</p>
<div class="con1 M">
	<p class="ct"></p>
	<p class="bl"></p>

	<div class="con2 nd" id="regionBox">
		<p class="st T T_region" id="">Region</p><br/>
		<p>
			<b class="item T T_region">Region</b> 
			<select id="region" name="region" onchange="changeRegion();"> </select>
		</p>
		<p style="color: #c11c66">
			<b class="item T T_warn">Warning:</b>
			<span class="fl" style="width:60%">
				<span class="T" id="t_warn1">Ensure you select a correct country to conform local law.</span><br/>
				<span class="T" id="t_warn2">Incorrect settings may cause interference.</span>
			</span>
		</p>
		<p class="save_line">
			<b class="item">&nbsp;</b>
			<input type="button" class="button L T T_save" value="Save" id="regionSave" onclick="doRegionSave(this);" />
		</p>
		<p class="bl"></p>
	</div>

	<div class="con2">
		<p class="st T " id="t_cli">Client Setting</p><br/>

		<p class="nd">
			<b class="item T T_host_net">2.4GHz Network:</b>
			<input id="host_re" type="checkbox" onclick="changeConnSec();"/>
			<span class="T" id="t_enre">Connect to 2.4GHz Network</span>
		</p>

		<p>
			<b class="item T" id="t_brssid">SSID(to be bridged):</b>
			<input type="text" class="T" size="24" maxlength="32" id="bridgeSSID"/>
		</p>
		<p>
			<b class="item T" id="t_brbssid">MAC Address(to be bridged):</b>
			<input type="text" class="T" size="24" maxlength="32" id="bridgeBSSID"/>
						<input id="lockap" class="nd" type="checkbox" onclick="changeLockAp();"/><span id="t_lock_ap" class="T nd">Lock to AP</span>
		</p>
		<p class="scanner_line">
			<b class="item">&nbsp;</b>
			<input type="button" class="button XL T" id="t_scanner" value="Wireless Scanner" onclick="apScan(this);"/>
		</p>
		<p>
			<b class="item T T_security">Security:</b>
			<select id="keyType" name="keyType" style="width:160px" onchange="changeConnSec();">
				<option value="none" class="T T_noneEnc">No Security</option>
				<option value="wpa" selected>WPA-PSK</option>
				<option value="wpa2" selected>WPA2-PSK</option>
				<option value="wep" id="wep_option">WEP</option>
			</select>
		</p>

		<div id="wpa_tkip_notice">
			<p>
				<b class="item">&nbsp;</b>
				<span class="L fl warning" id="t_tkip_notice">
					We do not recommend using the TKIP encryption if this device operates in 802.11n mode due to the fact that TKIP is not supported by 802.11n specification.
				</span>
			</p>
		</div>
		<div id="wep_security">
			<p>
				<b class="item">&nbsp;</b>
				<span class="L fl warning" id="t_wep_notice">
				We do not recommend using the WEP encryption if this device operates in 802.11n mode due to the fact that WEP is not supported by 802.11n specification.
				</span>
			</p>
			<p>
				<b class="item T" id="t_wepidx">Index:</b>
				<select id="connWepidx" name="connWepidx" style="width:160px">
					<option value="1" class="T T_idx1" selected>1</option>
					<option value="2" class="T T_idx2">2</option>
					<option value="3" class="T T_idx3">3</option>
					<option value="4" class="T T_idx4">4</option>
				</select>
			</p>
			<p>
				<b class="item T T_authtype">WEP Authentication Type:</b>
				<select id="authType" name="authType" style="width:160px">
					<option class="T T_opensys" value="open">Open System</option>
					<option class="T T_sharekey" value="shared">Shared Key</option>
				</select>
			</p>
			<p>
				<b class="item T" id="t_weptype">WEP KeyFormat:</b>
				<select id="wepkeyFormat" name="wepkeyFormat" style="width:160px">
					<option class="T T_ascii" value="ascii">ASCII</option>
					<option class="T T_hex" value="hex">Hexadecimal</option>
				</select>
			</p>
		</div>
		<div id="password">
			<p>
				<b class="item T T_passwd">Password:</b>
				<input type=text class="T" id="connKeyText" size="24"/>
			</p>
		</div>

		<p class="save_line">
			<b class="item">&nbsp;</b>
			<input type="button" class="button L T T_save" value="Save" id="connectSave" onclick="doConnSave(this);" />
		</p>
		<p class="bl"></p>
	</div>

	<div class="con2">
		<p class="st T" id="t_ap">AP Setting</p><br/>
		<p class="nd">
			<b class="item T T_ext_net">Extended 2.4GHz:</b>
			<input id="apen" type="checkbox"/><span class="T" id="t_enre">Enable</span>
		</p>
		<p>
			<b class="item T" id="t_localwlname">Extended 2.4GHz SSID:</b>
			<input type="text" class="T" size="24" maxlength="32" id="extssid"/>
		</p>
		<p style="color: #c11c66" class="nd" id="wepWarning">

				<b class="item">&nbsp;</b>
				<span class="L fl warning" id="t_warn3">Note: WEP security, WPA/WPA2-Enterprise authentication and TKIP encryption are not supported with WPS enabled.</span>
		</p>
		<p>
			<b class="item T" id="t_ext_security">Extended 2.4GHz Security:</b>
			<select id="sec_select" name="sec_select" onchange="changeSec();" >
			</select>
		</p>
		<p>
			<b class="item T" id="t_ext_password">Extended 2.4GHz Password:</b>
			<input type=text class="T" id="extKeyText" size="24" />
		</p>
		<div id="wep_idx">
			<p>
				<b class="item">&nbsp;</b>
				<span class="L fl warning" id="t_ext_wep_notice">
				We do not recommend using the WEP encryption if this device operates in 802.11n mode due to the fact that WEP is not supported by 802.11n specification.
				</span>
			</p>
			<p>
				<b class="item T" id="t_ext_wepidx">Index:</b>
				<select id="extWepidx" name="extWepidx" style = "width:160px">
					<option value="1" class="T T_idx1" selected>1</option>
					<option value="2" class="T T_idx2">2</option>
					<option value="3" class="T T_idx3">3</option>
					<option value="4" class="T T_idx4">4</option>
				</select>
			</p>
		</div>

		<p> 
			<b class="item">&nbsp;</b> 
			<input id="ssidBroadcast" type="checkbox" value="1"/><span class="T T_enSsidBrc" id="t_enbcast">Enable SSID Broadcast</span>
		</p>

		<p class="save_line">
			<b class="item">&nbsp;</b>
			<input type="button" class="button L T T_save" value="Save" id="extendSave" onclick="doExtendSave(this);" />
		</p>

		<p class="bl"></p>
	</div>

</div>

<script language="javascript" type="text/javascript">
var srcPage = undefined;
var showRegion = 0;
var isChangeRegion = 0;
var wepKeyArray = new Array(4);
if ($.mainParam) 
{
	if ($.mainParam == "wlGuest.htm")
	{
		srcPage = "wlGuest.htm";
		$.mainParam = undefined;
	}
}

$.loadHelpFrame('WlanNetworkHelpRpm_RE.htm');
if (INCLUDE_LOCK_TO_AP)
{
	$.removeClass($.id("lockap"), "nd");
	$.removeClass($.id("t_lock_ap"), "nd");
}
var basicParams = [
		"AutoChannelEnable",
		"BasicAuthenticationMode",
		"BasicEncryptionModes",
		"beaconType",
		"Channel",
		"Enable",
		"IEEE11iAuthenticationMode",
		"IEEE11iEncryptionModes",
		"name",
		"PossibleChannels",
		"RegulatoryDomain",
		"SSID",
		"SSIDAdvertisementEnabled",
		"Standard",
		"WMMEnable",
		"WPAAuthenticationMode",
		"WEPEncryptionLevel",
		"WPAEncryptionModes",
		"WEPKeyIndex",
		"X_TP_Bandwidth",
		"X_TP_Configuration_Modified",
		"X_TP_FragmentThreshold",
		"X_TP_GroupKeyUpdateInterval",
		"X_TP_PreSharedKey",
		"X_TP_RadiusServerIP",
		"X_TP_RadiusServerPassword",
		"X_TP_RadiusServerPort",
		"X_TP_ShowRegionSelectionOnWeb"
		];

if (INCLUDE_FORCE_REGION_SELECT)
{
	basicParams.push("X_TP_DomainSetByUser");
}

if (INCLUDE_WLAN_REGION_LIST)
{
	basicParams.push("X_TP_SupportedRegionList");
}

var basicList = $.act(ACT_GL, LAN_WLAN, null, null, basicParams);

var wlanObj, wlan52Obj, wepList, wdsObj, wpsObj, qssEnable, isChangeRegion;

if(!$.exe())
{
	wlanObj = basicList[0];
	wlan52Obj = basicList[1];
	wepList = $.act(ACT_GL, LAN_WLAN_WEPKEY, null, wlanObj.__stack, ["WEPKey"]);
	showRegion = wlanObj.X_TP_ShowRegionSelectionOnWeb;
}

if(INCLUDE_LAN_WLAN_WDS)
{
	if(INCLUDE_LOCK_TO_AP){
		wdsObj = $.act(ACT_GET, LAN_WLAN_WDSBRIDGE, wlanObj.__stack, null,
		[
		"BridgeEnable",
		"BridgeBSSID",
		"BridgeSSID",
		"BridgeAuthMode",
		"BridgeEncryptMode",
		"BridgeKey",
		"BridgeWepKeyIndex", 
		"bridgeLockToAPEnable"]);
	}else{
		wdsObj = $.act(ACT_GET, LAN_WLAN_WDSBRIDGE, wlanObj.__stack, null, 
		[
		"BridgeAuthMode",
		"BridgeBSSID",
		"BridgeEnable",
		"BridgeEncryptMode",
		"BridgeKey",
		"BridgeSSID",
		"BridgeWepKeyIndex"
		]);
	}
}

wpsObj=$.act(ACT_GET, LAN_WLAN_WPS, wlanObj.__stack, null, ["Enable"]);

initRegionList();

if (INCLUDE_FORCE_REGION_SELECT && wlanObj.X_TP_DomainSetByUser == 0)
{
	var t_opt = $.c("option");
	t_opt.text = "--Please Select--"; 
	if (s_str.noselect)
		t_opt.text = s_str.noselect ;
	t_opt.value =  -1;

	$.id("region").add(t_opt);
	$.id("region").value = -1;
	$.addClass(t_opt, "nd");
}

if(!$.exe())
{
	initParam();
	getParam();
	initShow();
}
</script>
<script language="javascript" type="text/javascript">$.styleInputElements();</script>
