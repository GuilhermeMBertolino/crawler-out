<h3 id="t_diskSett">Device Settings</h3>
<div class="content-container">
    <form class="pure-form pure-form-aligned">
        <button type="submit" id="refresh" class="blue left T_scan">Scan</button>
        <div id="usb_drawing" class="part-separate">
        </div>
        <div id="chart_cnt" class="part-separate">
        </div>
        <div id="chart_tip" class="nd">
            <div id="chart_tips_point"></div>
            <p></p>
            <div id="chart_tips_button"></div>
        </div>
    </form>
</div>

<script type="text/javascript">
(function() {
    var usbDeviceList;
    var volumeList;
    var numAliveDev = 0;
    var numAliveLog = 0;
    var idx;

    $.tpInit(init);

    $("#refresh").click(function() {
        $.addLoading($(this));
        usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);

        if (!$.exe()) {
            if (0 == usbDeviceList.length) {
                $.removeLoading();
                $.reload();
                return;
            }

            var idx;

            for (idx = 0; idx < usbDeviceList.length; idx++) {
                usbDeviceList[idx].enable = 1;
                mountUsb(idx);
            }
            $.removeLoading();
            $.reload();
        }
    });

    $("#chart_tips_button").click(function(){
        $.hideCover();
        $('#mask').css({background: '#36444b', opacity: '0.2'});
        $("#chart_tip").addClass('nd');
    });
    $('#usb_drawing').on('click', 'span.safely-remove-icon', function() {
        var index = $(this).attr('data-index');
        $.addLoading();
        handleUsb(index);
    }).on('click', 'span.disable-icon, span.enable-icon', function() {
        var index = $(this).attr('data-index');
        ableFunc(index);
    });

    function handleUsb(idx) {
        var command = {};

        if ("Online" == usbDeviceList[idx].status) {
            command.enable = 0;
            usbDeviceList[idx].enable = 0;
        } else if (("Standby" == usbDeviceList[idx].status) && (1 == usbDeviceList[idx].enable)) {
            usbDeviceList[idx].enable = 0;
            command.enable = 0;
        } else {
            usbDeviceList[idx].enable = 1;
            command.enable = 1;
        }

        $.act(ACT_SET, USB_DEVICE, usbDeviceList[idx].__stack, null, command);

        $.exe(function() {
            $.removeLoading();
            $.reload();
        });
    }

    function mountUsb(idx) {
        var command = {};
        if (("Standby" == usbDeviceList[idx].status) && (1 == usbDeviceList[idx].enable)) {
            command.enable = 1;
            $.act(ACT_SET, USB_DEVICE, usbDeviceList[idx].__stack, null, command);

            if (!$.exe()) {
                $.reload();
            }
        }
    }

    function ableFunc(num) {
        var command = {};

        if ("Online" == volumeList[num].status) {
            command.enable = 0;
        } else if ("Error" == volumeList[num].status) {
            return;
        } else if (("Offline" == volumeList[num].status) && ("1" == volumeList[num].enable)) {
            handleVolumeForce(num);
            return;
        } else if (("Offline" == volumeList[num].status)) {
            command.enable = 1;
        } else {
            $.reload();
        }

        $.act(ACT_SET, LOGICAL_VOLUME, volumeList[num].__stack, null, command);

        $.exe(function() {
            $.removeLoading();
            $.reload();
        });
    }

    function handleVolumeForce(num) {
        var command = {};

        command.enable = 1;
        command.force = 1;
        $.act(ACT_SET, LOGICAL_VOLUME, volumeList[num].__stack, null, command);

        if (!$.exe()) {
            $.reload();
        }
    }

    function initTable() {
        var array = [];
        var i, rowspan;

        for (idx = 1; idx <= usbDeviceList.length; idx++) {
            if ("Online" == usbDeviceList[idx - 1].status) {
                rowspan = 0;
                for (i = 0; i < volumeList.length; i++) {
                    if (((usbDeviceList[idx - 1].__stack).split(','))[0] == ((volumeList[i].__stack).split(','))[0]) {
                        rowspan++;
                    }
                }
                for (i = 0; i < volumeList.length; i++) {
                    if (((usbDeviceList[idx - 1].__stack).split(','))[0] == ((volumeList[i].__stack).split(','))[0]) {
                        var ableControl;

                        if (volumeList[i].status == "Online") {
                            ableControl = true;
                        } else if ("Error" == volumeList[i].status) {
                            ableControl = false;
                        } else if (("Offline" == volumeList[i].status) && (1 == volumeList[i].enable)) {
                            ableControl = false;
                        } else {
                            ableControl = false;
                        }

                        if ((0 == usbDeviceList[idx - 1].enable) || ("Online" != usbDeviceList[idx - 1].status)) {
                            ableControl = false;
                        }

                        var removeTD = {
                            "text": "<span class='safely-remove-icon table-icon' data-index='" + (idx-1)
                                    +"'></span>",
                            "width": "15%",
                            "rowspan": rowspan
                        };

                        array.push([{
                            "text": volumeList[i].label + ':(' + volumeList[i].name + ')',
                            "width": "15%"
                        }, {
                            "text": volumeList[i].capacity,
                            "width": "20%"
                        }, {
                            "text": renderFreeSpace(getVolumeGB(volumeList[i].freeSpace), getVolumeGB(volumeList[i].capacity)),
                            "width": "38%"
                        }, {
                            "text": '<span class="table-grid-icon'+(ableControl?' enable-icon':' disable-icon')+'" data-index="'+
                                    i +'"></span>',
                            "width": "12%"
                        }, removeTD]);
                    }
                }
            }
        }

        $.initTableBody($('#volumeTbl'), array);
        // $.tablePages($('#volumeTbl'), 5);
        return array;
    }

    function init() {
        usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);
        volumeList = $.act(ACT_GL, LOGICAL_VOLUME, null, null);

        $("#chart_tip p").text(c_str.usbChartInfo);
        $("#chart_tips_button").text(m_str.ok);

        if (!$.exe()) {
            if (0 == usbDeviceList.length) {
                return;
            }

            if (usbDeviceList.length <= 2 && checkVolumeNum(usbDeviceList, volumeList)) {
                drawChart(usbDeviceList, volumeList);
            } else {
                for (idx = 0; idx < usbDeviceList.length; idx++) {
                    if ("Online" == usbDeviceList[idx].status) {
                        numAliveDev++;
                    }
                }

                for (idx = 0; idx < volumeList.length; idx++) {
                    if ("Online" == volumeList[idx].status) {
                        numAliveLog++;
                    }
                }

                var usbDrawing;
                usbDrawing = "<table id='volumeTbl'><thead></thead><tbody></tbody></table>";
                $("#usb_drawing").append(usbDrawing).append("<br>");

                var headArray = [{
                    "text": table_str.name,
                    "width": "15%"
                }, {
                    "text": table_str.total,
                    "width": "20%"
                }, {
                    "text": table_str.capacity,
                    "width": "38%"
                }, {
                    "text": table_str.enable,
                    "width": "12%"
                }, {
                    "text": m_str.remove,
                    "width": "15%"
                }];

                $.initTableHead($('#volumeTbl'), headArray);
                $('#volumeTbl').tpTable(initTable);
            }
        }
    }

    /**
     * Device Settings
     */

    function checkVolumeNum(usbDeviceList, volumeList) {
        var maxVolumeNum = 0;
        for (var i = 0; i < usbDeviceList.length; i++) {
            var tempNum = 0;
            for (var j = 0; j < volumeList.length; j++) {
                if ($.stkPop(volumeList[j].__stack) == usbDeviceList[i].__stack) {
                    tempNum += 1;
                }
            }
            if (tempNum > maxVolumeNum) {
                maxVolumeNum = tempNum;
            }
            if (maxVolumeNum > 5) {
                return false;
            }
        }
        return true;
    }

    function renderFreeSpace(free, total) {
        var percent = 1-free/total,
            len = percent*230;
        var isAlert = (percent >= 0.9);
        var inHTML='<div class="inline-block">';
            inHTML +=   '<div class="" style="position: relative; display: inline-block;">';
            inHTML +=       '<div class="" style="margin-bottom:10px;top:7px;position:relative;">';
            inHTML +=           '<div class="" style="border: 0 none;background-color: #a7a9ac;width: 230px; height: 6px;">';
            inHTML +=               '<div class="progressbar-value'+(isAlert?' grid_alert':'')+'" style="width:'+
                                        len+'px;height:100%;overflow: hidden;"></div>';
            inHTML +=           '</div>';
            inHTML +=       '</div>';
            inHTML +=   '</div>';
            inHTML +=   '<div class="volume-progress-text">';
            inHTML +=       '<span class="'+(isAlert?'grid_alert':'')+'">'+s_str.used+':'+(total-free).toFixed(1)+'G</span>';
            inHTML +=       '<span>'+s_str.free+':'+free+'G</span>';
            inHTML +=   '</div>';
            inHTML +='</div>';
        return inHTML;
    }

    function getVolumeGB(data) {
        var kb = /K/;
        var mb = /M/;
        var gb = /G/;
        var cap;
        if (kb.test(data)) {
            cap = data.split(" K")[0]*1/1024/1024;
            return cap.toFixed(1)*1;
        } else if (mb.test(data)) {
            cap = data.split(" M")[0]*1/1024;
            return cap.toFixed(1)*1;
        } else if (gb.test(data)) {
            cap = data.split(" G")[0]*1;
            return cap.toFixed(1)*1;
        } else {
            return (data*1).toFixed(1)*1;
        }
    }

    function drawChart(deviceList, volumeList) {
        var formatData,
            colorArray=["#4ACBD6","#11BBBF","#0D9999","#86E2E2","#59E6EA"],
            div = [];

        $("#chart_cnt").empty().show();

        $("#usb_drawing").hide();

        if(deviceList.length > 0 && (document.cookie.search('usbInfo=1') === -1)){
            document.cookie = 'usbInfo=1';
            $.showCover();
            $('#mask').css({background: '#000', opacity: '0.3'});
            $("#chart_tip").removeClass('nd');
            $("#main").scrollTop(0);
        }

        for(var k = 0; k < deviceList.length; k++) {
            if ("Online" != deviceList[k].status) {
                continue;
            }

            var totalCapacity = 0, volumeIndex = 0;
            div[k]=document.createElement("div");
            $(div[k]).attr("class","device_chart");
            $("#chart_cnt").append(div[k]);

            $.each(volumeList, function(index) {
                var that = this;
                if ($.stkPop(that.__stack) == deviceList[k].__stack) {
                    totalCapacity += getVolumeGB(that.capacity);
                }
            });

            formatData = [];
            var bgLine=document.createElement("canvas");
                bgLine.className="bg-line";
                bgLine.width=350;
                bgLine.height=350;
            var infoUl=document.createElement("ul");
                infoUl.className="device_info_ul";
            $.each(volumeList, function(index) {
                var that = this;
                if ($.stkPop(that.__stack) == deviceList[k].__stack) {
                    (function(k, volumeIndex, bgLine, totalCapacity){
                        formatData.push({
                            value: getVolumeGB(that.capacity),
                            color: that.enable == "1" ? colorArray[volumeIndex%5] : "#A7A9AC",
                            label: that.label+':('+that.name+')',
                            free: getVolumeGB(that.freeSpace),
                            clickCallback:function(){
                                $.addLoading();
                                ableFunc(index);
                            },
                            showInfo:function(){
                                var angle,
                                    angleSum = 0,
                                    total = 0,
                                    index = 0;
                                var r = this.outerRadius;
                                var ctx = bgLine.getContext('2d');
                                $("#chart_cnt .device_chart:eq("+k+")").find("div.device_info").hide();
                                ctx.clearRect(0,0,350,350);
                                ctx.beginPath();
                                ctx.strokeStyle = this.fillColor;
                                ctx.lineWidth = 2;
                                ctx.moveTo(170,170);
                                
                                $.each(volumeList, function() {
                                    var that = this;
                                    if ($.stkPop(that.__stack) == deviceList[k].__stack) {
                                        if(index<volumeIndex) {
                                            angleSum += getVolumeGB(that.capacity);
                                        }
                                        index++;
                                    }
                                });

                                angleSum = angleSum/totalCapacity*2*Math.PI;
                                angle = this.value/totalCapacity*2*Math.PI;
                                if(this.value==totalCapacity) angle=2.3;
                                var changeX = ((angleSum + angle/2)>Math.PI)?-1:0;
                                
                                var div = $("#chart_cnt .device_chart:eq("+k+")").find("div.device_info:eq("+volumeIndex+")");
                                ctx.lineTo(170+1.4*r*Math.sin(angleSum + angle/2),170-1.4*r*Math.cos(angleSum + angle/2));
                                ctx.lineTo(170+1.4*r*Math.sin(angleSum + angle/2)+ (changeX==0?1:-1)*div.width(),170-1.4*r*Math.cos(angleSum + angle/2));

                                ctx.stroke();
                                if ( isIE8 ){
                                    ctx.beginPath();
                                    ctx.fillStyle="#ffffff";
                                    ctx.arc(170, 170, 36, 0, Math.PI*2, false);
                                    ctx.fill();
                                }
                                div.show();
                            },
                            hideInfo:function(){
                                var ctx = bgLine.getContext('2d');
                                $("#chart_cnt .device_chart:eq("+k+")").find("div.device_info").hide();
                                ctx.clearRect(0,0,350,350);
                            }
                        });
                    })(k, volumeIndex, bgLine, totalCapacity);
                    volumeIndex++;
                }
            });
            if (formatData.length === 1) {
                formatData.push({
                    value: 0.01,
                    color: "#fff",
                    label: '',
                    free: 0.01,
                    clickCallback: function () {
                    },
                    showInfo: function () {
                    },
                    hideInfo: function () {
                    }
                });
            }

            $("#chart_cnt .device_chart:eq("+k+")").append(bgLine);
            $("#chart_cnt .device_chart:eq("+k+")").append(infoUl);
            var canvas=document.createElement("canvas");
                canvas.width=140;
                canvas.height=140;
            $("#chart_cnt .device_chart:eq("+k+")").append(canvas);
            // newfour
            var isIE8 =( navigator.appName == "Microsoft Internet Explorer" && navigator.appVersion.split(";")[1].replace(/[ ]/g,"")=="MSIE8.0" );

            if( isIE8 ){ 
                canvas=window.G_vmlCanvasManager.initElement(canvas);
                bgLine=window.G_vmlCanvasManager.initElement(bgLine);
            }
            
            (function(canvas,totalCapacity,bgLine){
                new Chart(canvas.getContext("2d")).Doughnut(formatData, {
                    showTooltips: true,
                    segmentStrokeWidth : 1,
                    percentageInnerCutout : 45,
                    animationSteps : 30,
                    animationEasing: "easeOutQuad",
                    //animation : false,
                    onAnimationComplete:function(){
                        var ctx=bgLine.getContext('2d');
                        var div, li;
                        var angle, angleSum=0;
                        var changeX=0, changeY=0;
                        var r = this.outerRadius;
                        var usedValue, freeValue;
                        var total;

                        for(var i=0;i<this.segments.length;i++){
                            angle = this.segments[i].value/this.total*2*Math.PI;
                            if(this.segments.length==2)angle=2.3;
                            div=document.createElement("div");
                            li=document.createElement("li");
                            div.className="device_info";
                            li.className="device_info_li";
                            $(canvas).closest(".device_chart").append(div);
                            $(canvas).closest(".device_chart").find(".device_info_ul").append(li);
                            
                            changeX = ((angleSum + angle/2)>Math.PI)?-1:0;
                            changeY = -1;

                            $(div).css("top",parseInt(r - 1.4*r*Math.cos(angleSum + angle/2) + changeY*div.offsetHeight - 1)+"px");
                            $(div).css("left",parseInt(r + 1.4*r*Math.sin(angleSum + angle/2) + changeX*div.offsetWidth + 20)+"px");

                            usedValue = ((this.segments[i].value*1-this.segments[i].free*1+"").indexOf(".")>-1)?
                                    (this.segments[i].value*1-this.segments[i].free*1).toFixed(1):
                                    (this.segments[i].value*1-this.segments[i].free*1);
                            freeValue = ((this.segments[i].free*1+"").indexOf(".")>-1)?
                                    (this.segments[i].free*1).toFixed(1):(this.segments[i].free*1);
                            
                            div.innerHTML="<h4>"+this.segments[i].label+"</h4>"+"<ul><li class=\""+
                                    ((usedValue/freeValue)>=9?"alert":"")+"\">"+s_str.used+": "+usedValue+"G</li>"+"<li>"+
                                    s_str.free+": "+freeValue+"G</li></ul>";
                            li.innerHTML="<div style=\"background:"+this.segments[i].fillColor+"\"></div>"+this.segments[i].label.split('(')[0];
                            angleSum+=angle;
                            div.style.display="none";
                        }
                        ctx.beginPath();
                        ctx.fillStyle="#ffffff";
                        ctx.arc(170, 170, 36, 0, Math.PI*2, false);
                        ctx.fill();
                        totalCapacity = ((totalCapacity+"").indexOf(".")>-1)?(totalCapacity*1).toFixed(1):(totalCapacity*1);
                        if ( isIE8 ) {
                            total="<div class=\"device_total\" style=\"background:transparent;\">"+totalCapacity+"G</div>";
                        }else{
                            total="<div class=\"device_total\">"+totalCapacity+"G</div>";
                        }
                        $(canvas).closest(".device_chart").append($(total));
                    }
                });
            })(canvas,totalCapacity,bgLine);

            $("#chart_cnt .device_chart:eq("+k+")").append($('<button data-index="'+k+'"'+
                    ' type="submit" class="bottom_button blue">'+m_str.remove+'</button>'));
        }


        $('.bottom_button').click(function() {
            var idx = $(this).attr('data-index');
            $.addLoading();
            handleUsb(idx);
        });
    }

})();
</script>
