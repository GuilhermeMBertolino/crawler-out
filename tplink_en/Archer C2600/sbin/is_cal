#!/usr/bin/lua

local wifi0Offset = 0x1000
local wifi1Offset = 0x5000
local wifi0Caled = 0
local wifi1Caled = 0

--- check CalData function
function checkCalData(calDataAddr)
	local readSize = 12064
	local file = io.open("/dev/mtd0", "r")
	if file == nil then
		return false
	end
	file:seek("set", calDataAddr)
	local calDataValue = file:read(readSize)
	file:close()
	--- check the first tow byte, cal data len 0x2f20=12064
	if string.byte(calDataValue,1) ~= 0x20 or string.byte(calDataValue, 2) ~= 0x2f then
		return false
	end
	--- calculate the check, must be 0xffff
	bit = require"bit"
	local checkSum = 0
	local sum = 0
	for i=1,readSize,2 do
		sum = string.byte(calDataValue,i)
		sum = sum + bit.lshift(string.byte(calDataValue,i+1),8)
		checkSum = bit.bxor(checkSum,sum)
	end
	if checkSum ~= 0x0ffff then
		return false
	end
	return true
end
--- check wifi0 calData
if checkCalData(wifi0Offset) then
	wifi0Caled = 1
end
--- check wifi1 calData
if checkCalData(wifi1Offset) then
	wifi1Caled = 1
end

if wifi0Caled == 1 and wifi1Caled == 1 then
	print("true")
else
	print("false")
end

