#!/bin/sh
#
# Copyright (c) 2019 TP-LINK Technologies Co., Ltd.
# All Rights Reserved.

. /lib/functions.sh

WIFIDEVICES=

__wifi_get_defaultmac() {
	local factoryLanMac=$(getfirm MAC)

	if [ -z $factoryLanMac ]; then
		factoryLanMac="00:0A:EB:AB:25:00"
	fi

	echo  $factoryLanMac
}

wifi_init_vif_mac() {
	local mac=""
	local vif_id vap_mac

	mac="$(__wifi_get_defaultmac)"
	mac=${mac//-/:}

	for dev in $WIFIDEVICES; do
		vif_id=0
		local 

		mac=$(lua /usr/sbin/wifimac $mac)
		mac="$(echo $mac | tr 'a-f' 'A-F')"
		uci set wireless.$dev.macaddr=$mac

		config_get vifs $dev vifs
		for vif in $vifs; do
			if [ $vif_id -eq 0 ]; then
				vap_mac=$mac
			else
				vap_mac=$(lua /usr/sbin/wifivapmac $mac $vif_id)
			fi

			config_get onemesh_config $vif onemesh_config "off"
			config_get backhaul $vif backhaul "off"
			if [[ $onemesh_config == "on" ]] || [[ $backhaul == "on" ]]; then
				uci set onemesh.$vif.macaddr=$vap_mac
			else
				uci set wireless.$vif.macaddr=$vap_mac
			fi
			
			let vif_id+=1
		done
	done
	uci commit wireless
	uci commit onemesh
}

wifi_firm_info() {
	local change_flag=""
	local mac=""
	local pin=""
	local ssid=""

	for dev in ${WIFIDEVICES}; do
		local band

		[ -n "$(config_get $dev pre_configed)" ] && continue

		config_get band $dev band

		config_get vifs $dev vifs
		for vif in $vifs; do
			local mode guest
			config_get mode $vif mode ap
			config_get guest $vif guest off
			[ "$mode" != "ap" ] && continue

			[ -z "$ssid" ] && ssid="$(getfirm SSID)"

			local suffix
			suffix=$(getfirm MAC | cut -d "-" -f 5,6 | sed 's/-//g' | tr 'a-f' 'A-F')
			[ "$band" = "5g" ] && suffix="${suffix}_${band//g/G}"

			if [ "$guest" = "off" ]; then
				[ -z "$(config_get $vif wps_pin)" ] && {
					[ -z "$wps_pin" ] && wps_pin="$(getfirm PIN)"
					uci set wireless.${vif}.encryption="psk"
					uci set wireless.${vif}.psk_version="rsn"
					uci set wireless.${vif}.psk_key=${wps_pin}
					uci set wireless.${vif}.wps_pin=${wps_pin}
					uci set wireless.${vif}.wps_state=2
				}
				uci set wireless.${vif}.ssid="${ssid}_${suffix}"
				change_flag="1"
			else
				[ -z "$wps_pin" ] && wps_pin="$(getfirm PIN)"
				uci set wireless.${vif}.psk_key=${wps_pin}
				uci set wireless.${vif}.encryption="none"
				uci set wireless.${vif}.ssid="${ssid}_Guest_${suffix}"
				change_flag="1"
			fi
		done

		uci set wireless.${dev}.pre_configed="true"
	done

	if [ -z "$(config_get wps model_name)" ]; then
		local model="$(getfirm MODEL)"
		uci set wireless.wps.model_name="${model}"
		change_flag="1"
	fi
	if [ -z "$(config_get wps wps_manufacturer)" -o -z "$(config_get wps wps_manufacturer_url)" ]; then
		local firm="$(getfirm FIRM)"
		local website="$(getfirm WEBSITE)"
		uci set wireless.wps.wps_manufacturer=${firm}
		uci set wireless.wps.wps_manufacturer_url=${website}
		change_flag="1"
	fi

	[ "$change_flag" = "1" ] && wifi_commit
}

config_cb() {
	local type="$1"
	local section="$2"

	case "$type" in
		wifi-device)
			append WIFIDEVICES "$section"
			config_set "$section" vifs ""
		;;
	esac

	config_get TYPE "$CONFIG_SECTION" TYPE
	case "$TYPE" in
		wifi-iface)
			config_get device "$CONFIG_SECTION" device
			config_get vifs "$device" vifs 
			append vifs "$CONFIG_SECTION"
			config_set "$device" vifs "$vifs"
		;;
	esac
}

config_load wireless
config_load onemesh
wifi_init_vif_mac
wifi_firm_info
