<script language="javascript" type="text/javascript">
$("span.delete-all-icon").click(function() {
    var stkArray = new Array();
    $.confirm(c_str.del_con, function() {
        $.lock();
        $.each($.wd.conn, function() {
            if (this.type) {
                stkArray.push(this.obj.__stack);
                if (this.type.indexOf("ppp") < 0) {
                    $.act(ACT_DEL, WAN_IP_CONN, this.obj.__stack, null);
                } else {
                    $.act(ACT_DEL, WAN_PPP_CONN, this.obj.__stack, null);
                }
            }
        });
        $.exe(function(ret) {
            if (ret) return;
            $.each(stkArray, function() {
                var wanConnDev = $.act(ACT_GET, WAN_CONN_DEVICE, $.stkPop(this, 1), null, ["WANIPConnectionNumberOfEntries", "WANPPPConnectionNumberOfEntries"]);
                if (!$.exe()) {
                    if ((wanConnDev.WANIPConnectionNumberOfEntries == 0) && (wanConnDev.WANPPPConnectionNumberOfEntries == 0)) {
                        $.act(ACT_DEL, WAN_CONN_DEVICE, $.stkPop(this, 1), null);
                        $.exe();
                    }
                }
            });
            $.reload();
        });
    })
});

function doEdit(val1, val2) {
    for (var i = 0; i < $.wd.conn.length; i++) {
        if ($.wd.conn[i].obj.__stack == val2) { 
            if (((val1 == 1) && ($.wd.conn[i].type.indexOf("ppp") < 0)) ||
                ((val1 == 2) && ($.wd.conn[i].type.indexOf("ppp") >= 0))) {
                $.wd.editIndex = i;
                break;
            }
        }
    }
    $.loadPage("divPage", "div.htm");
}

function doDel(val1, val2) {
    var stk = val2;
    $.confirm(c_str.del_con, function() {
        $.lock();
        if (val1 == 1)
            $.act(ACT_DEL, WAN_IP_CONN, stk, null);

        else if (val1 == 2)
            $.act(ACT_DEL, WAN_PPP_CONN, stk, null);
        $.exe(function(err) {
            if (!err) {
                stkIndex = stk;
                stkIndex[2] = 0;
                var wanConnDev = $.act(ACT_GET, WAN_CONN_DEVICE, stkIndex, null, ["WANIPConnectionNumberOfEntries", "WANPPPConnectionNumberOfEntries"]);
                $.exe(function(err) {
                    if (!err) {
                        if ((wanConnDev.WANIPConnectionNumberOfEntries == 0) && (wanConnDev.WANPPPConnectionNumberOfEntries == 0)) {
                            $.act(ACT_DEL, WAN_CONN_DEVICE, stkIndex, null);
                            $.exe(function(err) {
                                if (!err) $.loadMain("wan.htm");
                            });
                        } else
                            $.loadMain("wan.htm");
                    }
                });
            }
        });
    });
}

function doDisConn(val1, val2) {
    var stk = val2;
    if (val1 == 1)
        $.act(ACT_OP, ACT_OP_DHCP_RELEASE, stk);
    else if (val1 == 2)
        $.act(ACT_OP, ACT_OP_PPP_DISCONN, stk);

    if (!$.exe())
        $.timeout(function() {
            $.reload();
        }, 1500);
}

function doConn(val1, val2) {
    var stk = val2;
    if (val1 == 1)
        $.act(ACT_OP, ACT_OP_DHCP_RENEW, stk);
    else if (val1 == 2)
        $.act(ACT_OP, ACT_OP_PPP_CONN, stk);

    if (!$.exe())
        $.timeout(function() {
            $.reload();
        }, 1500);
}

function init() {
    $('#scroll').scrollTop(0);
    /*	var wanConnDev = $.act(ACT_GL, WAN_CONN_DEVICE, null, null,["WANIPConnectionNumberOfEntries", "WANPPPConnectionNumberOfEntries"]);
	if (!$.exe()) {
		$.each(wanConnDev, function(){
			if ((this.WANIPConnectionNumberOfEntries == 0) 
			&& (this.WANPPPConnectionNumberOfEntries == 0)) { 
				$.act(ACT_DEL, WAN_CONN_DEVICE, this.__stack, null);
				$.exe();				
			}
		});
	} */
}

function initTable() {
    var status, connect, modify;
    var array = new Array();
    var wanComInfList = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, ["WANAccessType"]);

    if (INCLUDE_IPV6) {
        $("#t_ipvx").removeClass("nd");
    }

    if (INCLUDE_IPTV) { 
        var iptvCfg = $.act(ACT_GET, DSL_IPTV_CFG, null, null, ["iptvVPI", "iptvVCI"]);
    }
    var wanIpConList = $.act(ACT_GL, WAN_IP_CONN, null, null);
    var wanPppConList = $.act(ACT_GL, WAN_PPP_CONN, null, null);
    var l3Forwarding = $.act(ACT_GET, L3_FORWARDING, null, null, ["__ifAliasName"]);
    if (INCLUDE_IPV6) {
        var l3Ip6Forwarding = $.act(ACT_GET, L3_IP6_FORWARDING, null, null, ["__ifAliasName"]);
    }

    $.exe(function(err) {
        if (!err) {
            var wanDslInfStatusList = "";

            var curSupIsPtm = 0;
            var curConnIsPtm = 0;


            
            var wanDslLnkStkList = "";
           

            $.each(wanComInfList, function() {
                if (this.WANAccessType == "DSL") {
                    $.wd.pStk = this.__stack;
                    $.wd.l3ForwardingObj.__ifAliasName = l3Forwarding.__ifAliasName;
                    if (INCLUDE_IPV6) {
                        $.wd.l3Ip6ForwardingObj.__ifAliasName = l3Ip6Forwarding.__ifAliasName;
                    }
                }
            });
            
            $.each(wanIpConList, function() {
                var tmpStk = $.stkPop(this.__stack, 2);
                if ($.wd.pStk == tmpStk) {
                    var thisStkParts = (this.__stack).split(",");
                    var stk = thisStkParts[0] + thisStkParts[1];
                    var stk1 = thisStkParts[0];
                    var statusIndex = (wanDslInfStatusList).split(",");
                    var pvc;
                }
            });
            
            $.each(wanPppConList, function() {
                var tmpStk = $.stkPop(this.__stack, 2);
                if ($.wd.pStk == tmpStk) {
                    var thisStkParts = (this.__stack).split(",");

                    var stk = thisStkParts[0] + thisStkParts[1];
                    var stk1 = thisStkParts[0];
                    var pvc;
                    var thisStk = "[" + this.__stack + "]";
                }
            });
            $.initTableBody($("#wanTable"), array);
            return array;
        }
    });
}

$("#addConnIcon").click(function() {
    $.loadPage("divPage", "div.htm");
    $("#editContainer").addClass("nd");
});
</script>

<h3 id="et">DSL WAN Interface</h3>
<div class="content-container" id="arp">
    <form class="pure-form pure-form-aligned">
        <div class="table-op" id="addItem">
            <div class="table-btn">
                <span class="refresh-icon"></span>
                <label class="T_refresh">Refresh</label>
                <span id="addConnIcon" class="add-icon"></span>
                <label class="T_add">Add</label>
                <span class="delete-all-icon"></span>
                <label class="T_delall">Delete All</label>
            </div>
        </div>
        <table id="wanTable">
            <thead></thead>
            <tbody id="wanBody">
                <tr id="editContainer" class="nd">
                    <td colspan="5">
                        <div id="divPage"></div>
                    </td>
                </tr>
            </tbody>
        </table>
    </form>
</div>

<script language="javascript" type="text/javascript">
var connObj = {
    type: null,
    obj: {},
    dsl: {},
    ptm: {}
};
$.wd = {
    conn: new Array(),
    pStk: null,
    editIndex: 0,
    l3ForwardingObj: {},
    l3Ip6ForwardingObj: {}
};

var headArray = [{
    "text": table_str.wanInfName,
    "width": ""
}, {
    "text": INCLUDE_VDSLWAN ? s_str.destVDSL : s_str.destADSL,
    "width": "10%"
}, {
    "text": table_str.status,
    "width": "20%"
}, {
    "text": table_str.operation,
    "width": "10%"
}, {
    "text": table_str.modify,
    "width": "15%"
}];
$.initTableHead($("#wanTable"), headArray);
$("#wanTable").tpTable(initTable);
$.tpInit(init);
</script>
