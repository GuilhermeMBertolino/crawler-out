user root;
worker_processes  2;
worker_cpu_affinity 0010 1000;

events {
    use epoll;
    worker_connections  1024;
}

thread_pool image threads=4;

http {
    include       mime.types;
    default_type  text/plain;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile        on;
    keepalive_timeout  65;

    # one binary_remote_addr cost 64 bytes
    limit_conn_zone $binary_remote_addr zone=perip:32k;
    limit_conn_zone $server_name zone=perserver:64k;

    limit_req_zone $binary_remote_addr zone=limit_req:64k rate=100r/s;

    ## set access_log on for debug if needed ##
    ## access_log /dev/console main;

    access_log off;
    error_log stderr debug;

    server {
        listen	unix:/var/run/nginx.sock;

        location /appauth {
            set_session;
            arg $arg_type $arg_SessionID;
        }
    }

    server {
        listen       8081;
        server_name  localhost;

        client_max_body_size 1000m;
        client_body_buffer_size 4m;

        limit_conn perip 32;
        limit_conn perserver 1024;
        limit_conn_status 503;

        limit_req zone=limit_req burst=5;
        limit_req_status 503;

        ## The follow module is used to stub connection status ##
        ## location /ngx_status {
        ##    stub_status on;
        ##    access_log off;
        ## }

        location /natpunch {
            natpunch;
        }

        location / {
            root   /mnt/;
            index index.html;
        }

        location ^~ /download {
            alias   /mnt;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root    /www/html;
            index  index.html index.htm;
        }

        location ~* (/image)(.*\.(jpg|gif|png|bmp)) {
            rewrite (/image)(.*) $2;
        }

        location ~* .*\.(jpg|gif|png|bmp)$ {
            root  /mnt/; 
            aio threads=image;
            image_filter resize $arg_width $arg_height;
            image_filter_buffer 10M;
            image_filter_jpeg_quality 95;
            image_filter_transparency on;
        }

        location /upload {
            upload_pass   @test;
            upload_resumable on;
            upload_cleanup 400 404 499 500-505;
            upload_state_store /mnt/$arg_path;
            upload_store /mnt/$arg_path;

            upload_buffer_size 4194304;
            upload_store_access user:rw;

            upload_set_form_field "${upload_field_name}_name" $upload_file_name;
            upload_set_form_field "${upload_field_name}_content_type" $upload_content_type;
            upload_set_form_field "${upload_field_name}_path" $upload_tmp_path;

            upload_aggregate_form_field "${upload_field_name}_md5" $upload_file_md5;
            upload_aggregate_form_field "${upload_field_name}_size" $upload_file_size;

            upload_pass_form_field "^.*$";
        }

        ## Pass altered request body to a backend ##
        location @test {
            proxy_pass   http://localhost:8081;
        }

    }

    server {
        #autoindex on;
        #autoindex_format json;
        #autoindex_exact_size on;

        listen       4433 ssl;
        server_name  localhost;

        ssl_certificate      /etc/certificate/cert.pem;
        ssl_certificate_key  /etc/certificate/key.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_protocols TLSv1.2;
        ssl_ciphers  kEECDH+AESGCM:kEECDH+AES:kRSA+AESGCM:kRSA+AES:+AES256:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        client_max_body_size 1000m;
        client_body_buffer_size 4m;

        limit_conn perip 32;
        limit_conn perserver 1024;
        limit_conn_status 503;

        limit_req zone=limit_req burst=5;
        limit_req_status 503;

        ## The follow module is used to stub connection status ##
        ## location /ngx_status {
        ##    stub_status on;
        ##    access_log off;
        ## }

        location /natpunch {
            natpunch;
        }

        location / {
            root   /mnt/;
            index  index.html index.htm;
        }

        location ^~ /download {
            alias   /mnt/;
        }

        location ~* (/image)(.*\.(jpg|gif|png|bmp)) {
           rewrite (/image)(.*) $2;
        }

        location ~* .*\.(jpg|gif|png|bmp)$ {
            root  /mnt/;
            aio threads=image;
            image_filter resize $arg_width $arg_height;
            image_filter_buffer 10M;
            image_filter_jpeg_quality 95;
            image_filter_transparency on;
        }

        location /upload {
            upload_pass   @test;
            upload_cleanup 400 404 499 500-505;
            upload_resumable on;
            upload_state_store /mnt/$arg_path;
            upload_store /mnt/$arg_path;

            upload_buffer_size 4194304;
            upload_store_access user:rw;

            upload_set_form_field "${upload_field_name}_name" $upload_file_name;
            upload_set_form_field "${upload_field_name}_content_type" $upload_content_type;
            upload_set_form_field "${upload_field_name}_path" $upload_tmp_path;

            upload_aggregate_form_field "${upload_field_name}_md5" $upload_file_md5;
            upload_aggregate_form_field "${upload_field_name}_size" $upload_file_size;

            upload_pass_form_field "^submit$|^description$";
        }

        # Pass altered request body to a backend
        location @test {
            proxy_pass   http://localhost:8081;
        }
    }

}
