<style type="text/css">
#quicksetup-wrapper {
    background-color: #ffffff;
    padding-bottom: 42px;
    width: 1000px;
    margin: 0 auto;
    box-sizing: border-box;
    min-height: 100%;
}

#base-inner {
    width: 1000px;
    margin-left: 0;
}

#quicksetup {
	text-align: center;
	min-height: 100%;
    background: #fff;
    /* url("../img/mark_copy.gif");*/
    box-sizing: border-box;
    padding: 20px 50px 56px;
}

div.quicksetup-wrap {
    width: 100%;
}

div.process-flow-step {
	height: 24px;
	width: 24px;
	display: inline-block;
}

div.process-flow-step span.icon {
	height: 24px;
	width: 24px;
    background: url(../img/icons.png) no-repeat -366px -68px;
	display: inline-block;
	position: relative;
	color: #B3B3B3;
}

div.process-flow-step.current span.icon {
    background-position: -340px -68px;
}

div.process-flow-step.processed span.icon {
    background-position: -158px -68px;
}

div.process-flow-step.end.current span.icon {
    background-position: -2px -68px;
}

div.process-flow-bar {
	height: 3px;
    width: 167px;
	margin-left: -12px;
	margin-right: -12px;
	margin-bottom: 2px;
	background-color: #C9CACB;
	display: inline-block;
}
#process-flow-container.short div.process-flow-bar {
    width: 115px;
}

div.process-flow-bar span.bar-inner {
	height: 100%;
	width: 0;
	display: inline-block;
}

div.process-flow-bar.processed  span.bar-inner {
    background-color: #4acbd6;
}

div.process-flow-step span.text {
	font-size: 12px;
	position: absolute;
	white-space: nowrap;
	width: 160px;
	text-align: center;
	margin-left: -80px;
	color: #B2B2B2;
}

div.process-flow-step.current span.text,
div.process-flow-step.processed span.text {
    color: #4acbd6;
}

div.content-box {
	width: 100%;
}

div.quicksetup-process-content {
	text-align: left;
	margin-top: 70px;
	min-width: 500px;
}

div.process-flow-step span.text.up {
	margin-top: -20px;
}

div.process-flow-step span.text.down {
	margin-top: 32px;
}

div.quicksetup-overlay {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background-color: #8c8c8c;
	opacity: 0.3;
	z-index: 998;
	display: none;
}

div.quicksetup-loading {
	position: absolute;
	width: 100px;
	height: 100px;
	background: url(../img/waiting.gif) no-repeat;
	border-radius: 5px;
	z-index: 1000;
	display: none;
}

span.region-note {
    color: #c11c66;
}

div.quicksetup-newUserMsgBox {
	width: 520px;
    height: 305px; /* for ac3150 */
	position: absolute;
	background-color: #fff;
	border-radius: 5px;
	text-align: center;
	z-index: 999;
	display: none;
}

div.quicksetup-userBoxClosetag {
    background: url(../img/icons.png) no-repeat -302px -22px;
    width: 18px;
    height: 18px;
    cursor: pointer;
	margin: 10px 10px;
	float: right;
	display: block;
}

div.quicksetup-userBoxClosetag:hover {
    opacity: 0.8;
}

p.newUserTip {
    color: #4acbd6;
	font-size: 18px;
	font-weight: 400;
}

div.quicksetup-userContainer {
	text-align: left;
	padding-top: 30px;
	padding-left: 90px;
}

div.quicksetup-userConfirm {
	width: 401px;
	height: 35px;
	text-align: right;
    padding-top: 25px;
}

div.quicksetup-userConfirm span.quicksetup-cfmBtn {
	width: 90px;
	height: 35px;
	line-height: 35px;
	font-size: 12px;
	text-align: center;
	margin-right: 30px;
	border-radius: 3px;
	cursor: pointer;
	color: #fff;
    background-color: #4acbd6;
	display: inline-block;
}

div.quicksetup-autoDetectBox {
	width: 120px;
	height: 109px;
	border-radius: 5px;
	position: absolute;
	background-color: #fff;
	z-index: 999;
	display: none;
}

div.quicksetup-button-container {
	margin-top: 30px;
    margin-right: 144px;
}

div.quicksetup-button-container span.quicksetup-button {
	width: 90px;
	height: 35px;
	line-height: 35px;
	font-size: 12px;
	text-align: center;
	border-radius: 3px;
	cursor: pointer;
	color: #fff;
    background-color: #4acbd6;
	display: inline-block;
}

#quicksetup-icon-diag-failed {
	width: 53px;
    height: 53px;
    background: url('../img/icons.png') no-repeat scroll -338px -409px transparent;
    display: inline-block;
}

div.diag-loading {	
	position: absolute;
	z-index: 999;
	display: none;
	text-align: center;
	width: 560px;
	height: 91px;
}

span.diag-loading-icon {	
	width: 41px;
	height: 41px;
	border-radius: 5px;
	background: url('../img/waiting.gif') no-repeat;
	display: block;
    margin-left: 245px;
}

div.quicksetup-container {
	margin: 0 auto;
}

div.pure-control-group.group-spec {
	height: 24px;
	line-height: 24px;
}

div.pure-control-group.group-spec > input.tp-input-text {
	padding: 0;
}
/*css for ap mode*/
#process-flow-container.AP div.process-flow-bar {
    width: 330px;
}
/*end*/
</style>
<script type="text/javascript" language="javascript">
var currIndex = 0;
    var green = '#4acbd6';
    var greenHover = '#23c4c4';
var flowSteps;
if ($.routerMode == 'AP') {
    /*add for AP mode*/
    flowSteps = [{
        text: n_str["quicksetup"].t_wlSet,
        file: "qsWl.htm",
        __enable: true
    }, {
        text: n_str["quicksetup"].t_summary,
        file: "qsSum.htm",
        __enable: true
    }];
    $('#process-flow-container').addClass('AP');
} else {
    flowSteps = [
        {text: n_str["quicksetup"].t_setRegion,		file: "qsRegion.htm", 	__enable: true},
        {text: n_str["quicksetup"].t_selectWanType, 	file: "qsType.htm", 	__enable: true},
        {text: n_str["quicksetup"].t_setWanType, 		file: "qsEwan.htm", 	__enable: true},
        {text: n_str["quicksetup"].t_wlSet, 			file: "qsWl.htm", 		__enable: true},
        {text: n_str["quicksetup"].t_summary, 		file: "qsSum.htm", 		__enable: true},
        {text: n_str["quicksetup"].t_cloudSetup, 		file: "qsCloud.htm", 		__enable: true}
    ];
}
/* need localization? */


/**
 * 生成步骤条
 */
function genFlowContainer() {
	var flowStepHtml = "";
	var upDown = "down";
	var flowContainer = $("#process-flow-container");
	var qsConWidth = $("#quicksetup").width();
	var qsWrap = $("#quicksetup-wrap");
    var flowContainerLength = 167 * flowSteps;
	if (flowSteps.length == 0)
		return;	
	qsWrap.css("margin-left", (qsConWidth - qsWrap.width()) / 2 + "px");
	for (var i = 0; i < flowSteps.length; i++) {
		if (flowSteps[i].__enable == true) {
				if ((i & 1) == 0)
					upDown = "down";
				else
					upDown = "up";
			flowStepHtml += "<div class='process-flow-step'><span class='icon'><span class='text " + upDown + "'>" + flowSteps[i].text + "</span></span></div>";
			if (i < flowSteps.length - 1)
				flowStepHtml += "<div class='process-flow-bar'><span class='bar-inner'></span></div>";
		}
	}
	flowContainer.append(flowStepHtml);
	flowContainer.css("width", flowContainerLength + "px");
    flowContainer.children(':last.process-flow-bar').remove(); //删除最后一道多余的杠，如果有的话
	flowContainer.css("padding-left", (qsWrap.width() - flowContainer.width()) / 2 + "px");
	$("div.process-flow-step").first().addClass("current");
	$("div.process-flow-step").last().addClass("end");
	
}

/**
 * 在快速设置中加载子页面
 */
function loadSubPage(path) {
	var id="quicksetup-process-content";
	$.loadPage(
		id,
		path,
		function() {
			$("#" + id).css("display", "none");
			$.unlock();
		},
		function(){
			$("#" + id).fadeIn(200);
            var subCon = $("#quicksetup-process-content").children().first();
            var conWidth = $("#quicksetup-wrap").width();
            subCon.css("width", "700px");
            subCon.css("margin-left", "0px");
            subCon.css("margin-left", "190px");
			$("span.quicksetup-button").hover(
				function() {
                            $(this).css("background-color", greenHover);
				},
				function() {
                            $(this).css("background-color", green);
				}
			);
		}
	);
}

/**
 * 点击完成按钮，在其它子页面被行内调用
 */
function doFinish() {
	$("#qs").removeClass("click");
	$("#basic").addClass("click");
	$("#menu").load("./frame/menu.htm");
}

/**
 * 点击退出按钮，在其它子页面被行内调用
 */
function doExit() {
	$("#qs").removeClass("click");
	$("#basic").addClass("click");
	$("#menu").load("./frame/menu.htm");
}

/**
 * 显示快速设置专属遮罩
 */
function qsShowOverlay() {
	var overLay = $(".quicksetup-overlay").length == 0 ? $("<div class=\"quicksetup-overlay\"></div>").appendTo($("body")) : $(".quicksetup-overlay");
	overLay.fadeIn(200, function() {
		$(this).css("display", "block");
		$.opacity(overLay[0], 0.3);
	});
}
/**
 * 隐藏快速设置专属遮罩
 */
function qsHideOverlay() {
	var overLay = $(".quicksetup-overlay").length == 0 ? $("<div class=\"quicksetup-overlay\"></div>").appendTo($("body")) : $(".quicksetup-overlay");
	overLay.fadeOut(200, function() {
		$(this).css("display", "none");
	});
}
/**
 * 显示快速设置专属菊花
 */
function qsAddLoading() {
	qsShowOverlay();
	$.setCentralPosition($(".quicksetup-loading"));
	$(".quicksetup-loading").css("display", "block");
}
/**
 * 隐藏快速设置专属菊花
 */
function qsRemoveLoading() {
	$(".quicksetup-loading").css("display", "none");
	qsHideOverlay();
}
//步骤条的控制接口，应该是quickSetupFlow的简写
$.qf = {
    /**
     * 步骤走向下一格，加载下一个页面
     */
    next: function() {
        var currentStep = $("div.process-flow-step.current");
        var nextBar = currentStep.next("div.process-flow-bar");
        var nextBarInner = nextBar.children("span.bar-inner");
        var nextStep = nextBar.next("div.process-flow-step");

        flowSteps[currIndex].__v = true;
        currIndex++;
        //找到flowSteps中下一个可用的
        while (currIndex < flowSteps.length) {
            if (flowSteps[currIndex].__enable == true)
                break;
            currIndex++;
        }
        if (currIndex >= flowSteps.length) {
            $.alert("No more next page, sth wrong?");
            return;
        }
        currentStep.removeClass("current").addClass("processed");
        nextBarInner.width(0);
        nextBar.addClass("processed");
        nextBarInner.animate({
            width: "+100%"
        }, 200, function() {
            nextBarInner.css("width", "100%");
            nextStep.addClass("current");
            loadSubPage(flowSteps[currIndex].file);
        });
    },
    /**
     * 步骤走向上一格，加载上一个页面
     */
    prev: function() {
        var currentStep = $("div.process-flow-step.current");
        var prevBar = currentStep.prev("div.process-flow-bar");
        var prevBarInner = prevBar.children("span.bar-inner");
        var prevStep = prevBar.prev("div.process-flow-step");

        flowSteps[currIndex].__v = true;
        currIndex--;
        while (currIndex >= 0) {
            if (flowSteps[currIndex].__enable == true)
                break;
            currIndex--;
        }
        if (currIndex < 0) {
            $.alert("No previous page, sth wrong?");
            return;
        }
        currentStep.removeClass("current processed");
        prevBarInner.css("width", "100%");
        prevBar.addClass("processed");
        prevBarInner.animate({
            width: "-=100%"
        }, 200, function() {
            prevBar.removeClass("processed");
            prevStep.removeClass("processed").addClass("current");
            currentStep.removeClass("current processed");
            loadSubPage(flowSteps[currIndex].file);
        });
    },
    exit: function() {
        $("#basic").click();
    }
};

//==================================================
//数据处理的公共函数
//==================================================
function Base64Encoding(input) {
	var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	var output = "";
	var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
	var i = 0;
	input = utf8_encode(input);
    while (i < input.length) {
		chr1 = input.charCodeAt(i++);
		chr2 = input.charCodeAt(i++);
		chr3 = input.charCodeAt(i++);
		enc1 = chr1 >> 2;
		enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
		enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
		enc4 = chr3 & 63;
		
        if (isNaN(chr2)) {
			enc3 = enc4 = 64;
        } else if (isNaN(chr3)) {
			enc4 = 64;
		}
		output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);
	}
	return output;
}

function utf8_encode(string) {
	string = string.replace(/\r\n/g,"\n");
	var utftext = "";
	
    for (var n = 0; n < string.length; n++) {
		var c = string.charCodeAt(n);
        if (c < 128) {
			utftext += String.fromCharCode(c);
        } else if ((c > 127) && (c < 2048)) {
			utftext += String.fromCharCode((c >> 6) | 192);
			utftext += String.fromCharCode((c & 63) | 128);
        } else {
			utftext += String.fromCharCode((c >> 12) | 224);
			utftext += String.fromCharCode(((c >> 6) & 63) | 128);
			utftext += String.fromCharCode((c & 63) | 128);
		}
	}	
	return utftext;
}

</script>
<div id="quicksetup-container" class="quicksetup-container">
	<div id="quicksetup-wrap" class="quicksetup-wrap">
		<div id="process-flow-container" class="part-separate"></div>
		<div id="quicksetup-process-content" class="quicksetup-process-content"></div>
	</div>
</div>

<script language="javascript" type="text/javascript">
(function() {
	$.tpInit(function() {
		genFlowContainer();

		$.qd = {};
		$.qf = {
			next: function() {
				var currentStep = $("div.process-flow-step.current");
				var nextBar = currentStep.next("div.process-flow-bar");
				var nextBarInner = nextBar.children("span.bar-inner");
				var nextStep = nextBar.next("div.process-flow-step");	
	
				flowSteps[currIndex].__v = true;
				currIndex++;
				while (currIndex < flowSteps.length) {
					if (flowSteps[currIndex].__enable == true)
						break;
					currIndex++;
				}
				if (currIndex >= flowSteps.length) {
					$.alert("No more next page, sth wrong?");
					return ;
				}
				currentStep.removeClass("current").addClass("processed");
				nextBarInner.width(0);
				nextBar.addClass("processed");
                nextBarInner.animate({
                    width: "+100%"
                }, 200, function() {
					nextBarInner.css("width", "100%");
					nextStep.addClass("current");				
					loadSubPage(flowSteps[currIndex].file);
				});
			},
			prev: function() {
				var currentStep = $("div.process-flow-step.current");
				var prevBar = currentStep.prev("div.process-flow-bar");
				var prevBarInner = prevBar.children("span.bar-inner");
				var prevStep = prevBar.prev("div.process-flow-step");
					
				flowSteps[currIndex].__v = true;
				currIndex--;
				while (currIndex >= 0) {
					if (flowSteps[currIndex].__enable == true)
						break;
					currIndex--;
				}
				if (currIndex < 0) {
					$.alert("No previous page, sth wrong?");
					return ;
				}
				currentStep.removeClass("current processed");
				prevBarInner.css("width", "100%");
				prevBar.addClass("processed");	
                prevBarInner.animate({
                    width: "-=100%"
                }, 200, function() {
					prevBar.removeClass("processed");
					prevStep.removeClass("processed").addClass("current");
					currentStep.removeClass("current processed");	
					loadSubPage(flowSteps[currIndex].file);
				});
			},
			exit: function() {
				$("#basic").click();
			}
		};

		if ($.exe())
			return ;
		loadSubPage(flowSteps[0].file);
		$.qd.internetDiag = 0;
	});
})();
</script>