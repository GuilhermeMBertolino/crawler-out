<script language="javascript" type="text/javascript">
var curPvpnObj;
var newPvpnObj;


function init() {
    curPvpnObj = $.act(ACT_GET, PPTPVPN, null, null);

    if (!$.exe()) {
        $("#pptpvpnEn").prop('checked', (curPvpnObj.enable == 1) ? true : false);
        $("#cliIpStart").prop('value', curPvpnObj.remoteIpStart);
        
        var remoteIpEndArray = (curPvpnObj.remoteIpEnd).split('.');
        $("#cliIpEndNum").prop('value', remoteIpEndArray[3]);
        var remoteIpSubnetArray = new Array(remoteIpEndArray[0], remoteIpEndArray[1], remoteIpEndArray[2]);
        var remoteIpSubnet = remoteIpSubnetArray.join('.');
        $("#cliIpSubnet").text("-" + remoteIpSubnet + ".");

        $("#username").prop('value', curPvpnObj.username);
        $("#password").prop('value', curPvpnObj.password);
    }
}

function checkParaValidity() {
    var temp_cliIpStart = $("#cliIpStart").val();
    var temp_cliIpEndNum = $("#cliIpEndNum").val();
    var temp_username = $("#username").prop("value");
    var temp_password = $("#password").prop("value");

    var cliIpStartArray = temp_cliIpStart.split('.');
    var cliIpStartNum = cliIpStartArray[3];

    if ((temp_cliIpStart == "") || (temp_cliIpStart == "0.0.0.0")) {
        $.alert(ERR_IP_FORMAT);
        $("#cliIpStart").focus().select();
        return false;        
    }
    if ((temp_cliIpStart != "") && (temp_cliIpStart != "0.0.0.0") && ($.ifip(temp_cliIpStart, true))) {
        $.alert(ERR_IP_FORMAT);
        $("#cliIpStart").focus().select();
        return false;
    }
    if (parseInt(cliIpStartNum, 10) < 1 || parseInt(cliIpStartNum, 10) > 254 ) {
        $.alert(ERR_IP_FORMAT);
        $("#cliIpStart").focus().select();
        return false;        
    }
    if (!$.isnum(temp_cliIpEndNum) || parseInt(temp_cliIpEndNum, 10) < 1 || parseInt(temp_cliIpEndNum, 10) > 254) {
         $.alert(ERR_IP_FORMAT);
        $("#cliIpEndNum").focus().select();
        return false;       
    }
    if (parseInt(temp_cliIpEndNum, 10) < cliIpStartNum) {
        $.alert(ERR_PVPN_ERR_CLI_IP_STARTNUM_GREATER);
        $("#cliIpStart").focus().select();
        return false;          
    }

    if (parseInt(temp_cliIpEndNum, 10) >= (parseInt(cliIpStartNum, 10) + 10)) {
        $.alert(ERR_PVPN_ERR_CLI_IP_MORE_THAN_TEN);
        $("#cliIpEndNum").focus().select();
        return false;           
    }
    /* checke conflict of lan, wan, openvpn ip subnet should be in rsl layer */

    var validCharsRegExp = /^[a-zA-Z0-9_-]+$/;
    if (validCharsRegExp.test(temp_username) == false || temp_username.length > 15) {
        $.alert(ERR_PVPN_INVALID_USERNAME_PASSWORD);   
        $("#username").focus().select();
        return false;           
    }
    if (validCharsRegExp.test(temp_password) == false || temp_password.length > 15) {
        $.alert(ERR_PVPN_INVALID_USERNAME_PASSWORD);  
        $("#password").focus().select();
        return false;           
    }

    return true;
}

function checkNothingChg() {
    if ((curPvpnObj.enable == 1 && $("#pptpvpnEn").prop('data-checked') == false) || (curPvpnObj.enable == 0 && $("#pptpvpnEn").prop('data-checked') == true)) {
        return false;
    }

    var cliIpEndArray = (curPvpnObj.remoteIpEnd).split('.');
    if (    ($("#cliIpStart").prop("value") != curPvpnObj.remoteIpStart) || 
            ($("#cliIpEndNum").prop("value") != parseInt(cliIpEndArray[3], 10)) ) {
        return false;
    }

    if (    ($("#username").prop('value') != curPvpnObj.username) ||
            ($("#password").prop('value') != curPvpnObj.password) ) {
        return false
    }

    return true;
}


$("#save").click(function() {
    $.addLoading($(this));
    if (!checkParaValidity()) {
        $.removeLoading();
        return;
    }

    if (checkNothingChg()) {
        $.removeLoading();
        return;
    }

    var pvpnEn = $("#pptpvpnEn").prop('data-checked') ? 1 : 0;
    var remoteIpStart = $("#cliIpStart").prop("value");
    var remoteIpStartArray = remoteIpStart.split('.');
    var remoteIpSubnetArray = new Array(remoteIpStartArray[0], remoteIpStartArray[1], remoteIpStartArray[2]);
    var remoteIpSubnet = remoteIpSubnetArray.join('.');
    var remoteIpEnd = remoteIpSubnet + "." + $("#cliIpEndNum").prop("value");
    var username = $("#username").prop("value");
    var password = $("#password").prop("value");

    if (parseInt(remoteIpStartArray[3], 10) > 1) {
        var localIpArray = new Array(remoteIpStartArray[0], remoteIpStartArray[1], remoteIpStartArray[2], parseInt(remoteIpStartArray[3], 10) - 1);
    } else {
        var localIpArray = new Array(remoteIpStartArray[0], remoteIpStartArray[1], remoteIpStartArray[2], parseInt($("#cliIpEndNum").prop("value"), 10) + 1);
    }
    var localIp = localIpArray.join('.');

    $.act(ACT_SET, PPTPVPN, null, null, ["enable=" + pvpnEn, "remoteIpStart=" + remoteIpStart, 
                            "remoteIpEnd=" + remoteIpEnd, "username=" + username, "password=" + password, 
        "localIp=" + localIp
    ]);
    $.exe(function(ret) {
        $.removeLoading();
        if (!ret) {
            $.reload();
        }
    });

});
</script>
<h3 id="t_pptpvpn">PPTP VPN</h3>
<div class="content-container">
    <form class="pure-form pure-form-aligned">
        <div>
            <b class="l" id="t_empty"></b>
            <input type="checkbox" id="pptpvpnEn" />
            <label id="t_enPvpn">Enable VPN Server</label>
        </div>
        <div>
            <b class="l" id="t_cliIp">Client IP Address:</b>
            <input type="text" id="cliIpStart" class="l" required />
            <span id="cliIpSubnet">-</span>
            <input type="text" id="cliIpEndNum" class="s" required />
            <span id="t_cliNum">(up to 10 clients)</span>
        </div>
        <div>
            <b class="l" id="t_username">Username:</b>
            <input type="text" id="username" class="xl" required />
        </div>
        <div>
            <b class="l" id="t_password">Password:</b>
            <input type="password" id="password" class="xl" required />
        </div>
        <div class="part-separate">
            <button type="submit" class="green T_save" id="save">Save</button>
        </div>
    </form>
</div>

<script language="javascript" type="text/javascript">
$.tpInit(init);
</script>
