<div>
    <div class="titleBar">
        <a url='usbSettings.mobile.htm'><span class="icon-back sprite c-arrow-blue-left" ></span></a>
        <h1>Device Settings</h1>
        <a id='refresh' data-status='scan'>Scan</a>
    </div>

    <span id="listHead" class="nd"></span>
</div>
<div class="no-item nd" id="no-dev">
    <div class="sprite grid-no-device"></div>
    <span class="text-no-item">
        <script type="text/html" class="title-string">
            <%=$.tpLang.parentCtrl_nstr.t_nodevice%>
        </script>
    </span>
</div>

<script type='text/javascript'>
(function() {
    $.tpLocal('title-string', $.tpLang);
    $('.titleBar').titleBar();
    $('.titleBar').titleBar('title', $.tpLang.menu_str.disk);
    $('#refresh').titleButton('status', 'scan', $.tpLang.m_str.scan);

    var appendParent = $('#listHead').parent();

    var usbDeviceList;
    var volumeList;
    var smbService;
    var accessFolderList;
    var numAliveDev = 0;
    var numAliveLog = 0;


    (function init() {
        usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);
        volumeList = $.act(ACT_GL, LOGICAL_VOLUME, null, null);
        smbService = $.act(ACT_GET, SMB_SERVICE, null, null, null);
        accessFolderList = $.act(ACT_GL, SMB_SERVICE_FOLDER, null, null, null);

        if (!$.exe()) {
            if (0 == usbDeviceList.length) {
                $('#no-dev').removeClass('nd');
                return;
            }

            var idx;
            for (idx = 0; idx < usbDeviceList.length; idx++) {
                if ("Online" == usbDeviceList[idx].status) {
                    numAliveDev++;
                }
            }

            for (idx = 0; idx < volumeList.length; idx++) {
                if ("Online" == volumeList[idx].status) {
                    numAliveLog++;
                }
            }

            for (idx = 1; idx <= usbDeviceList.length; idx++) {
                if ("Online" == usbDeviceList[idx - 1].status) {

                    var diskInfo = usbDeviceList[idx - 1].vendor /*+ ' ' + usbDeviceList[idx - 1].model*/;
                    var deviceDiv = $('<div class="link-list"><div class="section-container"><div class="section-box"><div class="device-div" id="volumeTbl' + idx + '">' 
                        + '<div class="device-label"><span class="sprite grid-row-usb"></span><span class="text">' + diskInfo + '</span></div>' 
                        + '<div class="device-content"></div>'
                        + '</div></div></div></div>').appendTo(appendParent);

                    
                    for (var i = 0; i < volumeList.length; i++) {
                        if (((usbDeviceList[idx - 1].__stack).split(','))[0] == ((volumeList[i].__stack).split(','))[0]) {

                            var lineDiv = $('<div class="device-line">'
                                        + '<div class="device-info">'
                                        + '<div class="device-info-name">' + volumeList[i].name + '</div>'
                                        + '<div class="device-info-item">'
                                        + '<span class="device-info-title">' + $.tpLang.table_str.capacity + ':' + '</span>'
                                        + '<span class="device-info-text">' + volumeList[i].capacity + '</span>'
                                        + '</div><div class="device-info-item">'
                                        + '<span class="device-info-title">' + $.tpLang.table_str.freeSpace + ':' + '</span>'
                                        + '<span class="device-info-text">' + volumeList[i].freeSpace + '</span>'
                                        + '</div></div>'
                                        + '<div class="op"><input type="checkbox" id="vol' + i + '" /></div></div>');

                            lineDiv.appendTo($('#volumeTbl' + idx).find('.device-content').first());

                            $('#vol' + i).flipSwitch();
                            var clickFunc;

                            if (volumeList[i].status == "Online") {
                                $('#vol' + i).flipSwitch({
                                    'on': true
                                });
                                clickFunc = function() {
                                    var index = (this.id).replace('vol', '');
                                    ableFunc(index);
                                };
                            } else if ("Error" == volumeList[i].status) {
                                $('#vol' + i).flipSwitch({
                                    'on': true,
                                    'disabled': true
                                });
                                clickFunc = function() {};
                            } else if (("Offline" == volumeList[i].status) && (1 == volumeList[i].enable)) {
                                if (0) {
                                    $('#vol' + i).flipSwitch({
                                        'on': false
                                    });
                                    clickFunc = function() {
                                        var index = (this.id).replace('vol', '');
                                        ableFunc(index);
                                    };
                                    if (8 > numAliveLog) {
                                        clickFunc = function() {
                                            var index = (this.id).replace('vol', '');
                                            handleVolumeForce(index);
                                            ableFunc(index);
                                        };
                                    }
                                } else {
                                    if (8 > numAliveLog) {
                                        $('#vol' + i).flipSwitch({
                                            'on': false
                                        });
                                        clickFunc = function() {
                                            var index = (this.id).replace('vol', '');
                                            handleVolumeForce(index);
                                        };
                                    } else {
                                        $('#vol' + i).flipSwitch({
                                            'on': true,
                                            'disabled': true
                                        });
                                        clickFunc = function() {};
                                    }
                                }
                            } else {
                                $('#vol' + i).flipSwitch({
                                    'on': false
                                });
                                clickFunc = function() {
                                    var index = (this.id).replace('vol', '');
                                    ableFunc(index);
                                };
                            }

                            if ((0 == usbDeviceList[idx - 1].enable) || ("Online" != usbDeviceList[idx - 1].status)) {
                                $('#vol' + i).flipSwitch({
                                    'on': true,
                                    'disabled': true
                                });
                                clickFunc = function() {};
                            }

                            $('#vol' + i).unbind('on.flipSwitch').unbind('off.flipSwitch')
                                .bind('on.flipSwitch', clickFunc)
                                .bind('off.flipSwitch', clickFunc);
                        }
                    }

                    $.addDeviceBlock($('#volumeTbl' + idx));

                    if ("Online" == usbDeviceList[idx - 1].status) {
                        var removeIcon = $.addRemoveIcon(deviceDiv);
                        removeIcon.prop('id', 'removeIcon' + (idx - 1));
                        removeIcon.bind('click', function() {
                            handleUsb(this.id.replace('removeIcon', ''));
                        });
                    }
                }
            }
        }
    })();

    function handleUsb(idx) {
        var command = {};

        if ("Online" == usbDeviceList[idx].status) {
            command.enable = 0;
            usbDeviceList[idx].enable = 0;
        } else if (("Standby" == usbDeviceList[idx].status) && (1 == usbDeviceList[idx].enable)) {
            usbDeviceList[idx].enable = 0;
            command.enable = 0;
        } else {
            usbDeviceList[idx].enable = 1;
            command.enable = 1;
        }

        $.act(ACT_SET, USB_DEVICE, usbDeviceList[idx].__stack, null, command);
        var usbDevice = $.act(ACT_GET, USB_DEVICE, usbDeviceList[idx].__stack, null, null);

        if (!$.exe()) {
            $.reload();
        }
    }

    function mountUsb(idx) {
        var command = {};
        if (("Standby" == usbDeviceList[idx].status) && (1 == usbDeviceList[idx].enable)) {
            command.enable = 1;
            $.act(ACT_SET, USB_DEVICE, usbDeviceList[idx].__stack, null, command);
            var usbDevice = $.act(ACT_GET, USB_DEVICE, usbDeviceList[idx].__stack, null, null);

            if (!$.exe()) {
                $.reload();
            }
            return;
        }
    }

    function ableFunc(num) {
        var command = {};

        if ("Online" == volumeList[num].status) {
            command.enable = 0;
        } else if ("Error" == volumeList[num].status) {
            return;
        } else if (("Offline" == volumeList[num].status)) {
            command.enable = 1;
        } else {
            $.reload();
        }

        $.act(ACT_SET, LOGICAL_VOLUME, volumeList[num].__stack, null, command);
        var volume = $.act(ACT_GET, LOGICAL_VOLUME, volumeList[num].__stack, null, null);

        $.exe(function() {
            $.reload();
        });
    }

    function handleVolumeForce(num) {
        var command = {};

        if (("Offline" == volumeList[num].status) && (1 == volumeList[num].enable)) {
            command.enable = 1;
            command.force = 1;
            $.act(ACT_SET, LOGICAL_VOLUME, volumeList[num].__stack, null, command);
            var volume = $.act(ACT_GET, LOGICAL_VOLUME, volumeList[num].__stack, null, null);

            if (!$.exe()) {
                $.reload();
            }
            return;
        }
    }

    $("#refresh").on('click', function() {
        $.startWaitingMobile($.tpLang.m_str.waiting);
        usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);

        if (!$.exe()) {
            if (0 == usbDeviceList.length) {
                $.stopWaitingMobile();
                $.reload();
                return;
            }

            var idx;

            for (idx = 0; idx < usbDeviceList.length; idx++) {
                usbDeviceList[idx].enable = 1;
                mountUsb(idx);
            }
            $.stopWaitingMobile();
            $.reload();
        }
    });



})();
</script>
