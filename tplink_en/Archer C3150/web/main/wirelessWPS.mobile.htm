<div class="titleBar">
    <a id="back" url="wireless.mobile.htm">
        <span class="icon-back sprite c-arrow-blue-left"></span>
    </a>
    <h1>WPS</h1>
</div>
<div id="wpsContent" class="item-list border-bottom-none mt15">
    <div class="section-container" id="wpsSwitch_2g">
    <div class="section-box">
        <div></div>
        <input type="checkbox" id="wpsEn_2g" />
    </div>
</div>
<div id="wpsWizard_2g">
        <div class="section-container border-bottom mtNo">
            <div class="section-box single">
            <label class="section-labelTitle"><script type="text/html" class="trans" ><%=$.tpLang.wps_nstr.c_wpsMethod%></script></label>
            <select class="fu" id="setupMethod_2g">
                <option value="pbc_2g"><script type="text/html" class="trans" ><%=$.tpLang.wps_nstr.c_pbc%></script></option>
                <option value="pin_2g"><script type="text/html" class="trans" ><%=$.tpLang.wps_nstr.c_pinnum%></script></option>
            </select>
        </div>
    </div>
    <div id="pushBtnDiv">
        <div>
            <input type="checkbox" advanced="wps" id="pbcConn_2g" />
            <label for="pbcConn_2g">
                <span><script type="text/html" class="trans" ><%=$.tpLang.m_str.start%></script></span>
                <span><script type="text/html" class="trans" ><%=$.tpLang.wps_nstr.c_wps%></script></span>
            </label>
        </div>

        <p class="section-note mt16 c999 mt20">
            <script type="text/html" class="trans" ><%=$.tpLang.wps_nstr.c_startWPS%></script>
        </p>

    </div>
    <div id="pinCodeDiv" class="nd">
            <div class="item-list mt15">
                <div class="section-container">
            <div class="section-box">
                <input type="text" id="clientPin_2g">
            </div>
            <div class="section-box">
                <input type="button" id="pinConn_2g">
            </div>
        </div>
            </div>
        <p class="section-note mt16 c999">
            <script type="text/html" class="trans" ><%=$.tpLang.wps_nstr.c_connectClient%></script>
        </p>
            <div class="item-list mt25">
                <div class="section-container">
            <div class="section-box">
                <div></div>
                <input type="checkbox" id="pinEn_2g" />
            </div>
        </div>
        <div class="section-container mtNo">
                    <div class="section-box single">
                <div class="section-box">
                    <input type="text" id="pinNum_2g" value="123" readonly="true">
                </div>
                <div class="section-box">
                    <input type="button" id="t_genPin_2g">
                    <input type="button" id="t_defPin_2g">
                </div>
            </div>
        </div>
            </div>
        <p class="section-note mt15 c999 mb15">
            <script type="text/html" class="trans" ><%=$.tpLang.wps_nstr.c_notePIN%></script>
        </p>
    </div>
</div>
</div>
<script type="text/javascript">
(function() {
    var lock2 = false, lock5 = false;
    $.tpLocal('trans', $.tpLang);
    $('.titleBar').titleBar({
        title: $.tpLang.menu_str.wps
    });

    $('#pbcConn_2g').checkboxMobile({

    }).on('check.checkboxMobile', function() {
        setWPSBtn($(this));
        $('#pinConn_2g').buttonMobile({
            disabled: true
        });
        connect(wpsObj_2g, '_2g');
        connect(wpsObj_5g, '_2g');
        wpsTimeout();
    }).on('uncheck.checkboxMobile', function() {
        resetWPSBtn($(this));

        disconnect(wpsObj_2g);
        disconnect(wpsObj_5g);
    });

    $('#wpsEn_2g').flipSwitch({
        'hasTitle': true,
        'title': $.tpLang.wps_nstr.c_enablewps
    }).bind('on.flipSwitch', function(e) {
        $('#wpsWizard_2g').show();

        $.startWaitingMobile();
        lock2 = true;
        lock5 = true;
        clickOnOff(1, wlanObj_2g, '_2g');
        clickOnOff(1, wlanObj_5g, '_5g');
    }).bind('off.flipSwitch', function(e) {
        $('#wpsWizard_2g').hide();

        $.startWaitingMobile();
        lock2 = true;
        lock5 = true;
        clickOnOff(0, wlanObj_2g, '_2g');
        clickOnOff(0, wlanObj_5g, '_5g');

    });

    $('#pinEn_2g').flipSwitch({
        'hasTitle': true,
        'title': $.tpLang.wps_nstr.c_enablepin
    }).bind('on.flipSwitch', function(e) {
        $.startWaitingMobile();
        pinOnOff(0, wpsObj_2g, '_2g');
        pinOnOff(0, wpsObj_5g, '_5g');
    }).bind('off.flipSwitch', function(e) {
        $.startWaitingMobile();
        pinOnOff(1, wpsObj_2g, '_2g');
        pinOnOff(1, wpsObj_5g, '_5g');
    });

    $('#setupMethod_2g').selectMobile()
            .on('change', function() {
                var value = $(this).selectMobile('value');
                if (value == 'pbc_2g') {
                    $('#pushBtnDiv').show();
                    $('#pinCodeDiv').hide();
                } else {
                    $('#pushBtnDiv').hide();
                    $('#pinCodeDiv').show();
                }
            });


    $('#pinConn_2g').buttonMobile({
        text: $.tpLang.m_str.conn
    }).on('click.wps', function() {
        $.buttonWaiting($('#pinConn_2g'), {
            msg: $.tpLang.m_str.connecting
        });
        $(this).prop('disabled', 'true');

        $('#pbcConn_2g').checkboxMobile('option','disabled', true);

        connect(wpsObj_2g, '_2g');
        connect(wpsObj_5g, '_2g');
        wpsTimeout();
    });

    $('#t_defPin_2g').buttonMobile({
        text: $.tpLang.wps_nstr.t_defPin_2g
    }).on('click.wps', function(e) {
        $.startWaitingMobile();
        defaultPin(wpsObj_2g, '_2g');
    });

    $('#t_genPin_2g').buttonMobile({
        text: $.tpLang.wps_nstr.t_genPin_2g
    }).on('click.wps', function(e) {
        $.startWaitingMobile()
        genNewPin(wpsObj_2g, '_2g');
    });

    $('#clientPin_2g').inputBoxMobile({
        'title': $.tpLang.wps_nstr.c_clientPin,
        'warnings': [{
            func: function() {
                return checkPIN($(this).val());
            }
        }]
    });

    $('#pinNum_2g').inputBoxMobile({
        'title': $.tpLang.wps_nstr.c_curpin
    });

    var wlanObj_2g,
            wlanObj_5g,
            wpsObj_2g,
            wpsObj_5g,
            wlanEn_2g,
            wlanChanged_2g,
            devPIN_2g,
            qssEnable_2g,
            SSIDAdvEnabled_2g,
            setupLock_2g,
            wlanEn_5g,
            wlanChanged_5g,
            devPIN_5g,
            qssEnable_5g,
            SSIDAdvEnabled_5g,
            setupLock_5g,
            wpsObjNew_2g,
            wpsObjNew_5g;
    var time;

    function clickOnOff(isEnable, wlanObj, band) {
        $.act(ACT_SET, LAN_WLAN_WPS, wlanObj.__stack, null, ["Enable=" + isEnable,
                    "DevicePassword=" + parseInt($('#pinNum_2g').prop('value'), 10)
        ]);
        if (isEnable == 1) {
            $.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, ["SSIDAdvertisementEnabled=1"]);
            //            $('#wpsWizard' + band).removeClass('nd');
        } else {
            //            $('#wpsWizard' + band).addClass('nd');
        }
        $.exe(function() {

            if (band == '_2g') {
                lock2 = false;
            } else {
                lock5 = false;
            }
            if (lock2 === false && lock5 === false) {
            $.stopWaitingMobile();
            }

        });
    }

    function pinOnOff(isEnable, wpsObj, band) {
        $.act(ACT_SET, LAN_WLAN_WPS, wpsObj.__stack, null, ["SetupLock=" + isEnable]);
        $.exe(function() {
            $.stopWaitingMobile();
        });
    }

    function checkPIN(pinStr) {
        if (pinStr.length == 0) {
            return e_str[ERR_WLAN_PIN_EMPTY];
        } else if (ret = $.num(pinStr, [0, 99999999], true)) {
            if (ret == ERR_NUM_INVAD) {
                return e_str[ERR_WLAN_PIN_INVALID];
            } else {
                return e_str[ERR_WLAN_PIN_LEGNTH_INVALID];
            }
            if (pinStr.length < 8) {
                return e_str[ERR_WLAN_PIN_LEGNTH_INVALID];
            }
        } else if (false == pinCheckSum(pinStr)) {
            return e_str[ERR_WLAN_PIN_CHECKSUM_FAIL];
        } else {
            return true;
        }
    }

    function pinCheckSum(pinStr) {
        var pinNum = parseInt(pinStr, 10);
        if (pinNum == 0) {
            return false;
        }
        var accum = 0;
        accum += 3 * (Math.floor((pinNum / 10000000)) % 10);
        accum += 1 * (Math.floor((pinNum / 1000000)) % 10);
        accum += 3 * (Math.floor((pinNum / 100000)) % 10);
        accum += 1 * (Math.floor((pinNum / 10000)) % 10);
        accum += 3 * (Math.floor((pinNum / 1000)) % 10);
        accum += 1 * (Math.floor((pinNum / 100)) % 10);
        accum += 3 * (Math.floor((pinNum / 10)) % 10);
        accum += 1 * (pinNum % 10);
        if (accum % 10 == 0)
            return true;
        else
            return false;
    }


    function disconnect(wpsObj) {
        $.act(ACT_SET, LAN_WLAN_WPS, wpsObj.__stack, null, ["X_TP_State=Idle"]);
        //        $.exe();
    }

    function connect(wpsObj, band) {
        var pinNum = 0;
        if ($('#setupMethod' + band).selectMobile('value') == ('pin' + band)) {
            if (!$('#clientPin' + band).inputBoxMobile('checkValue')) {
                return;
            } else {
                pinNum = parseInt($('#clientPin' + band).prop('value'), 10);
            }
        }
        $.act(ACT_SET, LAN_WLAN_WPS, wpsObj.__stack, null, ["X_TP_State=InProgress", "X_TP_PeerPassword=" + pinNum]);
        $.exe(function(ret) {
            if (!ret) {}
        });
    }
    function wpsTimeout() {
        clearTimeout(time);

        wpsObjNew_2g = $.act(ACT_GET, LAN_WLAN_WPS, wpsObj_2g.__stack, null, ["Enable", "X_TP_State", "X_TP_PeerPassword"]);
        wpsObjNew_5g = $.act(ACT_GET, LAN_WLAN_WPS, wpsObj_5g.__stack, null, ["Enable", "X_TP_State", "X_TP_PeerPassword"]);
        $.exe(function() {
            wpsStateShow(wpsObjNew_2g, wpsObjNew_5g, '_2g');
            //            wpsStateShow(wpsObjNew_5g, '_5g');
        });
    }

    function resetWPSBtn(wpsBtn) {
        $(wpsBtn).checkboxMobile({
            label: '<span>' + $.tpLang.m_str.start + '</span><span>' + $.tpLang.wps_nstr.c_wps + '</span>',
            checked: false
        });
        $(wpsBtn).checkboxMobile('option','disabled', false);
    }

    function setWPSBtn(wpsBtn) {
        $(wpsBtn).checkboxMobile({
            label: '<span>' + $.tpLang.wps_nstr.c_wps + '</span><span></span>',
            checked: true
        });
        $(wpsBtn).checkboxMobile('option','disabled', true);
    }

    function wpsStateShow(wpsObj, wpsObj5g,  band) {
        var resetBtn = function () {
            resetWPSBtn($('#pbcConn' + band));
            $('#pinConn' + band).buttonMobile({
                disabled: false
            });
            $.buttonWaiting($('#pinConn' + band), {
                stop: true
            });
        };
        if ((wpsObj.enable == 0 || wpsObj5g.enable == 0) && time !== undefined) {
            resetBtn();
            clearTimeout(time);
            return;
        }
        /**
         * 状态右2.4g和5g共同决定，状态表如下
         * 2g\5g         Idle        InProgress        Success        Other
         *---------------------------------------------------------------------
         * Idle          Idle        InProgress        Success         fail
         * InProgress    InProgress  InProgress        Success         fail
         * Success       Success     Success           Success         Success
         * Other         fail        fail              Success         fail
         */
        var wpsState = wpsObj.X_TP_State;
        var wpsState5g = wpsObj5g.X_TP_State;
        var wpsPeerPw = wpsObj.X_TP_PeerPassword;
        if ("Idle" == wpsState && "Idle" == wpsState5g) {
            //Idle
            resetBtn();
        } else {
            //InProgress
            if (("InProgress" == wpsState && "InProgress" == wpsState5g) ||
                    ("InProgress" == wpsState && "Idle" == wpsState5g) ||
                    ("Idle" == wpsState && "InProgress" == wpsState5g)) {
                $('#pbcConn' + band).checkboxMobile('option','disabled', true);
                $('#pinConn' + band).buttonMobile({
                    disabled: true
                });
                clearTimeout(time);
                time = $.timeout(wpsTimeout, 5000);
                if (wpsPeerPw > 0) {
                    $.buttonWaiting($('#pinConn' + band), {
                        msg: $.tpLang.m_str.connecting
                    });
                } else {
                    setWPSBtn($('#pbcConn' + band));
                }
            } else if ("Success" == wpsState || "Success" == wpsState5g) {
                //success
                resetBtn();
                $.toastMobile($.tpLang.s_str.qss_ok);
            } else {
                //fail
                resetBtn();
                $.alert($.tpLang.s_str.qss_fail);
            }

        }
    }

    function pinChange(devicePassword) {
        var pinStr = devicePassword.toString();
        var hasFrontZero = "";
        for (var i = pinStr.length + 1; i <= 8; i++) {
            hasFrontZero += "0";
        }
        hasFrontZero += pinStr;
        return hasFrontZero;
    }

    function genNewPin(wpsObj, band) {
        $.act(ACT_OP, ACT_OP_WLAN_GET_NEW_PIN, wpsObj.__stack);
        $.exe(function(ret) {
            if (!ret) {
                var wpsObjNew = $.act(ACT_GET, LAN_WLAN_WPS, wpsObj.__stack, null, ["DevicePassword"]);
                $.exe(function(ret) {
                    if (!ret) {
                        var tempPin = pinChange(wpsObjNew.devicePassword);
                        $('#pinNum' + band).prop('value', tempPin);
                    }
                    $.stopWaitingMobile();
                });
            }
        });
    }

    function defaultPin(wpsObj, band) {
        $.act(ACT_OP, ACT_OP_WLAN_RESTORE_PIN, wpsObj.__stack);
        $.exe(function(ret) {
            if (!ret) {
                var wpsObjNew = $.act(ACT_GET, LAN_WLAN_WPS, wpsObj.__stack, null, ["DevicePassword"]);
                $.exe(function(ret) {
                    if (!ret) {
                        var tempPin = pinChange(wpsObjNew.devicePassword);
                        $('#pinNum' + band).prop('value', tempPin);
                    }
                    $.stopWaitingMobile();
                });
            }
        });
    }

    function initWPSShow(wpsObj_2g, wlanObj_2g,wpsObj_5g, wlanObj_5g, band) {
        if (wpsObj_2g.enable == 1 && wpsObj_5g.enable == 1) {
            $('#wpsEn' + band).flipSwitch({
                on: true
            });
            $('#wpsWizard' + band).removeClass('nd');
        } else {
            $('#wpsEn' + band).flipSwitch({
                on: false
            });
            $('#wpsWizard' + band).addClass('nd');
        }
        if (wpsObj_2g.setupLock == 0 && wpsObj_5g.setupLock == 0) {
            $('#pinEn' + band).flipSwitch({
                on: true
            });
        } else {
            $('#pinEn' + band).flipSwitch({
                on: false
            });
        }
        var tempPIN = pinChange(wpsObj_2g.devicePassword);
        $('#pinNum' + band).prop('value', tempPIN);

        if (0 == wlanObj_2g.enable || 0 == wlanObj_5g.enable) {
            $('#wpsWizard' + band).addClass('nd');
            $('#wpsEn' + band).flipSwitch({
                disabled: true
            });
            $.errorTipMobile('wpsEn' + band, ERR_WLAN_DISABLED);
        }

        if (("Basic" == wlanObj_2g.beaconType && "WEPEncryption" == wlanObj_2g.basicEncryptionModes) ||
                ("Basic" == wlanObj_5g.beaconType && "WEPEncryption" == wlanObj_5g.basicEncryptionModes)) {
            $('#wpsEn' + band).flipSwitch({
                disabled: true
            });
            $.errorTipMobile('wpsEn' + band, ERR_WLAN_QSS_CONFLICT);
        } else if (("WPA" == wlanObj_2g.beaconType && ("PSKAuthentication" != wlanObj_2g.WPAAuthenticationMode || wlanObj_2g.WPAEncryptionModes == "TKIPEncryption")) ||
                ("WPA" == wlanObj_5g.beaconType && ("PSKAuthentication" != wlanObj_5g.WPAAuthenticationMode || wlanObj_5g.WPAEncryptionModes == "TKIPEncryption"))) {
            $('#wpsEn' + band).flipSwitch({
                disabled: true
            });
            $.errorTipMobile('wpsEn' + band, ERR_WLAN_QSS_CONFLICT);
        } else if ((("11i" == wlanObj_2g.beaconType || "WPAand11i" == wlanObj_2g.beaconType) &&
                ("PSKAuthentication" != wlanObj_2g.IEEE11iAuthenticationMode || wlanObj_2g.IEEE11iEncryptionModes == "TKIPEncryption")) ||
                (("11i" == wlanObj_5g.beaconType || "WPAand11i" == wlanObj_5g.beaconType) &&
                        ("PSKAuthentication" != wlanObj_5g.IEEE11iAuthenticationMode || wlanObj_5g.IEEE11iEncryptionModes == "TKIPEncryption"))) {
            $('#wpsEn' + band).flipSwitch({
                disabled: true
            });
            $.errorTipMobile('wpsEn' + band, ERR_WLAN_QSS_CONFLICT);
        }

        var wpsPeerPw = wpsObj_2g.X_TP_PeerPassword;

        if (wpsObj_2g.X_TP_State == 'Idle');

        if (wpsPeerPw > 0) {
            var tempPIN = "";
            var pinStr = wpsPeerPw.toString();
            for (var i = pinStr.length + 1; i <= 8; i++) {
                tempPIN += "0";
            }
            tempPIN += pinStr;
            $('#setupMethod' + band).selectMobile('value', 'pin' + band);
            $('#clientPin' + band).prop('value', tempPIN);
        }
    }

    function init() {
        var wlanList = $.act(ACT_GL, LAN_WLAN, null, null, ["name",
            "Enable",
            "SSIDAdvertisementEnabled",
            "X_TP_Configuration_Modified",
            "BeaconType",
            "WPAAuthenticationMode",
            "WPAEncryptionModes",
            "IEEE11iEncryptionModes",
            "IEEE11iAuthenticationMode",
            "BasicEncryptionModes",
            "X_TP_Band"
        ]);

        if (!$.exe()) {
            $.each(wlanList, function() {
                if ("2.4GHz" == this.X_TP_Band) {
                    wlanObj_2g = this;
                } else if (INCLUDE_LAN_WLAN_DUALBAND && "5GHz" == this.X_TP_Band) {
                    wlanObj_5g = this;
                }
            });

            wpsObj_2g = $.act(ACT_GET, LAN_WLAN_WPS, wlanObj_2g.__stack, null, ["Enable", "DevicePassword", "SetupLock", "X_TP_State", "X_TP_PeerPassword"]);
            if (!$.exe()) {}
            wpsObj_5g = $.act(ACT_GET, LAN_WLAN_WPS, wlanObj_5g.__stack, null, ["Enable", "DevicePassword", "SetupLock", "X_TP_State", "X_TP_PeerPassword"]);
            if (!$.exe()) {

            }
        }

        initWPSShow(wpsObj_2g, wlanObj_2g, wpsObj_5g, wlanObj_5g,'_2g');
        //        initWPSShow(wpsObj_5g, wlanObj_5g, '_5g');
        time = $.timeout(wpsTimeout, 100);
    }

    init();
})();
</script>
