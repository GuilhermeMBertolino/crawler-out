<div class="titleBar">
    <a id="back" url="wireless.mobile.htm">
        <span class="icon-back sprite c-arrow-blue-left"></span>
    </a>
    <h1>Wireless Settings</h1>
    <a id="save" data-status="save">Save</a>
</div>

<div class="button-group">
    <input type="radio" name="mode" advanced="button-group-first" id="2ghz" checked="true" />
    <label for="2ghz"><script type="text/html" class="trans"><%=$.tpLang.s_str.tap2g%></script> </label>
    <input type="radio" name="mode" advanced="button-group-last" id="5ghz" />
    <label for="5ghz"><script type="text/html" class="trans"><%=$.tpLang.s_str.tap5g%></script> </label>
</div>
<div id="2gShow" class="">
    <div class="item-list">
    <div class="section-container">
        <div class="section-box">
            <div></div>
            <input type="checkbox" id="wlEn" />
        </div>
    </div>

        <div class="section-container mtNo wlShow">
            <div class="section-box single">
            <input maxlength="32" id="ssid" type="text" />
            <div class="mt10">

                <input id="hideSSID" type="checkbox" />
                <label for="hideSSID"></label>
            </div>
        </div>
        </div>
    </div>

    <div class="item-list mt15 wlShow">
        <div class="section-container">
        <div class="section-box">
            <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.wlsec%></script></label>
            <select id="sec" class="fu">
                <option value="0" id="noSec"><script type="text/html" class="trans"><%=$.tpLang.s_str.wldissec%></script></option>
                <option value="1" id="wpa2Personal"><script type="text/html" class="trans"><%=$.tpLang.s_str.wlsecpersonalrec%></script></option>
                <option value="2" id="wpa2Enterprise"><script type="text/html" class="trans"><%=$.tpLang.s_str.wlsecenterprise%></script></option>
                <option value="3" id="wep"><script type="text/html" class="trans"><%=$.tpLang.s_str.wlsecwep%></script></option>
            </select>

        </div>

        <div id="hideWpa2Personal" class="nd">
            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.version%></script></label>
                <select id="versionPersonal" class="fu">
                    <option value="verPersonalAuto"><script type="text/html" class="trans"><%=$.tpLang.s_str.auto%></script></option>
                    <option value="verPersonalWpa2"><script type="text/html" class="trans"><%=$.tpLang.s_str.wpa2%></script></option>
                </select>
            </div>

            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.encryption%></script></label>
                <select id="encryptionPersonal" class="fu">
                    <option value="encrypPersonalAuto" id="encrypPersonalAuto"><script type="text/html" class="trans"><%=$.tpLang.s_str.auto%></script></option>
                    <option value="encrypPersonalTkip" id="encrypPersonalTkip"><script type="text/html" class="trans"><%=$.tpLang.wirelessSettings_nstr.t_tkip%></script></option>
                    <option value="encrypPersonalAes" id="encrypPersonalAes"><script type="text/html" class="trans"><%=$.tpLang.wirelessSettings_nstr.t_aes%></script></option>
                </select>
            </div>
            <div class="section-box">
                <input type="text" maxlength="64" id="wpa2PersonalPwd">
            </div>
        </div>

        <div id="hideWpa2Enterprise" class="nd">
            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.version%></script></label>
                <select id="versionEnterprise" class="fu">
                    <option value="verEnterpriseAuto"><script type="text/html" class="trans"><%=$.tpLang.s_str.auto%></script></option>
                    <option value="verEnterpriseWpa2"><script type="text/html" class="trans"><%=$.tpLang.s_str.wpa2nopsk%></script></option>

                </select>
            </div>

            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.encryption%></script></label>
                <select id="encryptionEnterprise" class="fu">
                    <option value="encrypEnterpriseAuto" id="encrypEnterpriseAuto"><script type="text/html" class="trans"><%=$.tpLang.s_str.auto%></script></option>
                    <option value="encrypEnterpriseTkip" id="encrypEnterpriseTkip"><script type="text/html" class="trans"><%=$.tpLang.wirelessSettings_nstr.t_tkip%></script></option>
                    <option value="encrypEnterpriseAes" value="encrypEnterpriseAes"><script type="text/html" class="trans"><%=$.tpLang.wirelessSettings_nstr.t_aes%></script></option>
                </select>
            </div>

            <div class="section-box">
                <input type="text" id="wpa2EnterpriseIP">
            </div>

            <div class="section-box">
                <input type="text" maxlength="5" id="wpa2EnterprisePort">
            </div>

            <div class="section-box">
                <input type="text" id="wpa2EnterprisePwd">
            </div>
        </div>
        <div id="hideWep" class="nd">
            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.type%></script></label>
                <select id="wepType" class="fu">
                    <option value="typeAuto"><script type="text/html" class="trans"><%=$.tpLang.s_str.auto%></script></option>
                    <option value="typeOpenSys"><script type="text/html" class="trans"><%=$.tpLang.s_str.opensys%></script></option>
                    <option value="typeSharedKey"><script type="text/html" class="trans"><%=$.tpLang.s_str.sharekey%></script></option>
                </select>
            </div>

            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.wirelessSettings_nstr.t_selkey%></script></label>
                <select id="wepShareKey" class="fu">
                    <option value="1" id="key1" class="T_wepkey1"><script type="text/html" class="trans"><%=$.tpLang.s_str.wepkey1%></script></option>
                    <option value="2" id="key2" class="T_wepkey2"><script type="text/html" class="trans"><%=$.tpLang.s_str.wepkey2%></script></option>
                    <option value="3" id="key3" class="T_wepkey3"><script type="text/html" class="trans"><%=$.tpLang.s_str.wepkey3%></script></option>
                    <option value="4" id="key4" class="T_wepkey4"><script type="text/html" class="trans"><%=$.tpLang.s_str.wepkey4%></script></option>
                </select>
            </div>
        </div>

        <div id="hideKey1" class="nd">
            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.weptype%></script></label>
                <select id="key1Format" class="fu">
                    <option value="Ascii"><script type="text/html" class="trans"><%=$.tpLang.s_str.ascii%></script></option>
                    <option value="Hex"><script type="text/html" class="trans"><%=$.tpLang.s_str.hex%></script></option>
                </select>
            </div>

            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.keytype%></script></label>
                <select id="key1Type" class="fu">
                    <option value="64" checked="true"><script type="text/html" class="trans"><%=$.tpLang.s_str.bit64%></script></option>
                    <option value="128"><script type="text/html" class="trans"><%=$.tpLang.s_str.bit128%></script></option>
                </select>
            </div>
            <div class="section-box">
                <input type="text" id="wepKey1Value" name="wepKeyValue">
            </div>
        </div>

        <div id="hideKey2" class="nd">
            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.weptype%></script></label>
                <select id="key2Format" class="fu">
                    <option value="Ascii"><script type="text/html" class="trans"><%=$.tpLang.s_str.ascii%></script></option>
                    <option value="Hex"><script type="text/html" class="trans"><%=$.tpLang.s_str.hex%></script></option>
                </select>
            </div>

            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.keytype%></script></label>
                <select id="key2Type" class="fu">
                    <option value="64" checked="true"><script type="text/html" class="trans"><%=$.tpLang.s_str.bit64%></script></option>
                    <option value="128"><script type="text/html" class="trans"><%=$.tpLang.s_str.bit128%></script></option>
                </select>
            </div>

            <div class="section-box">
                <input type="text" id="wepKey2Value" name="wepKeyValue">
            </div>
        </div>

        <div id="hideKey3" class="nd">
            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.weptype%></script></label>
                <select id="key3Format" class="fu">
                    <option value="Ascii"><script type="text/html" class="trans"><%=$.tpLang.s_str.ascii%></script></option>
                    <option value="Hex"><script type="text/html" class="trans"><%=$.tpLang.s_str.hex%></script></option>
                </select>
            </div>

            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.keytype%></script></label>
                <select id="key3Type" class="fu">
                    <option value="64" checked="true"><script type="text/html" class="trans"><%=$.tpLang.s_str.bit64%></script></option>
                    <option value="128"><script type="text/html" class="trans"><%=$.tpLang.s_str.bit128%></script></option>
                </select>
            </div>

            <div class="section-box">
                <input type="text" id="wepKey3Value" name="wepKeyValue">
            </div>
        </div>

        <div id="hideKey4" class="nd">
            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.weptype%></script></label>
                <select id="key4Format" class="fu">
                    <option value="Ascii"><script type="text/html" class="trans"><%=$.tpLang.s_str.ascii%></script></option>
                    <option value="Hex"><script type="text/html" class="trans"><%=$.tpLang.s_str.hex%></script></option>
                </select>
            </div>

            <div class="section-box">
                <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.keytype%></script></label>
                <select id="key4Type" class="fu">
                    <option value="64" checked="true"><script type="text/html" class="trans"><%=$.tpLang.s_str.bit64%></script></option>
                    <option value="128"><script type="text/html" class="trans"><%=$.tpLang.s_str.bit128%></script></option>
                </select>
            </div>

            <div class="section-box">
                <input type="text" id="wepKey4Value" name="wepKeyValue">
            </div>
        </div>
        </div>
    </div>

    <div class="item-list mt15 wlShow">
        <div class="section-container">
        <div class="section-box">
            <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.mode%></script></label>
            <select id="mode" class="fu">
            </select>
        </div>
        </div>
    </div>

    <div class="item-list mt15 wlShow">
        <div class="section-container">
        <div class="section-box">
            <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.channel%></script></label>
            <select id="channel" class="fu">
            </select>
        </div>

        <div class="section-box">
            <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.s_str.chnwidth%></script></label>
            <select id="chnwidth" class="fu">
            </select>
        </div>

        <div class="section-box">
            <label class="section-labelTitle"><script type="text/html" class="trans"><%=$.tpLang.wirelessSettings_nstr.t_txpow%></script></label>
            <select id="transPower" class="fu">
                <option value="powerLow" id="powerLow"><script type="text/html" class="trans"><%=$.tpLang.wirelessSettings_nstr.t_low%></script></option>
                <option value="powerMiddle" id="powerMiddle"><script type="text/html" class="trans"><%=$.tpLang.wirelessSettings_nstr.t_middle%></script></option>
                <option value="powerHigh" id="powerHigh"><script type="text/html" class="trans"><%=$.tpLang.wirelessSettings_nstr.t_high%></script></option>
            </select>
        </div>
    </div>
</div>
</div>


<script type="text/javascript">
(function() {
    $.tpLocal('trans', $.tpLang);
    $('.titleBar').titleBar({
        title: $.tpLang.s_str.wl
    });
    $('#save').titleButton('status','save', $.tpLang.m_str.save)

    //    2.4|5
    $('#2ghz').radioMobile();

    $('#5ghz').radioMobile();

    $('#wlEn').checkboxMobile({
        'hasTitle': true,
        'title': $.tpLang.s_str.wlradio
    }).on('check.checkboxMobile', function() {
        $('.wlShow').slideDown('fast');
    }).on('uncheck.checkboxMobile', function() {
        $('.wlShow').slideUp('fast');
    });


    $('#ssid').inputBoxMobile({
        'title': $.tpLang.s_str.wlname,
        'warnings': [{
            func: function() {
                var s = $(this);
                var ssidLen = $.realLen(s.prop('value'));

                if (INCLUDE_LAN_WLAN_MSSID && INCLUDE_LAN_WLAN_GUESTNETWORK) {
                    if (s.prop('value') == guestVap_2g.SSID || s.prop('value') == guestVap_5g.SSID) {
                        return e_str[CMM_WLAN_SSID_CONFLICTE_WITH_GUESTNET];
                    }

                }
                if (ssidLen <= 0) {
                    return e_str[ERR_WLAN_SSID_IS_EMPTY];

                } else if (ssidLen > 32) {
                    return e_str[ERR_WLAN_SSID_LEN_OUTRANGE];
                }
                return true;
            }
        }]
    });

    $('#hideSSID').checkboxMobile({
        'label': $.tpLang.s_str.hidessid
    });

    $('select').selectMobile();

    $('#wpa2PersonalPwd').inputBoxMobile({
        'title': $.tpLang.s_str.wlpwd,
        'warnings': [{
            func: function() {
                var pwd = $(this).val();

                if (pwd.length == 0) {
                    return e_str[ERR_WLAN_WPA_PSK_EMPTY];
                } else if (pwd.length < 8) {
                    return e_str[ERR_WLAN_WPA_PSK_LENGTH_INVALID];
                } else if (pwd.length >= 64) {
                    if (!isHex(pwd, 0)) {
                        return e_str[ERR_WLAN_WPA_PSK_HEX_INVALID];
                    }
                    $(this).prop('value', $(this).prop('value').substr(0, 64));
                } else {
                    if ($.asc(pwd, true)) {
                        return e_str[ERR_WLAN_WPA_PSK_ASCII_INVALID];
                    }
                }
                return true;
            }
        }]
    });

    $('#wpa2EnterpriseIP').inputBoxMobile({
        'title': $.tpLang.wirelessSettings_nstr.t_srvIp,
        'ipOrMac': 'ip',
        'warnings': [{
            func: function() {
                var ip = $(this);
                var result = $.ifip(ip.prop('value'), true);
                if (result === 0) {
                    return true;
                } else {
                    return e_str[result];
                }
            }
        }]
    });

    $('#wpa2EnterprisePort').inputBoxMobile({
        'title': $.tpLang.wirelessSettings_nstr.t_srvPort,
        'warnings': [{
            func: function() {
                var port = $(this);
                if (port.prop('value') == 0) {
                    port.prop('value', 1812);
                }
                if (port.value > 65535 || port.value < 1) {
                    return e_str[ERR_WLAN_WPA_PORT_INVALID];
                } else {
                    return true;
                }
            }
        }]
    });

    $('#wpa2EnterprisePwd').inputBoxMobile({
        'title': $.tpLang.wirelessSettings_nstr.t_srvPwd,
        'warnings': [{
            func: function() {
                var pwd = $(this);
                if (pwd.prop('value').length == 0) {
                    return e_str[ERR_WLAN_WPA_PWD_EMPTY];
                } else if (pwd.prop('value').length > 64) {
                    return e_str[ERR_WLAN_WPA_PWD_INVALID];
                } else {
                    return true;
                }
            }
        }]
    });

    $('#wepKey1Value, #wepKey2Value, #wepKey3Value, #wepKey4Value').inputBoxMobile({
        'title': $.tpLang.s_str.keyvalue,
        'warnings': [{
            func: function() {
                var keyIndex = $('#wepShareKey').selectMobile('value');
                var keyValue = $('#wepKey' + keyIndex + 'Value');
                var isAcsii = 0;
                var is64 = 0;
                isAcsii = ($('#key' + keyIndex + 'Format').selectMobile('value') == 'Ascii') ? 1 : 0;
                is64 = ($('#key' + keyIndex + 'Type').selectMobile('value') == '64') ? 1 : 0;
                if (keyValue.prop('value').length == 0) {
                    return e_str[ERR_WLAN_WEP_NO_KEY];
                }

                if (isAcsii == 0 && !isHex(keyValue.prop('value'), 0)) {
                    return e_str[ERR_WLAN_WEP_KEY_HEX_INVALID];
                }

                if ($.asc(keyValue.prop('value'), true)) {
                    return e_str[ERR_WLAN_WEP_KEY_ASCII_INVALID];
                }

                if (keyValue.prop('value').length != ((is64 ? 40 : 104) / (isAcsii ? 8 : 4))) {
                    return e_str[ERR_WLAN_WEP_KEY_LENGTH_INVALID];
                }

                return true;
            }
        }]
    });

    //    logical
    var wlanObj_2g,
        wlanObj_5g,
        mssidObj_2g,
        mssidObj_5g,
        vapList_2g,
        vapList_5g,
        guestnetObj_2g,
        guestnetObj_5g,
        guestVap_2g,
        guestVap_5g,
        qssEnable_2g,
        qssEnable_5g;

    var wlSettings = {};
    wlSettings.band2g = {};
    wlSettings.band5g = {};

    var wepListTmp2g = [{}, {}, {}, {}];
    var wepListTmp5g = [{}, {}, {}, {}];

    function isHex(str, alert) {
        str = str.toLowerCase();
        for (var i = 0; i < str.length; i++) {
            if ((str.charAt(i) >= '0' && str.charAt(i) <= '9') || (str.charAt(i) >= 'a' && str.charAt(i) <= 'f'))
                continue;
            else {
                if (alert)
                    $.alertMobile(ERR_WLAN_WEP_KEY_HEX_INVALID);
                return false;
            }
        }
        if (parseInt(str, 16) == 0) {
            if (alert)
                $.alertMobile(ERR_WLAN_WEP_KEY_HEX_INVALID);
            return false;
        }
        return true;
    }

    function checkSSID(band) {
        return $('#ssid').inputBoxMobile('checkValue');
    }

    function checkPersonal(band) {
        if (!$('#wpa2PersonalPwd').inputBoxMobile('checkValue')) {
            return false;
        }

        /*    if ($.num($.id("interval").value, 0, [30, 999999999], true)) {
         $.alert(ERR_WLAN_WPA_INTERVAL_INVALID);
         return false;
         }*/
        if ((qssEnable_2g == 1 && band == '_2g') ||
            (qssEnable_5g == 1 && band == '_5g')) {
            if ($("#encrypPersonalTkip").prop('selected')) {
                $.alert(ERR_WLAN_QSS_TKIP_CONFLICT);
                return false;
            }
        }
        return true;
    }

    function checkEnterprise(band) {
        var ip = $('#wpa2EnterpriseIP');
        var port = $('#wpa2EnterprisePort');
        var pwd = $('#wpa2EnterprisePwd');

        if (!ip.inputBoxMobile('checkValue')) {
            return false;
        }
        if (!port.inputBoxMobile('checkValue')) {
            return false;
        }
        if (!pwd.inputBoxMobile('checkValue')) {
            return false;
        }
        /*    if ($.num($.id("wpainterval").value, 0, [30, 999999999], true)) {
         $.alert(ERR_WLAN_WPA_INTERVAL_INVALID);
         $.id("wpainterval").focus();
         $.id("wpainterval").select();
         return false;
         }*/
        if ((qssEnable_2g == 1 && band == '_2g') ||
            (qssEnable_5g == 1 && band == '_5g')) {
            if ($("#encrypPersonalTkip").prop('selected')) {
                $.alert(ERR_WLAN_QSS_TKIP_CONFLICT);
                return false;
            }
        }
        return true;
    }


    function checkWEP(band) {
        var keyIndex = $('#wepShareKey').selectMobile('value');
        var keyValue = $('#wepKey' + keyIndex + 'Value');

        if (!keyValue.inputBoxMobile('checkValue')) {
            return false;
        }

        /*when guest network is open, wep can not use.
        if ('_5g' == band && guestVap_5g.enable == 1) {
            $.alertMobile(ERR_WLAN_GUESTNETWORK_WEP_CONFLICT);
            return false;
        }
        if ('_2g' == band && guestVap_2g.enable == 1) {
            $.alertMobile(ERR_WLAN_GUESTNETWORK_WEP_CONFLICT);
            return false;
        }
        */
        return true;
    }

    function checkValue(band) {
        switch ($('#sec').selectMobile('value')) {
            case '0':
                return true;
                break;
            case '1':
                return checkPersonal(band);
                break;
            case '2':
                return checkEnterprise(band);
                break;
            case '3':
                return checkWEP(band);
                break;
        }
    }

    function initModeList(wlanObj, band) {
        var modeList = $('#mode');
        var optionStr;
        modeList.empty();
        if (band == '_5g') {
            if (INCLUDE_LAN_WLAN_AC) {
                $.each(strMode_AC, function() {
                    optionStr = '<option value="' + this[1] + '">' + this[0] + '</option>';
                    modeList.append(optionStr);
                });
            } else {
                $.each(strMode_AN, function() {
                    optionStr = '<option value="' + this[1] + '">' + this[0] + '</option>';
                    modeList.append(optionStr);
                });
            }
        } else {
            $.each(strMode_N, function() {
                optionStr = '<option value="' + this[1] + '">' + this[0] + '</option>';
                modeList.append(optionStr);
            });
        }
        $('#mode').selectMobile('value', wlanObj.standard);
        //            $('#mode' + ' ' + 'option[value="' + wlanObj.standard + '"]').prop('selected', 'selected');
        /*initBandWidth();*/
    }

    function initBandWidth(wlanObj, band) {
        var bandWidth = $('#chnwidth');
        var optionStr;
        var index;
        bandWidth.empty();

        if ("KR " == wlanObj.regulatoryDomain ||
            (("AM " == wlanObj.regulatoryDomain ||
                "BH " == wlanObj.regulatoryDomain ||
                "CR " == wlanObj.regulatoryDomain ||
                "EC " == wlanObj.regulatoryDomain ||
                "EG " == wlanObj.regulatoryDomain ||
                "SV " == wlanObj.regulatoryDomain ||
                "GL " == wlanObj.regulatoryDomain ||
                "GU " == wlanObj.regulatoryDomain ||
                "ID " == wlanObj.regulatoryDomain ||
                "JP " == wlanObj.regulatoryDomain ||
                "TN " == wlanObj.regulatoryDomain
            ) && ("_5g" == band))) {
            optionStr = '<option value="20M">20MHz</option>';
            bandWidth.append(optionStr);
            bandWidth.selectMobile('value', '20M');
            bandWidth.selectMobile('disabled', true);
            bandWidth.selectMobile('selectedIndex', 0);
            //                bandWidth.val("20M");
            //                bandWidth.prop("disabled", true);
            //                bandWidth.get(0).selectedIndex = 0;
        } else {
            $.each(strBandWidth, function(arg, index) {
                optionStr = '<option value="' + this[1] + '">' + this[0] + '</option>';
                bandWidth.append(optionStr);
            });
            if (INCLUDE_LAN_WLAN_AC && (wlanObj.standard == "ac" || wlanObj.standard == "ac-only" || wlanObj.standard == "nac")) {
                $.each(strBandWidth_AC, function(arg, index) {
                    if ('UA ' == wlanObj.regulatoryDomain || 'RU ' == wlanObj.regulatoryDomain) {
                        bandWidth.selectMobile('remove', 'Auto');
                        return true;
                    }
                    optionStr = '<option value="' + this[1] + '">' + this[0] + '</option>';
                    bandWidth.append(optionStr);
                });
            }
            bandWidth.selectMobile('disabled', false);

            if (wlanObj.X_TP_Bandwidth == "80M" && wlanObj.standard == "an") {
                //                    bandWidth.get(0).selectedIndex = 0;
                bandWidth.selectMobile('selectedIndex', 0);
            } else {
                bandWidth.selectMobile('value', wlanObj.X_TP_Bandwidth);
            }
        }

        wlanObj.X_TP_Bandwidth = bandWidth.selectMobile('value');
    }

    function initChannel(wlanObj, band) {
        var mask = 0x0;
        var modeValue = wlanObj.standard;
        var chwidthValue = wlanObj.X_TP_Bandwidth;
        var regionIndex;
        var enDFS = 0;
        dfsMask = (1 << IEEE80211_CHAN_REQUIRED_DFS);

        var channel = $('#channel');
        var optionStr;
        channel.empty();
        channel.append('<option value="0">' + $.tpLang.s_str.auto+ '</option>');

        if (band == "_2g") {
            mask = $.getWl24gMask(modeValue, chwidthValue);
        } else {
            mask = $.getWl5gMask(modeValue, chwidthValue);
        }

        for (var i in regionCodeInfo) {
            if (regionCodeInfo[i][1] == wlanObj.regulatoryDomain)
                regionIndex = i;
        }
        regionIndex = (regionIndex) * region_chan_table_shift

        for (i = 1; i <= TOTAL_CHANNEL; i++) {
            if (Region_chan_table[regionIndex + i] & mask) {

                if (band == "_2g" || (band == "_5g" && (((Region_chan_table[regionIndex + i] & dfsMask) == 0) || ((Region_chan_table[regionIndex + i] & dfsMask) && (enDFS == 1))))) {
                    optionStr = '<option value="' + chan_index_map[i - 1] + '">' + chan_index_map[i - 1] + '</option>';
                    channel.append(optionStr);
                }
            }
        }

        if (wlanObj.autoChannelEnable == 1) {
            channel.selectMobile('value', 0);
        } else {
            channel.selectMobile('value', wlanObj.channel);
        }

    }

    function initPower(wlanObj, band) {
        var powerSupported = wlanObj.transmitPowerSupported.split(',');
        powerSupported.sort(function(a, b) {
            return a - b;
        });
        var powerIndex = $.baseIndexOf(powerSupported, wlanObj.transmitPower);
        switch (powerIndex) {
            case 0:
                $('#transPower').selectMobile('value', 'powerLow');
                break;
            case 1:
                $('#transPower').selectMobile('value', 'powerMiddle');
                break;
            case 2:
                $('#transPower').selectMobile('value', 'powerHigh');
                break;
        }
        $('#powerLow').data('dmNum', powerSupported[0]);
        $('#powerMiddle').data('dmNum', powerSupported[1]);
        $('#powerHigh').data('dmNum', powerSupported[2]);
    }

    function initParamShow(wlanObj, band) {
        if (wlanObj.enable == '0') {
            $('.wlShow').hide();
        }
        if (wlanObj.enable == 1) {
            $('#wlEn').checkboxMobile('option', 'checked', true);
            $('#wlEn').checkboxMobile('option', 'disabled', false);
        } else if ((wlanObj.regulatoryDomain == 'BD ' ||
            wlanObj.regulatoryDomain == 'KZ ' ||
            wlanObj.regulatoryDomain == 'SY ' ||
            wlanObj.regulatoryDomain == 'YE ') && band == '_5g') {
            $('#wlEn').checkboxMobile('option', 'checked', false);
            $('#wlEn').checkboxMobile('option', 'disabled', true);
        } else {
            $('#wlEn').checkboxMobile('option', 'checked', false);
            $('#wlEn').checkboxMobile('option', 'disabled', false);
        }

        $('#ssid').inputBoxMobile('option', 'value', wlanObj.SSID);

        if (wlanObj.SSIDAdvertisementEnabled == 0) {
            $('#hideSSID').checkboxMobile('option', 'checked', true);
        } else {
            $('#hideSSID').checkboxMobile('option', 'checked', false);
        }

        initModeList(wlanObj, band);
        initBandWidth(wlanObj, band);
        initChannel(wlanObj, band);
        initPower(wlanObj, band);
    }

    function initSecShow(wlanObj, band) {
        initSecType(wlanObj, band);
        initWpa2Personal(wlanObj, band);
        initWpa2Enterprise(wlanObj, band);
        initWep(wlanObj, band);
    }

    function initSecType(wlanObj, band) {
        if (wlanObj.beaconType == 'Basic' && wlanObj.basicEncryptionModes == 'None') {
            $('#sec').selectMobile('value', '0');
        } else if (wlanObj.beaconType == 'WPA') {
            if (wlanObj.WPAAuthenticationMode == 'PSKAuthentication') {
                //                    $('#wpa2Personal').prop('selected', 'selected');
                $('#sec').selectMobile('value', '1');
            } else {
                //                    $('#wpa2Enterprise').prop('selected', 'selected');
                $('#sec').selectMobile('value', '2');

            }
        } else if (wlanObj.beaconType == '11i' || wlanObj.beaconType == 'WPAand11i') {
            if (wlanObj.IEEE11iAuthenticationMode == 'PSKAuthentication') {
                $('#sec').selectMobile('value', '1');
                //                    $('#wpa2Personal').prop('selected', 'selected');
            } else {
                $('#sec').selectMobile('value', '2');
                //                    $('#wpa2Enterprise').prop('selected', 'selected');
            }
        } else if (wlanObj.beaconType == 'Basic' && wlanObj.basicEncryptionModes == 'WEPEncryption') {
            //                $('#wep').prop('selected', 'selected');
            $('#sec').selectMobile('value', '3');
        }
    }

    function initWpa2Personal(wlanObj, band) {
        if (wlanObj.beaconType == 'WPAand11i' && wlanObj.WPAAuthenticationMode == 'PSKAuthentication') {
            if (wlanObj.IEEE11iEncryptionModes == 'TKIPEncryption') {
                $('#encryptionPersonal').selectMobile('value', 'encrypPersonalTkip');
            } else if (wlanObj.IEEE11iEncryptionModes == 'AESEncryption') {
                $('#encryptionPersonal').selectMobile('value', 'encrypPersonalAes');
            } else {
                $('#encryptionPersonal').selectMobile('value', 'encrypPersonalAuto');
            }
            $('#versionPersonal').selectMobile('value', 'verPersonalAuto');
        } else if (wlanObj.beaconType == 'WPA' && wlanObj.WPAAuthenticationMode == 'PSKAuthentication') {
            if (wlanObj.WPAEncryptionModes == 'TKIPEncryption') {
                $('#encryptionPersonal').selectMobile('value', 'encrypPersonalTkip');
            } else if (wlanObj.WPAEncryptionModes == 'AESEncryption') {
                $('#encryptionPersonal').selectMobile('value', 'encrypPersonalAes');
            } else {
                $('#encryptionPersonal').selectMobile('value', 'encrypPersonalAuto');
            }
            $('#versionPersonal').selectMobile('value', 'verPersonalWpa');
        } else if (wlanObj.beaconType == '11i' && wlanObj.IEEE11iAuthenticationMode == 'PSKAuthentication') {
            if (wlanObj.WPAEncryptionModes == 'TKIPEncryption') {
                $('#encryptionPersonal').selectMobile('value', 'encrypPersonalTkip');
            } else if (wlanObj.WPAEncryptionModes == 'AESEncryption') {
                $('#encryptionPersonal').selectMobile('value', 'encrypPersonalAes');
            } else {
                $('#encryptionPersonal').selectMobile('value', 'encrypPersonalAuto');
            }
            $('#versionPersonal').selectMobile('value', 'verPersonalWpa2');
        } else {
            $('#versionPersonal').selectMobile('value', 'verPersonalAuto');
            $('#encryptionPersonal').selectMobile('value', 'encrypPersonalAuto');
        }

        $('#wpa2PersonalPwd').prop('value', wlanObj.X_TP_PreSharedKey);
    }

    function initWpa2Enterprise(wlanObj, band) {
        if (wlanObj.beaconType == 'WPAand11i' && wlanObj.WPAAuthenticationMode == 'EAPAuthentication') {
            if (wlanObj.IEEE11iEncryptionModes == 'TKIPEncryption') {
                $('#encryptionEnterprise').selectMobile('value', 'encrypEnterpriseTkip');
            } else if (wlanObj.IEEE11iEncryptionModes == 'AESEncryption') {
                $('#encryptionEnterprise').selectMobile('value', 'encrypEnterpriseAes');
            } else {
                $('#encryptionEnterprise').selectMobile('value', 'encrypEnterpriseAuto');
            }
            $('#versionEnterprise').selectMobile('value', 'verEnterpriseAuto');

        } else if (wlanObj.beaconType == 'WPA' && wlanObj.WPAAuthenticationMode == 'EAPAuthentication') {
            if (wlanObj.WPAEncryptionModes == 'TKIPEncryption') {
                $('#encryptionEnterprise').selectMobile('value', 'encrypEnterpriseTkip');
            } else if (wlanObj.WPAEncryptionModes == 'AESEncryption') {
                $('#encryptionEnterprise').selectMobile('value', 'encrypEnterpriseAes');
            } else {
                $('#encryptionEnterprise').selectMobile('value', 'encrypEnterpriseAuto');
            }
            $('#versionEnterprise').selectMobile('value', 'verEnterpriseWpa');

        } else if (wlanObj.beaconType == '11i' && wlanObj.IEEE11iAuthenticationMode == 'EAPAuthentication') {
            if (wlanObj.WPAEncryptionModes == 'TKIPEncryption') {
                $('#encryptionEnterprise').selectMobile('value', 'encrypEnterpriseTkip');
            } else if (wlanObj.WPAEncryptionModes == 'AESEncryption') {
                $('#encryptionEnterprise').selectMobile('value', 'encrypEnterpriseAes');
            } else {
                $('#encryptionEnterprise').selectMobile('value', 'encrypEnterpriseAuto');
            }
            $('#versionEnterprise').selectMobile('value', 'verEnterpriseWpa2');

        } else {
            $('#versionEnterprise').selectMobile('value', 'verEnterpriseAuto');
            $('#encryptionEnterprise').selectMobile('value', 'encrypEnterpriseAuto');
        }
        $('#wpa2EnterprisePwd').inputBoxMobile('option', 'value', wlanObj.X_TP_RadiusServerPassword);
        $('#wpa2EnterpriseIP').inputBoxMobile('option', 'value', wlanObj.X_TP_RadiusServerIP);
        $('#wpa2EnterprisePort').inputBoxMobile('option', 'value', wlanObj.X_TP_RadiusServerPort);
    }

    function initWep(wlanObj, band) {
        if (band == '_2g' && $.isEmptyObject(wepListTmp2g[0])) {
            var wepList = $.act(ACT_GS, LAN_WLAN_WEPKEY, null, wlanObj.__stack, ["WEPKey"]);
            $.exe();
        } else if (band == '_2g') {
            wepList = wepListTmp2g;
        }

        if (band == '_5g' && $.isEmptyObject(wepListTmp5g[0])) {
            var wepList = $.act(ACT_GS, LAN_WLAN_WEPKEY, null, wlanObj.__stack, ["WEPKey"]);
            $.exe();
        } else if (band == '_5g') {
            wepList = wepListTmp5g;
        }
        if (wlanObj.basicAuthenticationMode == 'Auto') {
            $('#wepType').selectMobile('value', 'typeAuto');
        } else if (wlanObj.basicAuthenticationMode == 'None') {
            $('#wepType').selectMobile('value', 'typeOpenSys');
        } else if (wlanObj.basicAuthenticationMode == 'SharedAuthentication') {
            $('#wepType').selectMobile('value', 'typeSharedKey');
        }

        $('#wepShareKey').selectMobile('value', wlanObj.WEPKeyIndex);
        var keyIndex = 1;
        $.each(wepList, function() {
            $('#wepKey' + keyIndex + 'Value').val(this.WEPKey);

            switch ($('#wepKey' + keyIndex + 'Value').prop('value').length) {
                case 5:
                    $('#key' + keyIndex + 'Type').selectMobile('value', '64');
                    $('#key' + keyIndex + 'Format').selectMobile('value', 'Ascii');
                    break;
                case 10:
                    $('#key' + keyIndex + 'Type').selectMobile('value', '64');
                    $('#key' + keyIndex + 'Format').selectMobile('value', 'Hex');
                    break;
                case 13:
                    $('#key' + keyIndex + 'Type').selectMobile('value', '128');
                    $('#key' + keyIndex + 'Format').selectMobile('value', 'Ascii');
                    break;
                case 26:
                    $('#key' + keyIndex + 'Type').selectMobile('value', '128');
                    $('#key' + keyIndex + 'Format').selectMobile('value', 'Hex');
                    break;
            }

            keyIndex++;
        });

    }

    function saveDM(wlanObj, band) {
        var wlSettingsTmp = {};
        var type;

        wlSettingsTmp.__stack = wlanObj.__stack;
        wlSettingsTmp.enable = $('#wlEn').checkboxMobile('option', 'checked') ? 1 : 0;
        wlSettingsTmp.SSID = $('#ssid').prop('value');
        wlSettingsTmp.SSIDAdvertisementEnabled = $('#hideSSID').checkboxMobile('option', 'checked') ? 0 : 1;
        wlSettingsTmp.standard = $('#mode').selectMobile('value');
        wlSettingsTmp.X_TP_Bandwidth = $('#chnwidth').selectMobile('value');
        if ($('#channel').selectMobile('value') == 0) {
            wlSettingsTmp.autoChannelEnable = 1;
        } else {
            wlSettingsTmp.autoChannelEnable = 0;
            wlSettingsTmp.channel = $('#channel').selectMobile('value');
        }
        wlSettingsTmp.transmitPower = $('#' + $('#transPower').selectMobile('value')).data('dmNum');

        switch ($('#sec').selectMobile('value')) {
            case '0':
                wlSettingsTmp.beaconType = 'Basic';
                wlSettingsTmp.basicEncryptionModes = 'None';
                wlSettingsTmp.basicAuthenticationMode = 'None';
                break;
            case '1':
                if ($('#encryptionPersonal').selectMobile('value') == 'encrypPersonalAuto') {
                    type = 'TKIPandAESEncryption';
                } else if ($('#encryptionPersonal').selectMobile('value') == 'encrypPersonalTkip') {
                    type = 'TKIPEncryption';
                } else if ($('#encryptionPersonal').selectMobile('value') == 'encrypPersonalAes') {
                    type = 'AESEncryption';
                }
                wlSettingsTmp.WPAEncryptionModes = wlSettingsTmp.IEEE11iEncryptionModes = type;
                wlSettingsTmp.WPAAuthenticationMode = wlSettingsTmp.IEEE11iAuthenticationMode = "PSKAuthentication";
                wlSettingsTmp.X_TP_PreSharedKey = $('#wpa2PersonalPwd').prop('value');
                if ($('#versionPersonal').selectMobile('value') == 'verPersonalAuto') {
                    wlSettingsTmp.beaconType = 'WPAand11i';
                } else if ($('#versionPersonal').selectMobile('value') == 'verPersonalWpa') {
                    wlSettingsTmp.beaconType = 'WPA';
                } else if ($('#versionPersonal').selectMobile('value') == 'verPersonalWpa2') {
                    wlSettingsTmp.beaconType = '11i'
                }
                break;
            case '2':
                if ($('#encryptionEnterprise').selectMobile('value') == 'encrypEnterpriseAuto') {
                    type = 'TKIPandAESEncryption';
                } else if ($('#encryptionEnterprise').selectMobile('value') == 'encrypEnterpriseTkip') {
                    type = 'TKIPEncryption';
                } else if ($('#encryptionEnterprise').selectMobile('value') == 'encrypEnterpriseAes') {
                    type = 'AESEncryption';
                }
                wlSettingsTmp.WPAEncryptionModes = wlSettingsTmp.IEEE11iEncryptionModes = type;
                wlSettingsTmp.WPAAuthenticationMode = wlSettingsTmp.IEEE11iAuthenticationMode = "EAPAuthentication";
                wlSettingsTmp.X_TP_RadiusServerPort = $('#wpa2EnterprisePort').prop('value');
                wlSettingsTmp.X_TP_RadiusServerIP = $('#wpa2EnterpriseIP').prop('value');
                wlSettingsTmp.X_TP_RadiusServerPassword = $('#wpa2EnterprisePwd').prop('value');
                if ($('#versionEnterprise').selectMobile('value') == 'verEnterpriseAuto') {
                    wlSettingsTmp.beaconType = 'WPAand11i';
                } else if ($('#versionEnterprise').selectMobile('value') == 'verEnterpriseWpa') {
                    wlSettingsTmp.beaconType = 'WPA';
                } else if ($('#versionEnterprise').selectMobile('value') == 'verEnterpriseWpa2') {
                    wlSettingsTmp.beaconType = '11i'
                }
                break;
            case '3':
                if ($('#wepType').selectMobile('value') == 'typeAuto') {
                    type = "Auto";
                } else if ($('#wepType').selectMobile('value') == 'typeSharedKey') {
                    type = "SharedAuthentication";
                } else {
                    type = "None";
                }
                wlSettingsTmp.beaconType = 'Basic';
                wlSettingsTmp.basicAuthenticationMode = type;
                wlSettingsTmp.basicEncryptionModes = 'WEPEncryption';
                wlSettingsTmp.WEPKeyIndex = $('#wepShareKey').selectMobile('value');
                break;
        }
        return wlSettingsTmp;
    }

    function setDM(wlanObj, param) {
        var index = 1;
        var wepList = $.act(ACT_GS, LAN_WLAN_WEPKEY, null, wlanObj.__stack, ["WEPKey"]);
        $.exe(function() {
            $.each(wepList, function() {
                $.act(ACT_SET, LAN_WLAN_WEPKEY, this.__stack, null, ["WEPKey=" + $('#wepKey' + index + 'Value').prop('value')]);
                index++;
            });
            $.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, param);

            $.exe(function(errCode) {
//                initDM();
                $.stopWaitingMobile();
                if (errCode === 0) {
                    $.toastMobile($.tpLang.c_str.saveAndReconn, 10000);
                }
            });
        });

    }

    function clickSave(wlanObj, band) {
        if (checkSSID(band) == false) {
            $.stopWaitingMobile();
            return;
        }
        if (checkValue(band) == false) {
            $.stopWaitingMobile();
            return;
        }

        wlSettings = saveDM(wlanObj, band);
        setDM(wlanObj, wlSettings);
    }

    function clickSec(band) {
        switch ($('#sec').selectMobile('value')) {
            case '0':
                $("[id^='hide']").hide();
                break;
            case '1':
                $("[id^='hide']").hide();
                $("#hideWpa2Personal").show();
                break;
            case '2':
                $("[id^='hide']").hide();
                $("#hideWpa2Enterprise").show();
                break;
            case '3':
                $("[id^='hide']").hide();
                $("#hideWep").show();
                $('#wepShareKey').trigger('change');
                break;
        }
    }

    function clickWep(band) {
        if ($('#hideWep').is(':hidden') || $('select#sec').selectMobile('value') != '3') {
            return;
        }
        switch ($('#wepShareKey').selectMobile('value')) {
            case '1':
                $("[id^='hideKey']").hide();
                $("#hideKey1").show();
                break;
            case '2':
                $("[id^='hideKey']").hide();
                $("#hideKey2").show();
                break;
            case '3':
                $("[id^='hideKey']").hide();
                $("#hideKey3").show();
                break;
            case '4':
                $("[id^='hideKey']").hide();
                $("#hideKey4").show();
                break;
        }
    }

    function focusWepValue(band) {
        var keyIndex = $('#wepShareKey').selectMobile('value');
        var isAcsii = 0;
        var is64 = 0;
        if ($('#key' + keyIndex + 'Format').selectMobile('value') == 'Ascii') {
            isAcsii = '1';
        } else {
            isAcsii = '0';
        }
        if ($('#key' + keyIndex + 'Type').selectMobile('value') == '64') {
            is64 = '1';
        } else {
            is64 = '0';
        }
        switch (isAcsii + is64) {
            case '11':
                $('#wepKey' + keyIndex + 'Value').prop('maxlength', '5');
                break;
            case '10':
                $('#wepKey' + keyIndex + 'Value').prop('maxlength', '13');
                break;
            case '01':
                $('#wepKey' + keyIndex + 'Value').prop('maxlength', '10');
                break;
            case '00':
                $('#wepKey' + keyIndex + 'Value').prop('maxlength', '26');
                break;
        }

    }

    function initDM() {
        var basicList = $.act(ACT_GL, LAN_WLAN, null, null, ["Name",
            "Standard",
            "SSID",
            "X_TP_Band",
            "RegulatoryDomain",
            "PossibleChannels",
            "AutoChannelEnable",
            "Channel",
            "X_TP_Bandwidth",
            "Enable",
            "SSIDAdvertisementEnabled",
            "BeaconType",
            "BasicEncryptionModes",
            "X_TP_Configuration_Modified",
            "WMMEnable",
            "X_TP_FragmentThreshold",
            "WEPEncryptionLevel",
            "WEPKeyIndex",
            "BasicAuthenticationMode",
            "WPAEncryptionModes",
            "WPAAuthenticationMode",
            "IEEE11iEncryptionModes",
            "IEEE11iAuthenticationMode",
            "X_TP_PreSharedKey",
            "X_TP_GroupKeyUpdateInterval",
            "TransmitPowerSupported",
            "TransmitPower",
            "X_TP_RadiusServerIP",
            "X_TP_RadiusServerPort",
            "X_TP_RadiusServerPassword"
        ]);
        if (!$.exe()) {
            $.each(basicList, function() {
                if ("2.4GHz" == this.X_TP_Band) {
                    wlanObj_2g = this;
                } else if (INCLUDE_LAN_WLAN_DUALBAND && "5GHz" == this.X_TP_Band) {
                    wlanObj_5g = this;
                }
            });

            wpsObj_2g = $.act(ACT_GET, LAN_WLAN_WPS, wlanObj_2g.__stack, null, ["Enable"]);
            wpsObj_5g = $.act(ACT_GET, LAN_WLAN_WPS, wlanObj_5g.__stack, null, ["Enable"]);
            mssidObj_2g = $.act(ACT_GET, LAN_WLAN_MULTISSID, wlanObj_2g.__stack, null, ["MultiSSIDEnable"]);
            mssidObj_5g = $.act(ACT_GET, LAN_WLAN_MULTISSID, wlanObj_5g.__stack, null, ["MultiSSIDEnable"]);
            vapList_2g = $.act(ACT_GS, LAN_WLAN_MSSIDENTRY, null, wlanObj_2g.__stack, ["Name", "Enable", "SSID", "SSIDAdvertisementEnable", "isolateClients", "BeaconType", "BasicAuthenticationMode", "WEPKeyIndex", "BasicEncryptionModes", "WPAEncryptionModes", "WPAAuthenticationMode", "IEEE11iEncryptionModes", "IEEE11iAuthenticationMode", "PreSharedKey", "GroupKeyUpdateInterval", "RadiusServerIP", "RadiusServerPort", "RadiusServerPassword"]);
            vapList_5g = $.act(ACT_GS, LAN_WLAN_MSSIDENTRY, null, wlanObj_5g.__stack, ["Name", "Enable", "SSID", "SSIDAdvertisementEnable", "isolateClients", "BeaconType", "BasicAuthenticationMode", "WEPKeyIndex", "BasicEncryptionModes", "WPAEncryptionModes", "WPAAuthenticationMode", "IEEE11iEncryptionModes", "IEEE11iAuthenticationMode", "PreSharedKey", "GroupKeyUpdateInterval", "RadiusServerIP", "RadiusServerPort", "RadiusServerPassword"]);

            guestnetObj_2g = $.act(ACT_GET, LAN_WLAN_GUESTNET, wlanObj_2g.__stack, null, ["Enable", "Name"]);
            guestnetObj_5g = $.act(ACT_GET, LAN_WLAN_GUESTNET, wlanObj_5g.__stack, null, ["Enable", "Name"]);
            if (!$.exe()) {
                qssEnable_2g = wpsObj_2g.enable;
                qssEnable_5g = wpsObj_5g.enable;
                $.each(vapList_2g, function(arg, index) {
                    if (this.name == guestnetObj_2g.name)
                        guestVap_2g = this;
                });
                $.each(vapList_5g, function(arg, index) {
                    if (this.name == guestnetObj_5g.name)
                        guestVap_5g = this;
                });
            }
        }
    }

    function clickMode(wlanObj, band) {
        wlanObj.standard = $("#mode").selectMobile("value");
        initBandWidth(wlanObj, band);
        initChannel(wlanObj, band);
    }

    function clickChannel(wlanObj, band) {
        if ($('#channel').selectMobile('value') == 0) {
            wlanObj.autoChannelEnable = 1;
        } else {
            wlanObj.autoChannelEnable = 0;
            wlanObj.channel = $('#channel').selectMobile('value');
        }
    }

    function clickChnWidth(wlanObj, band) {
        wlanObj.X_TP_Bandwidth = $("#chnwidth").selectMobile("value");
        initChannel(wlanObj, band);
    }

    function init() {
        initDM();
        initParamShow(wlanObj_2g, '_2g');
        initSecShow(wlanObj_2g, '_2g');
    }


    $('#sec').on('change', function(e) {
        clickSec('_2g');
    });


    $('#wepShareKey').on('change', function(e) {
        clickWep('_2g');
    });

    $("#chnwidth").on("change", function() {
        if ($('#5ghz').radioMobile('option', 'checked')) {
            clickChnWidth(wlanObj_5g, '_5g');
        } else {
            clickChnWidth(wlanObj_2g, '_2g');
        }
    });


    $("#channel").on("change", function() {
        if ($('#5ghz').radioMobile('option', 'checked')) {
            clickChannel(wlanObj_5g, '_5g');
        } else {
            clickChannel(wlanObj_2g, '_2g');
        }
    });

    $("#mode").on("change", function() {
        var mode = $(this).selectMobile('value');
        var sec = $('#sec').selectMobile('value');
        if (mode == 'n-only' || mode == 'nac') {
            $('#encrypPersonalAuto').prop('disabled', true);
            $('#encrypPersonalTkip').prop('disabled', true);
            $('#encryptionPersonal').selectMobile('value', 'encrypPersonalAes');

            $('#encrypEnterpriseAuto').prop('disabled', true);
            $('#encrypEnterpriseTkip').prop('disabled', true);
            $('#encryptionEnterprise').selectMobile('value', 'encrypEnterpriseAes');

        } else if ($('#versionPersonal').selectMobile('value') != 'verPersonalWpa2') {
            $('#encrypPersonalAuto').prop('disabled', false);
            $('#encrypPersonalTkip').prop('disabled', false);

            $('#encrypEnterpriseAuto').prop('disabled', false);
            $('#encrypEnterpriseTkip').prop('disabled', false);
        }
        if ($('#5ghz').radioMobile('option', 'checked')) {
            clickMode(wlanObj_5g, '_5g');
        } else {
            clickMode(wlanObj_2g, '_2g');
        }

    });

    $('#save').on('click', function(e) {
        $.startWaitingMobile();
        if ($('#5ghz').radioMobile('option', 'checked')) {
            clickSave(wlanObj_5g, '_5g');
        } else {
            clickSave(wlanObj_2g, '_2g');
        }
    });

    $('input[name="wepKeyValue"]').on('focus.wlSettings', function(e) {
        focusWepValue('_2g');
    });
    $('input[name="wepKeyValue"]').on('focus.wlSettings', function(e) {
        focusWepValue('_5g');
    });

    $('#versionPersonal').on('change', function(e) {
        var value = $(this).selectMobile('value');
        var mode = $('#mode').selectMobile('value');
        if (value == 'verPersonalWpa2') {
            $('#encrypPersonalAuto').prop('disabled', true);
            $('#encrypPersonalTkip').prop('disabled', true);
            $('#encryptionPersonal').selectMobile('value', 'encrypPersonalAes');
        } else if (value == 'verPersonalAuto') {
            if (mode == 'n-only' || mode == 'nac') {
                return;
            }

            $('#encrypPersonalAuto').prop('disabled', false);
            $('#encrypPersonalTkip').prop('disabled', false);
        }
    });

    $('#versionEnterprise').on('change.wlSettings', function(e) {
        var value = $(this).selectMobile('value');
        var mode = $('#mode').selectMobile('value');
        if ($(this).selectMobile('value') == 'verEnterpriseWpa2') {
            $('#encrypEnterpriseAuto').prop('disabled', true);
            $('#encrypEnterpriseTkip').prop('disabled', true);
            $('#encryptionEnterprise').selectMobile('value', 'encrypEnterpriseAes');
        } else if (value == 'verEnterpriseAuto') {
            if (mode == 'n-only' || mode == 'nac') {
                return;
            }

            $('#encrypEnterpriseAuto').prop('disabled', false);
            $('#encrypEnterpriseTkip').prop('disabled', false);
        }
    });

    $('#2ghz').bind('check.radioMobile', function() {
        if ($.isEmptyObject(wlSettings.band2g) == false) {
            $.extend(wlanObj_2g, wlSettings.band2g);
        }
        if (wlanObj_2g.enable == '1') {
            $('.wlShow').show();
        } else {
            $('.wlShow').hide();
        }
        wlSettings.band5g = saveDM(wlanObj_5g, '_5g');
        wlSettings.band5g.possibleChannels = wlanObj_5g.possibleChannels;
        wlSettings.band5g.transmitPowerSupported = wlanObj_5g.transmitPowerSupported;
        if ($('#sec').selectMobile('value') == 3) {
            for (var i = 0; i < 4; i++) {
                switch (i) {
                    case 0:
                        wepListTmp5g[0].WEPKey = $('#wepKey1Value').prop('value');
                        break;
                    case 1:
                        wepListTmp5g[1].WEPKey = $('#wepKey2Value').prop('value');
                        break;
                    case 2:
                        wepListTmp5g[2].WEPKey = $('#wepKey3Value').prop('value');
                        break;
                    case 3:
                        wepListTmp5g[3].WEPKey = $('#wepKey4Value').prop('value');
                        break;
                }
            }
        }
        initParamShow(wlanObj_2g, '_2g');
        initSecShow(wlanObj_2g, '_2g');

    });

    $('#5ghz').bind('check.radioMobile', function() {
        if ($.isEmptyObject(wlSettings.band5g) == false) {
            $.extend(wlanObj_5g, wlSettings.band5g);
        }
        if (wlanObj_5g.enable == '1') {
            $('.wlShow').show();
        } else {
            $('.wlShow').hide();
        }
        wlSettings.band2g = saveDM(wlanObj_2g, '_2g');
        wlSettings.band2g.possibleChannels = wlanObj_2g.possibleChannels;
        wlSettings.band2g.transmitPowerSupported = wlanObj_2g.transmitPowerSupported;
        if ($('select#sec').selectMobile('value') == 3) {
            for (var i = 0; i < 4; i++) {
                switch (i) {
                    case 0:
                        wepListTmp2g[0].WEPKey = $('#wepKey1Value').prop('value');
                        break;
                    case 1:
                        wepListTmp2g[1].WEPKey = $('#wepKey2Value').prop('value');
                        break;
                    case 2:
                        wepListTmp2g[2].WEPKey = $('#wepKey3Value').prop('value');
                        break;
                    case 3:
                        wepListTmp2g[3].WEPKey = $('#wepKey4Value').prop('value');
                        break;
                }
            }
        }
        initParamShow(wlanObj_5g, '_5g');
        initSecShow(wlanObj_5g, '_5g');

    });

    init();
})();
</script>
