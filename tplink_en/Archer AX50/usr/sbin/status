#!/bin/sh

LAN_PORTS="2 3 4 5"
WAN_PORTS="15"

in_lan_status=""
ou_lan_status=""
wan_status=""
in_lan_speed=""
ou_lan_speed=""
wan_speed=""
speeds=""
wan_duplex=""
in_lan_duplex=""
ou_lan_duplex=""
duplexs=""

append_status()
{
	eval $1=\"$2' '\$$1\"
}

get_lan_status()
{
	local status=""
	for i in $LAN_PORTS
	do
		status=$(sys_cli eth -E $i | grep "link status" | awk '{print $7}')
		if [ $status == "up" ];then
			append_status "lan_status" "connected"
		else
			append_status "lan_status" "unconnected"
		fi
	done
}

get_wan_status()
{
	local status=$(sys_cli eth -E $WAN_PORTS | grep "link status" | awk '{print $7}')
	if [ $status == "up" ];then
		append_status "wan_status" "connected"
	else
		append_status "wan_status" "unconnected"
	fi
}

get_lan_speed()
{
	local speed
	local status=""
	for i in $LAN_PORTS
	do
		status=$(sys_cli eth -E $i | grep "link status" | awk '{print $7}')
		speed=$(sys_cli eth -Y $i | grep Speed | cut -b 7-)
		if [ -n "$speed" -a $status == "up" ]
		then
			append_status "lan_speed" "$speed"
		else
			append_status "lan_speed" "0"
		fi
	done
}

get_wan_speed()
{
	local speed
	local status=""
	status=$(sys_cli eth -E $WAN_PORTS | grep "link status" | awk '{print $7}')
	speed=$(sys_cli eth -Y $WAN_PORTS | grep Speed | cut -b 7-)
	if [ -n "$speed" -a $status == "up" ]
	then
		append_status "wan_speed" "$speed"
	else
		append_status "wan_speed" "0"
	fi
}

get_lan_duplex()
{
	local duplex
	local status=""	
	for i in $LAN_PORTS
	do
		status=$(sys_cli eth -E $i | grep "link status" | awk '{print $7}')
		duplex=$(sys_cli eth -Z $i | grep Mode | awk '{print $4}')
		if [ -n "$duplex" -a $status == "up" ]
		then
			append_status "lan_duplex" "$duplex"
		else
			append_status "lan_duplex" "NONE"
		fi
	done
}

get_wan_duplex()
{
	local duplex
	local status=""
	status=$(sys_cli eth -E $WAN_PORTS | grep "link status" | awk '{print $7}')
	duplex=$(sys_cli eth -Z $WAN_PORTS | grep Mode | awk '{print $4}')
	if [ -n "$duplex" -a $status == "up" ]
	then
		append_status "wan_duplex" "$duplex"
	else
		append_status "wan_duplex" "NONE"
	fi
}


case $1 in
	"lan_status")
		get_lan_status
		echo -n $lan_status
		;;
	"wan_status")
		get_wan_status 
		echo -n $wan_status
		;;
	"lan_speed")
		get_lan_speed
		echo -n $lan_speed
		;;
	"wan_speed")
		get_wan_speed
		echo -n $wan_speed
		;;
	"lan_duplex")
		get_lan_duplex
		echo -n $lan_duplex
		;;
	"wan_duplex")
		get_wan_duplex
		echo -n $wan_duplex
		;;
	"speed")
		get_wan_speed
		get_lan_speed
		echo -n $wan_speed $lan_speed
		;;
	"duplex")
		get_wan_duplex
		get_lan_duplex
		echo -n $wan_duplex $lan_duplex
		;;
	*)
		echo "bad choice"
		;;
esac
