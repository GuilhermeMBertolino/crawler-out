#!/bin/sh
# Add interface to bridge
# Called when event of bridge enabled was received
# Needed object: None

script_name="$0"

[ ! "$LIB_COMMON_SOURCED" ] && . /tmp/fapi_wlan_wave_lib_common.sh

radio_name=$1
pid=$$

# Find the radio index
radio_index=`find_index_from_interface_name $radio_name`

print2log $radio_index DEBUG "$script_name $*"
timestamp $radio_index "$script_name:$radio_name:begin"

local_db_source SSID

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the in conf file
[ "$debug_save_conf" ] && cp ${IN_CONF} ${TEMP_DIR}/add_to_bridge_in_conf

# Read the bridge name from in.conf
db_bridge=`cat ${IN_CONF} | grep X_LANTIQ_COM_Vendor_BridgeName`
db_bridge=${db_bridge##*=}
db_bridge=${db_bridge//\"}
bridge_name=$(printf "%b" "$db_bridge")

# Go over the SSID db and find all interfaces belonging to this bridge
# For each interface, check if it is enabled and in the bridge
bridges_list=`grep X_LANTIQ_COM_Vendor_BridgeName $SSID_CONF`
accesspoint_db_source="no"
endpoint_db_sourced="no"

check_init_or_rt="rt"
if [ ! -e "$INIT_FLAG" ]
then
	check_init_or_rt="init"
fi

# Create 1 file for interfaces status
cat ${INTERFACES_STATUS}_* > ${INTERFACES_STATUS}_all

for line in $bridges_list
do
	current_bridge=${line##*=}
	current_bridge=${current_bridge//\"}
	current_bridge=$(printf "%b" "$current_bridge")
	[ "$current_bridge" != "$bridge_name" ] && continue
	[ "$bridge_name" = "None" ] && continue
	current_index=${line##*_}
	current_index=${current_index%%=*}
	ssid_type=`db2fapi_convert regular X_LANTIQ_COM_Vendor_SsidType $current_index`
	interface_name=`db2fapi_convert regular Name $current_index`

	# Check the interface status
	while read line
	do
		# Handling only the needed statuses (init or rt)
		init_or_rt=${line##*_}
		init_or_rt=${init_or_rt%%=*};
		[ "$init_or_rt" != "$check_init_or_rt" ] && continue

		status=${line##*=}
		status_interface=${line%%_*}

		if [ "$status_interface" = "$interface_name" ]
		then
			interface_enabled=$status
			break
		fi
	done < ${INTERFACES_STATUS}_all

	[ "$interface_enabled" = "0" ] && continue
	# Check if the interface is in the bridge
	interface_in_bridge=`brctl show | grep -w $interface_name -c`
	[ $interface_in_bridge -gt 0 ] && continue
	# If interface is enabled and not in the bridge, add it to bridge
	echo "$script_name: add $interface_name to $bridge_name" > /dev/console
	brctl addif $bridge_name $interface_name
done

rm -f ${INTERFACES_STATUS}_all

# Create the output configuration file
cat /dev/null > ${OUT_CONF}

# Configuration is completed successfully
update_conf_out "wlan_configuration_status" "success"

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the out conf file
[ "$debug_save_conf" ] && cp ${OUT_CONF} ${TEMP_DIR}/add_to_bridge_out_conf

print2log $radio_index DEBUG "$script_name done"
timestamp $radio_index "$script_name:$radio_name:done"
