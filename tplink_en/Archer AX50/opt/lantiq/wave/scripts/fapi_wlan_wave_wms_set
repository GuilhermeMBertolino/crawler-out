#!/bin/sh
# Configure AccessPoint.X_LANTIQ_COM_Vendor.HS20 parameters
# Needed object: AccessPoint.X_LANTIQ_COM_Vendor.HS20

script_name="$0"

[ ! "$LIB_COMMON_SOURCED" ] && . /tmp/fapi_wlan_wave_lib_common.sh
[ ! "$LIB_CONVERT_SOURCED" ] && . /tmp/fapi_wlan_wave_lib_convert.sh
[ ! "$IN_CONF_SOURCED" ] && in_conf_source

interface_name=$1
from_fapi=$2
pid=$$

debug_level=DEBUG
#debug_level=HS20

print2log $radio_index $debug_level "In fapi_wlan_wave_wms_set"

# Find the interface index and the radio index
interface_index=`find_index_from_interface_name $interface_name`
radio_name=${interface_name%%.*}
radio_index=`find_index_from_interface_name $radio_name`

print2log $radio_index $debug_level "fapi_wlan_wave_wms_set $*"
timestamp $radio_index "$script_name:$interface_name:begin"

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the in conf file
[ "$debug_save_conf" ] && cp ${IN_CONF} ${TEMP_DIR}/hotspot_set_in_conf

hs20_wan_metrics_linkstatus=`db2fapi_convert regular WanMetricsLinkStatus $interface_index`
hs20_wan_metrics_duration=`db2fapi_convert regular WanMetricsDuration $interface_index` # parameter=duration in notifications
hs20_wan_metrics_symmetriclink=`db2fapi_convert boolean WanMetricsSymmetricLink $interface_index`
hs20_wan_metrics_atcapacity=`db2fapi_convert boolean WanMetricsAtCapacity $interface_index`
hs20_wan_metrics_dlspeed=`db2fapi_convert regular WanMetricsDlSpeed $interface_index`
hs20_wan_metrics_ulspeed=`db2fapi_convert regular WanMetricsUlSpeed $interface_index`
hs20_wan_metrics_dlload=`db2fapi_convert regular WanMetricsDlLoad $interface_index`
hs20_wan_metrics_ulload=`db2fapi_convert regular WanMetricsUlLoad $interface_index`
hs20_wan_metrics_loadmeasurementduration=`db2fapi_convert regular WanMetricsLoadMeasurementDuration $interface_index`

print2log $radio_index $debug_level "fapi_wlan_wave_wms_set: hs20_wan_metrics_linkstatus=$hs20_wan_metrics_linkstatus"
print2log $radio_index $debug_level "fapi_wlan_wave_wms_set: hs20_wan_metrics_symmetriclink=$hs20_wan_metrics_symmetriclink"
print2log $radio_index $debug_level "fapi_wlan_wave_wms_set: hs20_wan_metrics_atcapacity=$hs20_wan_metrics_atcapacity"
print2log $radio_index $debug_level "fapi_wlan_wave_wms_set: hs20_wan_metrics_ulspeed=$hs20_wan_metrics_ulspeed"
print2log $radio_index $debug_level "fapi_wlan_wave_wms_set: hs20_wan_metrics_dlspeed=$hs20_wan_metrics_dlspeed"
print2log $radio_index $debug_level "fapi_wlan_wave_wms_set: hs20_wan_metrics_dlload=$hs20_wan_metrics_dlload"
print2log $radio_index $debug_level "fapi_wlan_wave_wms_set: hs20_wan_metrics_ulload=$hs20_wan_metrics_ulload"
print2log $radio_index $debug_level "fapi_wlan_wave_wms_set: hs20_wan_metrics_loadmeasurementduration=$hs20_wan_metrics_loadmeasurementduration"


####################################################################################
# WMD:
# Stage-1: We will use hard coded params for
# 	format: <WAN Info>:<DL Speed>:<UL Speed>:<DL Load>:<UL Load>:<LMD>
# 	hs20_wan_metrics=01:8000:1000:80:240:3000
# Stage-2: Implement the notifications and use real data.

# From hostapd conf file: WAN Info: B0-b1: hs20_wan_metrics_linkstatus, B2: hs20_wan_metrics_symmetriclink, B3: hs20_wan_metrics_atcapacity
# 	hs20_wan_metrics_linkstatus: Link up -> 1, Link Down -> 2, Link in Test -> 3
case "$hs20_wan_metrics_linkstatus" in
	"UP")
	if [ "$hs20_wan_metrics_symmetriclink" = "0" ] && [ "$hs20_wan_metrics_atcapacity" = "0" ]
	then
		value="01"
	elif [ "$hs20_wan_metrics_symmetriclink" = "1" ] && [ "$hs20_wan_metrics_atcapacity" = "1" ]
	then
		value="0D"
	elif [ "$hs20_wan_metrics_symmetriclink" = "0" ] && [ "$hs20_wan_metrics_atcapacity" = "1" ]
	then
		value="09"
	else
		value="05"
	fi
	;;
	"DOWN")
	if [ "$hs20_wan_metrics_symmetriclink" = "0" ] && [ "$hs20_wan_metrics_atcapacity" = "0" ]
	then
		value="10"
	elif [ "$hs20_wan_metrics_symmetriclink" = "1" ] && [ "$hs20_wan_metrics_atcapacity" = "1" ]
	then
		value="0E"
	elif [ "$hs20_wan_metrics_symmetriclink" = "0" ] && [ "$hs20_wan_metrics_atcapacity" = "1" ]
	then
		value="0A"
	else
		value="06"
	fi
	;;
#	"TEST")
#	if [ "$hs20_wan_metrics_symmetriclink" = "0" ] && [ "$hs20_wan_metrics_atcapacity" = "0" ]
#	then
#		value="03"
#	elif [ "$hs20_wan_metrics_symmetriclink" = "1" ] && [ "$hs20_wan_metrics_atcapacity" = "1" ]
#	then
#		value="0F"
#	elif [ "$hs20_wan_metrics_symmetriclink" = "0" ] && [ "$hs20_wan_metrics_atcapacity" = "1" ]
#	then
#		value="0B"
#	else
#		value="07"
#	fi
#	;;
esac

# This file can be called from 2 sources: 1- FAPI, 2- slwms (need scalling)
if [ -n "$from_fapi" ] && [ "$from_fapi" != "FAPI" ]
then
	print2log $radio_index $debug_level "fapi_wlan_wave_wms_set: no need for scalling load"
else
	print2log $radio_index $debug_level "fapi_wlan_wave_wms_set: need scalling load"
	# From hostapd conf file: Downlink Load: Current load of downlink WAN connection (scaled to 255 = 100%)
	hs20_wan_metrics_dlload=$((hs20_wan_metrics_dlload * 255))
	hs20_wan_metrics_dlload=$((hs20_wan_metrics_dlload / 100))
	
	# From hostapd conf file: Uplink Load: Current load of uplink WAN connection (scaled to 255 = 100%)
	hs20_wan_metrics_ulload=$((hs20_wan_metrics_ulload * 255))
	hs20_wan_metrics_ulload=$((hs20_wan_metrics_ulload / 100))
fi

hs20_wan_metrics="${value}:$hs20_wan_metrics_dlspeed:$hs20_wan_metrics_ulspeed:$hs20_wan_metrics_dlload:$hs20_wan_metrics_ulload:$hs20_wan_metrics_loadmeasurementduration"
print2log $radio_index $debug_level "fapi_wlan_wave_wms_set: hs20_wan_metrics=$hs20_wan_metrics"

print2log $radio_index $debug_level "fapi_wlan_wave_wms_set: /tmp/hostapd_cli_wlan${radio_index} -i $radio_name update_wan_metrics $interface_name $hs20_wan_metrics"
/tmp/hostapd_cli_wlan${radio_index} -i $radio_name update_wan_metrics $interface_name $hs20_wan_metrics

# Configuration is completed successfully
update_conf_out "wlan_configuration_status" "success"

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the out conf file
[ "$debug_save_conf" ] && cp ${OUT_CONF} ${TEMP_DIR}/wms_set_out_conf_${interface_name}


print2log $radio_index $debug_level "fapi_wlan_wave_wms_set done"
timestamp $radio_index "$script_name:$interface_name:done"
