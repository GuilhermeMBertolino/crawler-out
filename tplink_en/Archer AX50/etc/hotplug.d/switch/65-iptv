#!/bin/sh

. /lib/iptv/iptv_init.sh
. /lib/network/network_init.sh
. /lib/iptv/iptv_func.sh
. /lib/iptv/iptv_arch.sh

#[ "$ACTION" = "RESTART" ] && /etc/init.d/iptv restart

#set VLAN in switch
[ "$CONFIG" = "IPTV" ] && {
	local ether="0"
	local loop=10
	while true
	do
		ether=$(cat /tmp/run/network_running)
		if [ "$ether" = "running" ]; then
			break
		fi
		if [ $loop -lt 0 ]; then
			echo "Time out for waiting ether drive init..."
			break
		fi
		loop=$((loop-1))
		sleep 1
	done
	
	#clear VLAN entry
	clear_switch_vlan
	
	#WAN VLAN
	local mode=$(uci_get_state iptv core mode)
	local wanphyport=$(get_wan_phyportseq)
	local internet_vid=$(uci_get_state iptv core internet_vid)
	local iptv_vid=$(uci_get_state iptv core iptv_vid)
	local mciptv_vid=$(uci_get_state iptv core mciptv_vid)
	local ipphone_vid=$(uci_get_state iptv core ipphone_vid)
	local internet_tag=$(uci_get_state iptv core internet_tag)
	local bridgePort=$(uci_get_state iptv core bridgePort)
	
	if [ "$mode" == "Bridge" ]; then
		set_switch_vlan ${WAN_DEFUALT_VID} "$wanphyport" "off" 1
	else
		[ -n "${internet_vid}" ] && set_switch_vlan "${internet_vid}" "$wanphyport $bridgePort" "${internet_tag}" 1
		[ -n "${iptv_vid}" ] && set_switch_vlan "${iptv_vid}" "$wanphyport $bridgePort" "on" 1
		[ -n "${mciptv_vid}" ] && set_switch_vlan "${mciptv_vid}" "$wanphyport $bridgePort" "on" 1
		[ -n "${ipphone_vid}" ] && set_switch_vlan "${ipphone_vid}" "$wanphyport $bridgePort" "on" 1
	fi

	#LAN VLAN
	local lanphyport=0
	local lanvid=0
	for lan in ${LAN_PORT_SET} ; do
		if [ "$lan" == "$bridgePort" ]; then                                                      
			continue                                                                            
		fi   
		lanphyport=$(get_lan_phyport_bylogic $lan)
		lanvid=$(get_vid_by_port $lan)
		set_switch_vlan "${lanvid}" "$lanphyport" "off" 2
	done
}

[ "$CONFIG" = "IGMP_SNOOPING" ] && {
	local ether="0"
	local loop=10
	while true
	do
		ether=$(cat /tmp/run/network_running)
		if [ "$ether" = "running" ]; then
			break
		fi
		if [ $loop -lt 0 ]; then
			echo "Time out for waiting ether drive init..."
			break
		fi
		loop=$((loop-1))
		sleep 1
	done
	
	#clear VLAN entry
	clear_switch_vlan
	
	#WAN VLAN
	local wanphyport=$(get_wan_phyportseq)
	set_switch_vlan ${WAN_DEFUALT_VID} "$wanphyport" "off" 1

	#LAN VLAN
	local lanphyport=0
	local lanvid=0
	local index=1
	for lan in ${LAN_PORT_SET} ; do
		lanphyport=$(get_lan_phyport_bylogic $lan)
		lanvid=$(eval "echo \"${LAN_DEFUALT_VID}\" | awk '{print \$${index}}'")
		set_switch_vlan "${lanvid}" "$lanphyport" "off" 2
		index=$((index+1))
	done
}



set_multicast_router()
{
	
	local igmp_snooping mode
	local internet_iface=
	local iptv_iface=
	local ipphone_iface=
	local mciptv_iface=
	local wanphy=

	config_load iptv
	config_get mode "iptv" "mode"
	config_get igmp_snooping "iptv" "igmp_snooping_enable" "off"
	[ "$igmp_snooping" = "off" ] && return

	for wanphy in $(get_wan_initifs); do
		wanphy=${wanphy%%.*}
	done
	internet_iface="${wanphy}.$(uci_get_state iptv core internet_vid 1)"
	iptv_iface="${wanphy}.$(uci_get_state iptv core iptv_vid 1)"
	ipphone_iface="${wanphy}.$(uci_get_state iptv core ipphone_vid 1)"
	mciptv_iface="${wanphy}.$(uci_get_state iptv core mciptv_vid 1)"

	case "$mode" in
		Bridge)
		[ -f /sys/devices/virtual/net/$(get_wan_initifs)/brport/multicast_router ] && echo 2 >/sys/devices/virtual/net/$(get_wan_initifs)/brport/multicast_router
		;;
		*)
		#[ -f /sys/devices/virtual/net/$internet_iface/brport/multicast_router ] && echo 2 > /sys/devices/virtual/net/$internet_iface/brport/multicast_router
		[ -f /sys/devices/virtual/net/$iptv_iface/brport/multicast_router ] && echo 2 > /sys/devices/virtual/net/$iptv_iface/brport/multicast_router
		[ -f /sys/devices/virtual/net/$mciptv_iface/brport/multicast_router ] && echo 2 > /sys/devices/virtual/net/$mciptv_iface/brport/multicast_router
		[ -f /sys/devices/virtual/net/$ipphone_iface/brport/multicast_router ] && echo 2 > /sys/devices/virtual/net/$ipphone_iface/brport/multicast_router

		;;
	esac
	echo "set_multicast_router done" > /dev/console
}

## need wait some time to let netifd  creating interfaces first
sleep 5 && set_multicast_router




