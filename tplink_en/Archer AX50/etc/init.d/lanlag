#!/bin/sh /etc/rc.common

START=99

SERVICE_DAEMONIZE=1
SERVICE_WRITE_PID=1

. /lib/functions.sh
. /lib/functions/network.sh
. /lib/switch/core_phy.sh

config_load switch
config_load sysmode
config_load iptv

#lan_agg_ifnames=""
lan_bond_ifname="bond0"
lan_bridge_ifname="br-lan"

check_module () {
  module="$1"; shift; params="$*"
  grep "^$module" /proc/modules
  return $?
}

diable_lan_lag () {
	echo "[LAG] Disabling bonding-lag-lan">/dev/console

	config_get lan_agg_ports "lan_agg" "lacpports"
	local linux_ver=`grep -o "Linux version [0-9A-Za-z_.-]*" /proc/version | grep -o "[0-9A-Za-z_.-]*$"`

	local lan_agg_ifnames=""
	local higherPortId=""
	local lowerPortId=""	
	for lanIndex in ${lan_agg_ports}; do
		ifname=$(get_lan_ifname_by_id "$lanIndex")
		[ -n "$ifname" ] && lan_agg_ifnames="${lan_agg_ifnames}""$ifname "
		
		phyid=$(get_lan_phy_by_id "$lanIndex") 
		[ -n "$phyid" ] && {
			if [ -z "$higherPortId" ]; then
				higherPortId=$phyid
			else
				higherPortId=$(max "$higherPortId" "$phyid")
			fi
			
			if [ -z "$lowerPortId" ]; then
				lowerPortId=$phyid
			else
				lowerPortId=$(min "$lowerPortId" "$phyid")
			fi	
		}		
	done
	echo "[LAG] LAG ifname is: ${lan_agg_ifnames}">/dev/console
	echo "[LAG] higherPortId = $higherPortId, lowerPortId = $lowerPortId">/dev/console
	
	switch_cli GSW_TRUNKING_PORT_CFG_SET nPortId=$lowerPortId nAggrPortId=$higherPortId bAggregateEnable=0
	switch_cli GSW_TRUNKING_PORT_CFG_SET nPortId=$higherPortId nAggrPortId=$lowerPortId bAggregateEnable=0	

	ifconfig $lan_bond_ifname down
	for phyIfName in ${lan_agg_ifnames}; do
		ifconfig $phyIfName down
	done

	brctl delif $lan_bridge_ifname $lan_bond_ifname
	for phyIfName in ${lan_agg_ifnames}; do
		echo "-""${phyIfName}">/sys/class/net/bond0/bonding/slaves
		brctl addif $lan_bridge_ifname $phyIfName
		ifconfig $phyIfName up
	done

	rmmod /lib/modules/$linux_ver/bonding.ko		
}

enable_lan_lag () {
	echo "[LAG] Enabling bonding-lag-lan">/dev/console

	config_get lan_agg_ports "lan_agg" "lacpports"
	config_get hashmode "lan_agg" "hashmode"
	config_get lacpmode "lan_agg" "lacpmode"

	local linux_ver=`grep -o "Linux version [0-9A-Za-z_.-]*" /proc/version | grep -o "[0-9A-Za-z_.-]*$"`

	# 0 is LCAP Passive Mode
	# 1 is LACP Active Mode
	# 2 is LACP Static Mode
	case "$lacpmode" in
		"0")
			insmod /lib/modules/$linux_ver/bonding.ko mode=4 xmit_hash_policy=0 ad_select=0 all_slaves_active=0
		;;

		"1")
			insmod /lib/modules/$linux_ver/bonding.ko mode=4 xmit_hash_policy=0 ad_select=0 all_slaves_active=1
		;;

		"2")
			insmod /lib/modules/$linux_ver/bonding.ko mode=2 xmit_hash_policy=0
		;;

		*)
			echo "[LAG] Unsupported lacp mode">/dev/console
			return 0
		;;
	esac	

	local lan_agg_ifnames=""
	local higherPortId=""
	local lowerPortId=""
	for lanIndex in ${lan_agg_ports}; do
		ifname=$(get_lan_ifname_by_id "$lanIndex")
		[ -n "$ifname" ] && lan_agg_ifnames="${lan_agg_ifnames}""$ifname "
		
		phyid=$(get_lan_phy_by_id "$lanIndex") 
		[ -n "$phyid" ] && {
			if [ -z "$higherPortId" ]; then
				higherPortId=$phyid
			else
				higherPortId=$(max "$higherPortId" "$phyid")
			fi
			
			if [ -z "$lowerPortId" ]; then
				lowerPortId=$phyid
			else
				lowerPortId=$(min "$lowerPortId" "$phyid")
			fi	
		}		
	done
	echo "[LAG] LAG ifname is: ${lan_agg_ifnames}">/dev/console
	echo "[LAG] higherPortId = $higherPortId, lowerPortId = $lowerPortId">/dev/console
	
	switch_cli GSW_TRUNKING_PORT_CFG_SET nPortId=$lowerPortId nAggrPortId=$higherPortId bAggregateEnable=1
	switch_cli GSW_TRUNKING_PORT_CFG_SET nPortId=$higherPortId nAggrPortId=$lowerPortId bAggregateEnable=1

	for phyIfName in ${lan_agg_ifnames}; do
		ifconfig $phyIfName down
		brctl delif $lan_bridge_ifname $phyIfName
		echo "+""${phyIfName}">/sys/class/net/bond0/bonding/slaves
	done
	brctl addif $lan_bridge_ifname $lan_bond_ifname

	for phyIfName in ${lan_agg_ifnames}; do
		ifconfig $phyIfName up
	done	
	ifconfig $lan_bond_ifname up
}

start() {
	config_get en "lan_agg" "enable_agg"
	config_get sysmode "sysmode" "mode"
	config_get iptv_enable "iptv" "enable"
	
	[ -n "$iptv_enable" -a "on" = "$iptv_enable" ] && return 0
	[ -z "$en" ] && return 0
	["$sysmode" != "router"] && return 0

	if [ "$en" != "1" ] ;
	then
		check_module bonding && {
			diable_lan_lag
		}

		return 0
	else
		check_module bonding && {
			diable_lan_lag
		}
		enable_lan_lag

		return 0
	fi
}

restart() {
	echo "Donnot support restart"
}

shutdown() {
	echo "Donnot support shutdown"
}

stop() {
	echo "Donnot support stop"
}

reload() {
	echo "Donnot support reload"
}
