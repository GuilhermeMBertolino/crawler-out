#!/bin/sh /etc/rc.common

START=99
STOP=10

SERVICE_DAEMONIZE=1
SERVICE_WRITE_PID=1
CONFIGFILE=/etc/mcast.conf

igmp_add_fw_rules() {
	local r1 r2 r3
	
	r1=$(fw list 4 f zone_wan|grep "\-p igmp")
	[ -z "$r1" ] && fw add 4 f zone_wan ACCEPT ^ { -p igmp }
	
	r2=$(fw list 4 f zone_wan|grep "\-d 224.0.0.0/4")
	[ -z "$r2" ] && fw add 4 f zone_wan ACCEPT ^ { -p udp -d 224.0.0.0/4 }
	
	r3=$(fw list 4 f zone_wan_forward|grep "\-d 224.0.0.0/4")
	[ -z "$r3" ] && fw add 4 f zone_wan_forward zone_lan_ACCEPT ^ { -p udp -d 224.0.0.0/4 }
}

igmp_del_fw_rules() {
	fw del 4 f zone_wan ACCEPT { -p igmp }
	fw del 4 f zone_wan ACCEPT { -p udp -d 224.0.0.0/4 }
	fw del 4 f zone_wan_forward zone_lan_ACCEPT { -p udp -d 224.0.0.0/4 }
}

start(){
	local upstream="eth1"
	local downstream="br-lan"
	local igmp_enable
	local igmp_version
	local ipv6_enable
	config_load iptv
	
	config_get igmp_enable "iptv" igmp_enable
	config_get snooping_enable "iptv" igmp_snooping_enable
	
	[ -e "/tmp/state/snooping" ] || echo "init" > /tmp/state/snooping 
	
	# Set PortUnKnownMulticastDropCfg
	if [ -n "$snooping_enable" -a "on" = $snooping_enable ]; then
		
		if [ "$(cat /tmp/state/snooping)" != "enable" ];then
			echo "enable" > /tmp/state/snooping
			
			switch_cli GSW_PORT_CFG_SET nPortId=2 bMulticastUnknownDrop=1
			switch_cli GSW_PORT_CFG_SET nPortId=3 bMulticastUnknownDrop=1
			switch_cli GSW_PORT_CFG_SET nPortId=4 bMulticastUnknownDrop=1
			switch_cli GSW_PORT_CFG_SET nPortId=5 bMulticastUnknownDrop=1

			# rule 6/7/8/9 is for the broadcast forwarding
			switch_cli  dev=0 GSW_PCE_RULE_WRITE pattern.nIndex=6 pattern.bEnable=1 pattern.bPortIdEnable=1 pattern.nPortId=0x2 pattern.bMAC_DstEnable=1 pattern.nMAC_Dst=FF:FF:FF:FF:FF:FF action.ePortMapAction=4 action.nForwardPortMap=0x3B
			switch_cli  dev=0 GSW_PCE_RULE_WRITE pattern.nIndex=7 pattern.bEnable=1 pattern.bPortIdEnable=1 pattern.nPortId=0x3 pattern.bMAC_DstEnable=1 pattern.nMAC_Dst=FF:FF:FF:FF:FF:FF action.ePortMapAction=4 action.nForwardPortMap=0x37
			switch_cli  dev=0 GSW_PCE_RULE_WRITE pattern.nIndex=8 pattern.bEnable=1 pattern.bPortIdEnable=1 pattern.nPortId=0x4 pattern.bMAC_DstEnable=1 pattern.nMAC_Dst=FF:FF:FF:FF:FF:FF action.ePortMapAction=4 action.nForwardPortMap=0x2F
			switch_cli  dev=0 GSW_PCE_RULE_WRITE pattern.nIndex=9 pattern.bEnable=1 pattern.bPortIdEnable=1 pattern.nPortId=0x5 pattern.bMAC_DstEnable=1 pattern.nMAC_Dst=FF:FF:FF:FF:FF:FF action.ePortMapAction=4 action.nForwardPortMap=0x1F
			
			# rule 2/3/4/5 is for the IPv6 ping packet forwarding
			switch_cli  dev=0 GSW_PCE_RULE_WRITE pattern.nIndex=2 pattern.bEnable=1 pattern.bPortIdEnable=1 pattern.nPortId=0x2 pattern.bProtocolEnable=1 pattern.nProtocol=0x3a action.ePortMapAction=4 action.nForwardPortMap=0x3B
			switch_cli  dev=0 GSW_PCE_RULE_WRITE pattern.nIndex=3 pattern.bEnable=1 pattern.bPortIdEnable=1 pattern.nPortId=0x3 pattern.bProtocolEnable=1 pattern.nProtocol=0x3a action.ePortMapAction=4 action.nForwardPortMap=0x37 
			switch_cli  dev=0 GSW_PCE_RULE_WRITE pattern.nIndex=4 pattern.bEnable=1 pattern.bPortIdEnable=1 pattern.nPortId=0x4 pattern.bProtocolEnable=1 pattern.nProtocol=0x3a action.ePortMapAction=4 action.nForwardPortMap=0x2F
			switch_cli  dev=0 GSW_PCE_RULE_WRITE pattern.nIndex=5 pattern.bEnable=1 pattern.bPortIdEnable=1 pattern.nPortId=0x5 pattern.bProtocolEnable=1 pattern.nProtocol=0x3a action.ePortMapAction=4 action.nForwardPortMap=0x1F			
		
			iwpriv wlan0 sMcastRange6 0,ff00::,ff00::
			iwpriv wlan2 sMcastRange6 0,ff00::,ff00::
			iwpriv wlan0 sMcastRange 0,224.0.0.0,224.0.0.0
			iwpriv wlan2 sMcastRange 0,224.0.0.0,224.0.0.0
		fi
	else
		if [ "$(cat /tmp/state/snooping)" != "disable" ];then
			echo "disable" > /tmp/state/snooping
			
			# clear PortUnKnownMulticastDropCfg
			switch_cli GSW_PORT_CFG_SET nPortId=2 bMulticastUnknownDrop=0
			switch_cli GSW_PORT_CFG_SET nPortId=3 bMulticastUnknownDrop=0
			switch_cli GSW_PORT_CFG_SET nPortId=4 bMulticastUnknownDrop=0
			switch_cli GSW_PORT_CFG_SET nPortId=5 bMulticastUnknownDrop=0
			
			switch_cli  dev=0 GSW_PCE_RULE_DELETE nIndex=2
			switch_cli  dev=0 GSW_PCE_RULE_DELETE nIndex=3
			switch_cli  dev=0 GSW_PCE_RULE_DELETE nIndex=4
			switch_cli  dev=0 GSW_PCE_RULE_DELETE nIndex=5
			
			switch_cli  dev=0 GSW_PCE_RULE_DELETE nIndex=6
			switch_cli  dev=0 GSW_PCE_RULE_DELETE nIndex=7
			switch_cli  dev=0 GSW_PCE_RULE_DELETE nIndex=8
			switch_cli  dev=0 GSW_PCE_RULE_DELETE nIndex=9
			
			iwpriv wlan0 sMcastRange6 1,ff00::,ff00::
			iwpriv wlan2 sMcastRange6 1,ff00::,ff00::
			iwpriv wlan0 sMcastRange 1,224.0.0.0,224.0.0.0
			iwpriv wlan2 sMcastRange 1,224.0.0.0,224.0.0.0
		fi
	fi
	
	if [ "$igmp_enable" = "on" ]; then
		config_get igmp_version "iptv" igmp_version "2"

		echo $igmp_version > /proc/sys/net/ipv4/conf/all/force_igmp_version
		echo 300 > /proc/sys/net/ipv4/igmp_max_memberships
		mknod -m 0666 /dev/mcast c 240 0 2>/dev/null
		
		igmp_add_fw_rules
		
		config_load sysmode
		config_load network
		config_get sysmode sysmode mode "router"

		# config up and down stream
		if [ "$sysmode" = "ap" ]; then
			sed -i 's/^mcast_upstream=.*/mcast_upstream=""/g' $CONFIGFILE
			sed -i 's/^mcast_upstream_wan=.*/mcast_upstream_wan=""/g' $CONFIGFILE
		else
			config_get type wan type
			config_get wan_ifname wan ifname  
			upstream="$wan_ifname"
			[ -n "$type" -a "$type" = "bridge" ] && upstream="br-wan"
			sed -i 's/^mcast_upstream=.*/mcast_upstream="'${upstream}'"/g' $CONFIGFILE
			sed -i 's/^mcast_upstream_wan=.*/mcast_upstream_wan="'${upstream}'"/g' $CONFIGFILE
		fi
		sed -i 's/^mcast_downstream=.*/mcast_downstream="'${downstream}'"/g' $CONFIGFILE
		
		# ipv4
		sed -i 's/^mcast_igmp_proxy_status=.*/mcast_igmp_proxy_status="1"/g' $CONFIGFILE
		
		# ipv6
		config_load protocol
		config_get ipv6_enable "wanv6" enable
		if [ "$ipv6_enable" = "on" -o "$sysmode" = "ap" ]; then
			if [ -z "$(ifconfig $upstream |grep "inet6")" ]; then
				echo 1 > /proc/sys/net/ipv6/conf/$upstream/disable_ipv6
				sleep 1
				echo 0 > /proc/sys/net/ipv6/conf/$upstream/disable_ipv6
			fi
			
			if [ -z "$(ifconfig $downstream |grep "inet6")" ]; then
				echo 1 > /proc/sys/net/ipv6/conf/$downstream/disable_ipv6
				sleep 1
				echo 0 > /proc/sys/net/ipv6/conf/$downstream/disable_ipv6
			fi
			#todo: mcast_mld_proxy_status 
			sed -i 's/^mcast_mld_proxy_status=.*/mcast_mld_proxy_status="1"/g' $CONFIGFILE
		else
			#todo: mcast_mld_proxy_status="0" 
			sed -i 's/^mcast_mld_proxy_status=.*/mcast_mld_proxy_status="0"/g' $CONFIGFILE
		fi
		
		if [ -n "$snooping_enable" -a "on" = $snooping_enable ]; then
			sed -i 's/^mcast_igmp_snooping_status=.*/mcast_igmp_snooping_status="1"/g' $CONFIGFILE
			sed -i 's/^mcast_mld_snooping_status=.*/mcast_mld_snooping_status="1"/g' $CONFIGFILE
		else
			sed -i 's/^mcast_igmp_snooping_status=.*/mcast_igmp_snooping_status="0"/g' $CONFIGFILE
			sed -i 's/^mcast_mld_snooping_status=.*/mcast_mld_snooping_status="0"/g' $CONFIGFILE
		fi
		
		service_start /usr/sbin/mcastd -b -c /etc/mcast.conf
				
	else
		igmp_del_fw_rules
		echo 2 > /proc/sys/net/ipv4/conf/all/force_igmp_version
		
		service_stop /usr/sbin/mcastd
	fi
	
	return 0
}

stop() {	
	service_stop /usr/sbin/mcastd
	return 0
}

