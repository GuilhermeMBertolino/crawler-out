#!/usr/bin/lua
--created by wanghao

local error = require "cloud_report.report_error"
local sys   = require "luci.sys"
local nixio = require "nixio"
local dbg   = require "luci.tools.debug"
local json = require "luci.json"
local io    = require "io"
local uci			= require "luci.model.uci"
local uci_r			= uci.cursor()
local uci_s 		= uci.cursor_state()

local content_type = "Content-type: application/json"
local url_postfix = "/v1/services/insights-time"
local CLOUD_HOMECARE_TOKEN_FILE = "/tmp/cloud/cloud_token_homecare"
local CLOUD_GET_TIME_SUCCESS = "/var/log/cloud_get_elapsedTime.success"

local retry_count = 0
local token
local origin_url
local fp
local retry = true
local ret
local ownerId
local time_set

if nixio.fs.access(CLOUD_GET_TIME_SUCCESS) then
	return
end

while true do
	uci_s:load("systime")
	time_set = uci_s:get("systime", "core", "sync") or "0"
	if time_set == "1" then
		break
	end
	os.execute("sleep 5")
end

--while(retry_count <= 2)
while(true)
do
	--retry_count = retry_count + 1
	retry = true

	if not nixio.fs.access(CLOUD_HOMECARE_TOKEN_FILE) then
		sys.call("cloud_getDevToken homecare")
	end

	if nixio.fs.access(CLOUD_HOMECARE_TOKEN_FILE) then
		fp = io.open(CLOUD_HOMECARE_TOKEN_FILE, "r")
		token = fp:read("*line")
		origin_url = fp:read("*line")..url_postfix
		fp:close()
	else
		-- try again when not get the homecare token
		while true do
			sys.call("cloud_getDevToken homecare")
			if nixio.fs.access(CLOUD_HOMECARE_TOKEN_FILE) then
				fp = io.open(CLOUD_HOMECARE_TOKEN_FILE, "r")
				token = fp:read("*line")
				origin_url = fp:read("*line") .. url_postfix
				fp:close()
				break
			end
			os.execute("sleep 5")
		end
	end
	
	local data = {
		["deviceId"] = string.match(sys.exec("getfirm DEV_ID"), "%w+")
	}
	
	sys.call("echo `date` >/var/log/cloud_get_elapsedTime.result; echo '%s' >>/var/log/cloud_get_elapsedTime.result" % {json.encode(data)})
	dbg.print("[cloud-report][" .. arg[0] .. "][cloud_download request]:" .. json.encode(data))
	
	fp = io.popen("curl -S -l -H \"%s\" -H \"Authorization: %s\" -X POST -k -d \'%s\' --connect-timeout 8 %s --retry 3 --retry-delay 1 2>>/var/log/cloud_get_elapsedTime.result" % {content_type, token, json.encode(data), origin_url})
	if fp then
		ret = fp:read("*all")
		fp:close()
	end

	dbg.print("[cloud-report][" .. arg[0] .. "][cloud_download response]:" .. ret)
	ret = json.decode(ret)

	if ret ~= nil then
		if ret.code == nil then
			retry = false
			sys.call("echo '%s' > '%s'" % {json.encode(ret), CLOUD_GET_TIME_SUCCESS})
		else 
			if tonumber(ret.code) == error.ERROR_MSG.ERROR_INVALID_DEVICE_TOKEN[1] then
				--refresh token and upload again
				sys.call("rm " .. CLOUD_HOMECARE_TOKEN_FILE)
			else
				if tonumber(ret.code) == error.ERROR_MSG.ERROR_INSIGHTS_MISSED[1] then
					retry = false
				end
			end
		end
	end
	
	if retry == false then
		break
	end
	
	os.execute("sleep 5")
	
end

--set to parental control
if ret.code == nil then
		for _, profile in ipairs(ret.profileList) do
			ownerId = profile.profileId
			uci_r:foreach("parental_control_v2", "owner",
				function(section)
					if section.profile_id == profile.profileId then
						ownerId = section.owner_id
					end
				end
			)
			sys.call("echo t %d > /proc/pctl/%s" % {tonumber(profile.spendTime.elapsedTime), ownerId})
		end
end
