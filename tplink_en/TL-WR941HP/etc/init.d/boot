#!/bin/sh /etc/rc.common
# Copyright (c) 2013 The Linux Foundation. All rights reserved.
# Copyright (C) 2006-2011 OpenWrt.org

START=10
STOP=98

system_config() {
	local cfg="$1"

	local hostname conloglevel timezone

	config_get hostname "$cfg" hostname 'OpenWrt'
	echo "$hostname" > /proc/sys/kernel/hostname

	config_get conloglevel "$cfg" conloglevel
	config_get buffersize "$cfg" buffersize
	[ -z "$conloglevel" -a -z "$buffersize" ] || dmesg ${conloglevel:+-n $conloglevel} ${buffersize:+-s $buffersize}

	config_get timezone "$cfg" timezone 'UTC'
	echo "$timezone" > /tmp/TZ

	config_get zonename "$cfg" zonename
	[ -n "$zonename" ] && [ -f "/usr/share/zoneinfo/$zonename" ] && ln -s "/usr/share/zoneinfo/$zonename" /tmp/localtime

	# apply timezone to kernel
	date -k

	if [ -x /sbin/klogd ]; then
		config_get klogconloglevel "$cfg" klogconloglevel
		args="${klogconloglevel:+-c $klogconloglevel}"
		service_start /sbin/klogd $args
	fi
}

apply_uci_config() {
	sh -c '. /lib/functions.sh; include /lib/config; uci_apply_defaults'
}

enter_ftm_mode(){
	. /lib/switch/core_phy.sh
	link_up_all_ports
	brctl addbr br-lan
	brctl addif br-lan eth1
	ifconfig br-lan 192.168.0.1 up
	tddp &
	load_modules "/etc/modules.d/30-gpio-button-hotplug"
	#factory reset button press check!
	/etc/init.d/factory_settings_reset boot
	sleep 3
	/etc/init.d/art start
}

exit_ftm_mode(){
	killall tddp
	ifconfig br-lan down
	brctl delif br-lan eth1
	brctl delbr br-lan
}

start() {
	[ -f /proc/mounts ] || /sbin/mount_root
	[ -f /proc/jffs2_bbc ] && echo "S" > /proc/jffs2_bbc
	[ -f /proc/net/vlan/config ] && vconfig set_name_type DEV_PLUS_VID_NO_PAD

	mkdir -p /var/run
	mkdir -p /var/log
	mkdir -p /var/lock
	mkdir -p /var/state
	mkdir -p /tmp/.uci
	chmod 0700 /tmp/.uci
	touch /var/log/wtmp
	touch /var/log/lastlog
	touch /tmp/resolv.conf.auto
	ln -sf /tmp/resolv.conf.auto /tmp/resolv.conf
	grep -q debugfs /proc/filesystems && mount -t debugfs debugfs /sys/kernel/debug
	[ "$FAILSAFE" = "true" ] && touch /tmp/.failsafe

	#/*
	#* The following 2 lines must be executed before ssdk.ko is installed.
	#* By Eddie Ho, 21Apr16
	#*/
	swconfig dev switch0 set enable_vlan 1
	swconfig dev switch0 set apply 1

	#/*
	#* The following line set port learning enable.
	#* Riverwind
	#*/
	swconfig dev switch0 set enable_learning 1

	load_modules "$(ls /etc/modules.d/* | grep -v -e 33-qca-wifi-* -e 30-gpio-button-hotplug)"

	# allow wifi modules time to settle
	# sleep 1

	#[ "$(/sbin/is_cal)" = "true" ] || {
	#	/sbin/wifi default > /tmp/wireless.tmp
	#	[ -s /tmp/wireless.tmp ] && {
	#		cat /tmp/wireless.tmp >> /etc/config/wireless
	#	}
	#	rm -f /tmp/wireless.tmp
	#}
	/sbin/sound detect > /tmp/sound.tmp
	[ -s /tmp/sound.tmp ] && {
		cat /tmp/sound.tmp >> /etc/config/sound
	}
	rm -f /tmp/sound.tmp
	
	apply_uci_config
	config_load system
	config_foreach system_config system

	## prepare tmp partition
	echo "-------------------------------------------------------------------------------------" >/dev/console
	#MTDDEV=$(grep rootfs_data /proc/mtd | cut -d ":" -f1)
	#mkdir /tmp/mnt >/dev/console 2>&1
	#mount -t jffs2 $MTDDEV /tmp/mnt >/dev/console 2>&1
	loadconfig >/dev/console 2>&1
	echo "-------------------------------------------------------------------------------------" >/dev/console 2>&1

	echo "-------------------------------------------------------------------------------------" >/dev/console
	loadprofile >/dev/console 2>&1
	echo "-------------------------------------------------------------------------------------" >/dev/console 2>&1

	echo "-------------------------------------------------------------------------------------" >/dev/console
	loadqosdatabase >/dev/console 2>&1
	echo "-------------------------------------------------------------------------------------" >/dev/console 2>&1

	echo "-------------------------------------------------------------------------------------" >/dev/console
	[ -f /sbin/loadopenvpncert ] && loadopenvpncert >/dev/console 2>&1
	echo "-------------------------------------------------------------------------------------" >/dev/console 2>&1

	/sbin/network_firm
	killall -q hotplug2
	[ -x /sbin/hotplug2 ] && /sbin/hotplug2 --override --persistent \
			--set-rules-file /etc/hotplug2.rules \
			--set-coldplug-cmd /sbin/udevtrigger \
			--max-children 1 >/dev/null 2>&1 &

	# create /dev/root if it doesn't exist
	[ -e /dev/root -o -h /dev/root ] || {
		rootdev=$(awk 'BEGIN { RS=" "; FS="="; } $1 == "root" { print $2 }' < /proc/cmdline)
		[ -n "$rootdev" ] && ln -s "$rootdev" /dev/root
	}

	# For QCA art
	mtd_name=`cat /proc/mtd | grep "ART" -iw | grep -o "mtd[0-9]*"`
	[ -c /dev/dk0 ] || mknod /dev/dk0 c 63 0
	[ -c /dev/dk1 ] || mknod /dev/dk1 c 63 1
	[ -L /dev/caldata ] || ln -s /dev/${mtd_name} /dev/caldata

	if [ "$(/sbin/is_cal)" != "true" ]; then
		enter_ftm_mode
		sleep 240
		if [ "$(uci get factory.factorymode.enable)" = "yes" ];	then
			while true; do
				sleep 5
				echo "after cal,enter sleep..." > /dev/console 2>&1
			done
		fi
		exit_ftm_mode
	fi

}

stop() {
	service_stop /sbin/klogd
}
