#!/bin/sh

[ "$DEVICE" == "lo" ] && exit 0

. /lib/functions.sh
. /lib/functions/network.sh
. /lib/iptv/iptv_func.sh
. /lib/iptv/iptv_core.sh

config_load iptv  
config_load network

# Do the gc when 'iptv stop'.
local en=$(uci_get_state iptv core enable)
local sysmode=$(uci_get sysmode sysmode mode)
local ipv6enable=$(uci_get protocol wanv6 enable)

[ -z "$en" ] && exit 0
[ "$sysmode" != "router" ] && {
	local net_vif=$(uci_get_state iptv core net_vif)
	for vif in $net_vif
	do
		if [ "$ipv6enable" == "on" ]; then
			echo "##### 65-iptv echo 0 > /proc/sys/net/ipv6/conf/$vif/disable_ipv6" > /dev/console
			echo 0 > /proc/sys/net/ipv6/conf/$vif/disable_ipv6
		else
			echo "##### 65-iptv echo 1 > /proc/sys/net/ipv6/conf/$vif/disable_ipv6" > /dev/console
			echo 1 > /proc/sys/net/ipv6/conf/$vif/disable_ipv6
		fi
	done

	if [ "$en" == "1" ]; then
		local mode=$(uci_get_state iptv core mode)
		case "$mode" in
			Bridge)
				local brwan=$(ifconfig -a|grep "br-wan")
				[ -n "$brwan" ] && {
					echo "##### 65-iptv ifconfig br-wan down" > /dev/console
					ifconfig br-wan down
					echo "##### 65-iptv ifconfig delbr br-wan" > /dev/console
					brctl delbr br-wan
				}
				local iptv_port=$(uci_get_state iptv core wan_port)
				[ -n "$iptv_port" ] && {
					local iptv_vifs=$(uci_get_state iptv core wan_vif)
					for vif in $iptv_vifs; do
						echo "##### ifconfig $vif up" > /dev/console
						ifconfig $vif up > /dev/console
						echo "##### 65-iptv brctl addif br-lan $vif" > /dev/console
						brctl addif "br-lan" $vif > /dev/console
						if [ "$ipv6enable" == "on" ]; then
							echo "##### 65-iptv echo 0 > /proc/sys/net/ipv6/conf/$vif/disable_ipv6" > /dev/console
							echo 0 > /proc/sys/net/ipv6/conf/$vif/disable_ipv6
						else
							echo "##### 65-iptv echo 1 > /proc/sys/net/ipv6/conf/$vif/disable_ipv6" > /dev/console
							echo 1 > /proc/sys/net/ipv6/conf/$vif/disable_ipv6
						fi
					done
				}
			;;
			*)

				local iptv_vif=$(uci_get_state iptv core iptv_vif)
				local ipphone_vif=$(uci_get_state iptv core ipphone_vif)
				local wan_dev=${wanif%%.*}
				local lan_dev=${lanif%%.*}
				if [ -n "$iptv_vif" ]; then
					for vif in $iptv_vif
					do
						local iptv_dev=${vif%%.*}
						if [ "$iptv_dev" == "$wan_dev" ]; then
							local is_existen=$(ifconfig -a|grep -E "$vif")
							[ "$vif" == "$wanif" ] && {
								is_existen=""
							}
							[ -n "$is_existen" ] && {
								ifconfig $vif down
								vconfig rem $vif
							}
						elif [ "$iptv_dev" == "$lan_dev" ]; then
							local is_existen=$(ifconfig -a|grep -E "$vif")
							[ "$vif" == "$lanif" ] && {
								is_existen=""
							}
							[ -n "$is_existen" ] && {
								ifconfig $vif down
								brctl delif br-iptv $vif
								ifconfig $vif up
								brctl addif "br-lan" $vif > /dev/console
								if [ "$ipv6enable" == "on" ]; then
									echo 0 > /proc/sys/net/ipv6/conf/$vif/disable_ipv6
								else
									echo 1 > /proc/sys/net/ipv6/conf/$vif/disable_ipv6
								fi
							}
						fi
					done
					ifconfig br-iptv down > /dev/console
					brctl delbr br-iptv > /dev/console
				fi
				if [ -n "$ipphone_vif" ]; then
					for vif in $ipphone_vif
					do
						local ipphone_dev=${vif%%.*}
						if [ "$ipphone_dev" == "$wan_dev" ]; then
							local is_existen=$(ifconfig -a|grep -E "$vif")
							[ "$vif" == "$wanif" ] && {
								is_existen=""
							}
							[ -n "$is_existen" ] && {
								ifconfig $vif down
								vconfig rem $vif
							}
						elif [ "$ipphone_dev" == "$lan_dev" ]; then
							local is_existen=$(ifconfig -a|grep -E "$vif")
							[ "$vif" == "$lanif" ] && {
								is_existen=""
							}
							[ -n "$is_existen" ] && {
								ifconfig $vif down
								brctl delif br-ipphone $vif
								ifconfig $vif up
								brctl addif "br-lan" $vif > /dev/console
								if [ "$ipv6enable" == "on" ]; then
									echo 0 > /proc/sys/net/ipv6/conf/$vif/disable_ipv6
								else
									echo 1 > /proc/sys/net/ipv6/conf/$vif/disable_ipv6
								fi
							}
						fi
					done
					ifconfig br-ipphone down > /dev/console
					brctl delbr br-ipphone > /dev/console
				fi

			;;
		esac
	fi

	[ ifup = "$ACTION" ] && {
	echo "Force to disable switch port learning & flush FDB if IPTV enabled" > /dev/console
	ssdk_sh fdb portLearn set 0 disable
	ssdk_sh fdb portLearn set 1 disable
	ssdk_sh fdb portLearn set 2 disable
	ssdk_sh fdb portLearn set 3 disable
	ssdk_sh fdb portLearn set 4 disable
	ssdk_sh fdb entry flush 0
	}
	exit 0
}
[ "$en" != "1" ] && {
	local brwan=$(ifconfig -a|grep "br-wan")
	[ -n "$brwan" ] && {
		ifconfig br-wan down 
		brctl delbr br-wan
	}
	# FIXME: We found that only delete the internet_if in unload is not enough,
	# because internet_if would be used by 'network' 'firewall' etc, after network
	# restart, the internet_if would be created again. We delete the internet_if
	# again after network restart.
	local mode=$(uci_get_state iptv core mode)
	case "$mode" in
		Bridge)
			echo "Do nothing in Bridge."
		;;
		*)
			echo "Down the internet_if"
			config_get wanif "iptv" "wan"
			config_get lanif "iptv" "lan"
			local net_ports=$(uci_get_state iptv core net_port)
			local net_vif=$(uci_get_state iptv core net_vif)
			local internet_vid=$(get_internet_vid "$net_ports" "$net_vif")
			local wan_dev=${wanif%%.*} 
			local internet_if="$wan_dev.$internet_vid"

			local is_existen=$(ifconfig -a|grep -E "$internet_if")
			[ "$internet_if" = "$lanif" ] && { 
				is_existen="" 
			}
			[ -n "$is_existen" ] && {
				ifconfig $internet_if down
				vconfig rem $internet_if
			}
		;;
	esac
	uci_revert_state iptv
	# Restart firewall for making sure rules normal
	fw restart
	exit 0
}

[ ifup = "$ACTION" ] && {
echo "Force to disable switch port learning & flush FDB if IPTV enabled" > /dev/console
ssdk_sh fdb portLearn set 0 disable
ssdk_sh fdb portLearn set 1 disable
ssdk_sh fdb portLearn set 2 disable
ssdk_sh fdb portLearn set 3 disable
ssdk_sh fdb portLearn set 4 disable
ssdk_sh fdb entry flush 0
}

config_get mode "iptv" "mode"
case "$mode" in
	Bridge)
	local iptv_port=$(uci_get_state iptv core wan_port)
	[ -n "$iptv_port" ] && {
		local iptv_vifs=$(uci_get_state iptv core wan_vif)
		for vif in $iptv_vifs; do
			echo "iptv.hotplug iptv_port($iptv_port) iptv_vifs($iptv_vifs)"
			ifconfig $vif up
			brctl addif "br-wan" $vif
		done	  
	}
	;;
	*)
		local net_ports=$(uci_get_state iptv core net_port)
		local iptv_ports=$(uci_get_state iptv core iptv_port)
		local ipphone_ports=$(uci_get_state iptv core ipphone_port)
		local mciptv_ports=$(uci_get_state iptv core mciptv_port)
		
		config_get wanif "iptv" "wan"
		wiface=${wanif%%.*}
		[ -n "$net_ports" ] && {
			config_get internet_tag "iptv" "internet_tag"
			config_get internet_vprio "iptv" "internet_vprio" 
			[ "$internet_tag" = "on" -a $internet_vprio -gt 0 ] && {
				config_get internet_vid "iptv" "internet_vid"				
				iptv_set_8021q_prio "${wiface}.${internet_vid}" $internet_vprio	   
			}
		}

		[ -n "$iptv_ports" ] && {
			config_get iptv_vprio "iptv" "iptv_vprio"
			[ $iptv_vprio -gt 0 ] && {
				config_get iptv_vid "iptv" "iptv_vid"				
				iptv_set_8021q_prio "${wiface}.${iptv_vid}" $iptv_vprio				  
			}
		}
		
		[ -n "$ipphone_ports" ] && {
			config_get ipphone_vprio "iptv" "ipphone_vprio"
			[ $ipphone_vprio -gt 0 ] && {
				config_get ipphone_vid "iptv" "ipphone_vid"				
				iptv_set_8021q_prio "${wiface}.${ipphone_vid}" $ipphone_vprio				  
			}
		}

		[ -n "$mciptv_ports" ] && {
			config_get mciptv_vprio "iptv" "mciptv_vprio"
			[ $mciptv_vprio -gt 0 ] && {
				config_get mciptv_vid "iptv" "mciptv_vid"				
				iptv_set_8021q_prio "${wiface}.${mciptv_vid}" $mciptv_vprio				  
			}
		}
	;;
esac

fw restart
# As IPTV would change the lan interface name, we need to redo the enable gro
# to keep it work.
[ -e /etc/hotplug.d/block/60-enable_gro ] && /etc/hotplug.d/block/60-enable_gro

